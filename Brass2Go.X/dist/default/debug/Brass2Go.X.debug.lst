

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Apr 05 05:29:21 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1778
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.05
    48                           ; Generated 20/12/2018 GMT
    49                           ; 
    50                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F1778 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  0111                     	;# 
   137  0112                     	;# 
   138  0113                     	;# 
   139  0114                     	;# 
   140  0115                     	;# 
   141  0116                     	;# 
   142  0117                     	;# 
   143  0118                     	;# 
   144  0119                     	;# 
   145  011A                     	;# 
   146  011B                     	;# 
   147  011C                     	;# 
   148  011D                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  018E                     	;# 
   152  0191                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0194                     	;# 
   158  0195                     	;# 
   159  0196                     	;# 
   160  0197                     	;# 
   161  0199                     	;# 
   162  0199                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019A                     	;# 
   166  019A                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019C                     	;# 
   175  019D                     	;# 
   176  019D                     	;# 
   177  019D                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019E                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  019F                     	;# 
   186  020C                     	;# 
   187  020D                     	;# 
   188  020E                     	;# 
   189  0210                     	;# 
   190  0211                     	;# 
   191  0211                     	;# 
   192  0212                     	;# 
   193  0212                     	;# 
   194  0213                     	;# 
   195  0213                     	;# 
   196  0214                     	;# 
   197  0214                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0216                     	;# 
   203  0216                     	;# 
   204  0217                     	;# 
   205  0217                     	;# 
   206  021B                     	;# 
   207  021C                     	;# 
   208  021D                     	;# 
   209  021E                     	;# 
   210  021F                     	;# 
   211  028C                     	;# 
   212  028D                     	;# 
   213  028E                     	;# 
   214  0291                     	;# 
   215  0291                     	;# 
   216  0292                     	;# 
   217  0293                     	;# 
   218  0294                     	;# 
   219  0295                     	;# 
   220  0295                     	;# 
   221  0296                     	;# 
   222  0297                     	;# 
   223  0298                     	;# 
   224  0299                     	;# 
   225  0299                     	;# 
   226  029A                     	;# 
   227  029B                     	;# 
   228  029C                     	;# 
   229  029E                     	;# 
   230  029F                     	;# 
   231  030C                     	;# 
   232  030D                     	;# 
   233  030E                     	;# 
   234  0315                     	;# 
   235  0316                     	;# 
   236  0317                     	;# 
   237  0318                     	;# 
   238  0319                     	;# 
   239  031B                     	;# 
   240  031C                     	;# 
   241  031D                     	;# 
   242  031E                     	;# 
   243  031F                     	;# 
   244  038C                     	;# 
   245  038D                     	;# 
   246  038E                     	;# 
   247  0390                     	;# 
   248  0391                     	;# 
   249  0392                     	;# 
   250  0393                     	;# 
   251  0394                     	;# 
   252  0395                     	;# 
   253  0396                     	;# 
   254  0397                     	;# 
   255  0398                     	;# 
   256  0399                     	;# 
   257  039D                     	;# 
   258  039E                     	;# 
   259  039F                     	;# 
   260  040D                     	;# 
   261  040F                     	;# 
   262  040F                     	;# 
   263  0410                     	;# 
   264  0411                     	;# 
   265  0412                     	;# 
   266  0413                     	;# 
   267  0413                     	;# 
   268  0414                     	;# 
   269  0414                     	;# 
   270  0415                     	;# 
   271  0416                     	;# 
   272  0417                     	;# 
   273  0418                     	;# 
   274  041A                     	;# 
   275  041A                     	;# 
   276  041B                     	;# 
   277  041B                     	;# 
   278  041C                     	;# 
   279  041D                     	;# 
   280  041E                     	;# 
   281  041F                     	;# 
   282  048E                     	;# 
   283  048E                     	;# 
   284  048F                     	;# 
   285  0490                     	;# 
   286  0491                     	;# 
   287  0492                     	;# 
   288  0493                     	;# 
   289  0493                     	;# 
   290  0494                     	;# 
   291  0494                     	;# 
   292  0495                     	;# 
   293  0496                     	;# 
   294  0497                     	;# 
   295  0498                     	;# 
   296  049A                     	;# 
   297  049A                     	;# 
   298  049B                     	;# 
   299  049B                     	;# 
   300  049C                     	;# 
   301  049D                     	;# 
   302  049E                     	;# 
   303  049F                     	;# 
   304  050F                     	;# 
   305  0510                     	;# 
   306  0511                     	;# 
   307  0512                     	;# 
   308  0513                     	;# 
   309  0514                     	;# 
   310  0515                     	;# 
   311  0516                     	;# 
   312  0517                     	;# 
   313  0518                     	;# 
   314  0519                     	;# 
   315  051A                     	;# 
   316  058D                     	;# 
   317  058E                     	;# 
   318  058F                     	;# 
   319  058F                     	;# 
   320  058F                     	;# 
   321  0590                     	;# 
   322  0590                     	;# 
   323  0591                     	;# 
   324  0592                     	;# 
   325  0592                     	;# 
   326  0592                     	;# 
   327  0593                     	;# 
   328  0593                     	;# 
   329  0594                     	;# 
   330  0595                     	;# 
   331  0595                     	;# 
   332  0596                     	;# 
   333  0597                     	;# 
   334  0597                     	;# 
   335  0598                     	;# 
   336  0599                     	;# 
   337  0599                     	;# 
   338  0599                     	;# 
   339  059A                     	;# 
   340  059A                     	;# 
   341  059E                     	;# 
   342  059F                     	;# 
   343  059F                     	;# 
   344  0614                     	;# 
   345  0614                     	;# 
   346  0615                     	;# 
   347  0616                     	;# 
   348  0617                     	;# 
   349  0617                     	;# 
   350  0618                     	;# 
   351  0619                     	;# 
   352  061A                     	;# 
   353  061A                     	;# 
   354  061B                     	;# 
   355  061C                     	;# 
   356  068D                     	;# 
   357  068E                     	;# 
   358  068F                     	;# 
   359  0690                     	;# 
   360  0691                     	;# 
   361  0692                     	;# 
   362  0693                     	;# 
   363  0694                     	;# 
   364  0695                     	;# 
   365  0696                     	;# 
   366  0697                     	;# 
   367  0698                     	;# 
   368  0699                     	;# 
   369  069A                     	;# 
   370  069B                     	;# 
   371  069C                     	;# 
   372  069D                     	;# 
   373  069E                     	;# 
   374  069F                     	;# 
   375  070D                     	;# 
   376  070E                     	;# 
   377  070F                     	;# 
   378  0710                     	;# 
   379  0711                     	;# 
   380  0712                     	;# 
   381  0713                     	;# 
   382  0714                     	;# 
   383  0715                     	;# 
   384  0716                     	;# 
   385  0717                     	;# 
   386  0718                     	;# 
   387  0719                     	;# 
   388  071A                     	;# 
   389  071B                     	;# 
   390  071C                     	;# 
   391  071D                     	;# 
   392  071E                     	;# 
   393  071F                     	;# 
   394  078E                     	;# 
   395  078F                     	;# 
   396  0790                     	;# 
   397  0791                     	;# 
   398  0792                     	;# 
   399  0793                     	;# 
   400  0794                     	;# 
   401  0795                     	;# 
   402  0796                     	;# 
   403  0797                     	;# 
   404  0798                     	;# 
   405  0799                     	;# 
   406  079A                     	;# 
   407  079B                     	;# 
   408  079C                     	;# 
   409  079D                     	;# 
   410  079E                     	;# 
   411  079F                     	;# 
   412  080D                     	;# 
   413  080E                     	;# 
   414  080F                     	;# 
   415  0810                     	;# 
   416  0811                     	;# 
   417  0812                     	;# 
   418  0813                     	;# 
   419  0814                     	;# 
   420  0815                     	;# 
   421  0816                     	;# 
   422  0817                     	;# 
   423  0818                     	;# 
   424  0819                     	;# 
   425  081A                     	;# 
   426  081B                     	;# 
   427  081C                     	;# 
   428  081D                     	;# 
   429  081E                     	;# 
   430  081F                     	;# 
   431  090C                     	;# 
   432  090D                     	;# 
   433  090E                     	;# 
   434  090F                     	;# 
   435  0910                     	;# 
   436  0911                     	;# 
   437  0912                     	;# 
   438  0913                     	;# 
   439  0914                     	;# 
   440  0915                     	;# 
   441  0916                     	;# 
   442  0917                     	;# 
   443  0D8E                     	;# 
   444  0D8F                     	;# 
   445  0D90                     	;# 
   446  0D91                     	;# 
   447  0D91                     	;# 
   448  0D92                     	;# 
   449  0D93                     	;# 
   450  0D93                     	;# 
   451  0D94                     	;# 
   452  0D95                     	;# 
   453  0D95                     	;# 
   454  0D96                     	;# 
   455  0D97                     	;# 
   456  0D97                     	;# 
   457  0D98                     	;# 
   458  0D99                     	;# 
   459  0D99                     	;# 
   460  0D9A                     	;# 
   461  0D9B                     	;# 
   462  0D9C                     	;# 
   463  0D9C                     	;# 
   464  0D9D                     	;# 
   465  0D9D                     	;# 
   466  0D9E                     	;# 
   467  0D9F                     	;# 
   468  0DA0                     	;# 
   469  0DA1                     	;# 
   470  0DA1                     	;# 
   471  0DA2                     	;# 
   472  0DA3                     	;# 
   473  0DA3                     	;# 
   474  0DA4                     	;# 
   475  0DA5                     	;# 
   476  0DA5                     	;# 
   477  0DA6                     	;# 
   478  0DA7                     	;# 
   479  0DA7                     	;# 
   480  0DA8                     	;# 
   481  0DA9                     	;# 
   482  0DA9                     	;# 
   483  0DAA                     	;# 
   484  0DAB                     	;# 
   485  0DAC                     	;# 
   486  0DAC                     	;# 
   487  0DAD                     	;# 
   488  0DAD                     	;# 
   489  0DAE                     	;# 
   490  0DAF                     	;# 
   491  0DB0                     	;# 
   492  0DB1                     	;# 
   493  0DB1                     	;# 
   494  0DB2                     	;# 
   495  0DB3                     	;# 
   496  0DB3                     	;# 
   497  0DB4                     	;# 
   498  0DB5                     	;# 
   499  0DB5                     	;# 
   500  0DB6                     	;# 
   501  0DB7                     	;# 
   502  0DB7                     	;# 
   503  0DB8                     	;# 
   504  0DB9                     	;# 
   505  0DB9                     	;# 
   506  0DBA                     	;# 
   507  0DBB                     	;# 
   508  0DBC                     	;# 
   509  0DBC                     	;# 
   510  0DBD                     	;# 
   511  0DBD                     	;# 
   512  0DBE                     	;# 
   513  0DBF                     	;# 
   514  0DC0                     	;# 
   515  0E0C                     	;# 
   516  0E0D                     	;# 
   517  0E0E                     	;# 
   518  0E0F                     	;# 
   519  0E10                     	;# 
   520  0E11                     	;# 
   521  0E12                     	;# 
   522  0E13                     	;# 
   523  0E14                     	;# 
   524  0E15                     	;# 
   525  0E15                     	;# 
   526  0E15                     	;# 
   527  0E16                     	;# 
   528  0E16                     	;# 
   529  0E16                     	;# 
   530  0E17                     	;# 
   531  0E17                     	;# 
   532  0E17                     	;# 
   533  0E18                     	;# 
   534  0E18                     	;# 
   535  0E18                     	;# 
   536  0E19                     	;# 
   537  0E1A                     	;# 
   538  0E1B                     	;# 
   539  0E1D                     	;# 
   540  0E1E                     	;# 
   541  0E1F                     	;# 
   542  0E21                     	;# 
   543  0E22                     	;# 
   544  0E23                     	;# 
   545  0E24                     	;# 
   546  0E25                     	;# 
   547  0E26                     	;# 
   548  0E27                     	;# 
   549  0E28                     	;# 
   550  0E29                     	;# 
   551  0E2D                     	;# 
   552  0E2E                     	;# 
   553  0E2F                     	;# 
   554  0E30                     	;# 
   555  0E31                     	;# 
   556  0E32                     	;# 
   557  0E35                     	;# 
   558  0E36                     	;# 
   559  0E37                     	;# 
   560  0E38                     	;# 
   561  0E39                     	;# 
   562  0E3A                     	;# 
   563  0E3B                     	;# 
   564  0E3C                     	;# 
   565  0E3D                     	;# 
   566  0E3E                     	;# 
   567  0E90                     	;# 
   568  0E91                     	;# 
   569  0E92                     	;# 
   570  0E93                     	;# 
   571  0E94                     	;# 
   572  0E95                     	;# 
   573  0E96                     	;# 
   574  0E97                     	;# 
   575  0E98                     	;# 
   576  0E99                     	;# 
   577  0E9A                     	;# 
   578  0E9B                     	;# 
   579  0E9C                     	;# 
   580  0E9D                     	;# 
   581  0E9E                     	;# 
   582  0E9F                     	;# 
   583  0EA0                     	;# 
   584  0EA1                     	;# 
   585  0EA2                     	;# 
   586  0EA3                     	;# 
   587  0EA4                     	;# 
   588  0EA5                     	;# 
   589  0EA6                     	;# 
   590  0EA7                     	;# 
   591  0F0F                     	;# 
   592  0F10                     	;# 
   593  0F11                     	;# 
   594  0F12                     	;# 
   595  0F13                     	;# 
   596  0F14                     	;# 
   597  0F15                     	;# 
   598  0F16                     	;# 
   599  0F17                     	;# 
   600  0F18                     	;# 
   601  0F19                     	;# 
   602  0F1A                     	;# 
   603  0F1B                     	;# 
   604  0F1C                     	;# 
   605  0F1D                     	;# 
   606  0F1E                     	;# 
   607  0F1F                     	;# 
   608  0F20                     	;# 
   609  0F21                     	;# 
   610  0F22                     	;# 
   611  0F23                     	;# 
   612  0F24                     	;# 
   613  0F25                     	;# 
   614  0F26                     	;# 
   615  0F27                     	;# 
   616  0F28                     	;# 
   617  0F29                     	;# 
   618  0F2A                     	;# 
   619  0F2B                     	;# 
   620  0F2C                     	;# 
   621  0F2D                     	;# 
   622  0F2E                     	;# 
   623  0F2F                     	;# 
   624  0F30                     	;# 
   625  0F31                     	;# 
   626  0F32                     	;# 
   627  0F33                     	;# 
   628  0F34                     	;# 
   629  0F35                     	;# 
   630  0F36                     	;# 
   631  0F37                     	;# 
   632  0FE4                     	;# 
   633  0FE5                     	;# 
   634  0FE6                     	;# 
   635  0FE7                     	;# 
   636  0FE8                     	;# 
   637  0FE9                     	;# 
   638  0FEA                     	;# 
   639  0FEB                     	;# 
   640  0FED                     	;# 
   641  0FEE                     	;# 
   642  0FEF                     	;# 
   643  0000                     	;# 
   644  0001                     	;# 
   645  0002                     	;# 
   646  0003                     	;# 
   647  0004                     	;# 
   648  0005                     	;# 
   649  0006                     	;# 
   650  0007                     	;# 
   651  0008                     	;# 
   652  0009                     	;# 
   653  000A                     	;# 
   654  000B                     	;# 
   655  000C                     	;# 
   656  000D                     	;# 
   657  000E                     	;# 
   658  0010                     	;# 
   659  0011                     	;# 
   660  0012                     	;# 
   661  0013                     	;# 
   662  0014                     	;# 
   663  0015                     	;# 
   664  0016                     	;# 
   665  0017                     	;# 
   666  0018                     	;# 
   667  0018                     	;# 
   668  0019                     	;# 
   669  001A                     	;# 
   670  001B                     	;# 
   671  001C                     	;# 
   672  001C                     	;# 
   673  001D                     	;# 
   674  001E                     	;# 
   675  001F                     	;# 
   676  008C                     	;# 
   677  008D                     	;# 
   678  008E                     	;# 
   679  0090                     	;# 
   680  0091                     	;# 
   681  0092                     	;# 
   682  0093                     	;# 
   683  0094                     	;# 
   684  0095                     	;# 
   685  0096                     	;# 
   686  0097                     	;# 
   687  0098                     	;# 
   688  0099                     	;# 
   689  009A                     	;# 
   690  009B                     	;# 
   691  009C                     	;# 
   692  009D                     	;# 
   693  009E                     	;# 
   694  009F                     	;# 
   695  010C                     	;# 
   696  010D                     	;# 
   697  010E                     	;# 
   698  0111                     	;# 
   699  0112                     	;# 
   700  0113                     	;# 
   701  0114                     	;# 
   702  0115                     	;# 
   703  0116                     	;# 
   704  0117                     	;# 
   705  0118                     	;# 
   706  0119                     	;# 
   707  011A                     	;# 
   708  011B                     	;# 
   709  011C                     	;# 
   710  011D                     	;# 
   711  018C                     	;# 
   712  018D                     	;# 
   713  018E                     	;# 
   714  0191                     	;# 
   715  0191                     	;# 
   716  0192                     	;# 
   717  0193                     	;# 
   718  0193                     	;# 
   719  0194                     	;# 
   720  0195                     	;# 
   721  0196                     	;# 
   722  0197                     	;# 
   723  0199                     	;# 
   724  0199                     	;# 
   725  0199                     	;# 
   726  019A                     	;# 
   727  019A                     	;# 
   728  019A                     	;# 
   729  019B                     	;# 
   730  019B                     	;# 
   731  019B                     	;# 
   732  019B                     	;# 
   733  019B                     	;# 
   734  019C                     	;# 
   735  019C                     	;# 
   736  019C                     	;# 
   737  019D                     	;# 
   738  019D                     	;# 
   739  019D                     	;# 
   740  019E                     	;# 
   741  019E                     	;# 
   742  019E                     	;# 
   743  019F                     	;# 
   744  019F                     	;# 
   745  019F                     	;# 
   746  019F                     	;# 
   747  019F                     	;# 
   748  020C                     	;# 
   749  020D                     	;# 
   750  020E                     	;# 
   751  0210                     	;# 
   752  0211                     	;# 
   753  0211                     	;# 
   754  0212                     	;# 
   755  0212                     	;# 
   756  0213                     	;# 
   757  0213                     	;# 
   758  0214                     	;# 
   759  0214                     	;# 
   760  0215                     	;# 
   761  0215                     	;# 
   762  0215                     	;# 
   763  0215                     	;# 
   764  0216                     	;# 
   765  0216                     	;# 
   766  0217                     	;# 
   767  0217                     	;# 
   768  021B                     	;# 
   769  021C                     	;# 
   770  021D                     	;# 
   771  021E                     	;# 
   772  021F                     	;# 
   773  028C                     	;# 
   774  028D                     	;# 
   775  028E                     	;# 
   776  0291                     	;# 
   777  0291                     	;# 
   778  0292                     	;# 
   779  0293                     	;# 
   780  0294                     	;# 
   781  0295                     	;# 
   782  0295                     	;# 
   783  0296                     	;# 
   784  0297                     	;# 
   785  0298                     	;# 
   786  0299                     	;# 
   787  0299                     	;# 
   788  029A                     	;# 
   789  029B                     	;# 
   790  029C                     	;# 
   791  029E                     	;# 
   792  029F                     	;# 
   793  030C                     	;# 
   794  030D                     	;# 
   795  030E                     	;# 
   796  0315                     	;# 
   797  0316                     	;# 
   798  0317                     	;# 
   799  0318                     	;# 
   800  0319                     	;# 
   801  031B                     	;# 
   802  031C                     	;# 
   803  031D                     	;# 
   804  031E                     	;# 
   805  031F                     	;# 
   806  038C                     	;# 
   807  038D                     	;# 
   808  038E                     	;# 
   809  0390                     	;# 
   810  0391                     	;# 
   811  0392                     	;# 
   812  0393                     	;# 
   813  0394                     	;# 
   814  0395                     	;# 
   815  0396                     	;# 
   816  0397                     	;# 
   817  0398                     	;# 
   818  0399                     	;# 
   819  039D                     	;# 
   820  039E                     	;# 
   821  039F                     	;# 
   822  040D                     	;# 
   823  040F                     	;# 
   824  040F                     	;# 
   825  0410                     	;# 
   826  0411                     	;# 
   827  0412                     	;# 
   828  0413                     	;# 
   829  0413                     	;# 
   830  0414                     	;# 
   831  0414                     	;# 
   832  0415                     	;# 
   833  0416                     	;# 
   834  0417                     	;# 
   835  0418                     	;# 
   836  041A                     	;# 
   837  041A                     	;# 
   838  041B                     	;# 
   839  041B                     	;# 
   840  041C                     	;# 
   841  041D                     	;# 
   842  041E                     	;# 
   843  041F                     	;# 
   844  048E                     	;# 
   845  048E                     	;# 
   846  048F                     	;# 
   847  0490                     	;# 
   848  0491                     	;# 
   849  0492                     	;# 
   850  0493                     	;# 
   851  0493                     	;# 
   852  0494                     	;# 
   853  0494                     	;# 
   854  0495                     	;# 
   855  0496                     	;# 
   856  0497                     	;# 
   857  0498                     	;# 
   858  049A                     	;# 
   859  049A                     	;# 
   860  049B                     	;# 
   861  049B                     	;# 
   862  049C                     	;# 
   863  049D                     	;# 
   864  049E                     	;# 
   865  049F                     	;# 
   866  050F                     	;# 
   867  0510                     	;# 
   868  0511                     	;# 
   869  0512                     	;# 
   870  0513                     	;# 
   871  0514                     	;# 
   872  0515                     	;# 
   873  0516                     	;# 
   874  0517                     	;# 
   875  0518                     	;# 
   876  0519                     	;# 
   877  051A                     	;# 
   878  058D                     	;# 
   879  058E                     	;# 
   880  058F                     	;# 
   881  058F                     	;# 
   882  058F                     	;# 
   883  0590                     	;# 
   884  0590                     	;# 
   885  0591                     	;# 
   886  0592                     	;# 
   887  0592                     	;# 
   888  0592                     	;# 
   889  0593                     	;# 
   890  0593                     	;# 
   891  0594                     	;# 
   892  0595                     	;# 
   893  0595                     	;# 
   894  0596                     	;# 
   895  0597                     	;# 
   896  0597                     	;# 
   897  0598                     	;# 
   898  0599                     	;# 
   899  0599                     	;# 
   900  0599                     	;# 
   901  059A                     	;# 
   902  059A                     	;# 
   903  059E                     	;# 
   904  059F                     	;# 
   905  059F                     	;# 
   906  0614                     	;# 
   907  0614                     	;# 
   908  0615                     	;# 
   909  0616                     	;# 
   910  0617                     	;# 
   911  0617                     	;# 
   912  0618                     	;# 
   913  0619                     	;# 
   914  061A                     	;# 
   915  061A                     	;# 
   916  061B                     	;# 
   917  061C                     	;# 
   918  068D                     	;# 
   919  068E                     	;# 
   920  068F                     	;# 
   921  0690                     	;# 
   922  0691                     	;# 
   923  0692                     	;# 
   924  0693                     	;# 
   925  0694                     	;# 
   926  0695                     	;# 
   927  0696                     	;# 
   928  0697                     	;# 
   929  0698                     	;# 
   930  0699                     	;# 
   931  069A                     	;# 
   932  069B                     	;# 
   933  069C                     	;# 
   934  069D                     	;# 
   935  069E                     	;# 
   936  069F                     	;# 
   937  070D                     	;# 
   938  070E                     	;# 
   939  070F                     	;# 
   940  0710                     	;# 
   941  0711                     	;# 
   942  0712                     	;# 
   943  0713                     	;# 
   944  0714                     	;# 
   945  0715                     	;# 
   946  0716                     	;# 
   947  0717                     	;# 
   948  0718                     	;# 
   949  0719                     	;# 
   950  071A                     	;# 
   951  071B                     	;# 
   952  071C                     	;# 
   953  071D                     	;# 
   954  071E                     	;# 
   955  071F                     	;# 
   956  078E                     	;# 
   957  078F                     	;# 
   958  0790                     	;# 
   959  0791                     	;# 
   960  0792                     	;# 
   961  0793                     	;# 
   962  0794                     	;# 
   963  0795                     	;# 
   964  0796                     	;# 
   965  0797                     	;# 
   966  0798                     	;# 
   967  0799                     	;# 
   968  079A                     	;# 
   969  079B                     	;# 
   970  079C                     	;# 
   971  079D                     	;# 
   972  079E                     	;# 
   973  079F                     	;# 
   974  080D                     	;# 
   975  080E                     	;# 
   976  080F                     	;# 
   977  0810                     	;# 
   978  0811                     	;# 
   979  0812                     	;# 
   980  0813                     	;# 
   981  0814                     	;# 
   982  0815                     	;# 
   983  0816                     	;# 
   984  0817                     	;# 
   985  0818                     	;# 
   986  0819                     	;# 
   987  081A                     	;# 
   988  081B                     	;# 
   989  081C                     	;# 
   990  081D                     	;# 
   991  081E                     	;# 
   992  081F                     	;# 
   993  090C                     	;# 
   994  090D                     	;# 
   995  090E                     	;# 
   996  090F                     	;# 
   997  0910                     	;# 
   998  0911                     	;# 
   999  0912                     	;# 
  1000  0913                     	;# 
  1001  0914                     	;# 
  1002  0915                     	;# 
  1003  0916                     	;# 
  1004  0917                     	;# 
  1005  0D8E                     	;# 
  1006  0D8F                     	;# 
  1007  0D90                     	;# 
  1008  0D91                     	;# 
  1009  0D91                     	;# 
  1010  0D92                     	;# 
  1011  0D93                     	;# 
  1012  0D93                     	;# 
  1013  0D94                     	;# 
  1014  0D95                     	;# 
  1015  0D95                     	;# 
  1016  0D96                     	;# 
  1017  0D97                     	;# 
  1018  0D97                     	;# 
  1019  0D98                     	;# 
  1020  0D99                     	;# 
  1021  0D99                     	;# 
  1022  0D9A                     	;# 
  1023  0D9B                     	;# 
  1024  0D9C                     	;# 
  1025  0D9C                     	;# 
  1026  0D9D                     	;# 
  1027  0D9D                     	;# 
  1028  0D9E                     	;# 
  1029  0D9F                     	;# 
  1030  0DA0                     	;# 
  1031  0DA1                     	;# 
  1032  0DA1                     	;# 
  1033  0DA2                     	;# 
  1034  0DA3                     	;# 
  1035  0DA3                     	;# 
  1036  0DA4                     	;# 
  1037  0DA5                     	;# 
  1038  0DA5                     	;# 
  1039  0DA6                     	;# 
  1040  0DA7                     	;# 
  1041  0DA7                     	;# 
  1042  0DA8                     	;# 
  1043  0DA9                     	;# 
  1044  0DA9                     	;# 
  1045  0DAA                     	;# 
  1046  0DAB                     	;# 
  1047  0DAC                     	;# 
  1048  0DAC                     	;# 
  1049  0DAD                     	;# 
  1050  0DAD                     	;# 
  1051  0DAE                     	;# 
  1052  0DAF                     	;# 
  1053  0DB0                     	;# 
  1054  0DB1                     	;# 
  1055  0DB1                     	;# 
  1056  0DB2                     	;# 
  1057  0DB3                     	;# 
  1058  0DB3                     	;# 
  1059  0DB4                     	;# 
  1060  0DB5                     	;# 
  1061  0DB5                     	;# 
  1062  0DB6                     	;# 
  1063  0DB7                     	;# 
  1064  0DB7                     	;# 
  1065  0DB8                     	;# 
  1066  0DB9                     	;# 
  1067  0DB9                     	;# 
  1068  0DBA                     	;# 
  1069  0DBB                     	;# 
  1070  0DBC                     	;# 
  1071  0DBC                     	;# 
  1072  0DBD                     	;# 
  1073  0DBD                     	;# 
  1074  0DBE                     	;# 
  1075  0DBF                     	;# 
  1076  0DC0                     	;# 
  1077  0E0C                     	;# 
  1078  0E0D                     	;# 
  1079  0E0E                     	;# 
  1080  0E0F                     	;# 
  1081  0E10                     	;# 
  1082  0E11                     	;# 
  1083  0E12                     	;# 
  1084  0E13                     	;# 
  1085  0E14                     	;# 
  1086  0E15                     	;# 
  1087  0E15                     	;# 
  1088  0E15                     	;# 
  1089  0E16                     	;# 
  1090  0E16                     	;# 
  1091  0E16                     	;# 
  1092  0E17                     	;# 
  1093  0E17                     	;# 
  1094  0E17                     	;# 
  1095  0E18                     	;# 
  1096  0E18                     	;# 
  1097  0E18                     	;# 
  1098  0E19                     	;# 
  1099  0E1A                     	;# 
  1100  0E1B                     	;# 
  1101  0E1D                     	;# 
  1102  0E1E                     	;# 
  1103  0E1F                     	;# 
  1104  0E21                     	;# 
  1105  0E22                     	;# 
  1106  0E23                     	;# 
  1107  0E24                     	;# 
  1108  0E25                     	;# 
  1109  0E26                     	;# 
  1110  0E27                     	;# 
  1111  0E28                     	;# 
  1112  0E29                     	;# 
  1113  0E2D                     	;# 
  1114  0E2E                     	;# 
  1115  0E2F                     	;# 
  1116  0E30                     	;# 
  1117  0E31                     	;# 
  1118  0E32                     	;# 
  1119  0E35                     	;# 
  1120  0E36                     	;# 
  1121  0E37                     	;# 
  1122  0E38                     	;# 
  1123  0E39                     	;# 
  1124  0E3A                     	;# 
  1125  0E3B                     	;# 
  1126  0E3C                     	;# 
  1127  0E3D                     	;# 
  1128  0E3E                     	;# 
  1129  0E90                     	;# 
  1130  0E91                     	;# 
  1131  0E92                     	;# 
  1132  0E93                     	;# 
  1133  0E94                     	;# 
  1134  0E95                     	;# 
  1135  0E96                     	;# 
  1136  0E97                     	;# 
  1137  0E98                     	;# 
  1138  0E99                     	;# 
  1139  0E9A                     	;# 
  1140  0E9B                     	;# 
  1141  0E9C                     	;# 
  1142  0E9D                     	;# 
  1143  0E9E                     	;# 
  1144  0E9F                     	;# 
  1145  0EA0                     	;# 
  1146  0EA1                     	;# 
  1147  0EA2                     	;# 
  1148  0EA3                     	;# 
  1149  0EA4                     	;# 
  1150  0EA5                     	;# 
  1151  0EA6                     	;# 
  1152  0EA7                     	;# 
  1153  0F0F                     	;# 
  1154  0F10                     	;# 
  1155  0F11                     	;# 
  1156  0F12                     	;# 
  1157  0F13                     	;# 
  1158  0F14                     	;# 
  1159  0F15                     	;# 
  1160  0F16                     	;# 
  1161  0F17                     	;# 
  1162  0F18                     	;# 
  1163  0F19                     	;# 
  1164  0F1A                     	;# 
  1165  0F1B                     	;# 
  1166  0F1C                     	;# 
  1167  0F1D                     	;# 
  1168  0F1E                     	;# 
  1169  0F1F                     	;# 
  1170  0F20                     	;# 
  1171  0F21                     	;# 
  1172  0F22                     	;# 
  1173  0F23                     	;# 
  1174  0F24                     	;# 
  1175  0F25                     	;# 
  1176  0F26                     	;# 
  1177  0F27                     	;# 
  1178  0F28                     	;# 
  1179  0F29                     	;# 
  1180  0F2A                     	;# 
  1181  0F2B                     	;# 
  1182  0F2C                     	;# 
  1183  0F2D                     	;# 
  1184  0F2E                     	;# 
  1185  0F2F                     	;# 
  1186  0F30                     	;# 
  1187  0F31                     	;# 
  1188  0F32                     	;# 
  1189  0F33                     	;# 
  1190  0F34                     	;# 
  1191  0F35                     	;# 
  1192  0F36                     	;# 
  1193  0F37                     	;# 
  1194  0FE4                     	;# 
  1195  0FE5                     	;# 
  1196  0FE6                     	;# 
  1197  0FE7                     	;# 
  1198  0FE8                     	;# 
  1199  0FE9                     	;# 
  1200  0FEA                     	;# 
  1201  0FEB                     	;# 
  1202  0FED                     	;# 
  1203  0FEE                     	;# 
  1204  0FEF                     	;# 
  1205  0000                     	;# 
  1206  0001                     	;# 
  1207  0002                     	;# 
  1208  0003                     	;# 
  1209  0004                     	;# 
  1210  0005                     	;# 
  1211  0006                     	;# 
  1212  0007                     	;# 
  1213  0008                     	;# 
  1214  0009                     	;# 
  1215  000A                     	;# 
  1216  000B                     	;# 
  1217  000C                     	;# 
  1218  000D                     	;# 
  1219  000E                     	;# 
  1220  0010                     	;# 
  1221  0011                     	;# 
  1222  0012                     	;# 
  1223  0013                     	;# 
  1224  0014                     	;# 
  1225  0015                     	;# 
  1226  0016                     	;# 
  1227  0017                     	;# 
  1228  0018                     	;# 
  1229  0018                     	;# 
  1230  0019                     	;# 
  1231  001A                     	;# 
  1232  001B                     	;# 
  1233  001C                     	;# 
  1234  001C                     	;# 
  1235  001D                     	;# 
  1236  001E                     	;# 
  1237  001F                     	;# 
  1238  008C                     	;# 
  1239  008D                     	;# 
  1240  008E                     	;# 
  1241  0090                     	;# 
  1242  0091                     	;# 
  1243  0092                     	;# 
  1244  0093                     	;# 
  1245  0094                     	;# 
  1246  0095                     	;# 
  1247  0096                     	;# 
  1248  0097                     	;# 
  1249  0098                     	;# 
  1250  0099                     	;# 
  1251  009A                     	;# 
  1252  009B                     	;# 
  1253  009C                     	;# 
  1254  009D                     	;# 
  1255  009E                     	;# 
  1256  009F                     	;# 
  1257  010C                     	;# 
  1258  010D                     	;# 
  1259  010E                     	;# 
  1260  0111                     	;# 
  1261  0112                     	;# 
  1262  0113                     	;# 
  1263  0114                     	;# 
  1264  0115                     	;# 
  1265  0116                     	;# 
  1266  0117                     	;# 
  1267  0118                     	;# 
  1268  0119                     	;# 
  1269  011A                     	;# 
  1270  011B                     	;# 
  1271  011C                     	;# 
  1272  011D                     	;# 
  1273  018C                     	;# 
  1274  018D                     	;# 
  1275  018E                     	;# 
  1276  0191                     	;# 
  1277  0191                     	;# 
  1278  0192                     	;# 
  1279  0193                     	;# 
  1280  0193                     	;# 
  1281  0194                     	;# 
  1282  0195                     	;# 
  1283  0196                     	;# 
  1284  0197                     	;# 
  1285  0199                     	;# 
  1286  0199                     	;# 
  1287  0199                     	;# 
  1288  019A                     	;# 
  1289  019A                     	;# 
  1290  019A                     	;# 
  1291  019B                     	;# 
  1292  019B                     	;# 
  1293  019B                     	;# 
  1294  019B                     	;# 
  1295  019B                     	;# 
  1296  019C                     	;# 
  1297  019C                     	;# 
  1298  019C                     	;# 
  1299  019D                     	;# 
  1300  019D                     	;# 
  1301  019D                     	;# 
  1302  019E                     	;# 
  1303  019E                     	;# 
  1304  019E                     	;# 
  1305  019F                     	;# 
  1306  019F                     	;# 
  1307  019F                     	;# 
  1308  019F                     	;# 
  1309  019F                     	;# 
  1310  020C                     	;# 
  1311  020D                     	;# 
  1312  020E                     	;# 
  1313  0210                     	;# 
  1314  0211                     	;# 
  1315  0211                     	;# 
  1316  0212                     	;# 
  1317  0212                     	;# 
  1318  0213                     	;# 
  1319  0213                     	;# 
  1320  0214                     	;# 
  1321  0214                     	;# 
  1322  0215                     	;# 
  1323  0215                     	;# 
  1324  0215                     	;# 
  1325  0215                     	;# 
  1326  0216                     	;# 
  1327  0216                     	;# 
  1328  0217                     	;# 
  1329  0217                     	;# 
  1330  021B                     	;# 
  1331  021C                     	;# 
  1332  021D                     	;# 
  1333  021E                     	;# 
  1334  021F                     	;# 
  1335  028C                     	;# 
  1336  028D                     	;# 
  1337  028E                     	;# 
  1338  0291                     	;# 
  1339  0291                     	;# 
  1340  0292                     	;# 
  1341  0293                     	;# 
  1342  0294                     	;# 
  1343  0295                     	;# 
  1344  0295                     	;# 
  1345  0296                     	;# 
  1346  0297                     	;# 
  1347  0298                     	;# 
  1348  0299                     	;# 
  1349  0299                     	;# 
  1350  029A                     	;# 
  1351  029B                     	;# 
  1352  029C                     	;# 
  1353  029E                     	;# 
  1354  029F                     	;# 
  1355  030C                     	;# 
  1356  030D                     	;# 
  1357  030E                     	;# 
  1358  0315                     	;# 
  1359  0316                     	;# 
  1360  0317                     	;# 
  1361  0318                     	;# 
  1362  0319                     	;# 
  1363  031B                     	;# 
  1364  031C                     	;# 
  1365  031D                     	;# 
  1366  031E                     	;# 
  1367  031F                     	;# 
  1368  038C                     	;# 
  1369  038D                     	;# 
  1370  038E                     	;# 
  1371  0390                     	;# 
  1372  0391                     	;# 
  1373  0392                     	;# 
  1374  0393                     	;# 
  1375  0394                     	;# 
  1376  0395                     	;# 
  1377  0396                     	;# 
  1378  0397                     	;# 
  1379  0398                     	;# 
  1380  0399                     	;# 
  1381  039D                     	;# 
  1382  039E                     	;# 
  1383  039F                     	;# 
  1384  040D                     	;# 
  1385  040F                     	;# 
  1386  040F                     	;# 
  1387  0410                     	;# 
  1388  0411                     	;# 
  1389  0412                     	;# 
  1390  0413                     	;# 
  1391  0413                     	;# 
  1392  0414                     	;# 
  1393  0414                     	;# 
  1394  0415                     	;# 
  1395  0416                     	;# 
  1396  0417                     	;# 
  1397  0418                     	;# 
  1398  041A                     	;# 
  1399  041A                     	;# 
  1400  041B                     	;# 
  1401  041B                     	;# 
  1402  041C                     	;# 
  1403  041D                     	;# 
  1404  041E                     	;# 
  1405  041F                     	;# 
  1406  048E                     	;# 
  1407  048E                     	;# 
  1408  048F                     	;# 
  1409  0490                     	;# 
  1410  0491                     	;# 
  1411  0492                     	;# 
  1412  0493                     	;# 
  1413  0493                     	;# 
  1414  0494                     	;# 
  1415  0494                     	;# 
  1416  0495                     	;# 
  1417  0496                     	;# 
  1418  0497                     	;# 
  1419  0498                     	;# 
  1420  049A                     	;# 
  1421  049A                     	;# 
  1422  049B                     	;# 
  1423  049B                     	;# 
  1424  049C                     	;# 
  1425  049D                     	;# 
  1426  049E                     	;# 
  1427  049F                     	;# 
  1428  050F                     	;# 
  1429  0510                     	;# 
  1430  0511                     	;# 
  1431  0512                     	;# 
  1432  0513                     	;# 
  1433  0514                     	;# 
  1434  0515                     	;# 
  1435  0516                     	;# 
  1436  0517                     	;# 
  1437  0518                     	;# 
  1438  0519                     	;# 
  1439  051A                     	;# 
  1440  058D                     	;# 
  1441  058E                     	;# 
  1442  058F                     	;# 
  1443  058F                     	;# 
  1444  058F                     	;# 
  1445  0590                     	;# 
  1446  0590                     	;# 
  1447  0591                     	;# 
  1448  0592                     	;# 
  1449  0592                     	;# 
  1450  0592                     	;# 
  1451  0593                     	;# 
  1452  0593                     	;# 
  1453  0594                     	;# 
  1454  0595                     	;# 
  1455  0595                     	;# 
  1456  0596                     	;# 
  1457  0597                     	;# 
  1458  0597                     	;# 
  1459  0598                     	;# 
  1460  0599                     	;# 
  1461  0599                     	;# 
  1462  0599                     	;# 
  1463  059A                     	;# 
  1464  059A                     	;# 
  1465  059E                     	;# 
  1466  059F                     	;# 
  1467  059F                     	;# 
  1468  0614                     	;# 
  1469  0614                     	;# 
  1470  0615                     	;# 
  1471  0616                     	;# 
  1472  0617                     	;# 
  1473  0617                     	;# 
  1474  0618                     	;# 
  1475  0619                     	;# 
  1476  061A                     	;# 
  1477  061A                     	;# 
  1478  061B                     	;# 
  1479  061C                     	;# 
  1480  068D                     	;# 
  1481  068E                     	;# 
  1482  068F                     	;# 
  1483  0690                     	;# 
  1484  0691                     	;# 
  1485  0692                     	;# 
  1486  0693                     	;# 
  1487  0694                     	;# 
  1488  0695                     	;# 
  1489  0696                     	;# 
  1490  0697                     	;# 
  1491  0698                     	;# 
  1492  0699                     	;# 
  1493  069A                     	;# 
  1494  069B                     	;# 
  1495  069C                     	;# 
  1496  069D                     	;# 
  1497  069E                     	;# 
  1498  069F                     	;# 
  1499  070D                     	;# 
  1500  070E                     	;# 
  1501  070F                     	;# 
  1502  0710                     	;# 
  1503  0711                     	;# 
  1504  0712                     	;# 
  1505  0713                     	;# 
  1506  0714                     	;# 
  1507  0715                     	;# 
  1508  0716                     	;# 
  1509  0717                     	;# 
  1510  0718                     	;# 
  1511  0719                     	;# 
  1512  071A                     	;# 
  1513  071B                     	;# 
  1514  071C                     	;# 
  1515  071D                     	;# 
  1516  071E                     	;# 
  1517  071F                     	;# 
  1518  078E                     	;# 
  1519  078F                     	;# 
  1520  0790                     	;# 
  1521  0791                     	;# 
  1522  0792                     	;# 
  1523  0793                     	;# 
  1524  0794                     	;# 
  1525  0795                     	;# 
  1526  0796                     	;# 
  1527  0797                     	;# 
  1528  0798                     	;# 
  1529  0799                     	;# 
  1530  079A                     	;# 
  1531  079B                     	;# 
  1532  079C                     	;# 
  1533  079D                     	;# 
  1534  079E                     	;# 
  1535  079F                     	;# 
  1536  080D                     	;# 
  1537  080E                     	;# 
  1538  080F                     	;# 
  1539  0810                     	;# 
  1540  0811                     	;# 
  1541  0812                     	;# 
  1542  0813                     	;# 
  1543  0814                     	;# 
  1544  0815                     	;# 
  1545  0816                     	;# 
  1546  0817                     	;# 
  1547  0818                     	;# 
  1548  0819                     	;# 
  1549  081A                     	;# 
  1550  081B                     	;# 
  1551  081C                     	;# 
  1552  081D                     	;# 
  1553  081E                     	;# 
  1554  081F                     	;# 
  1555  090C                     	;# 
  1556  090D                     	;# 
  1557  090E                     	;# 
  1558  090F                     	;# 
  1559  0910                     	;# 
  1560  0911                     	;# 
  1561  0912                     	;# 
  1562  0913                     	;# 
  1563  0914                     	;# 
  1564  0915                     	;# 
  1565  0916                     	;# 
  1566  0917                     	;# 
  1567  0D8E                     	;# 
  1568  0D8F                     	;# 
  1569  0D90                     	;# 
  1570  0D91                     	;# 
  1571  0D91                     	;# 
  1572  0D92                     	;# 
  1573  0D93                     	;# 
  1574  0D93                     	;# 
  1575  0D94                     	;# 
  1576  0D95                     	;# 
  1577  0D95                     	;# 
  1578  0D96                     	;# 
  1579  0D97                     	;# 
  1580  0D97                     	;# 
  1581  0D98                     	;# 
  1582  0D99                     	;# 
  1583  0D99                     	;# 
  1584  0D9A                     	;# 
  1585  0D9B                     	;# 
  1586  0D9C                     	;# 
  1587  0D9C                     	;# 
  1588  0D9D                     	;# 
  1589  0D9D                     	;# 
  1590  0D9E                     	;# 
  1591  0D9F                     	;# 
  1592  0DA0                     	;# 
  1593  0DA1                     	;# 
  1594  0DA1                     	;# 
  1595  0DA2                     	;# 
  1596  0DA3                     	;# 
  1597  0DA3                     	;# 
  1598  0DA4                     	;# 
  1599  0DA5                     	;# 
  1600  0DA5                     	;# 
  1601  0DA6                     	;# 
  1602  0DA7                     	;# 
  1603  0DA7                     	;# 
  1604  0DA8                     	;# 
  1605  0DA9                     	;# 
  1606  0DA9                     	;# 
  1607  0DAA                     	;# 
  1608  0DAB                     	;# 
  1609  0DAC                     	;# 
  1610  0DAC                     	;# 
  1611  0DAD                     	;# 
  1612  0DAD                     	;# 
  1613  0DAE                     	;# 
  1614  0DAF                     	;# 
  1615  0DB0                     	;# 
  1616  0DB1                     	;# 
  1617  0DB1                     	;# 
  1618  0DB2                     	;# 
  1619  0DB3                     	;# 
  1620  0DB3                     	;# 
  1621  0DB4                     	;# 
  1622  0DB5                     	;# 
  1623  0DB5                     	;# 
  1624  0DB6                     	;# 
  1625  0DB7                     	;# 
  1626  0DB7                     	;# 
  1627  0DB8                     	;# 
  1628  0DB9                     	;# 
  1629  0DB9                     	;# 
  1630  0DBA                     	;# 
  1631  0DBB                     	;# 
  1632  0DBC                     	;# 
  1633  0DBC                     	;# 
  1634  0DBD                     	;# 
  1635  0DBD                     	;# 
  1636  0DBE                     	;# 
  1637  0DBF                     	;# 
  1638  0DC0                     	;# 
  1639  0E0C                     	;# 
  1640  0E0D                     	;# 
  1641  0E0E                     	;# 
  1642  0E0F                     	;# 
  1643  0E10                     	;# 
  1644  0E11                     	;# 
  1645  0E12                     	;# 
  1646  0E13                     	;# 
  1647  0E14                     	;# 
  1648  0E15                     	;# 
  1649  0E15                     	;# 
  1650  0E15                     	;# 
  1651  0E16                     	;# 
  1652  0E16                     	;# 
  1653  0E16                     	;# 
  1654  0E17                     	;# 
  1655  0E17                     	;# 
  1656  0E17                     	;# 
  1657  0E18                     	;# 
  1658  0E18                     	;# 
  1659  0E18                     	;# 
  1660  0E19                     	;# 
  1661  0E1A                     	;# 
  1662  0E1B                     	;# 
  1663  0E1D                     	;# 
  1664  0E1E                     	;# 
  1665  0E1F                     	;# 
  1666  0E21                     	;# 
  1667  0E22                     	;# 
  1668  0E23                     	;# 
  1669  0E24                     	;# 
  1670  0E25                     	;# 
  1671  0E26                     	;# 
  1672  0E27                     	;# 
  1673  0E28                     	;# 
  1674  0E29                     	;# 
  1675  0E2D                     	;# 
  1676  0E2E                     	;# 
  1677  0E2F                     	;# 
  1678  0E30                     	;# 
  1679  0E31                     	;# 
  1680  0E32                     	;# 
  1681  0E35                     	;# 
  1682  0E36                     	;# 
  1683  0E37                     	;# 
  1684  0E38                     	;# 
  1685  0E39                     	;# 
  1686  0E3A                     	;# 
  1687  0E3B                     	;# 
  1688  0E3C                     	;# 
  1689  0E3D                     	;# 
  1690  0E3E                     	;# 
  1691  0E90                     	;# 
  1692  0E91                     	;# 
  1693  0E92                     	;# 
  1694  0E93                     	;# 
  1695  0E94                     	;# 
  1696  0E95                     	;# 
  1697  0E96                     	;# 
  1698  0E97                     	;# 
  1699  0E98                     	;# 
  1700  0E99                     	;# 
  1701  0E9A                     	;# 
  1702  0E9B                     	;# 
  1703  0E9C                     	;# 
  1704  0E9D                     	;# 
  1705  0E9E                     	;# 
  1706  0E9F                     	;# 
  1707  0EA0                     	;# 
  1708  0EA1                     	;# 
  1709  0EA2                     	;# 
  1710  0EA3                     	;# 
  1711  0EA4                     	;# 
  1712  0EA5                     	;# 
  1713  0EA6                     	;# 
  1714  0EA7                     	;# 
  1715  0F0F                     	;# 
  1716  0F10                     	;# 
  1717  0F11                     	;# 
  1718  0F12                     	;# 
  1719  0F13                     	;# 
  1720  0F14                     	;# 
  1721  0F15                     	;# 
  1722  0F16                     	;# 
  1723  0F17                     	;# 
  1724  0F18                     	;# 
  1725  0F19                     	;# 
  1726  0F1A                     	;# 
  1727  0F1B                     	;# 
  1728  0F1C                     	;# 
  1729  0F1D                     	;# 
  1730  0F1E                     	;# 
  1731  0F1F                     	;# 
  1732  0F20                     	;# 
  1733  0F21                     	;# 
  1734  0F22                     	;# 
  1735  0F23                     	;# 
  1736  0F24                     	;# 
  1737  0F25                     	;# 
  1738  0F26                     	;# 
  1739  0F27                     	;# 
  1740  0F28                     	;# 
  1741  0F29                     	;# 
  1742  0F2A                     	;# 
  1743  0F2B                     	;# 
  1744  0F2C                     	;# 
  1745  0F2D                     	;# 
  1746  0F2E                     	;# 
  1747  0F2F                     	;# 
  1748  0F30                     	;# 
  1749  0F31                     	;# 
  1750  0F32                     	;# 
  1751  0F33                     	;# 
  1752  0F34                     	;# 
  1753  0F35                     	;# 
  1754  0F36                     	;# 
  1755  0F37                     	;# 
  1756  0FE4                     	;# 
  1757  0FE5                     	;# 
  1758  0FE6                     	;# 
  1759  0FE7                     	;# 
  1760  0FE8                     	;# 
  1761  0FE9                     	;# 
  1762  0FEA                     	;# 
  1763  0FEB                     	;# 
  1764  0FED                     	;# 
  1765  0FEE                     	;# 
  1766  0FEF                     	;# 
  1767  0000                     	;# 
  1768  0001                     	;# 
  1769  0002                     	;# 
  1770  0003                     	;# 
  1771  0004                     	;# 
  1772  0005                     	;# 
  1773  0006                     	;# 
  1774  0007                     	;# 
  1775  0008                     	;# 
  1776  0009                     	;# 
  1777  000A                     	;# 
  1778  000B                     	;# 
  1779  000C                     	;# 
  1780  000D                     	;# 
  1781  000E                     	;# 
  1782  0010                     	;# 
  1783  0011                     	;# 
  1784  0012                     	;# 
  1785  0013                     	;# 
  1786  0014                     	;# 
  1787  0015                     	;# 
  1788  0016                     	;# 
  1789  0017                     	;# 
  1790  0018                     	;# 
  1791  0018                     	;# 
  1792  0019                     	;# 
  1793  001A                     	;# 
  1794  001B                     	;# 
  1795  001C                     	;# 
  1796  001C                     	;# 
  1797  001D                     	;# 
  1798  001E                     	;# 
  1799  001F                     	;# 
  1800  008C                     	;# 
  1801  008D                     	;# 
  1802  008E                     	;# 
  1803  0090                     	;# 
  1804  0091                     	;# 
  1805  0092                     	;# 
  1806  0093                     	;# 
  1807  0094                     	;# 
  1808  0095                     	;# 
  1809  0096                     	;# 
  1810  0097                     	;# 
  1811  0098                     	;# 
  1812  0099                     	;# 
  1813  009A                     	;# 
  1814  009B                     	;# 
  1815  009C                     	;# 
  1816  009D                     	;# 
  1817  009E                     	;# 
  1818  009F                     	;# 
  1819  010C                     	;# 
  1820  010D                     	;# 
  1821  010E                     	;# 
  1822  0111                     	;# 
  1823  0112                     	;# 
  1824  0113                     	;# 
  1825  0114                     	;# 
  1826  0115                     	;# 
  1827  0116                     	;# 
  1828  0117                     	;# 
  1829  0118                     	;# 
  1830  0119                     	;# 
  1831  011A                     	;# 
  1832  011B                     	;# 
  1833  011C                     	;# 
  1834  011D                     	;# 
  1835  018C                     	;# 
  1836  018D                     	;# 
  1837  018E                     	;# 
  1838  0191                     	;# 
  1839  0191                     	;# 
  1840  0192                     	;# 
  1841  0193                     	;# 
  1842  0193                     	;# 
  1843  0194                     	;# 
  1844  0195                     	;# 
  1845  0196                     	;# 
  1846  0197                     	;# 
  1847  0199                     	;# 
  1848  0199                     	;# 
  1849  0199                     	;# 
  1850  019A                     	;# 
  1851  019A                     	;# 
  1852  019A                     	;# 
  1853  019B                     	;# 
  1854  019B                     	;# 
  1855  019B                     	;# 
  1856  019B                     	;# 
  1857  019B                     	;# 
  1858  019C                     	;# 
  1859  019C                     	;# 
  1860  019C                     	;# 
  1861  019D                     	;# 
  1862  019D                     	;# 
  1863  019D                     	;# 
  1864  019E                     	;# 
  1865  019E                     	;# 
  1866  019E                     	;# 
  1867  019F                     	;# 
  1868  019F                     	;# 
  1869  019F                     	;# 
  1870  019F                     	;# 
  1871  019F                     	;# 
  1872  020C                     	;# 
  1873  020D                     	;# 
  1874  020E                     	;# 
  1875  0210                     	;# 
  1876  0211                     	;# 
  1877  0211                     	;# 
  1878  0212                     	;# 
  1879  0212                     	;# 
  1880  0213                     	;# 
  1881  0213                     	;# 
  1882  0214                     	;# 
  1883  0214                     	;# 
  1884  0215                     	;# 
  1885  0215                     	;# 
  1886  0215                     	;# 
  1887  0215                     	;# 
  1888  0216                     	;# 
  1889  0216                     	;# 
  1890  0217                     	;# 
  1891  0217                     	;# 
  1892  021B                     	;# 
  1893  021C                     	;# 
  1894  021D                     	;# 
  1895  021E                     	;# 
  1896  021F                     	;# 
  1897  028C                     	;# 
  1898  028D                     	;# 
  1899  028E                     	;# 
  1900  0291                     	;# 
  1901  0291                     	;# 
  1902  0292                     	;# 
  1903  0293                     	;# 
  1904  0294                     	;# 
  1905  0295                     	;# 
  1906  0295                     	;# 
  1907  0296                     	;# 
  1908  0297                     	;# 
  1909  0298                     	;# 
  1910  0299                     	;# 
  1911  0299                     	;# 
  1912  029A                     	;# 
  1913  029B                     	;# 
  1914  029C                     	;# 
  1915  029E                     	;# 
  1916  029F                     	;# 
  1917  030C                     	;# 
  1918  030D                     	;# 
  1919  030E                     	;# 
  1920  0315                     	;# 
  1921  0316                     	;# 
  1922  0317                     	;# 
  1923  0318                     	;# 
  1924  0319                     	;# 
  1925  031B                     	;# 
  1926  031C                     	;# 
  1927  031D                     	;# 
  1928  031E                     	;# 
  1929  031F                     	;# 
  1930  038C                     	;# 
  1931  038D                     	;# 
  1932  038E                     	;# 
  1933  0390                     	;# 
  1934  0391                     	;# 
  1935  0392                     	;# 
  1936  0393                     	;# 
  1937  0394                     	;# 
  1938  0395                     	;# 
  1939  0396                     	;# 
  1940  0397                     	;# 
  1941  0398                     	;# 
  1942  0399                     	;# 
  1943  039D                     	;# 
  1944  039E                     	;# 
  1945  039F                     	;# 
  1946  040D                     	;# 
  1947  040F                     	;# 
  1948  040F                     	;# 
  1949  0410                     	;# 
  1950  0411                     	;# 
  1951  0412                     	;# 
  1952  0413                     	;# 
  1953  0413                     	;# 
  1954  0414                     	;# 
  1955  0414                     	;# 
  1956  0415                     	;# 
  1957  0416                     	;# 
  1958  0417                     	;# 
  1959  0418                     	;# 
  1960  041A                     	;# 
  1961  041A                     	;# 
  1962  041B                     	;# 
  1963  041B                     	;# 
  1964  041C                     	;# 
  1965  041D                     	;# 
  1966  041E                     	;# 
  1967  041F                     	;# 
  1968  048E                     	;# 
  1969  048E                     	;# 
  1970  048F                     	;# 
  1971  0490                     	;# 
  1972  0491                     	;# 
  1973  0492                     	;# 
  1974  0493                     	;# 
  1975  0493                     	;# 
  1976  0494                     	;# 
  1977  0494                     	;# 
  1978  0495                     	;# 
  1979  0496                     	;# 
  1980  0497                     	;# 
  1981  0498                     	;# 
  1982  049A                     	;# 
  1983  049A                     	;# 
  1984  049B                     	;# 
  1985  049B                     	;# 
  1986  049C                     	;# 
  1987  049D                     	;# 
  1988  049E                     	;# 
  1989  049F                     	;# 
  1990  050F                     	;# 
  1991  0510                     	;# 
  1992  0511                     	;# 
  1993  0512                     	;# 
  1994  0513                     	;# 
  1995  0514                     	;# 
  1996  0515                     	;# 
  1997  0516                     	;# 
  1998  0517                     	;# 
  1999  0518                     	;# 
  2000  0519                     	;# 
  2001  051A                     	;# 
  2002  058D                     	;# 
  2003  058E                     	;# 
  2004  058F                     	;# 
  2005  058F                     	;# 
  2006  058F                     	;# 
  2007  0590                     	;# 
  2008  0590                     	;# 
  2009  0591                     	;# 
  2010  0592                     	;# 
  2011  0592                     	;# 
  2012  0592                     	;# 
  2013  0593                     	;# 
  2014  0593                     	;# 
  2015  0594                     	;# 
  2016  0595                     	;# 
  2017  0595                     	;# 
  2018  0596                     	;# 
  2019  0597                     	;# 
  2020  0597                     	;# 
  2021  0598                     	;# 
  2022  0599                     	;# 
  2023  0599                     	;# 
  2024  0599                     	;# 
  2025  059A                     	;# 
  2026  059A                     	;# 
  2027  059E                     	;# 
  2028  059F                     	;# 
  2029  059F                     	;# 
  2030  0614                     	;# 
  2031  0614                     	;# 
  2032  0615                     	;# 
  2033  0616                     	;# 
  2034  0617                     	;# 
  2035  0617                     	;# 
  2036  0618                     	;# 
  2037  0619                     	;# 
  2038  061A                     	;# 
  2039  061A                     	;# 
  2040  061B                     	;# 
  2041  061C                     	;# 
  2042  068D                     	;# 
  2043  068E                     	;# 
  2044  068F                     	;# 
  2045  0690                     	;# 
  2046  0691                     	;# 
  2047  0692                     	;# 
  2048  0693                     	;# 
  2049  0694                     	;# 
  2050  0695                     	;# 
  2051  0696                     	;# 
  2052  0697                     	;# 
  2053  0698                     	;# 
  2054  0699                     	;# 
  2055  069A                     	;# 
  2056  069B                     	;# 
  2057  069C                     	;# 
  2058  069D                     	;# 
  2059  069E                     	;# 
  2060  069F                     	;# 
  2061  070D                     	;# 
  2062  070E                     	;# 
  2063  070F                     	;# 
  2064  0710                     	;# 
  2065  0711                     	;# 
  2066  0712                     	;# 
  2067  0713                     	;# 
  2068  0714                     	;# 
  2069  0715                     	;# 
  2070  0716                     	;# 
  2071  0717                     	;# 
  2072  0718                     	;# 
  2073  0719                     	;# 
  2074  071A                     	;# 
  2075  071B                     	;# 
  2076  071C                     	;# 
  2077  071D                     	;# 
  2078  071E                     	;# 
  2079  071F                     	;# 
  2080  078E                     	;# 
  2081  078F                     	;# 
  2082  0790                     	;# 
  2083  0791                     	;# 
  2084  0792                     	;# 
  2085  0793                     	;# 
  2086  0794                     	;# 
  2087  0795                     	;# 
  2088  0796                     	;# 
  2089  0797                     	;# 
  2090  0798                     	;# 
  2091  0799                     	;# 
  2092  079A                     	;# 
  2093  079B                     	;# 
  2094  079C                     	;# 
  2095  079D                     	;# 
  2096  079E                     	;# 
  2097  079F                     	;# 
  2098  080D                     	;# 
  2099  080E                     	;# 
  2100  080F                     	;# 
  2101  0810                     	;# 
  2102  0811                     	;# 
  2103  0812                     	;# 
  2104  0813                     	;# 
  2105  0814                     	;# 
  2106  0815                     	;# 
  2107  0816                     	;# 
  2108  0817                     	;# 
  2109  0818                     	;# 
  2110  0819                     	;# 
  2111  081A                     	;# 
  2112  081B                     	;# 
  2113  081C                     	;# 
  2114  081D                     	;# 
  2115  081E                     	;# 
  2116  081F                     	;# 
  2117  090C                     	;# 
  2118  090D                     	;# 
  2119  090E                     	;# 
  2120  090F                     	;# 
  2121  0910                     	;# 
  2122  0911                     	;# 
  2123  0912                     	;# 
  2124  0913                     	;# 
  2125  0914                     	;# 
  2126  0915                     	;# 
  2127  0916                     	;# 
  2128  0917                     	;# 
  2129  0D8E                     	;# 
  2130  0D8F                     	;# 
  2131  0D90                     	;# 
  2132  0D91                     	;# 
  2133  0D91                     	;# 
  2134  0D92                     	;# 
  2135  0D93                     	;# 
  2136  0D93                     	;# 
  2137  0D94                     	;# 
  2138  0D95                     	;# 
  2139  0D95                     	;# 
  2140  0D96                     	;# 
  2141  0D97                     	;# 
  2142  0D97                     	;# 
  2143  0D98                     	;# 
  2144  0D99                     	;# 
  2145  0D99                     	;# 
  2146  0D9A                     	;# 
  2147  0D9B                     	;# 
  2148  0D9C                     	;# 
  2149  0D9C                     	;# 
  2150  0D9D                     	;# 
  2151  0D9D                     	;# 
  2152  0D9E                     	;# 
  2153  0D9F                     	;# 
  2154  0DA0                     	;# 
  2155  0DA1                     	;# 
  2156  0DA1                     	;# 
  2157  0DA2                     	;# 
  2158  0DA3                     	;# 
  2159  0DA3                     	;# 
  2160  0DA4                     	;# 
  2161  0DA5                     	;# 
  2162  0DA5                     	;# 
  2163  0DA6                     	;# 
  2164  0DA7                     	;# 
  2165  0DA7                     	;# 
  2166  0DA8                     	;# 
  2167  0DA9                     	;# 
  2168  0DA9                     	;# 
  2169  0DAA                     	;# 
  2170  0DAB                     	;# 
  2171  0DAC                     	;# 
  2172  0DAC                     	;# 
  2173  0DAD                     	;# 
  2174  0DAD                     	;# 
  2175  0DAE                     	;# 
  2176  0DAF                     	;# 
  2177  0DB0                     	;# 
  2178  0DB1                     	;# 
  2179  0DB1                     	;# 
  2180  0DB2                     	;# 
  2181  0DB3                     	;# 
  2182  0DB3                     	;# 
  2183  0DB4                     	;# 
  2184  0DB5                     	;# 
  2185  0DB5                     	;# 
  2186  0DB6                     	;# 
  2187  0DB7                     	;# 
  2188  0DB7                     	;# 
  2189  0DB8                     	;# 
  2190  0DB9                     	;# 
  2191  0DB9                     	;# 
  2192  0DBA                     	;# 
  2193  0DBB                     	;# 
  2194  0DBC                     	;# 
  2195  0DBC                     	;# 
  2196  0DBD                     	;# 
  2197  0DBD                     	;# 
  2198  0DBE                     	;# 
  2199  0DBF                     	;# 
  2200  0DC0                     	;# 
  2201  0E0C                     	;# 
  2202  0E0D                     	;# 
  2203  0E0E                     	;# 
  2204  0E0F                     	;# 
  2205  0E10                     	;# 
  2206  0E11                     	;# 
  2207  0E12                     	;# 
  2208  0E13                     	;# 
  2209  0E14                     	;# 
  2210  0E15                     	;# 
  2211  0E15                     	;# 
  2212  0E15                     	;# 
  2213  0E16                     	;# 
  2214  0E16                     	;# 
  2215  0E16                     	;# 
  2216  0E17                     	;# 
  2217  0E17                     	;# 
  2218  0E17                     	;# 
  2219  0E18                     	;# 
  2220  0E18                     	;# 
  2221  0E18                     	;# 
  2222  0E19                     	;# 
  2223  0E1A                     	;# 
  2224  0E1B                     	;# 
  2225  0E1D                     	;# 
  2226  0E1E                     	;# 
  2227  0E1F                     	;# 
  2228  0E21                     	;# 
  2229  0E22                     	;# 
  2230  0E23                     	;# 
  2231  0E24                     	;# 
  2232  0E25                     	;# 
  2233  0E26                     	;# 
  2234  0E27                     	;# 
  2235  0E28                     	;# 
  2236  0E29                     	;# 
  2237  0E2D                     	;# 
  2238  0E2E                     	;# 
  2239  0E2F                     	;# 
  2240  0E30                     	;# 
  2241  0E31                     	;# 
  2242  0E32                     	;# 
  2243  0E35                     	;# 
  2244  0E36                     	;# 
  2245  0E37                     	;# 
  2246  0E38                     	;# 
  2247  0E39                     	;# 
  2248  0E3A                     	;# 
  2249  0E3B                     	;# 
  2250  0E3C                     	;# 
  2251  0E3D                     	;# 
  2252  0E3E                     	;# 
  2253  0E90                     	;# 
  2254  0E91                     	;# 
  2255  0E92                     	;# 
  2256  0E93                     	;# 
  2257  0E94                     	;# 
  2258  0E95                     	;# 
  2259  0E96                     	;# 
  2260  0E97                     	;# 
  2261  0E98                     	;# 
  2262  0E99                     	;# 
  2263  0E9A                     	;# 
  2264  0E9B                     	;# 
  2265  0E9C                     	;# 
  2266  0E9D                     	;# 
  2267  0E9E                     	;# 
  2268  0E9F                     	;# 
  2269  0EA0                     	;# 
  2270  0EA1                     	;# 
  2271  0EA2                     	;# 
  2272  0EA3                     	;# 
  2273  0EA4                     	;# 
  2274  0EA5                     	;# 
  2275  0EA6                     	;# 
  2276  0EA7                     	;# 
  2277  0F0F                     	;# 
  2278  0F10                     	;# 
  2279  0F11                     	;# 
  2280  0F12                     	;# 
  2281  0F13                     	;# 
  2282  0F14                     	;# 
  2283  0F15                     	;# 
  2284  0F16                     	;# 
  2285  0F17                     	;# 
  2286  0F18                     	;# 
  2287  0F19                     	;# 
  2288  0F1A                     	;# 
  2289  0F1B                     	;# 
  2290  0F1C                     	;# 
  2291  0F1D                     	;# 
  2292  0F1E                     	;# 
  2293  0F1F                     	;# 
  2294  0F20                     	;# 
  2295  0F21                     	;# 
  2296  0F22                     	;# 
  2297  0F23                     	;# 
  2298  0F24                     	;# 
  2299  0F25                     	;# 
  2300  0F26                     	;# 
  2301  0F27                     	;# 
  2302  0F28                     	;# 
  2303  0F29                     	;# 
  2304  0F2A                     	;# 
  2305  0F2B                     	;# 
  2306  0F2C                     	;# 
  2307  0F2D                     	;# 
  2308  0F2E                     	;# 
  2309  0F2F                     	;# 
  2310  0F30                     	;# 
  2311  0F31                     	;# 
  2312  0F32                     	;# 
  2313  0F33                     	;# 
  2314  0F34                     	;# 
  2315  0F35                     	;# 
  2316  0F36                     	;# 
  2317  0F37                     	;# 
  2318  0FE4                     	;# 
  2319  0FE5                     	;# 
  2320  0FE6                     	;# 
  2321  0FE7                     	;# 
  2322  0FE8                     	;# 
  2323  0FE9                     	;# 
  2324  0FEA                     	;# 
  2325  0FEB                     	;# 
  2326  0FED                     	;# 
  2327  0FEE                     	;# 
  2328  0FEF                     	;# 
  2329  0000                     	;# 
  2330  0001                     	;# 
  2331  0002                     	;# 
  2332  0003                     	;# 
  2333  0004                     	;# 
  2334  0005                     	;# 
  2335  0006                     	;# 
  2336  0007                     	;# 
  2337  0008                     	;# 
  2338  0009                     	;# 
  2339  000A                     	;# 
  2340  000B                     	;# 
  2341  000C                     	;# 
  2342  000D                     	;# 
  2343  000E                     	;# 
  2344  0010                     	;# 
  2345  0011                     	;# 
  2346  0012                     	;# 
  2347  0013                     	;# 
  2348  0014                     	;# 
  2349  0015                     	;# 
  2350  0016                     	;# 
  2351  0017                     	;# 
  2352  0018                     	;# 
  2353  0018                     	;# 
  2354  0019                     	;# 
  2355  001A                     	;# 
  2356  001B                     	;# 
  2357  001C                     	;# 
  2358  001C                     	;# 
  2359  001D                     	;# 
  2360  001E                     	;# 
  2361  001F                     	;# 
  2362  008C                     	;# 
  2363  008D                     	;# 
  2364  008E                     	;# 
  2365  0090                     	;# 
  2366  0091                     	;# 
  2367  0092                     	;# 
  2368  0093                     	;# 
  2369  0094                     	;# 
  2370  0095                     	;# 
  2371  0096                     	;# 
  2372  0097                     	;# 
  2373  0098                     	;# 
  2374  0099                     	;# 
  2375  009A                     	;# 
  2376  009B                     	;# 
  2377  009C                     	;# 
  2378  009D                     	;# 
  2379  009E                     	;# 
  2380  009F                     	;# 
  2381  010C                     	;# 
  2382  010D                     	;# 
  2383  010E                     	;# 
  2384  0111                     	;# 
  2385  0112                     	;# 
  2386  0113                     	;# 
  2387  0114                     	;# 
  2388  0115                     	;# 
  2389  0116                     	;# 
  2390  0117                     	;# 
  2391  0118                     	;# 
  2392  0119                     	;# 
  2393  011A                     	;# 
  2394  011B                     	;# 
  2395  011C                     	;# 
  2396  011D                     	;# 
  2397  018C                     	;# 
  2398  018D                     	;# 
  2399  018E                     	;# 
  2400  0191                     	;# 
  2401  0191                     	;# 
  2402  0192                     	;# 
  2403  0193                     	;# 
  2404  0193                     	;# 
  2405  0194                     	;# 
  2406  0195                     	;# 
  2407  0196                     	;# 
  2408  0197                     	;# 
  2409  0199                     	;# 
  2410  0199                     	;# 
  2411  0199                     	;# 
  2412  019A                     	;# 
  2413  019A                     	;# 
  2414  019A                     	;# 
  2415  019B                     	;# 
  2416  019B                     	;# 
  2417  019B                     	;# 
  2418  019B                     	;# 
  2419  019B                     	;# 
  2420  019C                     	;# 
  2421  019C                     	;# 
  2422  019C                     	;# 
  2423  019D                     	;# 
  2424  019D                     	;# 
  2425  019D                     	;# 
  2426  019E                     	;# 
  2427  019E                     	;# 
  2428  019E                     	;# 
  2429  019F                     	;# 
  2430  019F                     	;# 
  2431  019F                     	;# 
  2432  019F                     	;# 
  2433  019F                     	;# 
  2434  020C                     	;# 
  2435  020D                     	;# 
  2436  020E                     	;# 
  2437  0210                     	;# 
  2438  0211                     	;# 
  2439  0211                     	;# 
  2440  0212                     	;# 
  2441  0212                     	;# 
  2442  0213                     	;# 
  2443  0213                     	;# 
  2444  0214                     	;# 
  2445  0214                     	;# 
  2446  0215                     	;# 
  2447  0215                     	;# 
  2448  0215                     	;# 
  2449  0215                     	;# 
  2450  0216                     	;# 
  2451  0216                     	;# 
  2452  0217                     	;# 
  2453  0217                     	;# 
  2454  021B                     	;# 
  2455  021C                     	;# 
  2456  021D                     	;# 
  2457  021E                     	;# 
  2458  021F                     	;# 
  2459  028C                     	;# 
  2460  028D                     	;# 
  2461  028E                     	;# 
  2462  0291                     	;# 
  2463  0291                     	;# 
  2464  0292                     	;# 
  2465  0293                     	;# 
  2466  0294                     	;# 
  2467  0295                     	;# 
  2468  0295                     	;# 
  2469  0296                     	;# 
  2470  0297                     	;# 
  2471  0298                     	;# 
  2472  0299                     	;# 
  2473  0299                     	;# 
  2474  029A                     	;# 
  2475  029B                     	;# 
  2476  029C                     	;# 
  2477  029E                     	;# 
  2478  029F                     	;# 
  2479  030C                     	;# 
  2480  030D                     	;# 
  2481  030E                     	;# 
  2482  0315                     	;# 
  2483  0316                     	;# 
  2484  0317                     	;# 
  2485  0318                     	;# 
  2486  0319                     	;# 
  2487  031B                     	;# 
  2488  031C                     	;# 
  2489  031D                     	;# 
  2490  031E                     	;# 
  2491  031F                     	;# 
  2492  038C                     	;# 
  2493  038D                     	;# 
  2494  038E                     	;# 
  2495  0390                     	;# 
  2496  0391                     	;# 
  2497  0392                     	;# 
  2498  0393                     	;# 
  2499  0394                     	;# 
  2500  0395                     	;# 
  2501  0396                     	;# 
  2502  0397                     	;# 
  2503  0398                     	;# 
  2504  0399                     	;# 
  2505  039D                     	;# 
  2506  039E                     	;# 
  2507  039F                     	;# 
  2508  040D                     	;# 
  2509  040F                     	;# 
  2510  040F                     	;# 
  2511  0410                     	;# 
  2512  0411                     	;# 
  2513  0412                     	;# 
  2514  0413                     	;# 
  2515  0413                     	;# 
  2516  0414                     	;# 
  2517  0414                     	;# 
  2518  0415                     	;# 
  2519  0416                     	;# 
  2520  0417                     	;# 
  2521  0418                     	;# 
  2522  041A                     	;# 
  2523  041A                     	;# 
  2524  041B                     	;# 
  2525  041B                     	;# 
  2526  041C                     	;# 
  2527  041D                     	;# 
  2528  041E                     	;# 
  2529  041F                     	;# 
  2530  048E                     	;# 
  2531  048E                     	;# 
  2532  048F                     	;# 
  2533  0490                     	;# 
  2534  0491                     	;# 
  2535  0492                     	;# 
  2536  0493                     	;# 
  2537  0493                     	;# 
  2538  0494                     	;# 
  2539  0494                     	;# 
  2540  0495                     	;# 
  2541  0496                     	;# 
  2542  0497                     	;# 
  2543  0498                     	;# 
  2544  049A                     	;# 
  2545  049A                     	;# 
  2546  049B                     	;# 
  2547  049B                     	;# 
  2548  049C                     	;# 
  2549  049D                     	;# 
  2550  049E                     	;# 
  2551  049F                     	;# 
  2552  050F                     	;# 
  2553  0510                     	;# 
  2554  0511                     	;# 
  2555  0512                     	;# 
  2556  0513                     	;# 
  2557  0514                     	;# 
  2558  0515                     	;# 
  2559  0516                     	;# 
  2560  0517                     	;# 
  2561  0518                     	;# 
  2562  0519                     	;# 
  2563  051A                     	;# 
  2564  058D                     	;# 
  2565  058E                     	;# 
  2566  058F                     	;# 
  2567  058F                     	;# 
  2568  058F                     	;# 
  2569  0590                     	;# 
  2570  0590                     	;# 
  2571  0591                     	;# 
  2572  0592                     	;# 
  2573  0592                     	;# 
  2574  0592                     	;# 
  2575  0593                     	;# 
  2576  0593                     	;# 
  2577  0594                     	;# 
  2578  0595                     	;# 
  2579  0595                     	;# 
  2580  0596                     	;# 
  2581  0597                     	;# 
  2582  0597                     	;# 
  2583  0598                     	;# 
  2584  0599                     	;# 
  2585  0599                     	;# 
  2586  0599                     	;# 
  2587  059A                     	;# 
  2588  059A                     	;# 
  2589  059E                     	;# 
  2590  059F                     	;# 
  2591  059F                     	;# 
  2592  0614                     	;# 
  2593  0614                     	;# 
  2594  0615                     	;# 
  2595  0616                     	;# 
  2596  0617                     	;# 
  2597  0617                     	;# 
  2598  0618                     	;# 
  2599  0619                     	;# 
  2600  061A                     	;# 
  2601  061A                     	;# 
  2602  061B                     	;# 
  2603  061C                     	;# 
  2604  068D                     	;# 
  2605  068E                     	;# 
  2606  068F                     	;# 
  2607  0690                     	;# 
  2608  0691                     	;# 
  2609  0692                     	;# 
  2610  0693                     	;# 
  2611  0694                     	;# 
  2612  0695                     	;# 
  2613  0696                     	;# 
  2614  0697                     	;# 
  2615  0698                     	;# 
  2616  0699                     	;# 
  2617  069A                     	;# 
  2618  069B                     	;# 
  2619  069C                     	;# 
  2620  069D                     	;# 
  2621  069E                     	;# 
  2622  069F                     	;# 
  2623  070D                     	;# 
  2624  070E                     	;# 
  2625  070F                     	;# 
  2626  0710                     	;# 
  2627  0711                     	;# 
  2628  0712                     	;# 
  2629  0713                     	;# 
  2630  0714                     	;# 
  2631  0715                     	;# 
  2632  0716                     	;# 
  2633  0717                     	;# 
  2634  0718                     	;# 
  2635  0719                     	;# 
  2636  071A                     	;# 
  2637  071B                     	;# 
  2638  071C                     	;# 
  2639  071D                     	;# 
  2640  071E                     	;# 
  2641  071F                     	;# 
  2642  078E                     	;# 
  2643  078F                     	;# 
  2644  0790                     	;# 
  2645  0791                     	;# 
  2646  0792                     	;# 
  2647  0793                     	;# 
  2648  0794                     	;# 
  2649  0795                     	;# 
  2650  0796                     	;# 
  2651  0797                     	;# 
  2652  0798                     	;# 
  2653  0799                     	;# 
  2654  079A                     	;# 
  2655  079B                     	;# 
  2656  079C                     	;# 
  2657  079D                     	;# 
  2658  079E                     	;# 
  2659  079F                     	;# 
  2660  080D                     	;# 
  2661  080E                     	;# 
  2662  080F                     	;# 
  2663  0810                     	;# 
  2664  0811                     	;# 
  2665  0812                     	;# 
  2666  0813                     	;# 
  2667  0814                     	;# 
  2668  0815                     	;# 
  2669  0816                     	;# 
  2670  0817                     	;# 
  2671  0818                     	;# 
  2672  0819                     	;# 
  2673  081A                     	;# 
  2674  081B                     	;# 
  2675  081C                     	;# 
  2676  081D                     	;# 
  2677  081E                     	;# 
  2678  081F                     	;# 
  2679  090C                     	;# 
  2680  090D                     	;# 
  2681  090E                     	;# 
  2682  090F                     	;# 
  2683  0910                     	;# 
  2684  0911                     	;# 
  2685  0912                     	;# 
  2686  0913                     	;# 
  2687  0914                     	;# 
  2688  0915                     	;# 
  2689  0916                     	;# 
  2690  0917                     	;# 
  2691  0D8E                     	;# 
  2692  0D8F                     	;# 
  2693  0D90                     	;# 
  2694  0D91                     	;# 
  2695  0D91                     	;# 
  2696  0D92                     	;# 
  2697  0D93                     	;# 
  2698  0D93                     	;# 
  2699  0D94                     	;# 
  2700  0D95                     	;# 
  2701  0D95                     	;# 
  2702  0D96                     	;# 
  2703  0D97                     	;# 
  2704  0D97                     	;# 
  2705  0D98                     	;# 
  2706  0D99                     	;# 
  2707  0D99                     	;# 
  2708  0D9A                     	;# 
  2709  0D9B                     	;# 
  2710  0D9C                     	;# 
  2711  0D9C                     	;# 
  2712  0D9D                     	;# 
  2713  0D9D                     	;# 
  2714  0D9E                     	;# 
  2715  0D9F                     	;# 
  2716  0DA0                     	;# 
  2717  0DA1                     	;# 
  2718  0DA1                     	;# 
  2719  0DA2                     	;# 
  2720  0DA3                     	;# 
  2721  0DA3                     	;# 
  2722  0DA4                     	;# 
  2723  0DA5                     	;# 
  2724  0DA5                     	;# 
  2725  0DA6                     	;# 
  2726  0DA7                     	;# 
  2727  0DA7                     	;# 
  2728  0DA8                     	;# 
  2729  0DA9                     	;# 
  2730  0DA9                     	;# 
  2731  0DAA                     	;# 
  2732  0DAB                     	;# 
  2733  0DAC                     	;# 
  2734  0DAC                     	;# 
  2735  0DAD                     	;# 
  2736  0DAD                     	;# 
  2737  0DAE                     	;# 
  2738  0DAF                     	;# 
  2739  0DB0                     	;# 
  2740  0DB1                     	;# 
  2741  0DB1                     	;# 
  2742  0DB2                     	;# 
  2743  0DB3                     	;# 
  2744  0DB3                     	;# 
  2745  0DB4                     	;# 
  2746  0DB5                     	;# 
  2747  0DB5                     	;# 
  2748  0DB6                     	;# 
  2749  0DB7                     	;# 
  2750  0DB7                     	;# 
  2751  0DB8                     	;# 
  2752  0DB9                     	;# 
  2753  0DB9                     	;# 
  2754  0DBA                     	;# 
  2755  0DBB                     	;# 
  2756  0DBC                     	;# 
  2757  0DBC                     	;# 
  2758  0DBD                     	;# 
  2759  0DBD                     	;# 
  2760  0DBE                     	;# 
  2761  0DBF                     	;# 
  2762  0DC0                     	;# 
  2763  0E0C                     	;# 
  2764  0E0D                     	;# 
  2765  0E0E                     	;# 
  2766  0E0F                     	;# 
  2767  0E10                     	;# 
  2768  0E11                     	;# 
  2769  0E12                     	;# 
  2770  0E13                     	;# 
  2771  0E14                     	;# 
  2772  0E15                     	;# 
  2773  0E15                     	;# 
  2774  0E15                     	;# 
  2775  0E16                     	;# 
  2776  0E16                     	;# 
  2777  0E16                     	;# 
  2778  0E17                     	;# 
  2779  0E17                     	;# 
  2780  0E17                     	;# 
  2781  0E18                     	;# 
  2782  0E18                     	;# 
  2783  0E18                     	;# 
  2784  0E19                     	;# 
  2785  0E1A                     	;# 
  2786  0E1B                     	;# 
  2787  0E1D                     	;# 
  2788  0E1E                     	;# 
  2789  0E1F                     	;# 
  2790  0E21                     	;# 
  2791  0E22                     	;# 
  2792  0E23                     	;# 
  2793  0E24                     	;# 
  2794  0E25                     	;# 
  2795  0E26                     	;# 
  2796  0E27                     	;# 
  2797  0E28                     	;# 
  2798  0E29                     	;# 
  2799  0E2D                     	;# 
  2800  0E2E                     	;# 
  2801  0E2F                     	;# 
  2802  0E30                     	;# 
  2803  0E31                     	;# 
  2804  0E32                     	;# 
  2805  0E35                     	;# 
  2806  0E36                     	;# 
  2807  0E37                     	;# 
  2808  0E38                     	;# 
  2809  0E39                     	;# 
  2810  0E3A                     	;# 
  2811  0E3B                     	;# 
  2812  0E3C                     	;# 
  2813  0E3D                     	;# 
  2814  0E3E                     	;# 
  2815  0E90                     	;# 
  2816  0E91                     	;# 
  2817  0E92                     	;# 
  2818  0E93                     	;# 
  2819  0E94                     	;# 
  2820  0E95                     	;# 
  2821  0E96                     	;# 
  2822  0E97                     	;# 
  2823  0E98                     	;# 
  2824  0E99                     	;# 
  2825  0E9A                     	;# 
  2826  0E9B                     	;# 
  2827  0E9C                     	;# 
  2828  0E9D                     	;# 
  2829  0E9E                     	;# 
  2830  0E9F                     	;# 
  2831  0EA0                     	;# 
  2832  0EA1                     	;# 
  2833  0EA2                     	;# 
  2834  0EA3                     	;# 
  2835  0EA4                     	;# 
  2836  0EA5                     	;# 
  2837  0EA6                     	;# 
  2838  0EA7                     	;# 
  2839  0F0F                     	;# 
  2840  0F10                     	;# 
  2841  0F11                     	;# 
  2842  0F12                     	;# 
  2843  0F13                     	;# 
  2844  0F14                     	;# 
  2845  0F15                     	;# 
  2846  0F16                     	;# 
  2847  0F17                     	;# 
  2848  0F18                     	;# 
  2849  0F19                     	;# 
  2850  0F1A                     	;# 
  2851  0F1B                     	;# 
  2852  0F1C                     	;# 
  2853  0F1D                     	;# 
  2854  0F1E                     	;# 
  2855  0F1F                     	;# 
  2856  0F20                     	;# 
  2857  0F21                     	;# 
  2858  0F22                     	;# 
  2859  0F23                     	;# 
  2860  0F24                     	;# 
  2861  0F25                     	;# 
  2862  0F26                     	;# 
  2863  0F27                     	;# 
  2864  0F28                     	;# 
  2865  0F29                     	;# 
  2866  0F2A                     	;# 
  2867  0F2B                     	;# 
  2868  0F2C                     	;# 
  2869  0F2D                     	;# 
  2870  0F2E                     	;# 
  2871  0F2F                     	;# 
  2872  0F30                     	;# 
  2873  0F31                     	;# 
  2874  0F32                     	;# 
  2875  0F33                     	;# 
  2876  0F34                     	;# 
  2877  0F35                     	;# 
  2878  0F36                     	;# 
  2879  0F37                     	;# 
  2880  0FE4                     	;# 
  2881  0FE5                     	;# 
  2882  0FE6                     	;# 
  2883  0FE7                     	;# 
  2884  0FE8                     	;# 
  2885  0FE9                     	;# 
  2886  0FEA                     	;# 
  2887  0FEB                     	;# 
  2888  0FED                     	;# 
  2889  0FEE                     	;# 
  2890  0FEF                     	;# 
  2891                           
  2892                           	psect	idataCOMMON
  2893  0626                     __pidataCOMMON:	
  2894                           
  2895                           ;initializer for _buffer_write_index
  2896  0626  3401               	retlw	1
  2897  0627  3400               	retlw	0
  2898                           
  2899                           	psect	idataBANK0
  2900  0622                     __pidataBANK0:	
  2901                           
  2902                           ;initializer for _isPlaying
  2903  0622  3401               	retlw	1
  2904                           
  2905                           ;initializer for _state
  2906  0623  3403               	retlw	3
  2907                           
  2908                           ;initializer for _readMessage
  2909  0624  34FF               	retlw	255
  2910                           
  2911                           ;initializer for _GLBL_Resp8
  2912  0625  34FF               	retlw	255
  2913                           
  2914                           	psect	idataBANK1
  2915  060E                     __pidataBANK1:	
  2916                           
  2917                           ;initializer for _GLBL_Resp40
  2918  060E  34FF               	retlw	255
  2919  060F  34FF               	retlw	255
  2920  0610  34FF               	retlw	255
  2921  0611  34FF               	retlw	255
  2922  0612  34FF               	retlw	255
  2923                           
  2924                           	psect	stringtext1
  2925  017A                     __pstringtext1:	
  2926  017A                     _CRCTable:	
  2927  017A  3400               	retlw	0
  2928  017B  3409               	retlw	9
  2929  017C  3412               	retlw	18
  2930  017D  341B               	retlw	27
  2931  017E  3424               	retlw	36
  2932  017F  342D               	retlw	45
  2933  0180  3436               	retlw	54
  2934  0181  343F               	retlw	63
  2935  0182  3448               	retlw	72
  2936  0183  3441               	retlw	65
  2937  0184  345A               	retlw	90
  2938  0185  3453               	retlw	83
  2939  0186  346C               	retlw	108
  2940  0187  3465               	retlw	101
  2941  0188  347E               	retlw	126
  2942  0189  3477               	retlw	119
  2943  018A  3419               	retlw	25
  2944  018B  3410               	retlw	16
  2945  018C  340B               	retlw	11
  2946  018D  3402               	retlw	2
  2947  018E  343D               	retlw	61
  2948  018F  3434               	retlw	52
  2949  0190  342F               	retlw	47
  2950  0191  3426               	retlw	38
  2951  0192  3451               	retlw	81
  2952  0193  3458               	retlw	88
  2953  0194  3443               	retlw	67
  2954  0195  344A               	retlw	74
  2955  0196  3475               	retlw	117
  2956  0197  347C               	retlw	124
  2957  0198  3467               	retlw	103
  2958  0199  346E               	retlw	110
  2959  019A  3432               	retlw	50
  2960  019B  343B               	retlw	59
  2961  019C  3420               	retlw	32
  2962  019D  3429               	retlw	41
  2963  019E  3416               	retlw	22
  2964  019F  341F               	retlw	31
  2965  01A0  3404               	retlw	4
  2966  01A1  340D               	retlw	13
  2967  01A2  347A               	retlw	122
  2968  01A3  3473               	retlw	115
  2969  01A4  3468               	retlw	104
  2970  01A5  3461               	retlw	97
  2971  01A6  345E               	retlw	94
  2972  01A7  3457               	retlw	87
  2973  01A8  344C               	retlw	76
  2974  01A9  3445               	retlw	69
  2975  01AA  342B               	retlw	43
  2976  01AB  3422               	retlw	34
  2977  01AC  3439               	retlw	57
  2978  01AD  3430               	retlw	48
  2979  01AE  340F               	retlw	15
  2980  01AF  3406               	retlw	6
  2981  01B0  341D               	retlw	29
  2982  01B1  3414               	retlw	20
  2983  01B2  3463               	retlw	99
  2984  01B3  346A               	retlw	106
  2985  01B4  3471               	retlw	113
  2986  01B5  3478               	retlw	120
  2987  01B6  3447               	retlw	71
  2988  01B7  344E               	retlw	78
  2989  01B8  3455               	retlw	85
  2990  01B9  345C               	retlw	92
  2991  01BA  3464               	retlw	100
  2992  01BB  346D               	retlw	109
  2993  01BC  3476               	retlw	118
  2994  01BD  347F               	retlw	127
  2995  01BE  3440               	retlw	64
  2996  01BF  3449               	retlw	73
  2997  01C0  3452               	retlw	82
  2998  01C1  345B               	retlw	91
  2999  01C2  342C               	retlw	44
  3000  01C3  3425               	retlw	37
  3001  01C4  343E               	retlw	62
  3002  01C5  3437               	retlw	55
  3003  01C6  3408               	retlw	8
  3004  01C7  3401               	retlw	1
  3005  01C8  341A               	retlw	26
  3006  01C9  3413               	retlw	19
  3007  01CA  347D               	retlw	125
  3008  01CB  3474               	retlw	116
  3009  01CC  346F               	retlw	111
  3010  01CD  3466               	retlw	102
  3011  01CE  3459               	retlw	89
  3012  01CF  3450               	retlw	80
  3013  01D0  344B               	retlw	75
  3014  01D1  3442               	retlw	66
  3015  01D2  3435               	retlw	53
  3016  01D3  343C               	retlw	60
  3017  01D4  3427               	retlw	39
  3018  01D5  342E               	retlw	46
  3019  01D6  3411               	retlw	17
  3020  01D7  3418               	retlw	24
  3021  01D8  3403               	retlw	3
  3022  01D9  340A               	retlw	10
  3023  01DA  3456               	retlw	86
  3024  01DB  345F               	retlw	95
  3025  01DC  3444               	retlw	68
  3026  01DD  344D               	retlw	77
  3027  01DE  3472               	retlw	114
  3028  01DF  347B               	retlw	123
  3029  01E0  3460               	retlw	96
  3030  01E1  3469               	retlw	105
  3031  01E2  341E               	retlw	30
  3032  01E3  3417               	retlw	23
  3033  01E4  340C               	retlw	12
  3034  01E5  3405               	retlw	5
  3035  01E6  343A               	retlw	58
  3036  01E7  3433               	retlw	51
  3037  01E8  3428               	retlw	40
  3038  01E9  3421               	retlw	33
  3039  01EA  344F               	retlw	79
  3040  01EB  3446               	retlw	70
  3041  01EC  345D               	retlw	93
  3042  01ED  3454               	retlw	84
  3043  01EE  346B               	retlw	107
  3044  01EF  3462               	retlw	98
  3045  01F0  3479               	retlw	121
  3046  01F1  3470               	retlw	112
  3047  01F2  3407               	retlw	7
  3048  01F3  340E               	retlw	14
  3049  01F4  3415               	retlw	21
  3050  01F5  341C               	retlw	28
  3051  01F6  3423               	retlw	35
  3052  01F7  342A               	retlw	42
  3053  01F8  3431               	retlw	49
  3054  01F9  3438               	retlw	56
  3055  01FA  3441               	retlw	65
  3056  01FB  3448               	retlw	72
  3057  01FC  3453               	retlw	83
  3058  01FD  345A               	retlw	90
  3059  01FE  3465               	retlw	101
  3060  01FF  346C               	retlw	108
  3061  0200  3477               	retlw	119
  3062  0201  347E               	retlw	126
  3063  0202  3409               	retlw	9
  3064  0203  3400               	retlw	0
  3065  0204  341B               	retlw	27
  3066  0205  3412               	retlw	18
  3067  0206  342D               	retlw	45
  3068  0207  3424               	retlw	36
  3069  0208  343F               	retlw	63
  3070  0209  3436               	retlw	54
  3071  020A  3458               	retlw	88
  3072  020B  3451               	retlw	81
  3073  020C  344A               	retlw	74
  3074  020D  3443               	retlw	67
  3075  020E  347C               	retlw	124
  3076  020F  3475               	retlw	117
  3077  0210  346E               	retlw	110
  3078  0211  3467               	retlw	103
  3079  0212  3410               	retlw	16
  3080  0213  3419               	retlw	25
  3081  0214  3402               	retlw	2
  3082  0215  340B               	retlw	11
  3083  0216  3434               	retlw	52
  3084  0217  343D               	retlw	61
  3085  0218  3426               	retlw	38
  3086  0219  342F               	retlw	47
  3087  021A  3473               	retlw	115
  3088  021B  347A               	retlw	122
  3089  021C  3461               	retlw	97
  3090  021D  3468               	retlw	104
  3091  021E  3457               	retlw	87
  3092  021F  345E               	retlw	94
  3093  0220  3445               	retlw	69
  3094  0221  344C               	retlw	76
  3095  0222  343B               	retlw	59
  3096  0223  3432               	retlw	50
  3097  0224  3429               	retlw	41
  3098  0225  3420               	retlw	32
  3099  0226  341F               	retlw	31
  3100  0227  3416               	retlw	22
  3101  0228  340D               	retlw	13
  3102  0229  3404               	retlw	4
  3103  022A  346A               	retlw	106
  3104  022B  3463               	retlw	99
  3105  022C  3478               	retlw	120
  3106  022D  3471               	retlw	113
  3107  022E  344E               	retlw	78
  3108  022F  3447               	retlw	71
  3109  0230  345C               	retlw	92
  3110  0231  3455               	retlw	85
  3111  0232  3422               	retlw	34
  3112  0233  342B               	retlw	43
  3113  0234  3430               	retlw	48
  3114  0235  3439               	retlw	57
  3115  0236  3406               	retlw	6
  3116  0237  340F               	retlw	15
  3117  0238  3414               	retlw	20
  3118  0239  341D               	retlw	29
  3119  023A  3425               	retlw	37
  3120  023B  342C               	retlw	44
  3121  023C  3437               	retlw	55
  3122  023D  343E               	retlw	62
  3123  023E  3401               	retlw	1
  3124  023F  3408               	retlw	8
  3125  0240  3413               	retlw	19
  3126  0241  341A               	retlw	26
  3127  0242  346D               	retlw	109
  3128  0243  3464               	retlw	100
  3129  0244  347F               	retlw	127
  3130  0245  3476               	retlw	118
  3131  0246  3449               	retlw	73
  3132  0247  3440               	retlw	64
  3133  0248  345B               	retlw	91
  3134  0249  3452               	retlw	82
  3135  024A  343C               	retlw	60
  3136  024B  3435               	retlw	53
  3137  024C  342E               	retlw	46
  3138  024D  3427               	retlw	39
  3139  024E  3418               	retlw	24
  3140  024F  3411               	retlw	17
  3141  0250  340A               	retlw	10
  3142  0251  3403               	retlw	3
  3143  0252  3474               	retlw	116
  3144  0253  347D               	retlw	125
  3145  0254  3466               	retlw	102
  3146  0255  346F               	retlw	111
  3147  0256  3450               	retlw	80
  3148  0257  3459               	retlw	89
  3149  0258  3442               	retlw	66
  3150  0259  344B               	retlw	75
  3151  025A  3417               	retlw	23
  3152  025B  341E               	retlw	30
  3153  025C  3405               	retlw	5
  3154  025D  340C               	retlw	12
  3155  025E  3433               	retlw	51
  3156  025F  343A               	retlw	58
  3157  0260  3421               	retlw	33
  3158  0261  3428               	retlw	40
  3159  0262  345F               	retlw	95
  3160  0263  3456               	retlw	86
  3161  0264  344D               	retlw	77
  3162  0265  3444               	retlw	68
  3163  0266  347B               	retlw	123
  3164  0267  3472               	retlw	114
  3165  0268  3469               	retlw	105
  3166  0269  3460               	retlw	96
  3167  026A  340E               	retlw	14
  3168  026B  3407               	retlw	7
  3169  026C  341C               	retlw	28
  3170  026D  3415               	retlw	21
  3171  026E  342A               	retlw	42
  3172  026F  3423               	retlw	35
  3173  0270  3438               	retlw	56
  3174  0271  3431               	retlw	49
  3175  0272  3446               	retlw	70
  3176  0273  344F               	retlw	79
  3177  0274  3454               	retlw	84
  3178  0275  345D               	retlw	93
  3179  0276  3462               	retlw	98
  3180  0277  346B               	retlw	107
  3181  0278  3470               	retlw	112
  3182  0279  3479               	retlw	121
  3183  027A                     __end_of_CRCTable:	
  3184  000B                     _INTCONbits	set	11
  3185  0011                     _PIR1bits	set	17
  3186  000E                     _PORTCbits	set	14
  3187  008C                     _TRISA	set	140
  3188  009C                     _OSCSTATbits	set	156
  3189  009B                     _OSCCON	set	155
  3190  0091                     _PIE1bits	set	145
  3191  0476                     _TRISC6	set	1142
  3192  0468                     _TRISB0	set	1128
  3193  0471                     _TRISC1	set	1137
  3194  0470                     _TRISC0	set	1136
  3195  0469                     _TRISB1	set	1129
  3196  0477                     _TRISC7	set	1143
  3197  0474                     _TRISC4	set	1140
  3198  0473                     _TRISC3	set	1139
  3199  0472                     _TRISC2	set	1138
  3200  0C69                     _ANSB1	set	3177
  3201  0C73                     _ANSC3	set	3187
  3202  0214                     _SSP1STATbits	set	532
  3203  0211                     _SSP1BUF	set	529
  3204  0212                     _SSP1ADD	set	530
  3205  0215                     _SSP1CON1	set	533
  3206  0214                     _SSP1STAT	set	532
  3207  0215                     _SSP1CON1bits	set	533
  3208  0495                     _T2CON	set	1173
  3209  0497                     _T2CLKCON	set	1175
  3210  0494                     _T2PR	set	1172
  3211  058E                     _DAC1CON0	set	1422
  3212  058F                     _DAC1REFL	set	1423
  3213  0590                     _DAC1REFH	set	1424
  3214  2C68                     _DAC1LD	set	11368
  3215  0E3B                     _SSPDATPPS	set	3643
  3216  0E3A                     _SSPCLKPPS	set	3642
  3217  0EA4                     _RC4PPS	set	3748
  3218  0EA2                     _RC2PPS	set	3746
  3219  027A                     STR_5:	
  3220  027A  3466               	retlw	102	;'f'
  3221  027B  346D               	retlw	109	;'m'
  3222  027C  3474               	retlw	116	;'t'
  3223  027D  3420               	retlw	32	;' '
  3224  027E  3400               	retlw	0
  3225                           
  3226                           	psect	stringtext2
  3227  0613                     __pstringtext2:	
  3228  0613                     STR_3:	
  3229  0613  3457               	retlw	87	;'W'
  3230  0614  3441               	retlw	65	;'A'
  3231  0615  3456               	retlw	86	;'V'
  3232  0616  3445               	retlw	69	;'E'
  3233  0617  3400               	retlw	0
  3234                           
  3235                           	psect	stringtext3
  3236  0618                     __pstringtext3:	
  3237  0618                     STR_1:	
  3238  0618  3452               	retlw	82	;'R'
  3239  0619  3449               	retlw	73	;'I'
  3240  061A  3446               	retlw	70	;'F'
  3241  061B  3446               	retlw	70	;'F'
  3242  061C  3400               	retlw	0
  3243                           
  3244                           	psect	stringtext4
  3245  061D                     __pstringtext4:	
  3246  061D                     STR_7:	
  3247  061D  3464               	retlw	100	;'d'
  3248  061E  3461               	retlw	97	;'a'
  3249  061F  3474               	retlw	116	;'t'
  3250  0620  3461               	retlw	97	;'a'
  3251  0621  3400               	retlw	0
  3252                           
  3253                           	psect	stringtext5
  3254  0000                     __pstringtext5:	
  3255  027A                     
  3256                           ; #config settings
  3257  0000                     
  3258                           	psect	cinit
  3259  0028                     start_initialization:	
  3260  0028                     __initialization:	
  3261                           
  3262                           ; Initialize objects allocated to COMMON
  3263  0028  3186  2626  3180   	fcall	__pidataCOMMON	;fetch initializer
  3264  002B  00FA               	movwf	__pdataCOMMON& (0+127)
  3265  002C  3186  2627  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  3266  002F  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
  3267                           
  3268                           ; Initialize objects allocated to BANK0
  3269  0030  3022               	movlw	low __pidataBANK0
  3270  0031  0084               	movwf	4
  3271  0032  3086               	movlw	(high __pidataBANK0)| (0+128)
  3272  0033  0085               	movwf	5
  3273  0034  306B               	movlw	low __pdataBANK0
  3274  0035  0086               	movwf	6
  3275  0036  3000               	movlw	high __pdataBANK0
  3276  0037  0087               	movwf	7
  3277  0038  3004               	movlw	4
  3278  0039  3186  2602  3180   	fcall	init_ram
  3279                           
  3280                           ; Initialize objects allocated to BANK1
  3281  003C  300E               	movlw	low __pidataBANK1
  3282  003D  0084               	movwf	4
  3283  003E  3086               	movlw	(high __pidataBANK1)| (0+128)
  3284  003F  0085               	movwf	5
  3285  0040  30AE               	movlw	low __pdataBANK1
  3286  0041  0086               	movwf	6
  3287  0042  3000               	movlw	high __pdataBANK1
  3288  0043  0087               	movwf	7
  3289  0044  3005               	movlw	5
  3290  0045  3186  2602  3180   	fcall	init_ram
  3291                           
  3292                           ; Clear objects allocated to BANK0
  3293  0048  3061               	movlw	low __pbssBANK0
  3294  0049  0084               	movwf	4
  3295  004A  3000               	movlw	high __pbssBANK0
  3296  004B  0085               	movwf	5
  3297  004C  300A               	movlw	10
  3298  004D  3186  2608  3180   	fcall	clear_ram0
  3299                           
  3300                           ; Clear objects allocated to BANK1
  3301  0050  30A0               	movlw	low __pbssBANK1
  3302  0051  0084               	movwf	4
  3303  0052  3000               	movlw	high __pbssBANK1
  3304  0053  0085               	movwf	5
  3305  0054  300E               	movlw	14
  3306  0055  3186  2608  3180   	fcall	clear_ram0
  3307                           
  3308                           ; Clear objects allocated to BANK2
  3309  0058  3020               	movlw	low __pbssBANK2
  3310  0059  0084               	movwf	4
  3311  005A  3001               	movlw	high __pbssBANK2
  3312  005B  0085               	movwf	5
  3313  005C  3040               	movlw	64
  3314  005D  3186  2608  3180   	fcall	clear_ram0
  3315                           
  3316                           ; Clear objects allocated to BANK3
  3317  0060  30A0               	movlw	low __pbssBANK3
  3318  0061  0084               	movwf	4
  3319  0062  3001               	movlw	high __pbssBANK3
  3320  0063  0085               	movwf	5
  3321  0064  3040               	movlw	64
  3322  0065  3186  2608         	fcall	clear_ram0
  3323  0067                     end_of_initialization:	
  3324                           ;End of C runtime variable initialization code
  3325                           
  3326  0067                     __end_of__initialization:	
  3327  0067  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3328  0068  0020               	movlb	0
  3329  0069  3180  286B         	ljmp	_main	;jump to C main() function
  3330                           
  3331                           	psect	dataCOMMON
  3332  007A                     __pdataCOMMON:	
  3333  007A                     _buffer_write_index:	
  3334  007A                     	ds	2
  3335                           
  3336                           	psect	bssBANK0
  3337  0061                     __pbssBANK0:	
  3338  0061                     _blockIndex:	
  3339  0061                     	ds	2
  3340  0063                     _buffer_read_index:	
  3341  0063                     	ds	2
  3342  0065                     _sdata:	
  3343  0065                     	ds	2
  3344  0067                     _channels:	
  3345  0067                     	ds	2
  3346  0069                     _samplePending:	
  3347  0069                     	ds	1
  3348  006A                     _global_error:	
  3349  006A                     	ds	1
  3350                           
  3351                           	psect	dataBANK0
  3352  006B                     __pdataBANK0:	
  3353  006B                     _isPlaying:	
  3354  006B                     	ds	1
  3355  006C                     _state:	
  3356  006C                     	ds	1
  3357  006D                     _readMessage:	
  3358  006D                     	ds	1
  3359  006E                     _GLBL_Resp8:	
  3360  006E                     	ds	1
  3361                           
  3362                           	psect	bssBANK1
  3363  00A0                     __pbssBANK1:	
  3364  00A0                     _address:	
  3365  00A0                     	ds	4
  3366  00A4                     _filesize:	
  3367  00A4                     	ds	4
  3368  00A8                     _sampRate:	
  3369  00A8                     	ds	4
  3370  00AC                     _bitsPerSamp:	
  3371  00AC                     	ds	2
  3372                           
  3373                           	psect	dataBANK1
  3374  00AE                     __pdataBANK1:	
  3375  00AE                     _GLBL_Resp40:	
  3376  00AE                     	ds	5
  3377                           
  3378                           	psect	bssBANK2
  3379  0120                     __pbssBANK2:	
  3380  0120                     _lbuffer:	
  3381  0120                     	ds	64
  3382                           
  3383                           	psect	bssBANK3
  3384  01A0                     __pbssBANK3:	
  3385  01A0                     _rbuffer:	
  3386  01A0                     	ds	64
  3387                           
  3388                           	psect	inittext
  3389  0602                     init_ram:	
  3390  0602  00FE               	movwf	126
  3391  0603                     initloop:	
  3392  0603  0012               	moviw fsr0++
  3393  0604  001E               	movwi fsr1++
  3394  0605  0BFE               	decfsz	126,f
  3395  0606  2E03               	goto	initloop
  3396  0607  3400               	retlw	0
  3397                           
  3398                           	psect	clrtext
  3399  0608                     clear_ram0:	
  3400                           ;	Called with FSR0 containing the base address, and
  3401                           ;	WREG with the size to clear
  3402                           
  3403  0608  0064               	clrwdt	;clear the watchdog before getting into this loop
  3404  0609                     clrloop0:	
  3405  0609  0180               	clrf	0	;clear RAM location pointed to by FSR
  3406  060A  3101               	addfsr 0,1
  3407  060B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3408  060C  2E09               	goto	clrloop0	;have we reached the end yet?
  3409  060D  3400               	retlw	0	;all done for this memory range, return
  3410                           
  3411                           	psect	cstackBANK1
  3412  00B3                     __pcstackBANK1:	
  3413  00B3                     ??_main:	
  3414                           
  3415                           ; 1 bytes @ 0x0
  3416  00B3                     	ds	4
  3417                           
  3418                           	psect	cstackCOMMON
  3419  0070                     __pcstackCOMMON:	
  3420  0070                     ?_SPI_Write:	
  3421  0070                     ?_SD_Read8bitResponse:	
  3422                           ; 1 bytes @ 0x0
  3423                           
  3424  0070                     ?_SD_Check8bitResponse:	
  3425                           ; 1 bytes @ 0x0
  3426                           
  3427  0070                     ?_SD_Read40bitResponse:	
  3428                           ; 1 bytes @ 0x0
  3429                           
  3430  0070                     ?_SPI_Read:	
  3431                           ; 1 bytes @ 0x0
  3432                           
  3433  0070                     ?_DAC_Init:	
  3434                           ; 1 bytes @ 0x0
  3435                           
  3436  0070                     ?_SD_Init:	
  3437                           ; 1 bytes @ 0x0
  3438                           
  3439  0070                     ?_SD_CloseBlock:	
  3440                           ; 1 bytes @ 0x0
  3441                           
  3442  0070                     ?_SPI_Init:	
  3443                           ; 1 bytes @ 0x0
  3444                           
  3445  0070                     ?_error:	
  3446                           ; 1 bytes @ 0x0
  3447                           
  3448  0070                     ?_init:	
  3449                           ; 1 bytes @ 0x0
  3450                           
  3451  0070                     ?_isr:	
  3452                           ; 1 bytes @ 0x0
  3453                           
  3454  0070                     ??_isr:	
  3455                           ; 1 bytes @ 0x0
  3456                           
  3457  0070                     ?_main:	
  3458                           ; 1 bytes @ 0x0
  3459                           
  3460  0070                     isr@level:	
  3461                           ; 1 bytes @ 0x0
  3462                           
  3463                           
  3464                           ; 2 bytes @ 0x0
  3465  0070                     	ds	2
  3466  0072                     ??_SPI_Write:	
  3467  0072                     ??_SD_Read8bitResponse:	
  3468                           ; 1 bytes @ 0x2
  3469                           
  3470  0072                     ??_SD_Check8bitResponse:	
  3471                           ; 1 bytes @ 0x2
  3472                           
  3473  0072                     ??_SD_Read40bitResponse:	
  3474                           ; 1 bytes @ 0x2
  3475                           
  3476  0072                     ?_SD_Check40bitResponse:	
  3477                           ; 1 bytes @ 0x2
  3478                           
  3479  0072                     ??_SPI_Read:	
  3480                           ; 1 bytes @ 0x2
  3481                           
  3482  0072                     ??_DAC_Init:	
  3483                           ; 1 bytes @ 0x2
  3484                           
  3485  0072                     ??_SD_CloseBlock:	
  3486                           ; 1 bytes @ 0x2
  3487                           
  3488  0072                     ??_SPI_Init:	
  3489                           ; 1 bytes @ 0x2
  3490                           
  3491  0072                     ??_error:	
  3492                           ; 1 bytes @ 0x2
  3493                           
  3494  0072                     ?_fourCCeq:	
  3495                           ; 1 bytes @ 0x2
  3496                           
  3497  0072                     ?_readBytes:	
  3498                           ; 1 bytes @ 0x2
  3499                           
  3500  0072                     ?_timer_Init:	
  3501                           ; 1 bytes @ 0x2
  3502                           
  3503  0072                     SD_Check8bitResponse@Byte:	
  3504                           ; 2 bytes @ 0x2
  3505                           
  3506  0072                     SD_Check40bitResponse@Byte3:	
  3507                           ; 1 bytes @ 0x2
  3508                           
  3509  0072                     SPI_Write@Data_8bit:	
  3510                           ; 1 bytes @ 0x2
  3511                           
  3512  0072                     fourCCeq@b:	
  3513                           ; 1 bytes @ 0x2
  3514                           
  3515  0072                     readBytes@len:	
  3516                           ; 2 bytes @ 0x2
  3517                           
  3518  0072                     timer_Init@rate:	
  3519                           ; 2 bytes @ 0x2
  3520                           
  3521                           
  3522                           ; 4 bytes @ 0x2
  3523  0072                     	ds	1
  3524  0073                     ?_SD_SendCommand:	
  3525  0073                     SD_SendCommand@ARG3:	
  3526                           ; 1 bytes @ 0x3
  3527                           
  3528  0073                     SD_Read8bitResponse@readMessage:	
  3529                           ; 1 bytes @ 0x3
  3530                           
  3531  0073                     SD_Check8bitResponse@match:	
  3532                           ; 1 bytes @ 0x3
  3533                           
  3534  0073                     SD_Read40bitResponse@readMessage:	
  3535                           ; 1 bytes @ 0x3
  3536                           
  3537  0073                     SD_Check40bitResponse@Byte2:	
  3538                           ; 1 bytes @ 0x3
  3539                           
  3540  0073                     error@e:	
  3541                           ; 1 bytes @ 0x3
  3542                           
  3543                           
  3544                           ; 1 bytes @ 0x3
  3545  0073                     	ds	1
  3546  0074                     ??_fourCCeq:	
  3547  0074                     ??_readBytes:	
  3548                           ; 1 bytes @ 0x4
  3549                           
  3550  0074                     SD_SendCommand@ARG2:	
  3551                           ; 1 bytes @ 0x4
  3552                           
  3553  0074                     SD_Check40bitResponse@Byte1:	
  3554                           ; 1 bytes @ 0x4
  3555                           
  3556                           
  3557                           ; 1 bytes @ 0x4
  3558  0074                     	ds	1
  3559  0075                     SD_SendCommand@ARG1:	
  3560  0075                     SD_Check40bitResponse@Byte0:	
  3561                           ; 1 bytes @ 0x5
  3562                           
  3563                           
  3564                           ; 1 bytes @ 0x5
  3565  0075                     	ds	1
  3566  0076                     ??_SD_Check40bitResponse:	
  3567  0076                     ??_timer_Init:	
  3568                           ; 1 bytes @ 0x6
  3569                           
  3570  0076                     SD_SendCommand@ARG0:	
  3571                           ; 1 bytes @ 0x6
  3572                           
  3573  0076                     SD_Check40bitResponse@Byte4:	
  3574                           ; 1 bytes @ 0x6
  3575                           
  3576  0076                     readBytes@dest:	
  3577                           ; 1 bytes @ 0x6
  3578                           
  3579                           
  3580                           ; 1 bytes @ 0x6
  3581  0076                     	ds	1
  3582  0077                     ??_SD_SendCommand:	
  3583  0077                     SD_Check40bitResponse@match:	
  3584                           ; 1 bytes @ 0x7
  3585                           
  3586  0077                     readBytes@i:	
  3587                           ; 1 bytes @ 0x7
  3588                           
  3589                           
  3590                           ; 2 bytes @ 0x7
  3591  0077                     	ds	1
  3592  0078                     ??_SD_Init:	
  3593  0078                     fourCCeq@a:	
  3594                           ; 1 bytes @ 0x8
  3595                           
  3596                           
  3597                           ; 1 bytes @ 0x8
  3598  0078                     	ds	1
  3599  0079                     ??_init:	
  3600  0079                     fourCCeq@i:	
  3601                           ; 1 bytes @ 0x9
  3602                           
  3603                           
  3604                           ; 1 bytes @ 0x9
  3605  0079                     	ds	1
  3606                           
  3607                           	psect	cstackBANK0
  3608  0020                     __pcstackBANK0:	
  3609  0020                     SD_SendCommand@CMD_6bit:	
  3610                           
  3611                           ; 1 bytes @ 0x0
  3612  0020                     	ds	1
  3613  0021                     SD_SendCommand@ByteToSend:	
  3614                           
  3615                           ; 1 bytes @ 0x1
  3616  0021                     	ds	1
  3617  0022                     SD_SendCommand@Checksum:	
  3618                           
  3619                           ; 1 bytes @ 0x2
  3620  0022                     	ds	1
  3621  0023                     ?_SD_OpenStream:	
  3622  0023                     SD_OpenStream@address:	
  3623                           ; 1 bytes @ 0x3
  3624                           
  3625                           
  3626                           ; 4 bytes @ 0x3
  3627  0023                     	ds	4
  3628  0027                     ??_SD_OpenStream:	
  3629                           
  3630                           ; 1 bytes @ 0x7
  3631  0027                     	ds	4
  3632  002B                     SD_OpenStream@a:	
  3633                           
  3634                           ; 4 bytes @ 0xB
  3635  002B                     	ds	4
  3636  002F                     ?_openFile:	
  3637  002F                     openFile@a:	
  3638                           ; 1 bytes @ 0xF
  3639                           
  3640                           
  3641                           ; 4 bytes @ 0xF
  3642  002F                     	ds	4
  3643  0033                     ??_openFile:	
  3644                           
  3645                           ; 1 bytes @ 0x13
  3646  0033                     	ds	1
  3647  0034                     openFile@riff:	
  3648                           
  3649                           ; 8 bytes @ 0x14
  3650  0034                     	ds	8
  3651  003C                     openFile@response:	
  3652                           
  3653                           ; 1 bytes @ 0x1C
  3654  003C                     	ds	1
  3655  003D                     openFile@data:	
  3656                           
  3657                           ; 8 bytes @ 0x1D
  3658  003D                     	ds	8
  3659  0045                     openFile@fmt:	
  3660                           
  3661                           ; 28 bytes @ 0x25
  3662  0045                     	ds	28
  3663                           
  3664                           	psect	maintext
  3665  006B                     __pmaintext:	
  3666 ;;
  3667 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  3668 ;;
  3669 ;; *************** function _main *****************
  3670 ;; Defined at:
  3671 ;;		line 140 in file "main.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : B1F/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3687 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3688 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3689 ;;Total ram usage:        4 bytes
  3690 ;; Hardware stack levels required when called:    5
  3691 ;; This function calls:
  3692 ;;		_SPI_Read
  3693 ;;		_error
  3694 ;;		_init
  3695 ;;		_openFile
  3696 ;;		_timer_Init
  3697 ;; This function is called by:
  3698 ;;		Startup code after reset
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           
  3703                           ;psect for function _main
  3704  006B                     _main:	
  3705                           
  3706                           ;main.c: 141:     init();
  3707                           
  3708                           ;incstack = 0
  3709                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3710  006B  3185  25A9  3180   	fcall	_init
  3711                           
  3712                           ;main.c: 145:         address = 0;
  3713  006E  3000               	movlw	0
  3714  006F  0021               	movlb	1	; select bank1
  3715  0070  00A3               	movwf	(_address+3)^(0+128)
  3716  0071  3000               	movlw	0
  3717  0072  00A2               	movwf	(_address+2)^(0+128)
  3718  0073  3000               	movlw	0
  3719  0074  00A1               	movwf	(_address+1)^(0+128)
  3720  0075  3000               	movlw	0
  3721  0076  00A0               	movwf	_address^(0+128)
  3722                           
  3723                           ;main.c: 147:         openFile(address);
  3724  0077  0823               	movf	(_address+3)^(0+128),w
  3725  0078  0020               	movlb	0	; select bank0
  3726  0079  00B2               	movwf	openFile@a+3
  3727  007A  0021               	movlb	1	; select bank1
  3728  007B  0822               	movf	(_address+2)^(0+128),w
  3729  007C  0020               	movlb	0	; select bank0
  3730  007D  00B1               	movwf	openFile@a+2
  3731  007E  0021               	movlb	1	; select bank1
  3732  007F  0821               	movf	(_address+1)^(0+128),w
  3733  0080  0020               	movlb	0	; select bank0
  3734  0081  00B0               	movwf	openFile@a+1
  3735  0082  0021               	movlb	1	; select bank1
  3736  0083  0820               	movf	_address^(0+128),w
  3737  0084  0020               	movlb	0	; select bank0
  3738  0085  00AF               	movwf	openFile@a
  3739  0086  3182  227F  3180   	fcall	_openFile
  3740                           
  3741                           ;main.c: 148:         if(channels != 2) samplePending = 0;
  3742  0089  3002               	movlw	2
  3743  008A  0020               	movlb	0	; select bank0
  3744  008B  0667               	xorwf	_channels,w
  3745  008C  0468               	iorwf	_channels+1,w
  3746  008D  1D03               	btfss	3,2
  3747  008E  01E9               	clrf	_samplePending
  3748                           
  3749                           ;main.c: 149:         timer_Init(sampRate);
  3750  008F  0021               	movlb	1	; select bank1
  3751  0090  082B               	movf	(_sampRate+3)^(0+128),w
  3752  0091  00F5               	movwf	timer_Init@rate+3
  3753  0092  082A               	movf	(_sampRate+2)^(0+128),w
  3754  0093  00F4               	movwf	timer_Init@rate+2
  3755  0094  0829               	movf	(_sampRate+1)^(0+128),w
  3756  0095  00F3               	movwf	timer_Init@rate+1
  3757  0096  0828               	movf	_sampRate^(0+128),w
  3758  0097  00F2               	movwf	timer_Init@rate
  3759  0098  3184  2453  3180   	fcall	_timer_Init
  3760  009B                     l2301:	
  3761                           
  3762                           ;main.c: 177:             if (state == OPEN) {
  3763  009B  0020               	movlb	0	; select bank0
  3764  009C  086C               	movf	_state,w
  3765  009D  1D03               	btfss	3,2
  3766  009E  289B               	goto	l2301
  3767                           
  3768                           ;main.c: 178:                 if (blockIndex >= 512) {
  3769  009F  0862               	movf	_blockIndex+1,w
  3770  00A0  3A80               	xorlw	128
  3771  00A1  0021               	movlb	1	; select bank1
  3772  00A2  00B3               	movwf	??_main^(0+128)
  3773  00A3  3082               	movlw	130
  3774  00A4  0233               	subwf	??_main^(0+128),w
  3775  00A5  1D03               	skipz
  3776  00A6  28AA               	goto	u895
  3777  00A7  3000               	movlw	0
  3778  00A8  0020               	movlb	0	; select bank0
  3779  00A9  0261               	subwf	_blockIndex,w
  3780  00AA                     u895:	
  3781  00AA  1C03               	skipc
  3782  00AB  28C5               	goto	l279
  3783                           
  3784                           ;main.c: 180:                     ++address;
  3785  00AC  3001               	movlw	1
  3786  00AD  0021               	movlb	1	; select bank1
  3787  00AE  07A0               	addwf	_address^(0+128),f
  3788  00AF  3000               	movlw	0
  3789  00B0  3DA1               	addwfc	(_address+1)^(0+128),f
  3790  00B1  3000               	movlw	0
  3791  00B2  3DA2               	addwfc	(_address+2)^(0+128),f
  3792  00B3  3000               	movlw	0
  3793  00B4  3DA3               	addwfc	(_address+3)^(0+128),f
  3794                           
  3795                           ;main.c: 181:                     blockIndex = 0;
  3796  00B5  0020               	movlb	0	; select bank0
  3797  00B6  01E1               	clrf	_blockIndex
  3798  00B7  01E2               	clrf	_blockIndex+1
  3799                           
  3800                           ;main.c: 182:                     SPI_Read();
  3801  00B8  3185  25F4  3180   	fcall	_SPI_Read
  3802                           
  3803                           ;main.c: 183:                     SPI_Read();
  3804  00BB  3185  25F4  3180   	fcall	_SPI_Read
  3805                           
  3806                           ;main.c: 184:                     SPI_Read();
  3807  00BE  3185  25F4  3180   	fcall	_SPI_Read
  3808                           
  3809                           ;main.c: 185:                     SPI_Read();
  3810  00C1  3185  25F4  3180   	fcall	_SPI_Read
  3811                           
  3812                           ;main.c: 188:                 } else {
  3813  00C4  289B               	goto	l2301
  3814  00C5                     l279:	
  3815                           
  3816                           ;main.c: 189:                     PIE1bits.TMR2IE = 0;
  3817  00C5  0021               	movlb	1	; select bank1
  3818  00C6  1091               	bcf	17,1	;volatile
  3819                           
  3820                           ;main.c: 190:                     if (buffer_write_index != buffer_read_index) {
  3821  00C7  0020               	movlb	0	; select bank0
  3822  00C8  0864               	movf	_buffer_read_index+1,w
  3823  00C9  067B               	xorwf	_buffer_write_index+1,w
  3824  00CA  1D03               	skipz
  3825  00CB  28CE               	goto	u905
  3826  00CC  0863               	movf	_buffer_read_index,w
  3827  00CD  067A               	xorwf	_buffer_write_index,w
  3828  00CE                     u905:	
  3829  00CE  1903               	skipnz
  3830  00CF  2977               	goto	l281
  3831                           
  3832                           ;main.c: 191:                         PIE1bits.TMR2IE = 1;
  3833  00D0  0021               	movlb	1	; select bank1
  3834  00D1  1491               	bsf	17,1	;volatile
  3835                           
  3836                           ;main.c: 193:                         switch (channels) {
  3837  00D2  295F               	goto	l2347
  3838  00D3                     l2321:	
  3839                           
  3840                           ;main.c: 195:                                 sdata[0] = SPI_Read();
  3841  00D3  3185  25F4  3180   	fcall	_SPI_Read
  3842  00D6  0021               	movlb	1	; select bank1
  3843  00D7  00B3               	movwf	??_main^(0+128)
  3844  00D8  0833               	movf	??_main^(0+128),w
  3845  00D9  0020               	movlb	0	; select bank0
  3846  00DA  00E5               	movwf	_sdata
  3847                           
  3848                           ;main.c: 196:                                 sdata[1] = SPI_Read();
  3849  00DB  3185  25F4  3180   	fcall	_SPI_Read
  3850  00DE  0021               	movlb	1	; select bank1
  3851  00DF  00B3               	movwf	??_main^(0+128)
  3852  00E0  0833               	movf	??_main^(0+128),w
  3853  00E1  0020               	movlb	0	; select bank0
  3854  00E2  00E6               	movwf	_sdata+1
  3855                           
  3856                           ;main.c: 197:                                 lbuffer[ buffer_write_index ] = *((short*)
      +                          sdata) - 0x8000;
  3857  00E3  3065               	movlw	low (_sdata| 0)
  3858  00E4  0086               	movwf	6
  3859  00E5  0187               	clrf	7
  3860  00E6  3F40               	moviw [0]fsr1
  3861  00E7  0021               	movlb	1	; select bank1
  3862  00E8  00B3               	movwf	??_main^(0+128)
  3863  00E9  3F41               	moviw [1]fsr1
  3864  00EA  00B4               	movwf	(??_main^(0+128)+1)
  3865  00EB  0833               	movf	??_main^(0+128),w
  3866  00EC  3E00               	addlw	0
  3867  00ED  00B5               	movwf	(??_main+2)^(0+128)
  3868  00EE  3080               	movlw	128
  3869  00EF  3D34               	addwfc	(??_main+1)^(0+128),w
  3870  00F0  00B6               	movwf	(??_main+3)^(0+128)
  3871  00F1  357A               	lslf	_buffer_write_index,w
  3872  00F2  3E20               	addlw	(low (_lbuffer| (0+256)))& (0+255)
  3873  00F3  0086               	movwf	6
  3874  00F4  3001               	movlw	1	; select bank2/3
  3875  00F5  0087               	movwf	7
  3876  00F6  0835               	movf	(??_main+2)^(0+128),w
  3877  00F7  3FC0               	movwi [0]fsr1
  3878  00F8  0836               	movf	(??_main+3)^(0+128),w
  3879  00F9  3FC1               	movwi [1]fsr1
  3880                           
  3881                           ;main.c: 198:                                 ++buffer_write_index;
  3882  00FA  3001               	movlw	1
  3883  00FB  07FA               	addwf	_buffer_write_index,f
  3884  00FC  3000               	movlw	0
  3885  00FD  3DFB               	addwfc	_buffer_write_index+1,f
  3886                           
  3887                           ;main.c: 199:                             break;
  3888  00FE  296D               	goto	l2349
  3889  00FF                     l2327:	
  3890                           
  3891                           ;main.c: 201:                                 if (samplePending) {
  3892  00FF  0869               	movf	_samplePending,w
  3893  0100  1903               	btfsc	3,2
  3894  0101  2930               	goto	l286
  3895                           
  3896                           ;main.c: 202:                                     samplePending = 0;
  3897  0102  01E9               	clrf	_samplePending
  3898                           
  3899                           ;main.c: 203:                                     sdata[0] = SPI_Read();
  3900  0103  3185  25F4  3180   	fcall	_SPI_Read
  3901  0106  0021               	movlb	1	; select bank1
  3902  0107  00B3               	movwf	??_main^(0+128)
  3903  0108  0833               	movf	??_main^(0+128),w
  3904  0109  0020               	movlb	0	; select bank0
  3905  010A  00E5               	movwf	_sdata
  3906                           
  3907                           ;main.c: 204:                                     sdata[1] = SPI_Read();
  3908  010B  3185  25F4  3180   	fcall	_SPI_Read
  3909  010E  0021               	movlb	1	; select bank1
  3910  010F  00B3               	movwf	??_main^(0+128)
  3911  0110  0833               	movf	??_main^(0+128),w
  3912  0111  0020               	movlb	0	; select bank0
  3913  0112  00E6               	movwf	_sdata+1
  3914                           
  3915                           ;main.c: 205:                                     rbuffer[ buffer_write_index++ ] = *((s
      +                          hort*)sdata) - 0x8000;
  3916  0113  3065               	movlw	low (_sdata| 0)
  3917  0114  0086               	movwf	6
  3918  0115  0187               	clrf	7
  3919  0116  3F40               	moviw [0]fsr1
  3920  0117  0021               	movlb	1	; select bank1
  3921  0118  00B3               	movwf	??_main^(0+128)
  3922  0119  3F41               	moviw [1]fsr1
  3923  011A  00B4               	movwf	(??_main^(0+128)+1)
  3924  011B  0833               	movf	??_main^(0+128),w
  3925  011C  3E00               	addlw	0
  3926  011D  00B5               	movwf	(??_main+2)^(0+128)
  3927  011E  3080               	movlw	128
  3928  011F  3D34               	addwfc	(??_main+1)^(0+128),w
  3929  0120  00B6               	movwf	(??_main+3)^(0+128)
  3930  0121  357A               	lslf	_buffer_write_index,w
  3931  0122  3EA0               	addlw	(low (_rbuffer| (0+256)))& (0+255)
  3932  0123  0086               	movwf	6
  3933  0124  3001               	movlw	1	; select bank3/4
  3934  0125  0087               	movwf	7
  3935  0126  0835               	movf	(??_main+2)^(0+128),w
  3936  0127  3FC0               	movwi [0]fsr1
  3937  0128  0836               	movf	(??_main+3)^(0+128),w
  3938  0129  3FC1               	movwi [1]fsr1
  3939  012A  3001               	movlw	1
  3940  012B  07FA               	addwf	_buffer_write_index,f
  3941  012C  3000               	movlw	0
  3942  012D  3DFB               	addwfc	_buffer_write_index+1,f
  3943                           
  3944                           ;main.c: 206:                                     __nop();
  3945  012E  0000               	nop
  3946                           
  3947                           ;main.c: 207:                                 } else {
  3948  012F  296D               	goto	l2349
  3949  0130                     l286:	
  3950                           
  3951                           ;main.c: 208:                                     samplePending = 1;
  3952  0130  01E9               	clrf	_samplePending
  3953  0131  0AE9               	incf	_samplePending,f
  3954                           
  3955                           ;main.c: 209:                                     sdata[0] = SPI_Read();
  3956  0132  3185  25F4  3180   	fcall	_SPI_Read
  3957  0135  0021               	movlb	1	; select bank1
  3958  0136  00B3               	movwf	??_main^(0+128)
  3959  0137  0833               	movf	??_main^(0+128),w
  3960  0138  0020               	movlb	0	; select bank0
  3961  0139  00E5               	movwf	_sdata
  3962                           
  3963                           ;main.c: 210:                                     sdata[1] = SPI_Read();
  3964  013A  3185  25F4  3180   	fcall	_SPI_Read
  3965  013D  0021               	movlb	1	; select bank1
  3966  013E  00B3               	movwf	??_main^(0+128)
  3967  013F  0833               	movf	??_main^(0+128),w
  3968  0140  0020               	movlb	0	; select bank0
  3969  0141  00E6               	movwf	_sdata+1
  3970                           
  3971                           ;main.c: 211:                                     lbuffer[ buffer_write_index ] = *((sho
      +                          rt*)sdata) - 0x8000;
  3972  0142  3065               	movlw	low (_sdata| 0)
  3973  0143  0086               	movwf	6
  3974  0144  0187               	clrf	7
  3975  0145  3F40               	moviw [0]fsr1
  3976  0146  0021               	movlb	1	; select bank1
  3977  0147  00B3               	movwf	??_main^(0+128)
  3978  0148  3F41               	moviw [1]fsr1
  3979  0149  00B4               	movwf	(??_main^(0+128)+1)
  3980  014A  0833               	movf	??_main^(0+128),w
  3981  014B  3E00               	addlw	0
  3982  014C  00B5               	movwf	(??_main+2)^(0+128)
  3983  014D  3080               	movlw	128
  3984  014E  3D34               	addwfc	(??_main+1)^(0+128),w
  3985  014F  00B6               	movwf	(??_main+3)^(0+128)
  3986  0150  357A               	lslf	_buffer_write_index,w
  3987  0151  3E20               	addlw	(low (_lbuffer| (0+256)))& (0+255)
  3988  0152  0086               	movwf	6
  3989  0153  3001               	movlw	1	; select bank2/3
  3990  0154  0087               	movwf	7
  3991  0155  0835               	movf	(??_main+2)^(0+128),w
  3992  0156  3FC0               	movwi [0]fsr1
  3993  0157  0836               	movf	(??_main+3)^(0+128),w
  3994  0158  3FC1               	movwi [1]fsr1
  3995  0159  296D               	goto	l2349
  3996  015A                     l2345:	
  3997                           
  3998                           ;main.c: 215:                                 error(CHANNELS);
  3999  015A  3007               	movlw	7
  4000  015B  3185  25E5  3180   	fcall	_error
  4001                           
  4002                           ;main.c: 216:                         }
  4003  015E  296D               	goto	l2349
  4004  015F                     l2347:	
  4005                           
  4006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4007                           ; Switch size 1, requested type "simple"
  4008                           ; Number of cases is 1, Range of values is 0 to 0
  4009                           ; switch strategies available:
  4010                           ; Name         Instructions Cycles
  4011                           ; simple_byte            4     3 (average)
  4012                           ; direct_byte            8     6 (fixed)
  4013                           ; jumptable            260     6 (fixed)
  4014                           ;	Chosen strategy is simple_byte
  4015  015F  0020               	movlb	0	; select bank0
  4016  0160  0868               	movf	_channels+1,w
  4017  0161  3A00               	xorlw	0	; case 0
  4018  0162  1903               	skipnz
  4019  0163  2965               	goto	l2515
  4020  0164  295A               	goto	l2345
  4021  0165                     l2515:	
  4022                           
  4023                           ; Switch size 1, requested type "simple"
  4024                           ; Number of cases is 2, Range of values is 1 to 2
  4025                           ; switch strategies available:
  4026                           ; Name         Instructions Cycles
  4027                           ; simple_byte            7     4 (average)
  4028                           ; direct_byte           13     9 (fixed)
  4029                           ; jumptable            263     9 (fixed)
  4030                           ;	Chosen strategy is simple_byte
  4031  0165  0867               	movf	_channels,w
  4032  0166  3A01               	xorlw	1	; case 1
  4033  0167  1903               	skipnz
  4034  0168  28D3               	goto	l2321
  4035  0169  3A03               	xorlw	3	; case 2
  4036  016A  1903               	skipnz
  4037  016B  28FF               	goto	l2327
  4038  016C  295A               	goto	l2345
  4039  016D                     l2349:	
  4040                           
  4041                           ;main.c: 219:                         buffer_write_index %= 32;
  4042  016D  301F               	movlw	31
  4043  016E  05FA               	andwf	_buffer_write_index,f
  4044  016F  3000               	movlw	0
  4045  0170  05FB               	andwf	_buffer_write_index+1,f
  4046                           
  4047                           ;main.c: 220:                         blockIndex += 2;
  4048  0171  3002               	movlw	2
  4049  0172  0020               	movlb	0	; select bank0
  4050  0173  07E1               	addwf	_blockIndex,f
  4051  0174  3000               	movlw	0
  4052  0175  3DE2               	addwfc	_blockIndex+1,f
  4053                           
  4054                           ;main.c: 222:                     } else PIE1bits.TMR2IE = 1;
  4055  0176  289B               	goto	l2301
  4056  0177                     l281:	
  4057  0177  0021               	movlb	1	; select bank1
  4058  0178  1491               	bsf	17,1	;volatile
  4059  0179  289B               	goto	l2301
  4060  017A                     __end_of_main:	
  4061                           
  4062                           	psect	text1
  4063  0453                     __ptext1:	
  4064 ;; *************** function _timer_Init *****************
  4065 ;; Defined at:
  4066 ;;		line 8 in file "timer.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;  rate            4    2[COMMON] long 
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;		None
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  2    2[COMMON] int 
  4073 ;; Registers used:
  4074 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4083 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4084 ;;Total ram usage:        4 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:    1
  4087 ;; This function calls:
  4088 ;;		Nothing
  4089 ;; This function is called by:
  4090 ;;		_main
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           
  4095                           ;psect for function _timer_Init
  4096  0453                     _timer_Init:	
  4097                           
  4098                           ;timer.c: 9:     PIR1bits.TMR2IF = 0;
  4099                           
  4100                           ;incstack = 0
  4101                           ; Regs used in _timer_Init: [wreg-fsr0h+status,2+status,0]
  4102  0453  0020               	movlb	0	; select bank0
  4103  0454  1091               	bcf	17,1	;volatile
  4104                           
  4105                           ;timer.c: 10:     PIE1bits.TMR2IE = 1;
  4106  0455  0021               	movlb	1	; select bank1
  4107  0456  1491               	bsf	17,1	;volatile
  4108                           
  4109                           ;timer.c: 11:     INTCONbits.PEIE = 1;
  4110  0457  170B               	bsf	11,6	;volatile
  4111                           
  4112                           ;timer.c: 12:     INTCONbits.GIE = 1;
  4113  0458  178B               	bsf	11,7	;volatile
  4114                           
  4115                           ;timer.c: 14:     switch (rate) {
  4116  0459  2C84               	goto	l1757
  4117  045A                     l1729:	
  4118                           
  4119                           ;timer.c: 16:             T2PR = 100;
  4120  045A  3064               	movlw	100
  4121  045B  0029               	movlb	9	; select bank9
  4122  045C  0094               	movwf	20	;volatile
  4123                           
  4124                           ;timer.c: 17:             T2CLKCON = 0x03;
  4125  045D  3003               	movlw	3
  4126  045E  0097               	movwf	23	;volatile
  4127                           
  4128                           ;timer.c: 18:             T2CON = 0x89;
  4129  045F  3089               	movlw	137
  4130  0460  0095               	movwf	21	;volatile
  4131                           
  4132                           ;timer.c: 19:             PIR1bits.TMR2IF = 0;
  4133  0461  0020               	movlb	0	; select bank0
  4134  0462  1091               	bcf	17,1	;volatile
  4135  0463  0008               	return
  4136  0464                     l1737:	
  4137                           
  4138                           ;timer.c: 23:             T2PR = 32;
  4139  0464  3020               	movlw	32
  4140  0465  0029               	movlb	9	; select bank9
  4141  0466  0094               	movwf	20	;volatile
  4142                           
  4143                           ;timer.c: 24:             T2CLKCON = 0x03;
  4144  0467  3003               	movlw	3
  4145  0468  0097               	movwf	23	;volatile
  4146                           
  4147                           ;timer.c: 25:             T2CON = 0x8A;
  4148  0469  308A               	movlw	138
  4149  046A  0095               	movwf	21	;volatile
  4150  046B  0008               	return
  4151  046C                     l1743:	
  4152                           
  4153                           ;timer.c: 29:             T2PR = 111;
  4154  046C  306F               	movlw	111
  4155  046D  0029               	movlb	9	; select bank9
  4156  046E  0094               	movwf	20	;volatile
  4157                           
  4158                           ;timer.c: 30:             T2CLKCON = 0x03;
  4159  046F  3003               	movlw	3
  4160  0470  0097               	movwf	23	;volatile
  4161                           
  4162                           ;timer.c: 31:             T2CON = 0x82;
  4163  0471  3082               	movlw	130
  4164  0472  0095               	movwf	21	;volatile
  4165  0473  0008               	return
  4166  0474                     l1749:	
  4167                           
  4168                           ;timer.c: 35:             T2PR = 100;
  4169  0474  3064               	movlw	100
  4170  0475  0029               	movlb	9	; select bank9
  4171  0476  0094               	movwf	20	;volatile
  4172                           
  4173                           ;timer.c: 36:             T2CLKCON = 0x03;
  4174  0477  3003               	movlw	3
  4175  0478  0097               	movwf	23	;volatile
  4176                           
  4177                           ;timer.c: 37:             T2CON = 0x84;
  4178  0479  3084               	movlw	132
  4179  047A  0095               	movwf	21	;volatile
  4180                           
  4181                           ;timer.c: 38:         break;
  4182  047B  0008               	return
  4183  047C                     l1751:	
  4184                           
  4185                           ;timer.c: 40:             T2PR = 65;
  4186  047C  3041               	movlw	65
  4187  047D  0029               	movlb	9	; select bank9
  4188  047E  0094               	movwf	20	;volatile
  4189                           
  4190                           ;timer.c: 41:             T2CLKCON = 0x03;
  4191  047F  3003               	movlw	3
  4192  0480  0097               	movwf	23	;volatile
  4193                           
  4194                           ;timer.c: 42:             T2CON = 0x8A;
  4195  0481  308A               	movlw	138
  4196  0482  0095               	movwf	21	;volatile
  4197  0483  0008               	return
  4198  0484                     l1757:	
  4199                           
  4200                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4201                           ; Switch size 1, requested type "simple"
  4202                           ; Number of cases is 1, Range of values is 0 to 0
  4203                           ; switch strategies available:
  4204                           ; Name         Instructions Cycles
  4205                           ; simple_byte            4     3 (average)
  4206                           ; direct_byte            8     6 (fixed)
  4207                           ; jumptable            260     6 (fixed)
  4208                           ;	Chosen strategy is simple_byte
  4209  0484  0875               	movf	timer_Init@rate+3,w
  4210  0485  3A00               	xorlw	0	; case 0
  4211  0486  1903               	skipnz
  4212  0487  2CB3               	goto	l2519
  4213  0488  2CB8               	goto	l138
  4214  0489                     l2517:	
  4215                           
  4216                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
  4217                           ; Switch size 1, requested type "simple"
  4218                           ; Number of cases is 5, Range of values is 62 to 187
  4219                           ; switch strategies available:
  4220                           ; Name         Instructions Cycles
  4221                           ; simple_byte           16     9 (average)
  4222                           ; direct_byte          261     9 (fixed)
  4223                           ; jumptable            263     9 (fixed)
  4224                           ;	Chosen strategy is simple_byte
  4225  0489  0873               	movf	timer_Init@rate+1,w
  4226  048A  3A3E               	xorlw	62	; case 62
  4227  048B  1903               	skipnz
  4228  048C  2C9A               	goto	l2521
  4229  048D  3A68               	xorlw	104	; case 86
  4230  048E  1903               	skipnz
  4231  048F  2C9F               	goto	l2523
  4232  0490  3A2B               	xorlw	43	; case 125
  4233  0491  1903               	skipnz
  4234  0492  2CA4               	goto	l2525
  4235  0493  3AD1               	xorlw	209	; case 172
  4236  0494  1903               	skipnz
  4237  0495  2CA9               	goto	l2527
  4238  0496  3A17               	xorlw	23	; case 187
  4239  0497  1903               	skipnz
  4240  0498  2CAE               	goto	l2529
  4241  0499  2CB8               	goto	l138
  4242  049A                     l2521:	
  4243                           
  4244                           ; Switch size 1, requested type "simple"
  4245                           ; Number of cases is 1, Range of values is 128 to 128
  4246                           ; switch strategies available:
  4247                           ; Name         Instructions Cycles
  4248                           ; simple_byte            4     3 (average)
  4249                           ; direct_byte           11     9 (fixed)
  4250                           ; jumptable            263     9 (fixed)
  4251                           ;	Chosen strategy is simple_byte
  4252  049A  0872               	movf	timer_Init@rate,w
  4253  049B  3A80               	xorlw	128	; case 128
  4254  049C  1903               	skipnz
  4255  049D  2C5A               	goto	l1729
  4256  049E  2CB8               	goto	l138
  4257  049F                     l2523:	
  4258                           
  4259                           ; Switch size 1, requested type "simple"
  4260                           ; Number of cases is 1, Range of values is 34 to 34
  4261                           ; switch strategies available:
  4262                           ; Name         Instructions Cycles
  4263                           ; simple_byte            4     3 (average)
  4264                           ; direct_byte           11     9 (fixed)
  4265                           ; jumptable            263     9 (fixed)
  4266                           ;	Chosen strategy is simple_byte
  4267  049F  0872               	movf	timer_Init@rate,w
  4268  04A0  3A22               	xorlw	34	; case 34
  4269  04A1  1903               	skipnz
  4270  04A2  2C7C               	goto	l1751
  4271  04A3  2CB8               	goto	l138
  4272  04A4                     l2525:	
  4273                           
  4274                           ; Switch size 1, requested type "simple"
  4275                           ; Number of cases is 1, Range of values is 0 to 0
  4276                           ; switch strategies available:
  4277                           ; Name         Instructions Cycles
  4278                           ; simple_byte            4     3 (average)
  4279                           ; direct_byte            8     6 (fixed)
  4280                           ; jumptable            260     6 (fixed)
  4281                           ;	Chosen strategy is simple_byte
  4282  04A4  0872               	movf	timer_Init@rate,w
  4283  04A5  3A00               	xorlw	0	; case 0
  4284  04A6  1903               	skipnz
  4285  04A7  2C74               	goto	l1749
  4286  04A8  2CB8               	goto	l138
  4287  04A9                     l2527:	
  4288                           
  4289                           ; Switch size 1, requested type "simple"
  4290                           ; Number of cases is 1, Range of values is 68 to 68
  4291                           ; switch strategies available:
  4292                           ; Name         Instructions Cycles
  4293                           ; simple_byte            4     3 (average)
  4294                           ; direct_byte           11     9 (fixed)
  4295                           ; jumptable            263     9 (fixed)
  4296                           ;	Chosen strategy is simple_byte
  4297  04A9  0872               	movf	timer_Init@rate,w
  4298  04AA  3A44               	xorlw	68	; case 68
  4299  04AB  1903               	skipnz
  4300  04AC  2C64               	goto	l1737
  4301  04AD  2CB8               	goto	l138
  4302  04AE                     l2529:	
  4303                           
  4304                           ; Switch size 1, requested type "simple"
  4305                           ; Number of cases is 1, Range of values is 128 to 128
  4306                           ; switch strategies available:
  4307                           ; Name         Instructions Cycles
  4308                           ; simple_byte            4     3 (average)
  4309                           ; direct_byte           11     9 (fixed)
  4310                           ; jumptable            263     9 (fixed)
  4311                           ;	Chosen strategy is simple_byte
  4312  04AE  0872               	movf	timer_Init@rate,w
  4313  04AF  3A80               	xorlw	128	; case 128
  4314  04B0  1903               	skipnz
  4315  04B1  2C6C               	goto	l1743
  4316  04B2  2CB8               	goto	l138
  4317  04B3                     l2519:	
  4318                           
  4319                           ; Switch size 1, requested type "simple"
  4320                           ; Number of cases is 1, Range of values is 0 to 0
  4321                           ; switch strategies available:
  4322                           ; Name         Instructions Cycles
  4323                           ; simple_byte            4     3 (average)
  4324                           ; direct_byte            8     6 (fixed)
  4325                           ; jumptable            260     6 (fixed)
  4326                           ;	Chosen strategy is simple_byte
  4327  04B3  0874               	movf	timer_Init@rate+2,w
  4328  04B4  3A00               	xorlw	0	; case 0
  4329  04B5  1903               	skipnz
  4330  04B6  2C89               	goto	l2517
  4331  04B7  2CB8               	goto	l138
  4332  04B8                     l138:	
  4333  04B8  0008               	return
  4334  04B9                     __end_of_timer_Init:	
  4335                           
  4336                           	psect	text2
  4337  027F                     __ptext2:	
  4338 ;; *************** function _openFile *****************
  4339 ;; Defined at:
  4340 ;;		line 74 in file "main.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  a               4   15[BANK0 ] long 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  data            8   29[BANK0 ] struct .
  4345 ;;  fmt            28   37[BANK0 ] struct .
  4346 ;;  riff            8   20[BANK0 ] struct .
  4347 ;;  response        1   28[BANK0 ] unsigned char 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      void 
  4350 ;; Registers used:
  4351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4357 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4358 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4359 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4360 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4361 ;;Total ram usage:       50 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    4
  4364 ;; This function calls:
  4365 ;;		_SD_OpenStream
  4366 ;;		_SPI_Read
  4367 ;;		_error
  4368 ;;		_fourCCeq
  4369 ;;		_readBytes
  4370 ;; This function is called by:
  4371 ;;		_main
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           
  4376                           ;psect for function _openFile
  4377  027F                     _openFile:	
  4378                           
  4379                           ;main.c: 75:     SD_OpenStream(a);
  4380                           
  4381                           ;incstack = 0
  4382                           ; Regs used in _openFile: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4383  027F  0020               	movlb	0	; select bank0
  4384  0280  0832               	movf	openFile@a+3,w
  4385  0281  00A6               	movwf	SD_OpenStream@address+3
  4386  0282  0831               	movf	openFile@a+2,w
  4387  0283  00A5               	movwf	SD_OpenStream@address+2
  4388  0284  0830               	movf	openFile@a+1,w
  4389  0285  00A4               	movwf	SD_OpenStream@address+1
  4390  0286  082F               	movf	openFile@a,w
  4391  0287  00A3               	movwf	SD_OpenStream@address
  4392  0288  3185  254E  3182   	fcall	_SD_OpenStream
  4393                           
  4394                           ;main.c: 76:     state = OPEN;
  4395  028B  0020               	movlb	0	; select bank0
  4396  028C  01EC               	clrf	_state
  4397                           
  4398                           ;main.c: 77:     char response = 0xFF;
  4399  028D  30FF               	movlw	255
  4400  028E                     L1:	
  4401  028E  00B3               	movwf	??_openFile
  4402  028F  0833               	movf	??_openFile,w
  4403  0290  00BC               	movwf	openFile@response
  4404  0291  0A3C               	incf	openFile@response,w
  4405  0292  1D03               	btfss	3,2
  4406  0293  2A99               	goto	l2219
  4407                           
  4408                           ;main.c: 78:     while (response == 0xFF) response = SPI_Read();
  4409  0294  3185  25F4  3182   	fcall	_SPI_Read
  4410  0297  0020               	movlb	0	; select bank0
  4411  0298  2A8E               	goto	L1
  4412  0299                     l2219:	
  4413                           
  4414                           ;main.c: 79:     if (response != 0xFE) error(OPEN_BLOCK);
  4415  0299  30FE               	movlw	254
  4416  029A  063C               	xorwf	openFile@response,w
  4417  029B  1903               	btfsc	3,2
  4418  029C  2AA1               	goto	l2223
  4419  029D  3000               	movlw	0
  4420  029E  3185  25E5  3182   	fcall	_error
  4421  02A1                     l2223:	
  4422                           
  4423                           ;main.c: 81:     {;main.c: 82:         RiffTag riff;;main.c: 83:         readBytes((char
      +                          *)&riff, sizeof(riff));;
  4424  02A1  3008               	movlw	8
  4425  02A2  00F2               	movwf	readBytes@len
  4426  02A3  3000               	movlw	0
  4427  02A4  00F3               	movwf	readBytes@len+1
  4428  02A5  3034               	movlw	(low (openFile@riff| 0))& (0+255)
  4429  02A6  3184  24B9  3182   	fcall	_readBytes
  4430                           
  4431                           ;main.c: 84:         if (!fourCCeq(riff.ckID, "RIFF")) error(RIFF_HEADER);
  4432  02A9  3018               	movlw	low (STR_1| (0+32768))
  4433  02AA  00F2               	movwf	fourCCeq@b
  4434  02AB  3086               	movlw	high (STR_1| (0+32768))
  4435  02AC  00F3               	movwf	fourCCeq@b+1
  4436  02AD  3034               	movlw	(low (openFile@riff| 0))& (0+255)
  4437  02AE  3185  2529  3182   	fcall	_fourCCeq
  4438  02B1  3A00               	xorlw	0
  4439  02B2  1D03               	skipz
  4440  02B3  2AB8               	goto	l2229
  4441  02B4  3001               	movlw	1
  4442  02B5  3185  25E5  3182   	fcall	_error
  4443  02B8                     l2229:	
  4444                           
  4445                           ;main.c: 85:     }{;main.c: 86:         FmtChunk fmt;;main.c: 87:         readBytes((cha
      +                          r*)&fmt, sizeof(fmt));;
  4446  02B8  301C               	movlw	28
  4447  02B9  00F2               	movwf	readBytes@len
  4448  02BA  3000               	movlw	0
  4449  02BB  00F3               	movwf	readBytes@len+1
  4450  02BC  3045               	movlw	(low (openFile@fmt| 0))& (0+255)
  4451  02BD  3184  24B9  3182   	fcall	_readBytes
  4452                           
  4453                           ;main.c: 88:         if (!fourCCeq(fmt.WAVEID, "WAVE")) error(WAVE_HEADER);
  4454  02C0  3013               	movlw	low (STR_3| (0+32768))
  4455  02C1  00F2               	movwf	fourCCeq@b
  4456  02C2  3086               	movlw	high (STR_3| (0+32768))
  4457  02C3  00F3               	movwf	fourCCeq@b+1
  4458  02C4  3045               	movlw	(low (openFile@fmt| 0))& (0+255)
  4459  02C5  3185  2529  3182   	fcall	_fourCCeq
  4460  02C8  3A00               	xorlw	0
  4461  02C9  1D03               	skipz
  4462  02CA  2ACF               	goto	l2235
  4463  02CB  3002               	movlw	2
  4464  02CC  3185  25E5  3182   	fcall	_error
  4465  02CF                     l2235:	
  4466                           
  4467                           ;main.c: 89:         if (!fourCCeq(fmt.fmtHeader.ckID, "fmt ")) error(FMT_HEADER);
  4468  02CF  307A               	movlw	low (STR_5| (0+32768))
  4469  02D0  00F2               	movwf	fourCCeq@b
  4470  02D1  3082               	movlw	high (STR_5| (0+32768))
  4471  02D2  00F3               	movwf	fourCCeq@b+1
  4472  02D3  3049               	movlw	(low ((openFile@fmt| 0+4)))& (0+255)
  4473  02D4  3185  2529  3182   	fcall	_fourCCeq
  4474  02D7  3A00               	xorlw	0
  4475  02D8  1D03               	skipz
  4476  02D9  2ADE               	goto	l2239
  4477  02DA  3003               	movlw	3
  4478  02DB  3185  25E5  3182   	fcall	_error
  4479  02DE                     l2239:	
  4480                           
  4481                           ;main.c: 90:         if (fmt.formatTag != 0x0001) error(CODEC);
  4482  02DE  0020               	movlb	0	; select bank0
  4483  02DF  0351               	decf	openFile@fmt+12,w
  4484  02E0  0452               	iorwf	openFile@fmt+13,w
  4485  02E1  1903               	btfsc	3,2
  4486  02E2  2AE7               	goto	l2243
  4487  02E3  3004               	movlw	4
  4488  02E4  3185  25E5  3182   	fcall	_error
  4489  02E7                     l2243:	
  4490                           
  4491                           ;main.c: 91:         if (fmt.bitsPerSamp != 16) error(BIT_DEPTH);
  4492  02E7  3010               	movlw	16
  4493  02E8  0020               	movlb	0	; select bank0
  4494  02E9  065F               	xorwf	openFile@fmt+26,w
  4495  02EA  0460               	iorwf	openFile@fmt+27,w
  4496  02EB  1903               	btfsc	3,2
  4497  02EC  2AF1               	goto	l2247
  4498  02ED  3005               	movlw	5
  4499  02EE  3185  25E5  3182   	fcall	_error
  4500  02F1                     l2247:	
  4501                           
  4502                           ;main.c: 93:         channels = fmt.channels;
  4503  02F1  0020               	movlb	0	; select bank0
  4504  02F2  0854               	movf	openFile@fmt+15,w
  4505  02F3  00E8               	movwf	_channels+1
  4506  02F4  0853               	movf	openFile@fmt+14,w
  4507  02F5  00E7               	movwf	_channels
  4508                           
  4509                           ;main.c: 94:         sampRate = fmt.sampRate;
  4510  02F6  3010               	movlw	16
  4511  02F7  3E45               	addlw	(low (openFile@fmt| 0))& (0+255)
  4512  02F8  0086               	movwf	6
  4513  02F9  0187               	clrf	7
  4514  02FA  3F40               	moviw [0]fsr1
  4515  02FB  0021               	movlb	1	; select bank1
  4516  02FC  00A8               	movwf	_sampRate^(0+128)
  4517  02FD  3F41               	moviw [1]fsr1
  4518  02FE  00A9               	movwf	(_sampRate+1)^(0+128)
  4519  02FF  3F42               	moviw [2]fsr1
  4520  0300  00AA               	movwf	(_sampRate+2)^(0+128)
  4521  0301  3F43               	moviw [3]fsr1
  4522  0302  00AB               	movwf	(_sampRate+3)^(0+128)
  4523                           
  4524                           ;main.c: 96:     }{;main.c: 97:         RiffTag data;;main.c: 98:         readBytes((cha
      +                          r*)&data, sizeof(data));;
  4525  0303  3008               	movlw	8
  4526  0304  00F2               	movwf	readBytes@len
  4527  0305  3000               	movlw	0
  4528  0306  00F3               	movwf	readBytes@len+1
  4529  0307  303D               	movlw	(low (openFile@data| 0))& (0+255)
  4530  0308  3184  24B9  3182   	fcall	_readBytes
  4531                           
  4532                           ;main.c: 99:         if (!fourCCeq(data.ckID, "data")) error(DATA_HEADER);
  4533  030B  301D               	movlw	low (STR_7| (0+32768))
  4534  030C  00F2               	movwf	fourCCeq@b
  4535  030D  3086               	movlw	high (STR_7| (0+32768))
  4536  030E  00F3               	movwf	fourCCeq@b+1
  4537  030F  303D               	movlw	(low (openFile@data| 0))& (0+255)
  4538  0310  3185  2529  3182   	fcall	_fourCCeq
  4539  0313  3A00               	xorlw	0
  4540  0314  1D03               	skipz
  4541  0315  2B19               	goto	l2257
  4542  0316  3006               	movlw	6
  4543  0317  3185  25E5         	fcall	_error
  4544  0319                     l2257:	
  4545                           
  4546                           ;main.c: 100:         filesize = data.ckSize;
  4547  0319  3004               	movlw	4
  4548  031A  3E3D               	addlw	(low (openFile@data| 0))& (0+255)
  4549  031B  0086               	movwf	6
  4550  031C  0187               	clrf	7
  4551  031D  3F40               	moviw [0]fsr1
  4552  031E  0021               	movlb	1	; select bank1
  4553  031F  00A4               	movwf	_filesize^(0+128)
  4554  0320  3F41               	moviw [1]fsr1
  4555  0321  00A5               	movwf	(_filesize+1)^(0+128)
  4556  0322  3F42               	moviw [2]fsr1
  4557  0323  00A6               	movwf	(_filesize+2)^(0+128)
  4558  0324  3F43               	moviw [3]fsr1
  4559  0325  00A7               	movwf	(_filesize+3)^(0+128)
  4560                           
  4561                           ;main.c: 101:     };main.c: 102:         __nop();
  4562  0326  0000               	nop
  4563  0327  0008               	return
  4564  0328                     __end_of_openFile:	
  4565                           
  4566                           	psect	text3
  4567  04B9                     __ptext3:	
  4568 ;; *************** function _readBytes *****************
  4569 ;; Defined at:
  4570 ;;		line 60 in file "main.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  dest            1    wreg     PTR unsigned char 
  4573 ;;		 -> openFile@data(8), openFile@fmt(28), openFile@riff(8), 
  4574 ;;  len             2    2[COMMON] int 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  dest            1    6[COMMON] PTR unsigned char 
  4577 ;;		 -> openFile@data(8), openFile@fmt(28), openFile@riff(8), 
  4578 ;;  i               2    7[COMMON] int 
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  1    wreg      void 
  4581 ;; Registers used:
  4582 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4588 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4589 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4590 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4591 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4592 ;;Total ram usage:        7 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:    3
  4595 ;; This function calls:
  4596 ;;		_SD_CloseBlock
  4597 ;;		_SPI_Read
  4598 ;; This function is called by:
  4599 ;;		_openFile
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           
  4604                           ;psect for function _readBytes
  4605  04B9                     _readBytes:	
  4606                           
  4607                           ;incstack = 0
  4608                           ; Regs used in _readBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4609                           ;readBytes@dest stored from wreg
  4610  04B9  00F6               	movwf	readBytes@dest
  4611                           
  4612                           ;main.c: 61:     for (int i=0; i<len; i++) {
  4613  04BA  01F7               	clrf	readBytes@i
  4614  04BB  01F8               	clrf	readBytes@i+1
  4615  04BC                     l1723:	
  4616  04BC  0878               	movf	readBytes@i+1,w
  4617  04BD  3A80               	xorlw	128
  4618  04BE  00F4               	movwf	??_readBytes
  4619  04BF  0873               	movf	readBytes@len+1,w
  4620  04C0  3A80               	xorlw	128
  4621  04C1  0274               	subwf	??_readBytes,w
  4622  04C2  1D03               	skipz
  4623  04C3  2CC6               	goto	u535
  4624  04C4  0872               	movf	readBytes@len,w
  4625  04C5  0277               	subwf	readBytes@i,w
  4626  04C6                     u535:	
  4627  04C6  1803               	btfsc	3,0
  4628  04C7  0008               	return
  4629                           
  4630                           ;main.c: 62:         dest[i] = SPI_Read();
  4631  04C8  3185  25F4  3184   	fcall	_SPI_Read
  4632  04CB  00F4               	movwf	??_readBytes
  4633  04CC  0877               	movf	readBytes@i,w
  4634  04CD  0776               	addwf	readBytes@dest,w
  4635  04CE  00F5               	movwf	??_readBytes+1
  4636  04CF  0875               	movf	??_readBytes+1,w
  4637  04D0  0086               	movwf	6
  4638  04D1  0187               	clrf	7
  4639  04D2  0874               	movf	??_readBytes,w
  4640  04D3  0081               	movwf	1
  4641                           
  4642                           ;main.c: 63:         ++blockIndex;
  4643  04D4  3001               	movlw	1
  4644  04D5  0020               	movlb	0	; select bank0
  4645  04D6  07E1               	addwf	_blockIndex,f
  4646  04D7  3000               	movlw	0
  4647  04D8  3DE2               	addwfc	_blockIndex+1,f
  4648                           
  4649                           ;main.c: 64:         if (blockIndex >= 512) {
  4650  04D9  0862               	movf	_blockIndex+1,w
  4651  04DA  3A80               	xorlw	128
  4652  04DB  00F4               	movwf	??_readBytes
  4653  04DC  3082               	movlw	130
  4654  04DD  0274               	subwf	??_readBytes,w
  4655  04DE  1D03               	skipz
  4656  04DF  2CE2               	goto	u525
  4657  04E0  3000               	movlw	0
  4658  04E1  0261               	subwf	_blockIndex,w
  4659  04E2                     u525:	
  4660  04E2  1C03               	skipc
  4661  04E3  2CF7               	goto	l1721
  4662                           
  4663                           ;main.c: 65:             SD_CloseBlock();
  4664  04E4  3185  25DC  3184   	fcall	_SD_CloseBlock
  4665                           
  4666                           ;main.c: 66:             ++address;
  4667  04E7  3001               	movlw	1
  4668  04E8  0021               	movlb	1	; select bank1
  4669  04E9  07A0               	addwf	_address^(0+128),f
  4670  04EA  3000               	movlw	0
  4671  04EB  3DA1               	addwfc	(_address+1)^(0+128),f
  4672  04EC  3000               	movlw	0
  4673  04ED  3DA2               	addwfc	(_address+2)^(0+128),f
  4674  04EE  3000               	movlw	0
  4675  04EF  3DA3               	addwfc	(_address+3)^(0+128),f
  4676                           
  4677                           ;main.c: 67:             blockIndex = 0;
  4678  04F0  0020               	movlb	0	; select bank0
  4679  04F1  01E1               	clrf	_blockIndex
  4680  04F2  01E2               	clrf	_blockIndex+1
  4681                           
  4682                           ;main.c: 68:             state = CLOSED;
  4683  04F3  3003               	movlw	3
  4684  04F4  00F4               	movwf	??_readBytes
  4685  04F5  0874               	movf	??_readBytes,w
  4686  04F6  00EC               	movwf	_state
  4687  04F7                     l1721:	
  4688                           
  4689                           ;main.c: 70:     }
  4690  04F7  3001               	movlw	1
  4691  04F8  07F7               	addwf	readBytes@i,f
  4692  04F9  3000               	movlw	0
  4693  04FA  3DF8               	addwfc	readBytes@i+1,f
  4694  04FB  2CBC               	goto	l1723
  4695  04FC                     __end_of_readBytes:	
  4696                           
  4697                           	psect	text4
  4698  05DC                     __ptext4:	
  4699 ;; *************** function _SD_CloseBlock *****************
  4700 ;; Defined at:
  4701 ;;		line 275 in file "SD.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;		None
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;		None
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      _Bool 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0, pclath, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4719 ;;Total ram usage:        0 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    2
  4722 ;; This function calls:
  4723 ;;		_SPI_Read
  4724 ;; This function is called by:
  4725 ;;		_readBytes
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           
  4730                           ;psect for function _SD_CloseBlock
  4731  05DC                     _SD_CloseBlock:	
  4732                           
  4733                           ;SD.c: 277:     SPI_Read();
  4734                           
  4735                           ;incstack = 0
  4736                           ; Regs used in _SD_CloseBlock: [wreg+status,2+status,0+pclath+cstack]
  4737  05DC  3185  25F4  3185   	fcall	_SPI_Read
  4738                           
  4739                           ;SD.c: 278:     SPI_Read();
  4740  05DF  3185  25F4  3185   	fcall	_SPI_Read
  4741                           
  4742                           ;SD.c: 280:     SPI_Read();
  4743  05E2  3185  25F4         	fcall	_SPI_Read
  4744  05E4  0008               	return
  4745  05E5                     __end_of_SD_CloseBlock:	
  4746                           
  4747                           	psect	text5
  4748  0529                     __ptext5:	
  4749 ;; *************** function _fourCCeq *****************
  4750 ;; Defined at:
  4751 ;;		line 53 in file "main.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  a               1    wreg     PTR unsigned char 
  4754 ;;		 -> openFile@data(8), fmt.fmtHeader(8), openFile@fmt(28), openFile@riff(8), 
  4755 ;;  b               2    2[COMMON] PTR unsigned char 
  4756 ;;		 -> STR_8(5), STR_6(5), STR_4(5), STR_2(5), 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;  a               1    8[COMMON] PTR unsigned char 
  4759 ;;		 -> openFile@data(8), fmt.fmtHeader(8), openFile@fmt(28), openFile@riff(8), 
  4760 ;;  i               1    9[COMMON] unsigned char 
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      _Bool 
  4763 ;; Registers used:
  4764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4770 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4771 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4772 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4773 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4774 ;;Total ram usage:        8 bytes
  4775 ;; Hardware stack levels used:    1
  4776 ;; Hardware stack levels required when called:    1
  4777 ;; This function calls:
  4778 ;;		Nothing
  4779 ;; This function is called by:
  4780 ;;		_openFile
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           
  4785                           ;psect for function _fourCCeq
  4786  0529                     _fourCCeq:	
  4787                           
  4788                           ;incstack = 0
  4789                           ; Regs used in _fourCCeq: [wreg-fsr1h+status,2+status,0+pclath]
  4790                           ;fourCCeq@a stored from wreg
  4791  0529  00F8               	movwf	fourCCeq@a
  4792                           
  4793                           ;main.c: 54:     for (char i=0; i<4; i++) {
  4794  052A  01F9               	clrf	fourCCeq@i
  4795  052B                     l1691:	
  4796                           
  4797                           ;main.c: 55:         if (a[i] != b[i]) return 0;
  4798  052B  0873               	movf	fourCCeq@b+1,w
  4799  052C  00F5               	movwf	??_fourCCeq+1
  4800  052D  0872               	movf	fourCCeq@b,w
  4801  052E  00F4               	movwf	??_fourCCeq
  4802  052F  0879               	movf	fourCCeq@i,w
  4803  0530  0774               	addwf	??_fourCCeq,w
  4804  0531  0084               	movwf	4
  4805  0532  0875               	movf	??_fourCCeq+1,w
  4806  0533  1803               	skipnc
  4807  0534  0A75               	incf	??_fourCCeq+1,w
  4808  0535  0085               	movwf	5
  4809  0536  0800               	movf	0,w	;code access
  4810  0537  00F6               	movwf	??_fourCCeq+2
  4811  0538  0879               	movf	fourCCeq@i,w
  4812  0539  0778               	addwf	fourCCeq@a,w
  4813  053A  00F7               	movwf	??_fourCCeq+3
  4814  053B  0877               	movf	??_fourCCeq+3,w
  4815  053C  0086               	movwf	6
  4816  053D  0187               	clrf	7
  4817  053E  0801               	movf	1,w
  4818  053F  0676               	xorwf	??_fourCCeq+2,w
  4819  0540  1903               	skipnz
  4820  0541  2D44               	goto	l1697
  4821  0542  3000               	movlw	0
  4822  0543  0008               	return
  4823  0544                     l1697:	
  4824                           
  4825                           ;main.c: 56:     }
  4826  0544  3001               	movlw	1
  4827  0545  00F4               	movwf	??_fourCCeq
  4828  0546  0874               	movf	??_fourCCeq,w
  4829  0547  07F9               	addwf	fourCCeq@i,f
  4830  0548  3004               	movlw	4
  4831  0549  0279               	subwf	fourCCeq@i,w
  4832  054A  1C03               	skipc
  4833  054B  2D2B               	goto	l1691
  4834                           
  4835                           ;main.c: 57:     return 1;
  4836  054C  3001               	movlw	1
  4837  054D  0008               	return
  4838  054E                     __end_of_fourCCeq:	
  4839                           
  4840                           	psect	text6
  4841  05E5                     __ptext6:	
  4842 ;; *************** function _error *****************
  4843 ;; Defined at:
  4844 ;;		line 17 in file "./error.h"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;  e               1    wreg     enum E12104
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  e               1    3[COMMON] enum E12104
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  1    wreg      void 
  4851 ;; Registers used:
  4852 ;;		wreg
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4860 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4862 ;;Total ram usage:        2 bytes
  4863 ;; Hardware stack levels used:    1
  4864 ;; Hardware stack levels required when called:    1
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_openFile
  4869 ;;		_main
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           
  4874                           ;psect for function _error
  4875  05E5                     _error:	
  4876                           
  4877                           ;incstack = 0
  4878                           ; Regs used in _error: [wreg]
  4879                           ;error@e stored from wreg
  4880  05E5  00F3               	movwf	error@e
  4881                           
  4882                           ;./error.h: 19:     global_error = e;
  4883  05E6  0873               	movf	error@e,w
  4884  05E7  00F2               	movwf	??_error
  4885  05E8  0872               	movf	??_error,w
  4886  05E9  0020               	movlb	0	; select bank0
  4887  05EA  00EA               	movwf	_global_error
  4888                           
  4889                           ;./error.h: 20:     __nop();
  4890  05EB  0000               	nop
  4891  05EC  0008               	return
  4892  05ED                     __end_of_error:	
  4893                           
  4894                           	psect	text7
  4895  054E                     __ptext7:	
  4896 ;; *************** function _SD_OpenStream *****************
  4897 ;; Defined at:
  4898 ;;		line 284 in file "SD.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;  address         4    3[BANK0 ] long 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;  a               4   11[BANK0 ] struct .
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      _Bool 
  4905 ;; Registers used:
  4906 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4912 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4913 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4914 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4915 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4916 ;;Total ram usage:       12 bytes
  4917 ;; Hardware stack levels used:    1
  4918 ;; Hardware stack levels required when called:    3
  4919 ;; This function calls:
  4920 ;;		_SD_Check8bitResponse
  4921 ;;		_SD_Read8bitResponse
  4922 ;;		_SD_SendCommand
  4923 ;; This function is called by:
  4924 ;;		_openFile
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           
  4929                           ;psect for function _SD_OpenStream
  4930  054E                     _SD_OpenStream:	
  4931                           
  4932                           ;SD.c: 288:     BlockAddress a = *((BlockAddress*)(&address));
  4933                           
  4934                           ;incstack = 0
  4935                           ; Regs used in _SD_OpenStream: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4936  054E  0020               	movlb	0	; select bank0
  4937  054F  0826               	movf	SD_OpenStream@address+3,w
  4938  0550  00AE               	movwf	SD_OpenStream@a+3
  4939  0551  0825               	movf	SD_OpenStream@address+2,w
  4940  0552  00AD               	movwf	SD_OpenStream@a+2
  4941  0553  0824               	movf	SD_OpenStream@address+1,w
  4942  0554  00AC               	movwf	SD_OpenStream@a+1
  4943  0555  0823               	movf	SD_OpenStream@address,w
  4944  0556  00AB               	movwf	SD_OpenStream@a
  4945                           
  4946                           ;SD.c: 290:     SD_SendCommand(18, a.a3, a.a2, a.a1, a.a0);
  4947  0557  082E               	movf	SD_OpenStream@a+3,w
  4948  0558  00A7               	movwf	??_SD_OpenStream
  4949  0559  0827               	movf	??_SD_OpenStream,w
  4950  055A  00F3               	movwf	SD_SendCommand@ARG3
  4951  055B  082D               	movf	SD_OpenStream@a+2,w
  4952  055C  00A8               	movwf	??_SD_OpenStream+1
  4953  055D  0828               	movf	??_SD_OpenStream+1,w
  4954  055E  00F4               	movwf	SD_SendCommand@ARG2
  4955  055F  082C               	movf	SD_OpenStream@a+1,w
  4956  0560  00A9               	movwf	??_SD_OpenStream+2
  4957  0561  0829               	movf	??_SD_OpenStream+2,w
  4958  0562  00F5               	movwf	SD_SendCommand@ARG1
  4959  0563  082B               	movf	SD_OpenStream@a,w
  4960  0564  00AA               	movwf	??_SD_OpenStream+3
  4961  0565  082A               	movf	??_SD_OpenStream+3,w
  4962  0566  00F6               	movwf	SD_SendCommand@ARG0
  4963  0567  3012               	movlw	18
  4964  0568  3183  2328  3185   	fcall	_SD_SendCommand
  4965                           
  4966                           ;SD.c: 293:     SD_Read8bitResponse();
  4967  056B  3185  25C1  3185   	fcall	_SD_Read8bitResponse
  4968                           
  4969                           ;SD.c: 296:     if(SD_Check8bitResponse(0x00) == 0) return 0;
  4970  056E  3000               	movlw	0
  4971  056F  3185  25D2         	fcall	_SD_Check8bitResponse
  4972  0571  0008               	return
  4973  0572                     __end_of_SD_OpenStream:	
  4974                           
  4975                           	psect	text8
  4976  05A9                     __ptext8:	
  4977 ;; *************** function _init *****************
  4978 ;; Defined at:
  4979 ;;		line 106 in file "main.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;		None
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;		None
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1    wreg      void 
  4986 ;; Registers used:
  4987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4997 ;;Total ram usage:        0 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; Hardware stack levels required when called:    4
  5000 ;; This function calls:
  5001 ;;		_DAC_Init
  5002 ;;		_SD_Init
  5003 ;;		_SPI_Init
  5004 ;; This function is called by:
  5005 ;;		_main
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           
  5010                           ;psect for function _init
  5011  05A9                     _init:	
  5012                           
  5013                           ;main.c: 108:     OSCCON = 0xF4;
  5014                           
  5015                           ;incstack = 0
  5016                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5017  05A9  30F4               	movlw	244
  5018  05AA  0021               	movlb	1	; select bank1
  5019  05AB  009B               	movwf	27	;volatile
  5020  05AC                     l261:	
  5021                           ;main.c: 109:     while(OSCSTATbits.HFIOFR == 0);
  5022                           
  5023  05AC  1E1C               	btfss	28,4	;volatile
  5024  05AD  2DAC               	goto	l261
  5025                           
  5026                           ;main.c: 111:     TRISB1 = 1;
  5027  05AE  148D               	bsf	13,1	;volatile
  5028                           
  5029                           ;main.c: 112:     ANSB1 = 0;
  5030  05AF  0023               	movlb	3	; select bank3
  5031  05B0  108D               	bcf	13,1	;volatile
  5032                           
  5033                           ;main.c: 114:     TRISC0 = 0;
  5034  05B1  0021               	movlb	1	; select bank1
  5035  05B2  100E               	bcf	14,0	;volatile
  5036                           
  5037                           ;main.c: 115:     TRISC1 = 0;
  5038  05B3  108E               	bcf	14,1	;volatile
  5039                           
  5040                           ;main.c: 116:     TRISB0 = 0;
  5041  05B4  100D               	bcf	13,0	;volatile
  5042                           
  5043                           ;main.c: 117:     TRISC6 = 0;
  5044  05B5  130E               	bcf	14,6	;volatile
  5045                           
  5046                           ;main.c: 119:     PORTCbits.RC6 = 1;
  5047  05B6  0020               	movlb	0	; select bank0
  5048  05B7  170E               	bsf	14,6	;volatile
  5049                           
  5050                           ;main.c: 122:     SPI_Init();
  5051  05B8  3185  2572  3185   	fcall	_SPI_Init
  5052                           
  5053                           ;main.c: 123:     SD_Init();
  5054  05BB  3183  23C7  3185   	fcall	_SD_Init
  5055                           
  5056                           ;main.c: 124:     DAC_Init();
  5057  05BE  3185  25FB         	fcall	_DAC_Init
  5058  05C0  0008               	return
  5059  05C1                     __end_of_init:	
  5060                           
  5061                           	psect	text9
  5062  0572                     __ptext9:	
  5063 ;; *************** function _SPI_Init *****************
  5064 ;; Defined at:
  5065 ;;		line 7 in file "SPI.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;		None
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;		None
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  1    wreg      void 
  5072 ;; Registers used:
  5073 ;;		wreg, status,2
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5083 ;;Total ram usage:        0 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; Hardware stack levels required when called:    1
  5086 ;; This function calls:
  5087 ;;		Nothing
  5088 ;; This function is called by:
  5089 ;;		_init
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           
  5094                           ;psect for function _SPI_Init
  5095  0572                     _SPI_Init:	
  5096                           
  5097                           ;SPI.c: 9:     TRISC2 = 0;
  5098                           
  5099                           ;incstack = 0
  5100                           ; Regs used in _SPI_Init: [wreg+status,2]
  5101  0572  0021               	movlb	1	; select bank1
  5102  0573  110E               	bcf	14,2	;volatile
  5103                           
  5104                           ;SPI.c: 10:     RC2PPS = 0x21;
  5105  0574  3021               	movlw	33
  5106  0575  003D               	movlb	29	; select bank29
  5107  0576  00A2               	movwf	34	;volatile
  5108                           
  5109                           ;SPI.c: 11:     SSPCLKPPS = 0x12;
  5110  0577  3012               	movlw	18
  5111  0578  003C               	movlb	28	; select bank28
  5112  0579  00BA               	movwf	58	;volatile
  5113                           
  5114                           ;SPI.c: 14:     TRISC3 = 1;
  5115  057A  0021               	movlb	1	; select bank1
  5116  057B  158E               	bsf	14,3	;volatile
  5117                           
  5118                           ;SPI.c: 15:     ANSC3 = 0;
  5119  057C  0023               	movlb	3	; select bank3
  5120  057D  118E               	bcf	14,3	;volatile
  5121                           
  5122                           ;SPI.c: 16:     SSPDATPPS = 0x13;
  5123  057E  3013               	movlw	19
  5124  057F  003C               	movlb	28	; select bank28
  5125  0580  00BB               	movwf	59	;volatile
  5126                           
  5127                           ;SPI.c: 19:     TRISC4 = 0;
  5128  0581  0021               	movlb	1	; select bank1
  5129  0582  120E               	bcf	14,4	;volatile
  5130                           
  5131                           ;SPI.c: 20:     RC4PPS = 0x23;
  5132  0583  3023               	movlw	35
  5133  0584  003D               	movlb	29	; select bank29
  5134  0585  00A4               	movwf	36	;volatile
  5135                           
  5136                           ;SPI.c: 23:     TRISC7 = 0;
  5137  0586  0021               	movlb	1	; select bank1
  5138  0587  138E               	bcf	14,7	;volatile
  5139                           
  5140                           ;SPI.c: 26:     SSP1STAT = 0x80;
  5141  0588  3080               	movlw	128
  5142  0589  0024               	movlb	4	; select bank4
  5143  058A  0094               	movwf	20	;volatile
  5144                           
  5145                           ;SPI.c: 29:     SSP1CON1 = 0x30;
  5146  058B  3030               	movlw	48
  5147  058C  0095               	movwf	21	;volatile
  5148                           
  5149                           ;SPI.c: 32:     SSP1ADD = 0x00;
  5150  058D  0192               	clrf	18	;volatile
  5151  058E  0008               	return
  5152  058F                     __end_of_SPI_Init:	
  5153                           
  5154                           	psect	text10
  5155  03C7                     __ptext10:	
  5156 ;; *************** function _SD_Init *****************
  5157 ;; Defined at:
  5158 ;;		line 11 in file "SD.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;		None
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;		None
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      void 
  5165 ;; Registers used:
  5166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5174 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5175 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5176 ;;Total ram usage:        1 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; Hardware stack levels required when called:    3
  5179 ;; This function calls:
  5180 ;;		_SD_Check40bitResponse
  5181 ;;		_SD_Check8bitResponse
  5182 ;;		_SD_Read40bitResponse
  5183 ;;		_SD_Read8bitResponse
  5184 ;;		_SD_SendCommand
  5185 ;;		_SPI_Write
  5186 ;; This function is called by:
  5187 ;;		_init
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191                           
  5192                           ;psect for function _SD_Init
  5193  03C7                     _SD_Init:	
  5194                           
  5195                           ;SD.c: 14:     { PORTCbits.RC7 = 1; SSP1CON1bits.WCOL = 0; };
  5196                           
  5197                           ;incstack = 0
  5198                           ; Regs used in _SD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5199  03C7  0020               	movlb	0	; select bank0
  5200  03C8  178E               	bsf	14,7	;volatile
  5201  03C9  0024               	movlb	4	; select bank4
  5202  03CA  1395               	bcf	21,7	;volatile
  5203                           
  5204                           ;SD.c: 16:     SPI_Write(0xFF);
  5205  03CB  30FF               	movlw	255
  5206  03CC  3185  25ED  3183   	fcall	_SPI_Write
  5207                           
  5208                           ;SD.c: 17:     SPI_Write(0xFF);
  5209  03CF  30FF               	movlw	255
  5210  03D0  3185  25ED  3183   	fcall	_SPI_Write
  5211                           
  5212                           ;SD.c: 18:     SPI_Write(0xFF);
  5213  03D3  30FF               	movlw	255
  5214  03D4  3185  25ED  3183   	fcall	_SPI_Write
  5215                           
  5216                           ;SD.c: 19:     SPI_Write(0xFF);
  5217  03D7  30FF               	movlw	255
  5218  03D8  3185  25ED  3183   	fcall	_SPI_Write
  5219                           
  5220                           ;SD.c: 20:     SPI_Write(0xFF);
  5221  03DB  30FF               	movlw	255
  5222  03DC  3185  25ED  3183   	fcall	_SPI_Write
  5223                           
  5224                           ;SD.c: 21:     SPI_Write(0xFF);
  5225  03DF  30FF               	movlw	255
  5226  03E0  3185  25ED  3183   	fcall	_SPI_Write
  5227                           
  5228                           ;SD.c: 22:     SPI_Write(0xFF);
  5229  03E3  30FF               	movlw	255
  5230  03E4  3185  25ED  3183   	fcall	_SPI_Write
  5231                           
  5232                           ;SD.c: 23:     SPI_Write(0xFF);
  5233  03E7  30FF               	movlw	255
  5234  03E8  3185  25ED  3183   	fcall	_SPI_Write
  5235                           
  5236                           ;SD.c: 24:     SPI_Write(0xFF);
  5237  03EB  30FF               	movlw	255
  5238  03EC  3185  25ED  3183   	fcall	_SPI_Write
  5239                           
  5240                           ;SD.c: 25:     SPI_Write(0xFF);
  5241  03EF  30FF               	movlw	255
  5242  03F0  3185  25ED  3183   	fcall	_SPI_Write
  5243                           
  5244                           ;SD.c: 27:     { PORTCbits.RC7 = 0; SSP1CON1bits.WCOL = 0; };
  5245  03F3  0020               	movlb	0	; select bank0
  5246  03F4  138E               	bcf	14,7	;volatile
  5247  03F5  0024               	movlb	4	; select bank4
  5248  03F6  1395               	bcf	21,7	;volatile
  5249  03F7                     l2175:	
  5250                           
  5251                           ;SD.c: 34:         SD_SendCommand(0, 0x00, 0x00, 0x00, 0x00);
  5252  03F7  01F3               	clrf	SD_SendCommand@ARG3
  5253  03F8  01F4               	clrf	SD_SendCommand@ARG2
  5254  03F9  01F5               	clrf	SD_SendCommand@ARG1
  5255  03FA  01F6               	clrf	SD_SendCommand@ARG0
  5256  03FB  3000               	movlw	0
  5257  03FC  3183  2328  3183   	fcall	_SD_SendCommand
  5258                           
  5259                           ;SD.c: 35:         SD_Read8bitResponse();
  5260  03FF  3185  25C1  3183   	fcall	_SD_Read8bitResponse
  5261  0402  0000               	nop	;# 
  5262                           
  5263                           ;SD.c: 37:     } while (SD_Check8bitResponse(0x01) == 0);
  5264  0403  3001               	movlw	1
  5265  0404  3185  25D2  3183   	fcall	_SD_Check8bitResponse
  5266  0407  3A00               	xorlw	0
  5267  0408  1903               	skipnz
  5268  0409  2BF7               	goto	l2175
  5269  040A                     l2181:	
  5270                           
  5271                           ;SD.c: 44:         SD_SendCommand(8, 0x00, 0x00, 0x01, 0xAA);
  5272  040A  01F3               	clrf	SD_SendCommand@ARG3
  5273  040B  01F4               	clrf	SD_SendCommand@ARG2
  5274  040C  01F5               	clrf	SD_SendCommand@ARG1
  5275  040D  0AF5               	incf	SD_SendCommand@ARG1,f
  5276  040E  30AA               	movlw	170
  5277  040F  00F8               	movwf	??_SD_Init
  5278  0410  0878               	movf	??_SD_Init,w
  5279  0411  00F6               	movwf	SD_SendCommand@ARG0
  5280  0412  3008               	movlw	8
  5281  0413  3183  2328  3183   	fcall	_SD_SendCommand
  5282                           
  5283                           ;SD.c: 45:         SD_Read40bitResponse();
  5284  0416  3184  24FC  3183   	fcall	_SD_Read40bitResponse
  5285  0419  0000               	nop	;# 
  5286                           
  5287                           ;SD.c: 47:     } while (SD_Check40bitResponse(0x01, 0x00, 0x00, 0x01, 0xAA) == 0);
  5288  041A  01F2               	clrf	SD_Check40bitResponse@Byte3
  5289  041B  01F3               	clrf	SD_Check40bitResponse@Byte2
  5290  041C  01F4               	clrf	SD_Check40bitResponse@Byte1
  5291  041D  0AF4               	incf	SD_Check40bitResponse@Byte1,f
  5292  041E  30AA               	movlw	170
  5293  041F  00F8               	movwf	??_SD_Init
  5294  0420  0878               	movf	??_SD_Init,w
  5295  0421  00F5               	movwf	SD_Check40bitResponse@Byte0
  5296  0422  3001               	movlw	1
  5297  0423  3185  258F  3183   	fcall	_SD_Check40bitResponse
  5298  0426  3A00               	xorlw	0
  5299  0427  1903               	skipnz
  5300  0428  2C0A               	goto	l2181
  5301  0429                     l2187:	
  5302                           
  5303                           ;SD.c: 55:             SD_SendCommand(55, 0x00, 0x00, 0x00, 0x00);
  5304  0429  01F3               	clrf	SD_SendCommand@ARG3
  5305  042A  01F4               	clrf	SD_SendCommand@ARG2
  5306  042B  01F5               	clrf	SD_SendCommand@ARG1
  5307  042C  01F6               	clrf	SD_SendCommand@ARG0
  5308  042D  3037               	movlw	55
  5309  042E  3183  2328  3183   	fcall	_SD_SendCommand
  5310                           
  5311                           ;SD.c: 56:             SD_Read8bitResponse();
  5312  0431  3185  25C1  3183   	fcall	_SD_Read8bitResponse
  5313  0434  0000               	nop	;# 
  5314                           
  5315                           ;SD.c: 58:         } while (SD_Check8bitResponse(0x01) == 0);
  5316  0435  3001               	movlw	1
  5317  0436  3185  25D2  3183   	fcall	_SD_Check8bitResponse
  5318  0439  3A00               	xorlw	0
  5319  043A  1903               	skipnz
  5320  043B  2C29               	goto	l2187
  5321                           
  5322                           ;SD.c: 65:         SD_SendCommand(41, 0x40, 0x00, 0x00, 0x00);
  5323  043C  3040               	movlw	64
  5324  043D  00F8               	movwf	??_SD_Init
  5325  043E  0878               	movf	??_SD_Init,w
  5326  043F  00F3               	movwf	SD_SendCommand@ARG3
  5327  0440  01F4               	clrf	SD_SendCommand@ARG2
  5328  0441  01F5               	clrf	SD_SendCommand@ARG1
  5329  0442  01F6               	clrf	SD_SendCommand@ARG0
  5330  0443  3029               	movlw	41
  5331  0444  3183  2328  3183   	fcall	_SD_SendCommand
  5332                           
  5333                           ;SD.c: 66:         SD_Read8bitResponse();
  5334  0447  3185  25C1  3183   	fcall	_SD_Read8bitResponse
  5335  044A  0000               	nop	;# 
  5336                           
  5337                           ;SD.c: 68:     } while (SD_Check8bitResponse(0x00) == 0);
  5338  044B  3000               	movlw	0
  5339  044C  3185  25D2  3183   	fcall	_SD_Check8bitResponse
  5340  044F  3A00               	xorlw	0
  5341  0450  1D03               	btfss	3,2
  5342  0451  0008               	return
  5343  0452  2C29               	goto	l2187
  5344  0453                     __end_of_SD_Init:	
  5345                           
  5346                           	psect	text11
  5347  0328                     __ptext11:	
  5348 ;; *************** function _SD_SendCommand *****************
  5349 ;; Defined at:
  5350 ;;		line 77 in file "SD.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;  CMD_6bit        1    wreg     unsigned char 
  5353 ;;  ARG3            1    3[COMMON] unsigned char 
  5354 ;;  ARG2            1    4[COMMON] unsigned char 
  5355 ;;  ARG1            1    5[COMMON] unsigned char 
  5356 ;;  ARG0            1    6[COMMON] unsigned char 
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  CMD_6bit        1    0[BANK0 ] unsigned char 
  5359 ;;  Checksum        1    2[BANK0 ] unsigned char 
  5360 ;;  ByteToSend      1    1[BANK0 ] unsigned char 
  5361 ;; Return value:  Size  Location     Type
  5362 ;;                  1    wreg      void 
  5363 ;; Registers used:
  5364 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5370 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5371 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5373 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5374 ;;Total ram usage:        8 bytes
  5375 ;; Hardware stack levels used:    1
  5376 ;; Hardware stack levels required when called:    2
  5377 ;; This function calls:
  5378 ;;		_SPI_Write
  5379 ;; This function is called by:
  5380 ;;		_SD_Init
  5381 ;;		_SD_OpenStream
  5382 ;;		_SD_OpenBlock
  5383 ;;		_SD_CloseStream
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           
  5388                           ;psect for function _SD_SendCommand
  5389  0328                     _SD_SendCommand:	
  5390                           
  5391                           ;incstack = 0
  5392                           ; Regs used in _SD_SendCommand: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5393                           ;SD_SendCommand@CMD_6bit stored from wreg
  5394  0328  0020               	movlb	0	; select bank0
  5395  0329  00A0               	movwf	SD_SendCommand@CMD_6bit
  5396                           
  5397                           ;SD.c: 79:     char Checksum = 0x00;
  5398  032A  01A2               	clrf	SD_SendCommand@Checksum
  5399                           
  5400                           ;SD.c: 82:     ByteToSend = (CMD_6bit & 0x3F) | 0x40;
  5401  032B  0820               	movf	SD_SendCommand@CMD_6bit,w
  5402  032C  393F               	andlw	63
  5403  032D  3840               	iorlw	64
  5404  032E  00F7               	movwf	??_SD_SendCommand
  5405  032F  0877               	movf	??_SD_SendCommand,w
  5406  0330  00A1               	movwf	SD_SendCommand@ByteToSend
  5407                           
  5408                           ;SD.c: 83:     SPI_Write(ByteToSend);
  5409  0331  0821               	movf	SD_SendCommand@ByteToSend,w
  5410  0332  3185  25ED  3183   	fcall	_SPI_Write
  5411                           
  5412                           ;SD.c: 84:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5413  0335  0020               	movlb	0	; select bank0
  5414  0336  3522               	lslf	SD_SendCommand@Checksum,w
  5415  0337  00F7               	movwf	??_SD_SendCommand
  5416  0338  0877               	movf	??_SD_SendCommand,w
  5417  0339  00A2               	movwf	SD_SendCommand@Checksum
  5418  033A  0822               	movf	SD_SendCommand@Checksum,w
  5419  033B  0621               	xorwf	SD_SendCommand@ByteToSend,w
  5420  033C  00F7               	movwf	??_SD_SendCommand
  5421  033D  0877               	movf	??_SD_SendCommand,w
  5422  033E  00A2               	movwf	SD_SendCommand@Checksum
  5423  033F  0822               	movf	SD_SendCommand@Checksum,w
  5424  0340  3E7A               	addlw	low (_CRCTable| (0+32768))
  5425  0341  0084               	movwf	4
  5426  0342  3081               	movlw	high (_CRCTable| (0+32768))
  5427  0343  1803               	skipnc
  5428  0344  3E01               	addlw	1
  5429  0345  0085               	movwf	5
  5430  0346  0800               	movf	0,w	;code access
  5431  0347  00F7               	movwf	??_SD_SendCommand
  5432  0348  0877               	movf	??_SD_SendCommand,w
  5433  0349  00A2               	movwf	SD_SendCommand@Checksum
  5434                           
  5435                           ;SD.c: 87:     ByteToSend = ARG3;
  5436  034A  0873               	movf	SD_SendCommand@ARG3,w
  5437  034B  00F7               	movwf	??_SD_SendCommand
  5438  034C  0877               	movf	??_SD_SendCommand,w
  5439  034D  00A1               	movwf	SD_SendCommand@ByteToSend
  5440                           
  5441                           ;SD.c: 88:     SPI_Write(ByteToSend);
  5442  034E  0821               	movf	SD_SendCommand@ByteToSend,w
  5443  034F  3185  25ED  3183   	fcall	_SPI_Write
  5444                           
  5445                           ;SD.c: 89:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5446  0352  0020               	movlb	0	; select bank0
  5447  0353  3522               	lslf	SD_SendCommand@Checksum,w
  5448  0354  00F7               	movwf	??_SD_SendCommand
  5449  0355  0877               	movf	??_SD_SendCommand,w
  5450  0356  00A2               	movwf	SD_SendCommand@Checksum
  5451  0357  0822               	movf	SD_SendCommand@Checksum,w
  5452  0358  0621               	xorwf	SD_SendCommand@ByteToSend,w
  5453  0359  00F7               	movwf	??_SD_SendCommand
  5454  035A  0877               	movf	??_SD_SendCommand,w
  5455  035B  00A2               	movwf	SD_SendCommand@Checksum
  5456  035C  0822               	movf	SD_SendCommand@Checksum,w
  5457  035D  3E7A               	addlw	low (_CRCTable| (0+32768))
  5458  035E  0084               	movwf	4
  5459  035F  3081               	movlw	high (_CRCTable| (0+32768))
  5460  0360  1803               	skipnc
  5461  0361  3E01               	addlw	1
  5462  0362  0085               	movwf	5
  5463  0363  0800               	movf	0,w	;code access
  5464  0364  00F7               	movwf	??_SD_SendCommand
  5465  0365  0877               	movf	??_SD_SendCommand,w
  5466  0366  00A2               	movwf	SD_SendCommand@Checksum
  5467                           
  5468                           ;SD.c: 91:     ByteToSend = ARG2;
  5469  0367  0874               	movf	SD_SendCommand@ARG2,w
  5470  0368  00F7               	movwf	??_SD_SendCommand
  5471  0369  0877               	movf	??_SD_SendCommand,w
  5472  036A  00A1               	movwf	SD_SendCommand@ByteToSend
  5473                           
  5474                           ;SD.c: 92:     SPI_Write(ByteToSend);
  5475  036B  0821               	movf	SD_SendCommand@ByteToSend,w
  5476  036C  3185  25ED  3183   	fcall	_SPI_Write
  5477                           
  5478                           ;SD.c: 93:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5479  036F  0020               	movlb	0	; select bank0
  5480  0370  3522               	lslf	SD_SendCommand@Checksum,w
  5481  0371  00F7               	movwf	??_SD_SendCommand
  5482  0372  0877               	movf	??_SD_SendCommand,w
  5483  0373  00A2               	movwf	SD_SendCommand@Checksum
  5484  0374  0822               	movf	SD_SendCommand@Checksum,w
  5485  0375  0621               	xorwf	SD_SendCommand@ByteToSend,w
  5486  0376  00F7               	movwf	??_SD_SendCommand
  5487  0377  0877               	movf	??_SD_SendCommand,w
  5488  0378  00A2               	movwf	SD_SendCommand@Checksum
  5489  0379  0822               	movf	SD_SendCommand@Checksum,w
  5490  037A  3E7A               	addlw	low (_CRCTable| (0+32768))
  5491  037B  0084               	movwf	4
  5492  037C  3081               	movlw	high (_CRCTable| (0+32768))
  5493  037D  1803               	skipnc
  5494  037E  3E01               	addlw	1
  5495  037F  0085               	movwf	5
  5496  0380  0800               	movf	0,w	;code access
  5497  0381  00F7               	movwf	??_SD_SendCommand
  5498  0382  0877               	movf	??_SD_SendCommand,w
  5499  0383  00A2               	movwf	SD_SendCommand@Checksum
  5500                           
  5501                           ;SD.c: 95:     ByteToSend = ARG1;
  5502  0384  0875               	movf	SD_SendCommand@ARG1,w
  5503  0385  00F7               	movwf	??_SD_SendCommand
  5504  0386  0877               	movf	??_SD_SendCommand,w
  5505  0387  00A1               	movwf	SD_SendCommand@ByteToSend
  5506                           
  5507                           ;SD.c: 96:     SPI_Write(ByteToSend);
  5508  0388  0821               	movf	SD_SendCommand@ByteToSend,w
  5509  0389  3185  25ED  3183   	fcall	_SPI_Write
  5510                           
  5511                           ;SD.c: 97:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5512  038C  0020               	movlb	0	; select bank0
  5513  038D  3522               	lslf	SD_SendCommand@Checksum,w
  5514  038E  00F7               	movwf	??_SD_SendCommand
  5515  038F  0877               	movf	??_SD_SendCommand,w
  5516  0390  00A2               	movwf	SD_SendCommand@Checksum
  5517  0391  0822               	movf	SD_SendCommand@Checksum,w
  5518  0392  0621               	xorwf	SD_SendCommand@ByteToSend,w
  5519  0393  00F7               	movwf	??_SD_SendCommand
  5520  0394  0877               	movf	??_SD_SendCommand,w
  5521  0395  00A2               	movwf	SD_SendCommand@Checksum
  5522  0396  0822               	movf	SD_SendCommand@Checksum,w
  5523  0397  3E7A               	addlw	low (_CRCTable| (0+32768))
  5524  0398  0084               	movwf	4
  5525  0399  3081               	movlw	high (_CRCTable| (0+32768))
  5526  039A  1803               	skipnc
  5527  039B  3E01               	addlw	1
  5528  039C  0085               	movwf	5
  5529  039D  0800               	movf	0,w	;code access
  5530  039E  00F7               	movwf	??_SD_SendCommand
  5531  039F  0877               	movf	??_SD_SendCommand,w
  5532  03A0  00A2               	movwf	SD_SendCommand@Checksum
  5533                           
  5534                           ;SD.c: 99:     ByteToSend = ARG0;
  5535  03A1  0876               	movf	SD_SendCommand@ARG0,w
  5536  03A2  00F7               	movwf	??_SD_SendCommand
  5537  03A3  0877               	movf	??_SD_SendCommand,w
  5538  03A4  00A1               	movwf	SD_SendCommand@ByteToSend
  5539                           
  5540                           ;SD.c: 100:     SPI_Write(ByteToSend);
  5541  03A5  0821               	movf	SD_SendCommand@ByteToSend,w
  5542  03A6  3185  25ED  3183   	fcall	_SPI_Write
  5543                           
  5544                           ;SD.c: 101:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum =
      +                           CRCTable[Checksum]; };
  5545  03A9  0020               	movlb	0	; select bank0
  5546  03AA  3522               	lslf	SD_SendCommand@Checksum,w
  5547  03AB  00F7               	movwf	??_SD_SendCommand
  5548  03AC  0877               	movf	??_SD_SendCommand,w
  5549  03AD  00A2               	movwf	SD_SendCommand@Checksum
  5550  03AE  0822               	movf	SD_SendCommand@Checksum,w
  5551  03AF  0621               	xorwf	SD_SendCommand@ByteToSend,w
  5552  03B0  00F7               	movwf	??_SD_SendCommand
  5553  03B1  0877               	movf	??_SD_SendCommand,w
  5554  03B2  00A2               	movwf	SD_SendCommand@Checksum
  5555  03B3  0822               	movf	SD_SendCommand@Checksum,w
  5556  03B4  3E7A               	addlw	low (_CRCTable| (0+32768))
  5557  03B5  0084               	movwf	4
  5558  03B6  3081               	movlw	high (_CRCTable| (0+32768))
  5559  03B7  1803               	skipnc
  5560  03B8  3E01               	addlw	1
  5561  03B9  0085               	movwf	5
  5562  03BA  0800               	movf	0,w	;code access
  5563  03BB  00F7               	movwf	??_SD_SendCommand
  5564  03BC  0877               	movf	??_SD_SendCommand,w
  5565  03BD  00A2               	movwf	SD_SendCommand@Checksum
  5566                           
  5567                           ;SD.c: 104:     ByteToSend = (Checksum << 1) | 0x01;
  5568  03BE  1403               	setc
  5569  03BF  0D22               	rlf	SD_SendCommand@Checksum,w
  5570  03C0  00F7               	movwf	??_SD_SendCommand
  5571  03C1  0877               	movf	??_SD_SendCommand,w
  5572  03C2  00A1               	movwf	SD_SendCommand@ByteToSend
  5573                           
  5574                           ;SD.c: 105:     SPI_Write(ByteToSend);
  5575  03C3  0821               	movf	SD_SendCommand@ByteToSend,w
  5576  03C4  3185  25ED         	fcall	_SPI_Write
  5577  03C6  0008               	return
  5578  03C7                     __end_of_SD_SendCommand:	
  5579                           
  5580                           	psect	text12
  5581  05ED                     __ptext12:	
  5582 ;; *************** function _SPI_Write *****************
  5583 ;; Defined at:
  5584 ;;		line 38 in file "SPI.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;  Data_8bit       1    wreg     unsigned char 
  5587 ;; Auto vars:     Size  Location     Type
  5588 ;;  Data_8bit       1    2[COMMON] unsigned char 
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  1    wreg      void 
  5591 ;; Registers used:
  5592 ;;		wreg
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5599 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5601 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5602 ;;Total ram usage:        1 bytes
  5603 ;; Hardware stack levels used:    1
  5604 ;; Hardware stack levels required when called:    1
  5605 ;; This function calls:
  5606 ;;		Nothing
  5607 ;; This function is called by:
  5608 ;;		_SD_Init
  5609 ;;		_SD_SendCommand
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           
  5614                           ;psect for function _SPI_Write
  5615  05ED                     _SPI_Write:	
  5616                           
  5617                           ;incstack = 0
  5618                           ; Regs used in _SPI_Write: [wreg]
  5619                           ;SPI_Write@Data_8bit stored from wreg
  5620  05ED  00F2               	movwf	SPI_Write@Data_8bit
  5621                           
  5622                           ;SPI.c: 39:     SSP1BUF = Data_8bit;
  5623  05EE  0872               	movf	SPI_Write@Data_8bit,w
  5624  05EF  0024               	movlb	4	; select bank4
  5625  05F0  0091               	movwf	17	;volatile
  5626  05F1                     l112:	
  5627                           ;SPI.c: 40:     while(SSP1STATbits.BF == 0);
  5628                           
  5629  05F1  1814               	btfsc	20,0	;volatile
  5630  05F2  0008               	return
  5631  05F3  2DF1               	goto	l112
  5632  05F4                     __end_of_SPI_Write:	
  5633                           
  5634                           	psect	text13
  5635  05C1                     __ptext13:	
  5636 ;; *************** function _SD_Read8bitResponse *****************
  5637 ;; Defined at:
  5638 ;;		line 112 in file "SD.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;		None
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;  readMessage     1    3[COMMON] unsigned char 
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  1    wreg      void 
  5645 ;; Registers used:
  5646 ;;		wreg, status,2, status,0, pclath, cstack
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5653 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5654 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5655 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5656 ;;Total ram usage:        2 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:    2
  5659 ;; This function calls:
  5660 ;;		_SPI_Read
  5661 ;; This function is called by:
  5662 ;;		_SD_Init
  5663 ;;		_SD_OpenStream
  5664 ;;		_SD_OpenBlock
  5665 ;;		_SD_CloseStream
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           
  5670                           ;psect for function _SD_Read8bitResponse
  5671  05C1                     _SD_Read8bitResponse:	
  5672  05C1                     l1555:	
  5673                           ;incstack = 0
  5674                           ; Regs used in _SD_Read8bitResponse: [wreg+status,2+status,0+pclath+cstack]
  5675                           
  5676  05C1  3185  25F4  3185   	fcall	_SPI_Read
  5677  05C4  00F2               	movwf	??_SD_Read8bitResponse
  5678  05C5  0872               	movf	??_SD_Read8bitResponse,w
  5679  05C6  00F3               	movwf	SD_Read8bitResponse@readMessage
  5680  05C7  0A73               	incf	SD_Read8bitResponse@readMessage,w
  5681  05C8  1903               	btfsc	3,2
  5682  05C9  2DC1               	goto	l1555
  5683                           
  5684                           ;SD.c: 121:     GLBL_Resp8 = readMessage;
  5685  05CA  0873               	movf	SD_Read8bitResponse@readMessage,w
  5686  05CB  00F2               	movwf	??_SD_Read8bitResponse
  5687  05CC  0872               	movf	??_SD_Read8bitResponse,w
  5688  05CD  0020               	movlb	0	; select bank0
  5689  05CE  00EE               	movwf	_GLBL_Resp8
  5690                           
  5691                           ;SD.c: 124:     SPI_Read();
  5692  05CF  3185  25F4         	fcall	_SPI_Read
  5693  05D1  0008               	return
  5694  05D2                     __end_of_SD_Read8bitResponse:	
  5695                           
  5696                           	psect	text14
  5697  04FC                     __ptext14:	
  5698 ;; *************** function _SD_Read40bitResponse *****************
  5699 ;; Defined at:
  5700 ;;		line 141 in file "SD.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;		None
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;  readMessage     1    3[COMMON] unsigned char 
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  1    wreg      void 
  5707 ;; Registers used:
  5708 ;;		wreg, status,2, status,0, pclath, cstack
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5716 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5717 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5718 ;;Total ram usage:        2 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; Hardware stack levels required when called:    2
  5721 ;; This function calls:
  5722 ;;		_SPI_Read
  5723 ;; This function is called by:
  5724 ;;		_SD_Init
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           
  5729                           ;psect for function _SD_Read40bitResponse
  5730  04FC                     _SD_Read40bitResponse:	
  5731  04FC                     l1577:	
  5732                           ;incstack = 0
  5733                           ; Regs used in _SD_Read40bitResponse: [wreg+status,2+status,0+pclath+cstack]
  5734                           
  5735  04FC  3185  25F4  3184   	fcall	_SPI_Read
  5736  04FF  00F2               	movwf	??_SD_Read40bitResponse
  5737  0500  0872               	movf	??_SD_Read40bitResponse,w
  5738  0501  00F3               	movwf	SD_Read40bitResponse@readMessage
  5739  0502  0A73               	incf	SD_Read40bitResponse@readMessage,w
  5740  0503  1903               	btfsc	3,2
  5741  0504  2CFC               	goto	l1577
  5742                           
  5743                           ;SD.c: 150:     GLBL_Resp40[0] = readMessage;
  5744  0505  0873               	movf	SD_Read40bitResponse@readMessage,w
  5745  0506  00F2               	movwf	??_SD_Read40bitResponse
  5746  0507  0872               	movf	??_SD_Read40bitResponse,w
  5747  0508  0021               	movlb	1	; select bank1
  5748  0509  00AE               	movwf	_GLBL_Resp40^(0+128)
  5749                           
  5750                           ;SD.c: 151:     GLBL_Resp40[1] = SPI_Read();
  5751  050A  3185  25F4  3184   	fcall	_SPI_Read
  5752  050D  00F2               	movwf	??_SD_Read40bitResponse
  5753  050E  0872               	movf	??_SD_Read40bitResponse,w
  5754  050F  0021               	movlb	1	; select bank1
  5755  0510  00AF               	movwf	(_GLBL_Resp40^(0+128)+1)
  5756                           
  5757                           ;SD.c: 152:     GLBL_Resp40[2] = SPI_Read();
  5758  0511  3185  25F4  3184   	fcall	_SPI_Read
  5759  0514  00F2               	movwf	??_SD_Read40bitResponse
  5760  0515  0872               	movf	??_SD_Read40bitResponse,w
  5761  0516  0021               	movlb	1	; select bank1
  5762  0517  00B0               	movwf	(_GLBL_Resp40^(0+128)+2)
  5763                           
  5764                           ;SD.c: 153:     GLBL_Resp40[3] = SPI_Read();
  5765  0518  3185  25F4  3184   	fcall	_SPI_Read
  5766  051B  00F2               	movwf	??_SD_Read40bitResponse
  5767  051C  0872               	movf	??_SD_Read40bitResponse,w
  5768  051D  0021               	movlb	1	; select bank1
  5769  051E  00B1               	movwf	(_GLBL_Resp40^(0+128)+3)
  5770                           
  5771                           ;SD.c: 154:     GLBL_Resp40[4] = SPI_Read();
  5772  051F  3185  25F4  3184   	fcall	_SPI_Read
  5773  0522  00F2               	movwf	??_SD_Read40bitResponse
  5774  0523  0872               	movf	??_SD_Read40bitResponse,w
  5775  0524  0021               	movlb	1	; select bank1
  5776  0525  00B2               	movwf	(_GLBL_Resp40^(0+128)+4)
  5777                           
  5778                           ;SD.c: 157:     SPI_Read();
  5779  0526  3185  25F4         	fcall	_SPI_Read
  5780  0528  0008               	return
  5781  0529                     __end_of_SD_Read40bitResponse:	
  5782                           
  5783                           	psect	text15
  5784  05F4                     __ptext15:	
  5785 ;; *************** function _SPI_Read *****************
  5786 ;; Defined at:
  5787 ;;		line 48 in file "SPI.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;		None
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;		None
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  1    wreg      unsigned char 
  5794 ;; Registers used:
  5795 ;;		wreg
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5805 ;;Total ram usage:        0 bytes
  5806 ;; Hardware stack levels used:    1
  5807 ;; Hardware stack levels required when called:    1
  5808 ;; This function calls:
  5809 ;;		Nothing
  5810 ;; This function is called by:
  5811 ;;		_SD_Read8bitResponse
  5812 ;;		_SD_Read40bitResponse
  5813 ;;		_SD_CloseBlock
  5814 ;;		_readBytes
  5815 ;;		_openFile
  5816 ;;		_main
  5817 ;;		_SD_CloseStream
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821                           
  5822                           ;psect for function _SPI_Read
  5823  05F4                     _SPI_Read:	
  5824                           
  5825                           ;SPI.c: 49:     SSP1BUF = 0xFF;
  5826                           
  5827                           ;incstack = 0
  5828                           ; Regs used in _SPI_Read: [wreg]
  5829  05F4  30FF               	movlw	255
  5830  05F5  0024               	movlb	4	; select bank4
  5831  05F6  0091               	movwf	17	;volatile
  5832  05F7                     l118:	
  5833                           ;SPI.c: 50:     while(SSP1STATbits.BF == 0);
  5834                           
  5835  05F7  1C14               	btfss	20,0	;volatile
  5836  05F8  2DF7               	goto	l118
  5837                           
  5838                           ;SPI.c: 51:     return SSP1BUF;
  5839  05F9  0811               	movf	17,w	;volatile
  5840  05FA  0008               	return
  5841  05FB                     __end_of_SPI_Read:	
  5842                           
  5843                           	psect	text16
  5844  05D2                     __ptext16:	
  5845 ;; *************** function _SD_Check8bitResponse *****************
  5846 ;; Defined at:
  5847 ;;		line 132 in file "SD.c"
  5848 ;; Parameters:    Size  Location     Type
  5849 ;;  Byte            1    wreg     unsigned char 
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;  Byte            1    2[COMMON] unsigned char 
  5852 ;;  match           1    3[COMMON] _Bool 
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  1    wreg      _Bool 
  5855 ;; Registers used:
  5856 ;;		wreg, status,2
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5863 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5865 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5866 ;;Total ram usage:        2 bytes
  5867 ;; Hardware stack levels used:    1
  5868 ;; Hardware stack levels required when called:    1
  5869 ;; This function calls:
  5870 ;;		Nothing
  5871 ;; This function is called by:
  5872 ;;		_SD_Init
  5873 ;;		_SD_OpenStream
  5874 ;;		_SD_OpenBlock
  5875 ;;		_SD_CloseStream
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879                           
  5880                           ;psect for function _SD_Check8bitResponse
  5881  05D2                     _SD_Check8bitResponse:	
  5882                           
  5883                           ;incstack = 0
  5884                           ; Regs used in _SD_Check8bitResponse: [wreg+status,2]
  5885                           ;SD_Check8bitResponse@Byte stored from wreg
  5886  05D2  00F2               	movwf	SD_Check8bitResponse@Byte
  5887                           
  5888                           ;SD.c: 133:     _Bool match = 1;
  5889  05D3  01F3               	clrf	SD_Check8bitResponse@match
  5890  05D4  0AF3               	incf	SD_Check8bitResponse@match,f
  5891                           
  5892                           ;SD.c: 134:     if (Byte != GLBL_Resp8) match = 0;
  5893  05D5  0872               	movf	SD_Check8bitResponse@Byte,w
  5894  05D6  0020               	movlb	0	; select bank0
  5895  05D7  066E               	xorwf	_GLBL_Resp8,w
  5896  05D8  1D03               	btfss	3,2
  5897  05D9  01F3               	clrf	SD_Check8bitResponse@match
  5898                           
  5899                           ;SD.c: 135:     return match;
  5900  05DA  0873               	movf	SD_Check8bitResponse@match,w
  5901  05DB  0008               	return
  5902  05DC                     __end_of_SD_Check8bitResponse:	
  5903                           
  5904                           	psect	text17
  5905  058F                     __ptext17:	
  5906 ;; *************** function _SD_Check40bitResponse *****************
  5907 ;; Defined at:
  5908 ;;		line 166 in file "SD.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  Byte4           1    wreg     unsigned char 
  5911 ;;  Byte3           1    2[COMMON] unsigned char 
  5912 ;;  Byte2           1    3[COMMON] unsigned char 
  5913 ;;  Byte1           1    4[COMMON] unsigned char 
  5914 ;;  Byte0           1    5[COMMON] unsigned char 
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;  Byte4           1    6[COMMON] unsigned char 
  5917 ;;  match           1    7[COMMON] _Bool 
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  1    wreg      _Bool 
  5920 ;; Registers used:
  5921 ;;		wreg, status,2
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5927 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5928 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5930 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5931 ;;Total ram usage:        6 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; Hardware stack levels required when called:    1
  5934 ;; This function calls:
  5935 ;;		Nothing
  5936 ;; This function is called by:
  5937 ;;		_SD_Init
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           
  5942                           ;psect for function _SD_Check40bitResponse
  5943  058F                     _SD_Check40bitResponse:	
  5944                           
  5945                           ;incstack = 0
  5946                           ; Regs used in _SD_Check40bitResponse: [wreg+status,2]
  5947                           ;SD_Check40bitResponse@Byte4 stored from wreg
  5948  058F  00F6               	movwf	SD_Check40bitResponse@Byte4
  5949                           
  5950                           ;SD.c: 167:     _Bool match = 1;
  5951  0590  01F7               	clrf	SD_Check40bitResponse@match
  5952  0591  0AF7               	incf	SD_Check40bitResponse@match,f
  5953                           
  5954                           ;SD.c: 168:     if (Byte4 != GLBL_Resp40[0]) match = 0;
  5955  0592  0021               	movlb	1	; select bank1
  5956  0593  082E               	movf	_GLBL_Resp40^(0+128),w
  5957  0594  0676               	xorwf	SD_Check40bitResponse@Byte4,w
  5958  0595  1D03               	btfss	3,2
  5959  0596  01F7               	clrf	SD_Check40bitResponse@match
  5960                           
  5961                           ;SD.c: 169:     if (Byte3 != GLBL_Resp40[1]) match = 0;
  5962  0597  082F               	movf	(_GLBL_Resp40^(0+128)+1),w
  5963  0598  0672               	xorwf	SD_Check40bitResponse@Byte3,w
  5964  0599  1D03               	btfss	3,2
  5965  059A  01F7               	clrf	SD_Check40bitResponse@match
  5966                           
  5967                           ;SD.c: 170:     if (Byte2 != GLBL_Resp40[2]) match = 0;
  5968  059B  0830               	movf	(_GLBL_Resp40^(0+128)+2),w
  5969  059C  0673               	xorwf	SD_Check40bitResponse@Byte2,w
  5970  059D  1D03               	btfss	3,2
  5971  059E  01F7               	clrf	SD_Check40bitResponse@match
  5972                           
  5973                           ;SD.c: 171:     if (Byte1 != GLBL_Resp40[3]) match = 0;
  5974  059F  0831               	movf	(_GLBL_Resp40^(0+128)+3),w
  5975  05A0  0674               	xorwf	SD_Check40bitResponse@Byte1,w
  5976  05A1  1D03               	btfss	3,2
  5977  05A2  01F7               	clrf	SD_Check40bitResponse@match
  5978                           
  5979                           ;SD.c: 172:     if (Byte0 != GLBL_Resp40[4]) match = 0;
  5980  05A3  0832               	movf	(_GLBL_Resp40^(0+128)+4),w
  5981  05A4  0675               	xorwf	SD_Check40bitResponse@Byte0,w
  5982  05A5  1D03               	btfss	3,2
  5983  05A6  01F7               	clrf	SD_Check40bitResponse@match
  5984                           
  5985                           ;SD.c: 173:     return match;
  5986  05A7  0877               	movf	SD_Check40bitResponse@match,w
  5987  05A8  0008               	return
  5988  05A9                     __end_of_SD_Check40bitResponse:	
  5989                           
  5990                           	psect	text18
  5991  05FB                     __ptext18:	
  5992 ;; *************** function _DAC_Init *****************
  5993 ;; Defined at:
  5994 ;;		line 30 in file "DAC.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;		None
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;		None
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  1    wreg      void 
  6001 ;; Registers used:
  6002 ;;		wreg
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6012 ;;Total ram usage:        0 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; Hardware stack levels required when called:    1
  6015 ;; This function calls:
  6016 ;;		Nothing
  6017 ;; This function is called by:
  6018 ;;		_init
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022                           
  6023                           ;psect for function _DAC_Init
  6024  05FB                     _DAC_Init:	
  6025                           
  6026                           ;DAC.c: 31:     TRISA = 0xFB;
  6027                           
  6028                           ;incstack = 0
  6029                           ; Regs used in _DAC_Init: [wreg]
  6030  05FB  30FB               	movlw	251
  6031  05FC  0021               	movlb	1	; select bank1
  6032  05FD  008C               	movwf	12	;volatile
  6033                           
  6034                           ;DAC.c: 32:     DAC1CON0 = 0xE0;
  6035  05FE  30E0               	movlw	224
  6036  05FF  002B               	movlb	11	; select bank11
  6037  0600  008E               	movwf	14	;volatile
  6038  0601  0008               	return
  6039  0602                     __end_of_DAC_Init:	
  6040                           
  6041                           	psect	intentry
  6042  0004                     __pintentry:	
  6043 ;; *************** function _isr *****************
  6044 ;; Defined at:
  6045 ;;		line 127 in file "main.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;		None
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;  level           2    0[COMMON] short 
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  1    wreg      void 
  6052 ;; Registers used:
  6053 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6060 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6062 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6063 ;;Total ram usage:        2 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; This function calls:
  6066 ;;		Nothing
  6067 ;; This function is called by:
  6068 ;;		Interrupt level 1
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072  0004                     _isr:	
  6073                           
  6074                           ;incstack = 0
  6075  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6076                           
  6077                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  6078  0005  3180               	pagesel	$
  6079                           
  6080                           ;main.c: 128:     PIR1bits.TMR2IF = 0;
  6081  0006  0020               	movlb	0	; select bank0
  6082  0007  1091               	bcf	17,1	;volatile
  6083                           
  6084                           ;main.c: 130:     short level = lbuffer[buffer_read_index++];
  6085  0008  3563               	lslf	_buffer_read_index,w
  6086  0009  3E20               	addlw	(low (_lbuffer| (0+256)))& (0+255)
  6087  000A  0086               	movwf	6
  6088  000B  3001               	movlw	1	; select bank2/3
  6089  000C  0087               	movwf	7
  6090  000D  3F40               	moviw [0]fsr1
  6091  000E  00F0               	movwf	isr@level
  6092  000F  3F41               	moviw [1]fsr1
  6093  0010  00F1               	movwf	isr@level+1
  6094  0011  3001               	movlw	1
  6095  0012  07E3               	addwf	_buffer_read_index,f
  6096  0013  3000               	movlw	0
  6097  0014  3DE4               	addwfc	_buffer_read_index+1,f
  6098                           
  6099                           ;main.c: 131:     DAC1REFH = (level & 0xff00) >> 8;
  6100  0015  0871               	movf	isr@level+1,w
  6101  0016  002B               	movlb	11	; select bank11
  6102  0017  0090               	movwf	16	;volatile
  6103                           
  6104                           ;main.c: 132:     DAC1REFL = (level & 0x00C0) << 8;
  6105  0018  018F               	clrf	15	;volatile
  6106                           
  6107                           ;main.c: 133:     DAC1LD = 1;
  6108  0019  140D               	bsf	13,0	;volatile
  6109                           
  6110                           ;main.c: 134:     if (buffer_read_index >= 32) buffer_read_index = 0;
  6111  001A  3000               	movlw	0
  6112  001B  0020               	movlb	0	; select bank0
  6113  001C  0264               	subwf	_buffer_read_index+1,w
  6114  001D  3020               	movlw	32
  6115  001E  1903               	skipnz
  6116  001F  0263               	subwf	_buffer_read_index,w
  6117  0020  1C03               	skipc
  6118  0021  2824               	goto	i1l270
  6119  0022  01E3               	clrf	_buffer_read_index
  6120  0023  01E4               	clrf	_buffer_read_index+1
  6121  0024                     i1l270:	
  6122  0024  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6123  0025  0009               	retfie
  6124  0026                     __end_of_isr:	
  6125  007E                     btemp	set	126	;btemp
  6126  007E                     int$flags	set	126
  6127  007E                     wtemp0	set	126


Data Sizes:
    Strings     20
    Constant    256
    Data        11
    BSS         152
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     65      79
    BANK1            80      4      23
    BANK2            80      0      64
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    readBytes@dest	PTR unsigned char  size(1) Largest target is 28
		 -> openFile@data(BANK0[8]), openFile@fmt(BANK0[28]), openFile@riff(BANK0[8]), 

    fourCCeq@b	PTR unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), STR_6(CODE[5]), STR_4(CODE[5]), STR_2(CODE[5]), 

    fourCCeq@a	PTR unsigned char  size(1) Largest target is 28
		 -> openFile@data(BANK0[8]), fmt.fmtHeader(BANK0[8]), openFile@fmt(BANK0[28]), openFile@riff(BANK0[8]), 


Critical Paths under _main in COMMON

    _openFile->_fourCCeq
    _SD_OpenStream->_SD_SendCommand
    _init->_SD_Init
    _SD_Init->_SD_Check40bitResponse
    _SD_Init->_SD_SendCommand
    _SD_SendCommand->_SPI_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_openFile
    _openFile->_SD_OpenStream
    _SD_OpenStream->_SD_SendCommand
    _SD_Init->_SD_SendCommand

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9916
                                              0 BANK1      4     4      0
                           _SPI_Read
                              _error
                               _init
                           _openFile
                         _timer_Init
 ---------------------------------------------------------------------------------
 (1) _timer_Init                                           4     0      4      98
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _openFile                                            50    46      4    5573
                                             15 BANK0     50    46      4
                      _SD_OpenStream
                           _SPI_Read
                              _error
                           _fourCCeq
                          _readBytes
 ---------------------------------------------------------------------------------
 (2) _readBytes                                            7     5      2     417
                                              2 COMMON     7     5      2
                      _SD_CloseBlock
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SD_CloseBlock                                        0     0      0       0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (2) _fourCCeq                                             8     6      2     570
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _error                                                2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SD_OpenStream                                       12     8      4    3961
                                              3 BANK0     12     8      4
               _SD_Check8bitResponse
                _SD_Read8bitResponse
                     _SD_SendCommand
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    4223
                           _DAC_Init
                            _SD_Init
                           _SPI_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SD_Init                                              1     1      0    4223
                                              8 COMMON     1     1      0
              _SD_Check40bitResponse
               _SD_Check8bitResponse
               _SD_Read40bitResponse
                _SD_Read8bitResponse
                     _SD_SendCommand
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SD_SendCommand                                       8     4      4    3612
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (4) _SPI_Write                                            1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SD_Read8bitResponse                                  2     2      0      46
                                              2 COMMON     2     2      0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SD_Read40bitResponse                                 2     2      0      46
                                              2 COMMON     2     2      0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SPI_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SD_Check8bitResponse                                 2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _SD_Check40bitResponse                                6     2      4     442
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _DAC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Read
   _error
   _init
     _DAC_Init
     _SD_Init
       _SD_Check40bitResponse
       _SD_Check8bitResponse
       _SD_Read40bitResponse
         _SPI_Read
       _SD_Read8bitResponse
         _SPI_Read
       _SD_SendCommand
         _SPI_Write
       _SPI_Write
     _SPI_Init
   _openFile
     _SD_OpenStream
       _SD_Check8bitResponse
       _SD_Read8bitResponse
         _SPI_Read
       _SD_SendCommand
         _SPI_Write
     _SPI_Read
     _error
     _fourCCeq
     _readBytes
       _SD_CloseBlock
         _SPI_Read
       _SPI_Read
   _timer_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BIGRAM             3F0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITCOMMON            E      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
COMMON               E      A       C       3       85.7%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
STACK                0      0       0       4        0.0%
BANK0               50     41      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK0            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      4      17       8       28.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
ABS                  0      0      F2      13        0.0%
BITBANK4            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK5            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK6            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK7            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK8            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK9            50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9               50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK10           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITBANK11           50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
DATA                 0      0      F2      30        0.0%
BITBANK12           30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12              30      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK13           50      0       0      33        0.0%
BANK13              50      0       0      34        0.0%
BITBANK14           50      0       0      35        0.0%
BANK14              50      0       0      36        0.0%
BITBANK15           50      0       0      37        0.0%
BANK15              50      0       0      38        0.0%
BITBANK16           50      0       0      39        0.0%
BANK16              50      0       0      40        0.0%
BITBANK17           50      0       0      41        0.0%
BANK17              50      0       0      42        0.0%
BITBANK18           50      0       0      43        0.0%
BANK18              50      0       0      44        0.0%
BITBANK19           50      0       0      45        0.0%
BANK19              50      0       0      46        0.0%
BITBANK20           50      0       0      47        0.0%
BANK20              50      0       0      48        0.0%
BITBANK21           50      0       0      49        0.0%
BANK21              50      0       0      50        0.0%
BITBANK22           50      0       0      51        0.0%
BANK22              50      0       0      52        0.0%
BITBANK23           50      0       0      53        0.0%
BANK23              50      0       0      54        0.0%
BITBANK24           50      0       0      55        0.0%
BANK24              50      0       0      56        0.0%
BITBANK25           20      0       0      57        0.0%
BANK25              20      0       0      58        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Apr 05 05:29:21 2019

                            l112 05F1                              l118 05F7                              l138 04B8  
                            l261 05AC                              l281 0177                              l286 0130  
                            l279 00C5                              u525 04E2                              u535 04C6  
                            u905 00CE                              u895 00AA                              _isr 0004  
                            wreg 0009                   ?_SD_OpenStream 0023           ??_SD_Check8bitResponse 0072  
                ?_SD_SendCommand 0073             SD_OpenStream@address 0023                             l2301 009B  
                           l2223 02A1                             l2321 00D3                             l2243 02E7  
                           l2235 02CF                             l2219 0299                             l2181 040A  
                           l2229 02B8                             l2175 03F7                             l2247 02F1  
                           l2239 02DE                             l2327 00FF                             l1721 04F7  
                           l2257 0319                             l2521 049A                             l2345 015A  
                           l1555 05C1                             l2187 0429                             l1723 04BC  
                           l2523 049F                             l2515 0165                             l2347 015F  
                           l2525 04A4                             l2517 0489                             l2349 016D  
                           l2527 04A9                             l2519 04B3                             l1751 047C  
                           l1743 046C                             l1577 04FC                             l2529 04AE  
                           l1737 0464                             l1729 045A                             l1691 052B  
                           l1749 0474                             l1757 0484                             l1697 0544  
                           ?_isr 0070                             STR_1 0618                             STR_2 0618  
                           STR_3 0613                             STR_4 0613                             STR_5 027A  
                           STR_6 027A                             STR_7 061D                             STR_8 061D  
                           _T2PR 0494                             _main 006B                             _init 05A9  
                __end_of_SD_Init 0453                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                 __end_of_DAC_Init 0602  
                           start 0026    __size_of_SD_Read40bitResponse 002D                  ??_SD_CloseBlock 0072  
   __size_of_SD_Read8bitResponse 0011                 __end_of_CRCTable 027A                            ??_isr 0070  
                  __CFG_PLLEN$ON 0000                            ?_main 0070                            ?_init 0070  
                  __CFG_WDTE$OFF 0000                            _ANSB1 0C69                            _ANSC3 0C73  
                          _T2CON 0495                            i1l270 0024                            _TRISA 008C  
                          _error 05E5                            _sdata 0065                            _state 006C  
               __end_of_SPI_Init 058F                 __end_of_SPI_Read 05FB                            status 0003  
                          wtemp0 007E               __size_of_SPI_Write 0007                  __initialization 0028  
                   __end_of_main 017A                     __end_of_init 05C1               _buffer_write_index 007A  
                         ??_main 00B3                           ??_init 0079         SD_Check8bitResponse@Byte 0072  
                ??_SD_OpenStream 0027                           _DAC1LD 2C68                           ?_error 0070  
                      ??_SD_Init 0078                           _RC2PPS 0EA2                           _RC4PPS 0EA4  
                         _OSCCON 009B                           _TRISB0 0468                           _TRISB1 0469  
                         _TRISC0 0470                           _TRISC1 0471                           _TRISC2 0472  
                         _TRISC3 0473                           _TRISC4 0474                           _TRISC6 0476  
                         _TRISC7 0477                 __end_of_fourCCeq 054E         SD_SendCommand@ByteToSend 0021  
               __end_of_openFile 0328                __end_of_SPI_Write 05F4                           error@e 0073  
                   __pdataCOMMON 007A                        ?_DAC_Init 0070          __end_of__initialization 0067  
 __size_of_SD_Check40bitResponse 001A    __end_of_SD_Check40bitResponse 05A9                   __pcstackCOMMON 0070  
                   __pidataBANK0 0622                     __pidataBANK1 060E                    __end_of_error 05ED  
                      ?_SPI_Init 0070                        ?_SPI_Read 0070                 ??_SD_SendCommand 0077  
                     ??_DAC_Init 0072              _SD_Read8bitResponse 05C1                          ??_error 0072  
                     __pbssBANK0 0061                       __pbssBANK1 00A0                       __pbssBANK2 0120  
                     __pbssBANK3 01A0               __size_of_readBytes 0043                       __pmaintext 006B  
           ?_SD_Read8bitResponse 0070                       _blockIndex 0061                      openFile@fmt 0045  
                     __pintentry 0004                       ??_SPI_Init 0072                       ??_SPI_Read 0072  
   __end_of_SD_Read40bitResponse 0529                          _SSP1ADD 0212                          _SSP1BUF 0211  
                        _SD_Init 03C7    __size_of_SD_Check8bitResponse 000A                        ?_fourCCeq 0072  
                   readBytes@len 0072                        ?_openFile 002F            ??_SD_Read8bitResponse 0072  
          __end_of_SD_CloseBlock 05E5                          _address 00A0                          __ptext1 0453  
                        __ptext2 027F                          __ptext3 04B9                          __ptext4 05DC  
                        __ptext5 0529                          __ptext6 05E5                          __ptext7 054E  
                        __ptext8 05A9                          __ptext9 0572                   SD_OpenStream@a 002B  
              __end_of_readBytes 04FC                          _lbuffer 0120                     __size_of_isr 0022  
                        _rbuffer 01A0                          clrloop0 0609             end_of_initialization 0067  
                     ??_fourCCeq 0074       SD_Check40bitResponse@Byte0 0075       SD_Check40bitResponse@Byte1 0074  
     SD_Check40bitResponse@Byte2 0073       SD_Check40bitResponse@Byte3 0072       SD_Check40bitResponse@Byte4 0076  
                        init_ram 0602                          initloop 0603       SD_Check40bitResponse@match 0077  
                     ??_openFile 0033                       _timer_Init 0453                        _PORTCbits 000E  
                      _SSPDATPPS 0E3B                        _SSPCLKPPS 0E3A                 __CFG_FOSC$INTOSC 0000  
          __end_of_SD_OpenStream 0572                        _SPI_Write 05ED                __size_of_DAC_Init 0007  
SD_Read40bitResponse@readMessage 0073             _SD_Read40bitResponse 04FC                     _global_error 006A  
                  __pidataCOMMON 0626                __size_of_SPI_Init 001D                __size_of_SPI_Read 0007  
            start_initialization 0028               SPI_Write@Data_8bit 0072                      __end_of_isr 0026  
                     ?_SPI_Write 0070            ?_SD_Read40bitResponse 0070                    _samplePending 0069  
                     readBytes@i 0077            _SD_Check40bitResponse 058F                      __pdataBANK0 006B  
                    __pdataBANK1 00AE                      ?_timer_Init 0072                        ___latbits 0003  
                  __pcstackBANK0 0020                    __pcstackBANK1 00B3                         ?_SD_Init 0070  
              __size_of_fourCCeq 0025                __size_of_openFile 00A9     __end_of_SD_Check8bitResponse 05DC  
                   openFile@data 003D                     openFile@riff 0034                         _DAC1CON0 058E  
                       _DAC1REFH 0590                         _DAC1REFL 058F                        _isPlaying 006B  
                    _bitsPerSamp 00AC                      _GLBL_Resp40 00AE                         _DAC_Init 05FB  
                    ??_SPI_Write 0072                        _readBytes 04B9                   __size_of_error 0008  
                       _T2CLKCON 0497                         _CRCTable 017A          __size_of_SD_SendCommand 009F  
            __size_of_timer_Init 0066           ??_SD_Read40bitResponse 0072      __end_of_SD_Read8bitResponse 05D2  
                      clear_ram0 0608                         _PIE1bits 0091           SD_SendCommand@CMD_6bit 0020  
                       _PIR1bits 0011           ?_SD_Check40bitResponse 0072                         _SSP1CON1 0215  
                       _SSP1STAT 0214                         _SPI_Init 0572                         _SPI_Read 05F4  
                     ?_readBytes 0072           __size_of_SD_CloseBlock 0009                 __size_of_SD_Init 008C  
                      fourCCeq@a 0078                        fourCCeq@b 0072                        fourCCeq@i 0079  
                  readBytes@dest 0076           SD_SendCommand@Checksum 0022                      _readMessage 006D  
                       _channels 0067                        openFile@a 002F                         __ptext10 03C7  
                       __ptext11 0328                         __ptext12 05ED                         __ptext13 05C1  
                       __ptext14 04FC                         __ptext15 05F4                         __ptext16 05D2  
                       __ptext17 058F                         __ptext18 05FB                     _SSP1CON1bits 0215  
                       _filesize 00A4             _SD_Check8bitResponse 05D2                         _fourCCeq 0529  
                     _GLBL_Resp8 006E                    __size_of_main 010F                    __size_of_init 0018  
             SD_SendCommand@ARG0 0076               SD_SendCommand@ARG1 0075               SD_SendCommand@ARG2 0074  
             SD_SendCommand@ARG3 0073                         _sampRate 00A8                         _openFile 027F  
         __size_of_SD_OpenStream 0024                         int$flags 007E                    _SD_CloseBlock 05DC  
                   ??_timer_Init 0076                     _SSP1STATbits 0214                      _OSCSTATbits 009C  
               openFile@response 003C   SD_Read8bitResponse@readMessage 0073                       _INTCONbits 000B  
                       isr@level 0070                      ??_readBytes 0074            ?_SD_Check8bitResponse 0070  
                       intlevel1 0000                   _SD_SendCommand 0328        SD_Check8bitResponse@match 0073  
             __end_of_timer_Init 04B9                   timer_Init@rate 0072                   ?_SD_CloseBlock 0070  
              _buffer_read_index 0063                    __pstringtext1 017A                    __pstringtext2 0613  
                  __pstringtext3 0618                    __pstringtext4 061D                    __pstringtext5 0000  
                  _SD_OpenStream 054E           __end_of_SD_SendCommand 03C7          ??_SD_Check40bitResponse 0076  
