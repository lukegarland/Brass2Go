

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 02 15:38:36 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1778
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.05
    48                           ; Generated 20/12/2018 GMT
    49                           ; 
    50                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F1778 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  0111                     	;# 
   137  0112                     	;# 
   138  0113                     	;# 
   139  0114                     	;# 
   140  0115                     	;# 
   141  0116                     	;# 
   142  0117                     	;# 
   143  0118                     	;# 
   144  0119                     	;# 
   145  011A                     	;# 
   146  011B                     	;# 
   147  011C                     	;# 
   148  011D                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  018E                     	;# 
   152  0191                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0194                     	;# 
   158  0195                     	;# 
   159  0196                     	;# 
   160  0197                     	;# 
   161  0199                     	;# 
   162  0199                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019A                     	;# 
   166  019A                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019C                     	;# 
   175  019D                     	;# 
   176  019D                     	;# 
   177  019D                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019E                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  019F                     	;# 
   186  020C                     	;# 
   187  020D                     	;# 
   188  020E                     	;# 
   189  0210                     	;# 
   190  0211                     	;# 
   191  0211                     	;# 
   192  0212                     	;# 
   193  0212                     	;# 
   194  0213                     	;# 
   195  0213                     	;# 
   196  0214                     	;# 
   197  0214                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0216                     	;# 
   203  0216                     	;# 
   204  0217                     	;# 
   205  0217                     	;# 
   206  021B                     	;# 
   207  021C                     	;# 
   208  021D                     	;# 
   209  021E                     	;# 
   210  021F                     	;# 
   211  028C                     	;# 
   212  028D                     	;# 
   213  028E                     	;# 
   214  0291                     	;# 
   215  0291                     	;# 
   216  0292                     	;# 
   217  0293                     	;# 
   218  0294                     	;# 
   219  0295                     	;# 
   220  0295                     	;# 
   221  0296                     	;# 
   222  0297                     	;# 
   223  0298                     	;# 
   224  0299                     	;# 
   225  0299                     	;# 
   226  029A                     	;# 
   227  029B                     	;# 
   228  029C                     	;# 
   229  029E                     	;# 
   230  029F                     	;# 
   231  030C                     	;# 
   232  030D                     	;# 
   233  030E                     	;# 
   234  0315                     	;# 
   235  0316                     	;# 
   236  0317                     	;# 
   237  0318                     	;# 
   238  0319                     	;# 
   239  031B                     	;# 
   240  031C                     	;# 
   241  031D                     	;# 
   242  031E                     	;# 
   243  031F                     	;# 
   244  038C                     	;# 
   245  038D                     	;# 
   246  038E                     	;# 
   247  0390                     	;# 
   248  0391                     	;# 
   249  0392                     	;# 
   250  0393                     	;# 
   251  0394                     	;# 
   252  0395                     	;# 
   253  0396                     	;# 
   254  0397                     	;# 
   255  0398                     	;# 
   256  0399                     	;# 
   257  039D                     	;# 
   258  039E                     	;# 
   259  039F                     	;# 
   260  040D                     	;# 
   261  040F                     	;# 
   262  040F                     	;# 
   263  0410                     	;# 
   264  0411                     	;# 
   265  0412                     	;# 
   266  0413                     	;# 
   267  0413                     	;# 
   268  0414                     	;# 
   269  0414                     	;# 
   270  0415                     	;# 
   271  0416                     	;# 
   272  0417                     	;# 
   273  0418                     	;# 
   274  041A                     	;# 
   275  041A                     	;# 
   276  041B                     	;# 
   277  041B                     	;# 
   278  041C                     	;# 
   279  041D                     	;# 
   280  041E                     	;# 
   281  041F                     	;# 
   282  048E                     	;# 
   283  048E                     	;# 
   284  048F                     	;# 
   285  0490                     	;# 
   286  0491                     	;# 
   287  0492                     	;# 
   288  0493                     	;# 
   289  0493                     	;# 
   290  0494                     	;# 
   291  0494                     	;# 
   292  0495                     	;# 
   293  0496                     	;# 
   294  0497                     	;# 
   295  0498                     	;# 
   296  049A                     	;# 
   297  049A                     	;# 
   298  049B                     	;# 
   299  049B                     	;# 
   300  049C                     	;# 
   301  049D                     	;# 
   302  049E                     	;# 
   303  049F                     	;# 
   304  050F                     	;# 
   305  0510                     	;# 
   306  0511                     	;# 
   307  0512                     	;# 
   308  0513                     	;# 
   309  0514                     	;# 
   310  0515                     	;# 
   311  0516                     	;# 
   312  0517                     	;# 
   313  0518                     	;# 
   314  0519                     	;# 
   315  051A                     	;# 
   316  058D                     	;# 
   317  058E                     	;# 
   318  058F                     	;# 
   319  058F                     	;# 
   320  058F                     	;# 
   321  0590                     	;# 
   322  0590                     	;# 
   323  0591                     	;# 
   324  0592                     	;# 
   325  0592                     	;# 
   326  0592                     	;# 
   327  0593                     	;# 
   328  0593                     	;# 
   329  0594                     	;# 
   330  0595                     	;# 
   331  0595                     	;# 
   332  0596                     	;# 
   333  0597                     	;# 
   334  0597                     	;# 
   335  0598                     	;# 
   336  0599                     	;# 
   337  0599                     	;# 
   338  0599                     	;# 
   339  059A                     	;# 
   340  059A                     	;# 
   341  059E                     	;# 
   342  059F                     	;# 
   343  059F                     	;# 
   344  0614                     	;# 
   345  0614                     	;# 
   346  0615                     	;# 
   347  0616                     	;# 
   348  0617                     	;# 
   349  0617                     	;# 
   350  0618                     	;# 
   351  0619                     	;# 
   352  061A                     	;# 
   353  061A                     	;# 
   354  061B                     	;# 
   355  061C                     	;# 
   356  068D                     	;# 
   357  068E                     	;# 
   358  068F                     	;# 
   359  0690                     	;# 
   360  0691                     	;# 
   361  0692                     	;# 
   362  0693                     	;# 
   363  0694                     	;# 
   364  0695                     	;# 
   365  0696                     	;# 
   366  0697                     	;# 
   367  0698                     	;# 
   368  0699                     	;# 
   369  069A                     	;# 
   370  069B                     	;# 
   371  069C                     	;# 
   372  069D                     	;# 
   373  069E                     	;# 
   374  069F                     	;# 
   375  070D                     	;# 
   376  070E                     	;# 
   377  070F                     	;# 
   378  0710                     	;# 
   379  0711                     	;# 
   380  0712                     	;# 
   381  0713                     	;# 
   382  0714                     	;# 
   383  0715                     	;# 
   384  0716                     	;# 
   385  0717                     	;# 
   386  0718                     	;# 
   387  0719                     	;# 
   388  071A                     	;# 
   389  071B                     	;# 
   390  071C                     	;# 
   391  071D                     	;# 
   392  071E                     	;# 
   393  071F                     	;# 
   394  078E                     	;# 
   395  078F                     	;# 
   396  0790                     	;# 
   397  0791                     	;# 
   398  0792                     	;# 
   399  0793                     	;# 
   400  0794                     	;# 
   401  0795                     	;# 
   402  0796                     	;# 
   403  0797                     	;# 
   404  0798                     	;# 
   405  0799                     	;# 
   406  079A                     	;# 
   407  079B                     	;# 
   408  079C                     	;# 
   409  079D                     	;# 
   410  079E                     	;# 
   411  079F                     	;# 
   412  080D                     	;# 
   413  080E                     	;# 
   414  080F                     	;# 
   415  0810                     	;# 
   416  0811                     	;# 
   417  0812                     	;# 
   418  0813                     	;# 
   419  0814                     	;# 
   420  0815                     	;# 
   421  0816                     	;# 
   422  0817                     	;# 
   423  0818                     	;# 
   424  0819                     	;# 
   425  081A                     	;# 
   426  081B                     	;# 
   427  081C                     	;# 
   428  081D                     	;# 
   429  081E                     	;# 
   430  081F                     	;# 
   431  090C                     	;# 
   432  090D                     	;# 
   433  090E                     	;# 
   434  090F                     	;# 
   435  0910                     	;# 
   436  0911                     	;# 
   437  0912                     	;# 
   438  0913                     	;# 
   439  0914                     	;# 
   440  0915                     	;# 
   441  0916                     	;# 
   442  0917                     	;# 
   443  0D8E                     	;# 
   444  0D8F                     	;# 
   445  0D90                     	;# 
   446  0D91                     	;# 
   447  0D91                     	;# 
   448  0D92                     	;# 
   449  0D93                     	;# 
   450  0D93                     	;# 
   451  0D94                     	;# 
   452  0D95                     	;# 
   453  0D95                     	;# 
   454  0D96                     	;# 
   455  0D97                     	;# 
   456  0D97                     	;# 
   457  0D98                     	;# 
   458  0D99                     	;# 
   459  0D99                     	;# 
   460  0D9A                     	;# 
   461  0D9B                     	;# 
   462  0D9C                     	;# 
   463  0D9C                     	;# 
   464  0D9D                     	;# 
   465  0D9D                     	;# 
   466  0D9E                     	;# 
   467  0D9F                     	;# 
   468  0DA0                     	;# 
   469  0DA1                     	;# 
   470  0DA1                     	;# 
   471  0DA2                     	;# 
   472  0DA3                     	;# 
   473  0DA3                     	;# 
   474  0DA4                     	;# 
   475  0DA5                     	;# 
   476  0DA5                     	;# 
   477  0DA6                     	;# 
   478  0DA7                     	;# 
   479  0DA7                     	;# 
   480  0DA8                     	;# 
   481  0DA9                     	;# 
   482  0DA9                     	;# 
   483  0DAA                     	;# 
   484  0DAB                     	;# 
   485  0DAC                     	;# 
   486  0DAC                     	;# 
   487  0DAD                     	;# 
   488  0DAD                     	;# 
   489  0DAE                     	;# 
   490  0DAF                     	;# 
   491  0DB0                     	;# 
   492  0DB1                     	;# 
   493  0DB1                     	;# 
   494  0DB2                     	;# 
   495  0DB3                     	;# 
   496  0DB3                     	;# 
   497  0DB4                     	;# 
   498  0DB5                     	;# 
   499  0DB5                     	;# 
   500  0DB6                     	;# 
   501  0DB7                     	;# 
   502  0DB7                     	;# 
   503  0DB8                     	;# 
   504  0DB9                     	;# 
   505  0DB9                     	;# 
   506  0DBA                     	;# 
   507  0DBB                     	;# 
   508  0DBC                     	;# 
   509  0DBC                     	;# 
   510  0DBD                     	;# 
   511  0DBD                     	;# 
   512  0DBE                     	;# 
   513  0DBF                     	;# 
   514  0DC0                     	;# 
   515  0E0C                     	;# 
   516  0E0D                     	;# 
   517  0E0E                     	;# 
   518  0E0F                     	;# 
   519  0E10                     	;# 
   520  0E11                     	;# 
   521  0E12                     	;# 
   522  0E13                     	;# 
   523  0E14                     	;# 
   524  0E15                     	;# 
   525  0E15                     	;# 
   526  0E15                     	;# 
   527  0E16                     	;# 
   528  0E16                     	;# 
   529  0E16                     	;# 
   530  0E17                     	;# 
   531  0E17                     	;# 
   532  0E17                     	;# 
   533  0E18                     	;# 
   534  0E18                     	;# 
   535  0E18                     	;# 
   536  0E19                     	;# 
   537  0E1A                     	;# 
   538  0E1B                     	;# 
   539  0E1D                     	;# 
   540  0E1E                     	;# 
   541  0E1F                     	;# 
   542  0E21                     	;# 
   543  0E22                     	;# 
   544  0E23                     	;# 
   545  0E24                     	;# 
   546  0E25                     	;# 
   547  0E26                     	;# 
   548  0E27                     	;# 
   549  0E28                     	;# 
   550  0E29                     	;# 
   551  0E2D                     	;# 
   552  0E2E                     	;# 
   553  0E2F                     	;# 
   554  0E30                     	;# 
   555  0E31                     	;# 
   556  0E32                     	;# 
   557  0E35                     	;# 
   558  0E36                     	;# 
   559  0E37                     	;# 
   560  0E38                     	;# 
   561  0E39                     	;# 
   562  0E3A                     	;# 
   563  0E3B                     	;# 
   564  0E3C                     	;# 
   565  0E3D                     	;# 
   566  0E3E                     	;# 
   567  0E90                     	;# 
   568  0E91                     	;# 
   569  0E92                     	;# 
   570  0E93                     	;# 
   571  0E94                     	;# 
   572  0E95                     	;# 
   573  0E96                     	;# 
   574  0E97                     	;# 
   575  0E98                     	;# 
   576  0E99                     	;# 
   577  0E9A                     	;# 
   578  0E9B                     	;# 
   579  0E9C                     	;# 
   580  0E9D                     	;# 
   581  0E9E                     	;# 
   582  0E9F                     	;# 
   583  0EA0                     	;# 
   584  0EA1                     	;# 
   585  0EA2                     	;# 
   586  0EA3                     	;# 
   587  0EA4                     	;# 
   588  0EA5                     	;# 
   589  0EA6                     	;# 
   590  0EA7                     	;# 
   591  0F0F                     	;# 
   592  0F10                     	;# 
   593  0F11                     	;# 
   594  0F12                     	;# 
   595  0F13                     	;# 
   596  0F14                     	;# 
   597  0F15                     	;# 
   598  0F16                     	;# 
   599  0F17                     	;# 
   600  0F18                     	;# 
   601  0F19                     	;# 
   602  0F1A                     	;# 
   603  0F1B                     	;# 
   604  0F1C                     	;# 
   605  0F1D                     	;# 
   606  0F1E                     	;# 
   607  0F1F                     	;# 
   608  0F20                     	;# 
   609  0F21                     	;# 
   610  0F22                     	;# 
   611  0F23                     	;# 
   612  0F24                     	;# 
   613  0F25                     	;# 
   614  0F26                     	;# 
   615  0F27                     	;# 
   616  0F28                     	;# 
   617  0F29                     	;# 
   618  0F2A                     	;# 
   619  0F2B                     	;# 
   620  0F2C                     	;# 
   621  0F2D                     	;# 
   622  0F2E                     	;# 
   623  0F2F                     	;# 
   624  0F30                     	;# 
   625  0F31                     	;# 
   626  0F32                     	;# 
   627  0F33                     	;# 
   628  0F34                     	;# 
   629  0F35                     	;# 
   630  0F36                     	;# 
   631  0F37                     	;# 
   632  0FE4                     	;# 
   633  0FE5                     	;# 
   634  0FE6                     	;# 
   635  0FE7                     	;# 
   636  0FE8                     	;# 
   637  0FE9                     	;# 
   638  0FEA                     	;# 
   639  0FEB                     	;# 
   640  0FED                     	;# 
   641  0FEE                     	;# 
   642  0FEF                     	;# 
   643  0000                     	;# 
   644  0001                     	;# 
   645  0002                     	;# 
   646  0003                     	;# 
   647  0004                     	;# 
   648  0005                     	;# 
   649  0006                     	;# 
   650  0007                     	;# 
   651  0008                     	;# 
   652  0009                     	;# 
   653  000A                     	;# 
   654  000B                     	;# 
   655  000C                     	;# 
   656  000D                     	;# 
   657  000E                     	;# 
   658  0010                     	;# 
   659  0011                     	;# 
   660  0012                     	;# 
   661  0013                     	;# 
   662  0014                     	;# 
   663  0015                     	;# 
   664  0016                     	;# 
   665  0017                     	;# 
   666  0018                     	;# 
   667  0018                     	;# 
   668  0019                     	;# 
   669  001A                     	;# 
   670  001B                     	;# 
   671  001C                     	;# 
   672  001C                     	;# 
   673  001D                     	;# 
   674  001E                     	;# 
   675  001F                     	;# 
   676  008C                     	;# 
   677  008D                     	;# 
   678  008E                     	;# 
   679  0090                     	;# 
   680  0091                     	;# 
   681  0092                     	;# 
   682  0093                     	;# 
   683  0094                     	;# 
   684  0095                     	;# 
   685  0096                     	;# 
   686  0097                     	;# 
   687  0098                     	;# 
   688  0099                     	;# 
   689  009A                     	;# 
   690  009B                     	;# 
   691  009C                     	;# 
   692  009D                     	;# 
   693  009E                     	;# 
   694  009F                     	;# 
   695  010C                     	;# 
   696  010D                     	;# 
   697  010E                     	;# 
   698  0111                     	;# 
   699  0112                     	;# 
   700  0113                     	;# 
   701  0114                     	;# 
   702  0115                     	;# 
   703  0116                     	;# 
   704  0117                     	;# 
   705  0118                     	;# 
   706  0119                     	;# 
   707  011A                     	;# 
   708  011B                     	;# 
   709  011C                     	;# 
   710  011D                     	;# 
   711  018C                     	;# 
   712  018D                     	;# 
   713  018E                     	;# 
   714  0191                     	;# 
   715  0191                     	;# 
   716  0192                     	;# 
   717  0193                     	;# 
   718  0193                     	;# 
   719  0194                     	;# 
   720  0195                     	;# 
   721  0196                     	;# 
   722  0197                     	;# 
   723  0199                     	;# 
   724  0199                     	;# 
   725  0199                     	;# 
   726  019A                     	;# 
   727  019A                     	;# 
   728  019A                     	;# 
   729  019B                     	;# 
   730  019B                     	;# 
   731  019B                     	;# 
   732  019B                     	;# 
   733  019B                     	;# 
   734  019C                     	;# 
   735  019C                     	;# 
   736  019C                     	;# 
   737  019D                     	;# 
   738  019D                     	;# 
   739  019D                     	;# 
   740  019E                     	;# 
   741  019E                     	;# 
   742  019E                     	;# 
   743  019F                     	;# 
   744  019F                     	;# 
   745  019F                     	;# 
   746  019F                     	;# 
   747  019F                     	;# 
   748  020C                     	;# 
   749  020D                     	;# 
   750  020E                     	;# 
   751  0210                     	;# 
   752  0211                     	;# 
   753  0211                     	;# 
   754  0212                     	;# 
   755  0212                     	;# 
   756  0213                     	;# 
   757  0213                     	;# 
   758  0214                     	;# 
   759  0214                     	;# 
   760  0215                     	;# 
   761  0215                     	;# 
   762  0215                     	;# 
   763  0215                     	;# 
   764  0216                     	;# 
   765  0216                     	;# 
   766  0217                     	;# 
   767  0217                     	;# 
   768  021B                     	;# 
   769  021C                     	;# 
   770  021D                     	;# 
   771  021E                     	;# 
   772  021F                     	;# 
   773  028C                     	;# 
   774  028D                     	;# 
   775  028E                     	;# 
   776  0291                     	;# 
   777  0291                     	;# 
   778  0292                     	;# 
   779  0293                     	;# 
   780  0294                     	;# 
   781  0295                     	;# 
   782  0295                     	;# 
   783  0296                     	;# 
   784  0297                     	;# 
   785  0298                     	;# 
   786  0299                     	;# 
   787  0299                     	;# 
   788  029A                     	;# 
   789  029B                     	;# 
   790  029C                     	;# 
   791  029E                     	;# 
   792  029F                     	;# 
   793  030C                     	;# 
   794  030D                     	;# 
   795  030E                     	;# 
   796  0315                     	;# 
   797  0316                     	;# 
   798  0317                     	;# 
   799  0318                     	;# 
   800  0319                     	;# 
   801  031B                     	;# 
   802  031C                     	;# 
   803  031D                     	;# 
   804  031E                     	;# 
   805  031F                     	;# 
   806  038C                     	;# 
   807  038D                     	;# 
   808  038E                     	;# 
   809  0390                     	;# 
   810  0391                     	;# 
   811  0392                     	;# 
   812  0393                     	;# 
   813  0394                     	;# 
   814  0395                     	;# 
   815  0396                     	;# 
   816  0397                     	;# 
   817  0398                     	;# 
   818  0399                     	;# 
   819  039D                     	;# 
   820  039E                     	;# 
   821  039F                     	;# 
   822  040D                     	;# 
   823  040F                     	;# 
   824  040F                     	;# 
   825  0410                     	;# 
   826  0411                     	;# 
   827  0412                     	;# 
   828  0413                     	;# 
   829  0413                     	;# 
   830  0414                     	;# 
   831  0414                     	;# 
   832  0415                     	;# 
   833  0416                     	;# 
   834  0417                     	;# 
   835  0418                     	;# 
   836  041A                     	;# 
   837  041A                     	;# 
   838  041B                     	;# 
   839  041B                     	;# 
   840  041C                     	;# 
   841  041D                     	;# 
   842  041E                     	;# 
   843  041F                     	;# 
   844  048E                     	;# 
   845  048E                     	;# 
   846  048F                     	;# 
   847  0490                     	;# 
   848  0491                     	;# 
   849  0492                     	;# 
   850  0493                     	;# 
   851  0493                     	;# 
   852  0494                     	;# 
   853  0494                     	;# 
   854  0495                     	;# 
   855  0496                     	;# 
   856  0497                     	;# 
   857  0498                     	;# 
   858  049A                     	;# 
   859  049A                     	;# 
   860  049B                     	;# 
   861  049B                     	;# 
   862  049C                     	;# 
   863  049D                     	;# 
   864  049E                     	;# 
   865  049F                     	;# 
   866  050F                     	;# 
   867  0510                     	;# 
   868  0511                     	;# 
   869  0512                     	;# 
   870  0513                     	;# 
   871  0514                     	;# 
   872  0515                     	;# 
   873  0516                     	;# 
   874  0517                     	;# 
   875  0518                     	;# 
   876  0519                     	;# 
   877  051A                     	;# 
   878  058D                     	;# 
   879  058E                     	;# 
   880  058F                     	;# 
   881  058F                     	;# 
   882  058F                     	;# 
   883  0590                     	;# 
   884  0590                     	;# 
   885  0591                     	;# 
   886  0592                     	;# 
   887  0592                     	;# 
   888  0592                     	;# 
   889  0593                     	;# 
   890  0593                     	;# 
   891  0594                     	;# 
   892  0595                     	;# 
   893  0595                     	;# 
   894  0596                     	;# 
   895  0597                     	;# 
   896  0597                     	;# 
   897  0598                     	;# 
   898  0599                     	;# 
   899  0599                     	;# 
   900  0599                     	;# 
   901  059A                     	;# 
   902  059A                     	;# 
   903  059E                     	;# 
   904  059F                     	;# 
   905  059F                     	;# 
   906  0614                     	;# 
   907  0614                     	;# 
   908  0615                     	;# 
   909  0616                     	;# 
   910  0617                     	;# 
   911  0617                     	;# 
   912  0618                     	;# 
   913  0619                     	;# 
   914  061A                     	;# 
   915  061A                     	;# 
   916  061B                     	;# 
   917  061C                     	;# 
   918  068D                     	;# 
   919  068E                     	;# 
   920  068F                     	;# 
   921  0690                     	;# 
   922  0691                     	;# 
   923  0692                     	;# 
   924  0693                     	;# 
   925  0694                     	;# 
   926  0695                     	;# 
   927  0696                     	;# 
   928  0697                     	;# 
   929  0698                     	;# 
   930  0699                     	;# 
   931  069A                     	;# 
   932  069B                     	;# 
   933  069C                     	;# 
   934  069D                     	;# 
   935  069E                     	;# 
   936  069F                     	;# 
   937  070D                     	;# 
   938  070E                     	;# 
   939  070F                     	;# 
   940  0710                     	;# 
   941  0711                     	;# 
   942  0712                     	;# 
   943  0713                     	;# 
   944  0714                     	;# 
   945  0715                     	;# 
   946  0716                     	;# 
   947  0717                     	;# 
   948  0718                     	;# 
   949  0719                     	;# 
   950  071A                     	;# 
   951  071B                     	;# 
   952  071C                     	;# 
   953  071D                     	;# 
   954  071E                     	;# 
   955  071F                     	;# 
   956  078E                     	;# 
   957  078F                     	;# 
   958  0790                     	;# 
   959  0791                     	;# 
   960  0792                     	;# 
   961  0793                     	;# 
   962  0794                     	;# 
   963  0795                     	;# 
   964  0796                     	;# 
   965  0797                     	;# 
   966  0798                     	;# 
   967  0799                     	;# 
   968  079A                     	;# 
   969  079B                     	;# 
   970  079C                     	;# 
   971  079D                     	;# 
   972  079E                     	;# 
   973  079F                     	;# 
   974  080D                     	;# 
   975  080E                     	;# 
   976  080F                     	;# 
   977  0810                     	;# 
   978  0811                     	;# 
   979  0812                     	;# 
   980  0813                     	;# 
   981  0814                     	;# 
   982  0815                     	;# 
   983  0816                     	;# 
   984  0817                     	;# 
   985  0818                     	;# 
   986  0819                     	;# 
   987  081A                     	;# 
   988  081B                     	;# 
   989  081C                     	;# 
   990  081D                     	;# 
   991  081E                     	;# 
   992  081F                     	;# 
   993  090C                     	;# 
   994  090D                     	;# 
   995  090E                     	;# 
   996  090F                     	;# 
   997  0910                     	;# 
   998  0911                     	;# 
   999  0912                     	;# 
  1000  0913                     	;# 
  1001  0914                     	;# 
  1002  0915                     	;# 
  1003  0916                     	;# 
  1004  0917                     	;# 
  1005  0D8E                     	;# 
  1006  0D8F                     	;# 
  1007  0D90                     	;# 
  1008  0D91                     	;# 
  1009  0D91                     	;# 
  1010  0D92                     	;# 
  1011  0D93                     	;# 
  1012  0D93                     	;# 
  1013  0D94                     	;# 
  1014  0D95                     	;# 
  1015  0D95                     	;# 
  1016  0D96                     	;# 
  1017  0D97                     	;# 
  1018  0D97                     	;# 
  1019  0D98                     	;# 
  1020  0D99                     	;# 
  1021  0D99                     	;# 
  1022  0D9A                     	;# 
  1023  0D9B                     	;# 
  1024  0D9C                     	;# 
  1025  0D9C                     	;# 
  1026  0D9D                     	;# 
  1027  0D9D                     	;# 
  1028  0D9E                     	;# 
  1029  0D9F                     	;# 
  1030  0DA0                     	;# 
  1031  0DA1                     	;# 
  1032  0DA1                     	;# 
  1033  0DA2                     	;# 
  1034  0DA3                     	;# 
  1035  0DA3                     	;# 
  1036  0DA4                     	;# 
  1037  0DA5                     	;# 
  1038  0DA5                     	;# 
  1039  0DA6                     	;# 
  1040  0DA7                     	;# 
  1041  0DA7                     	;# 
  1042  0DA8                     	;# 
  1043  0DA9                     	;# 
  1044  0DA9                     	;# 
  1045  0DAA                     	;# 
  1046  0DAB                     	;# 
  1047  0DAC                     	;# 
  1048  0DAC                     	;# 
  1049  0DAD                     	;# 
  1050  0DAD                     	;# 
  1051  0DAE                     	;# 
  1052  0DAF                     	;# 
  1053  0DB0                     	;# 
  1054  0DB1                     	;# 
  1055  0DB1                     	;# 
  1056  0DB2                     	;# 
  1057  0DB3                     	;# 
  1058  0DB3                     	;# 
  1059  0DB4                     	;# 
  1060  0DB5                     	;# 
  1061  0DB5                     	;# 
  1062  0DB6                     	;# 
  1063  0DB7                     	;# 
  1064  0DB7                     	;# 
  1065  0DB8                     	;# 
  1066  0DB9                     	;# 
  1067  0DB9                     	;# 
  1068  0DBA                     	;# 
  1069  0DBB                     	;# 
  1070  0DBC                     	;# 
  1071  0DBC                     	;# 
  1072  0DBD                     	;# 
  1073  0DBD                     	;# 
  1074  0DBE                     	;# 
  1075  0DBF                     	;# 
  1076  0DC0                     	;# 
  1077  0E0C                     	;# 
  1078  0E0D                     	;# 
  1079  0E0E                     	;# 
  1080  0E0F                     	;# 
  1081  0E10                     	;# 
  1082  0E11                     	;# 
  1083  0E12                     	;# 
  1084  0E13                     	;# 
  1085  0E14                     	;# 
  1086  0E15                     	;# 
  1087  0E15                     	;# 
  1088  0E15                     	;# 
  1089  0E16                     	;# 
  1090  0E16                     	;# 
  1091  0E16                     	;# 
  1092  0E17                     	;# 
  1093  0E17                     	;# 
  1094  0E17                     	;# 
  1095  0E18                     	;# 
  1096  0E18                     	;# 
  1097  0E18                     	;# 
  1098  0E19                     	;# 
  1099  0E1A                     	;# 
  1100  0E1B                     	;# 
  1101  0E1D                     	;# 
  1102  0E1E                     	;# 
  1103  0E1F                     	;# 
  1104  0E21                     	;# 
  1105  0E22                     	;# 
  1106  0E23                     	;# 
  1107  0E24                     	;# 
  1108  0E25                     	;# 
  1109  0E26                     	;# 
  1110  0E27                     	;# 
  1111  0E28                     	;# 
  1112  0E29                     	;# 
  1113  0E2D                     	;# 
  1114  0E2E                     	;# 
  1115  0E2F                     	;# 
  1116  0E30                     	;# 
  1117  0E31                     	;# 
  1118  0E32                     	;# 
  1119  0E35                     	;# 
  1120  0E36                     	;# 
  1121  0E37                     	;# 
  1122  0E38                     	;# 
  1123  0E39                     	;# 
  1124  0E3A                     	;# 
  1125  0E3B                     	;# 
  1126  0E3C                     	;# 
  1127  0E3D                     	;# 
  1128  0E3E                     	;# 
  1129  0E90                     	;# 
  1130  0E91                     	;# 
  1131  0E92                     	;# 
  1132  0E93                     	;# 
  1133  0E94                     	;# 
  1134  0E95                     	;# 
  1135  0E96                     	;# 
  1136  0E97                     	;# 
  1137  0E98                     	;# 
  1138  0E99                     	;# 
  1139  0E9A                     	;# 
  1140  0E9B                     	;# 
  1141  0E9C                     	;# 
  1142  0E9D                     	;# 
  1143  0E9E                     	;# 
  1144  0E9F                     	;# 
  1145  0EA0                     	;# 
  1146  0EA1                     	;# 
  1147  0EA2                     	;# 
  1148  0EA3                     	;# 
  1149  0EA4                     	;# 
  1150  0EA5                     	;# 
  1151  0EA6                     	;# 
  1152  0EA7                     	;# 
  1153  0F0F                     	;# 
  1154  0F10                     	;# 
  1155  0F11                     	;# 
  1156  0F12                     	;# 
  1157  0F13                     	;# 
  1158  0F14                     	;# 
  1159  0F15                     	;# 
  1160  0F16                     	;# 
  1161  0F17                     	;# 
  1162  0F18                     	;# 
  1163  0F19                     	;# 
  1164  0F1A                     	;# 
  1165  0F1B                     	;# 
  1166  0F1C                     	;# 
  1167  0F1D                     	;# 
  1168  0F1E                     	;# 
  1169  0F1F                     	;# 
  1170  0F20                     	;# 
  1171  0F21                     	;# 
  1172  0F22                     	;# 
  1173  0F23                     	;# 
  1174  0F24                     	;# 
  1175  0F25                     	;# 
  1176  0F26                     	;# 
  1177  0F27                     	;# 
  1178  0F28                     	;# 
  1179  0F29                     	;# 
  1180  0F2A                     	;# 
  1181  0F2B                     	;# 
  1182  0F2C                     	;# 
  1183  0F2D                     	;# 
  1184  0F2E                     	;# 
  1185  0F2F                     	;# 
  1186  0F30                     	;# 
  1187  0F31                     	;# 
  1188  0F32                     	;# 
  1189  0F33                     	;# 
  1190  0F34                     	;# 
  1191  0F35                     	;# 
  1192  0F36                     	;# 
  1193  0F37                     	;# 
  1194  0FE4                     	;# 
  1195  0FE5                     	;# 
  1196  0FE6                     	;# 
  1197  0FE7                     	;# 
  1198  0FE8                     	;# 
  1199  0FE9                     	;# 
  1200  0FEA                     	;# 
  1201  0FEB                     	;# 
  1202  0FED                     	;# 
  1203  0FEE                     	;# 
  1204  0FEF                     	;# 
  1205  0000                     	;# 
  1206  0001                     	;# 
  1207  0002                     	;# 
  1208  0003                     	;# 
  1209  0004                     	;# 
  1210  0005                     	;# 
  1211  0006                     	;# 
  1212  0007                     	;# 
  1213  0008                     	;# 
  1214  0009                     	;# 
  1215  000A                     	;# 
  1216  000B                     	;# 
  1217  000C                     	;# 
  1218  000D                     	;# 
  1219  000E                     	;# 
  1220  0010                     	;# 
  1221  0011                     	;# 
  1222  0012                     	;# 
  1223  0013                     	;# 
  1224  0014                     	;# 
  1225  0015                     	;# 
  1226  0016                     	;# 
  1227  0017                     	;# 
  1228  0018                     	;# 
  1229  0018                     	;# 
  1230  0019                     	;# 
  1231  001A                     	;# 
  1232  001B                     	;# 
  1233  001C                     	;# 
  1234  001C                     	;# 
  1235  001D                     	;# 
  1236  001E                     	;# 
  1237  001F                     	;# 
  1238  008C                     	;# 
  1239  008D                     	;# 
  1240  008E                     	;# 
  1241  0090                     	;# 
  1242  0091                     	;# 
  1243  0092                     	;# 
  1244  0093                     	;# 
  1245  0094                     	;# 
  1246  0095                     	;# 
  1247  0096                     	;# 
  1248  0097                     	;# 
  1249  0098                     	;# 
  1250  0099                     	;# 
  1251  009A                     	;# 
  1252  009B                     	;# 
  1253  009C                     	;# 
  1254  009D                     	;# 
  1255  009E                     	;# 
  1256  009F                     	;# 
  1257  010C                     	;# 
  1258  010D                     	;# 
  1259  010E                     	;# 
  1260  0111                     	;# 
  1261  0112                     	;# 
  1262  0113                     	;# 
  1263  0114                     	;# 
  1264  0115                     	;# 
  1265  0116                     	;# 
  1266  0117                     	;# 
  1267  0118                     	;# 
  1268  0119                     	;# 
  1269  011A                     	;# 
  1270  011B                     	;# 
  1271  011C                     	;# 
  1272  011D                     	;# 
  1273  018C                     	;# 
  1274  018D                     	;# 
  1275  018E                     	;# 
  1276  0191                     	;# 
  1277  0191                     	;# 
  1278  0192                     	;# 
  1279  0193                     	;# 
  1280  0193                     	;# 
  1281  0194                     	;# 
  1282  0195                     	;# 
  1283  0196                     	;# 
  1284  0197                     	;# 
  1285  0199                     	;# 
  1286  0199                     	;# 
  1287  0199                     	;# 
  1288  019A                     	;# 
  1289  019A                     	;# 
  1290  019A                     	;# 
  1291  019B                     	;# 
  1292  019B                     	;# 
  1293  019B                     	;# 
  1294  019B                     	;# 
  1295  019B                     	;# 
  1296  019C                     	;# 
  1297  019C                     	;# 
  1298  019C                     	;# 
  1299  019D                     	;# 
  1300  019D                     	;# 
  1301  019D                     	;# 
  1302  019E                     	;# 
  1303  019E                     	;# 
  1304  019E                     	;# 
  1305  019F                     	;# 
  1306  019F                     	;# 
  1307  019F                     	;# 
  1308  019F                     	;# 
  1309  019F                     	;# 
  1310  020C                     	;# 
  1311  020D                     	;# 
  1312  020E                     	;# 
  1313  0210                     	;# 
  1314  0211                     	;# 
  1315  0211                     	;# 
  1316  0212                     	;# 
  1317  0212                     	;# 
  1318  0213                     	;# 
  1319  0213                     	;# 
  1320  0214                     	;# 
  1321  0214                     	;# 
  1322  0215                     	;# 
  1323  0215                     	;# 
  1324  0215                     	;# 
  1325  0215                     	;# 
  1326  0216                     	;# 
  1327  0216                     	;# 
  1328  0217                     	;# 
  1329  0217                     	;# 
  1330  021B                     	;# 
  1331  021C                     	;# 
  1332  021D                     	;# 
  1333  021E                     	;# 
  1334  021F                     	;# 
  1335  028C                     	;# 
  1336  028D                     	;# 
  1337  028E                     	;# 
  1338  0291                     	;# 
  1339  0291                     	;# 
  1340  0292                     	;# 
  1341  0293                     	;# 
  1342  0294                     	;# 
  1343  0295                     	;# 
  1344  0295                     	;# 
  1345  0296                     	;# 
  1346  0297                     	;# 
  1347  0298                     	;# 
  1348  0299                     	;# 
  1349  0299                     	;# 
  1350  029A                     	;# 
  1351  029B                     	;# 
  1352  029C                     	;# 
  1353  029E                     	;# 
  1354  029F                     	;# 
  1355  030C                     	;# 
  1356  030D                     	;# 
  1357  030E                     	;# 
  1358  0315                     	;# 
  1359  0316                     	;# 
  1360  0317                     	;# 
  1361  0318                     	;# 
  1362  0319                     	;# 
  1363  031B                     	;# 
  1364  031C                     	;# 
  1365  031D                     	;# 
  1366  031E                     	;# 
  1367  031F                     	;# 
  1368  038C                     	;# 
  1369  038D                     	;# 
  1370  038E                     	;# 
  1371  0390                     	;# 
  1372  0391                     	;# 
  1373  0392                     	;# 
  1374  0393                     	;# 
  1375  0394                     	;# 
  1376  0395                     	;# 
  1377  0396                     	;# 
  1378  0397                     	;# 
  1379  0398                     	;# 
  1380  0399                     	;# 
  1381  039D                     	;# 
  1382  039E                     	;# 
  1383  039F                     	;# 
  1384  040D                     	;# 
  1385  040F                     	;# 
  1386  040F                     	;# 
  1387  0410                     	;# 
  1388  0411                     	;# 
  1389  0412                     	;# 
  1390  0413                     	;# 
  1391  0413                     	;# 
  1392  0414                     	;# 
  1393  0414                     	;# 
  1394  0415                     	;# 
  1395  0416                     	;# 
  1396  0417                     	;# 
  1397  0418                     	;# 
  1398  041A                     	;# 
  1399  041A                     	;# 
  1400  041B                     	;# 
  1401  041B                     	;# 
  1402  041C                     	;# 
  1403  041D                     	;# 
  1404  041E                     	;# 
  1405  041F                     	;# 
  1406  048E                     	;# 
  1407  048E                     	;# 
  1408  048F                     	;# 
  1409  0490                     	;# 
  1410  0491                     	;# 
  1411  0492                     	;# 
  1412  0493                     	;# 
  1413  0493                     	;# 
  1414  0494                     	;# 
  1415  0494                     	;# 
  1416  0495                     	;# 
  1417  0496                     	;# 
  1418  0497                     	;# 
  1419  0498                     	;# 
  1420  049A                     	;# 
  1421  049A                     	;# 
  1422  049B                     	;# 
  1423  049B                     	;# 
  1424  049C                     	;# 
  1425  049D                     	;# 
  1426  049E                     	;# 
  1427  049F                     	;# 
  1428  050F                     	;# 
  1429  0510                     	;# 
  1430  0511                     	;# 
  1431  0512                     	;# 
  1432  0513                     	;# 
  1433  0514                     	;# 
  1434  0515                     	;# 
  1435  0516                     	;# 
  1436  0517                     	;# 
  1437  0518                     	;# 
  1438  0519                     	;# 
  1439  051A                     	;# 
  1440  058D                     	;# 
  1441  058E                     	;# 
  1442  058F                     	;# 
  1443  058F                     	;# 
  1444  058F                     	;# 
  1445  0590                     	;# 
  1446  0590                     	;# 
  1447  0591                     	;# 
  1448  0592                     	;# 
  1449  0592                     	;# 
  1450  0592                     	;# 
  1451  0593                     	;# 
  1452  0593                     	;# 
  1453  0594                     	;# 
  1454  0595                     	;# 
  1455  0595                     	;# 
  1456  0596                     	;# 
  1457  0597                     	;# 
  1458  0597                     	;# 
  1459  0598                     	;# 
  1460  0599                     	;# 
  1461  0599                     	;# 
  1462  0599                     	;# 
  1463  059A                     	;# 
  1464  059A                     	;# 
  1465  059E                     	;# 
  1466  059F                     	;# 
  1467  059F                     	;# 
  1468  0614                     	;# 
  1469  0614                     	;# 
  1470  0615                     	;# 
  1471  0616                     	;# 
  1472  0617                     	;# 
  1473  0617                     	;# 
  1474  0618                     	;# 
  1475  0619                     	;# 
  1476  061A                     	;# 
  1477  061A                     	;# 
  1478  061B                     	;# 
  1479  061C                     	;# 
  1480  068D                     	;# 
  1481  068E                     	;# 
  1482  068F                     	;# 
  1483  0690                     	;# 
  1484  0691                     	;# 
  1485  0692                     	;# 
  1486  0693                     	;# 
  1487  0694                     	;# 
  1488  0695                     	;# 
  1489  0696                     	;# 
  1490  0697                     	;# 
  1491  0698                     	;# 
  1492  0699                     	;# 
  1493  069A                     	;# 
  1494  069B                     	;# 
  1495  069C                     	;# 
  1496  069D                     	;# 
  1497  069E                     	;# 
  1498  069F                     	;# 
  1499  070D                     	;# 
  1500  070E                     	;# 
  1501  070F                     	;# 
  1502  0710                     	;# 
  1503  0711                     	;# 
  1504  0712                     	;# 
  1505  0713                     	;# 
  1506  0714                     	;# 
  1507  0715                     	;# 
  1508  0716                     	;# 
  1509  0717                     	;# 
  1510  0718                     	;# 
  1511  0719                     	;# 
  1512  071A                     	;# 
  1513  071B                     	;# 
  1514  071C                     	;# 
  1515  071D                     	;# 
  1516  071E                     	;# 
  1517  071F                     	;# 
  1518  078E                     	;# 
  1519  078F                     	;# 
  1520  0790                     	;# 
  1521  0791                     	;# 
  1522  0792                     	;# 
  1523  0793                     	;# 
  1524  0794                     	;# 
  1525  0795                     	;# 
  1526  0796                     	;# 
  1527  0797                     	;# 
  1528  0798                     	;# 
  1529  0799                     	;# 
  1530  079A                     	;# 
  1531  079B                     	;# 
  1532  079C                     	;# 
  1533  079D                     	;# 
  1534  079E                     	;# 
  1535  079F                     	;# 
  1536  080D                     	;# 
  1537  080E                     	;# 
  1538  080F                     	;# 
  1539  0810                     	;# 
  1540  0811                     	;# 
  1541  0812                     	;# 
  1542  0813                     	;# 
  1543  0814                     	;# 
  1544  0815                     	;# 
  1545  0816                     	;# 
  1546  0817                     	;# 
  1547  0818                     	;# 
  1548  0819                     	;# 
  1549  081A                     	;# 
  1550  081B                     	;# 
  1551  081C                     	;# 
  1552  081D                     	;# 
  1553  081E                     	;# 
  1554  081F                     	;# 
  1555  090C                     	;# 
  1556  090D                     	;# 
  1557  090E                     	;# 
  1558  090F                     	;# 
  1559  0910                     	;# 
  1560  0911                     	;# 
  1561  0912                     	;# 
  1562  0913                     	;# 
  1563  0914                     	;# 
  1564  0915                     	;# 
  1565  0916                     	;# 
  1566  0917                     	;# 
  1567  0D8E                     	;# 
  1568  0D8F                     	;# 
  1569  0D90                     	;# 
  1570  0D91                     	;# 
  1571  0D91                     	;# 
  1572  0D92                     	;# 
  1573  0D93                     	;# 
  1574  0D93                     	;# 
  1575  0D94                     	;# 
  1576  0D95                     	;# 
  1577  0D95                     	;# 
  1578  0D96                     	;# 
  1579  0D97                     	;# 
  1580  0D97                     	;# 
  1581  0D98                     	;# 
  1582  0D99                     	;# 
  1583  0D99                     	;# 
  1584  0D9A                     	;# 
  1585  0D9B                     	;# 
  1586  0D9C                     	;# 
  1587  0D9C                     	;# 
  1588  0D9D                     	;# 
  1589  0D9D                     	;# 
  1590  0D9E                     	;# 
  1591  0D9F                     	;# 
  1592  0DA0                     	;# 
  1593  0DA1                     	;# 
  1594  0DA1                     	;# 
  1595  0DA2                     	;# 
  1596  0DA3                     	;# 
  1597  0DA3                     	;# 
  1598  0DA4                     	;# 
  1599  0DA5                     	;# 
  1600  0DA5                     	;# 
  1601  0DA6                     	;# 
  1602  0DA7                     	;# 
  1603  0DA7                     	;# 
  1604  0DA8                     	;# 
  1605  0DA9                     	;# 
  1606  0DA9                     	;# 
  1607  0DAA                     	;# 
  1608  0DAB                     	;# 
  1609  0DAC                     	;# 
  1610  0DAC                     	;# 
  1611  0DAD                     	;# 
  1612  0DAD                     	;# 
  1613  0DAE                     	;# 
  1614  0DAF                     	;# 
  1615  0DB0                     	;# 
  1616  0DB1                     	;# 
  1617  0DB1                     	;# 
  1618  0DB2                     	;# 
  1619  0DB3                     	;# 
  1620  0DB3                     	;# 
  1621  0DB4                     	;# 
  1622  0DB5                     	;# 
  1623  0DB5                     	;# 
  1624  0DB6                     	;# 
  1625  0DB7                     	;# 
  1626  0DB7                     	;# 
  1627  0DB8                     	;# 
  1628  0DB9                     	;# 
  1629  0DB9                     	;# 
  1630  0DBA                     	;# 
  1631  0DBB                     	;# 
  1632  0DBC                     	;# 
  1633  0DBC                     	;# 
  1634  0DBD                     	;# 
  1635  0DBD                     	;# 
  1636  0DBE                     	;# 
  1637  0DBF                     	;# 
  1638  0DC0                     	;# 
  1639  0E0C                     	;# 
  1640  0E0D                     	;# 
  1641  0E0E                     	;# 
  1642  0E0F                     	;# 
  1643  0E10                     	;# 
  1644  0E11                     	;# 
  1645  0E12                     	;# 
  1646  0E13                     	;# 
  1647  0E14                     	;# 
  1648  0E15                     	;# 
  1649  0E15                     	;# 
  1650  0E15                     	;# 
  1651  0E16                     	;# 
  1652  0E16                     	;# 
  1653  0E16                     	;# 
  1654  0E17                     	;# 
  1655  0E17                     	;# 
  1656  0E17                     	;# 
  1657  0E18                     	;# 
  1658  0E18                     	;# 
  1659  0E18                     	;# 
  1660  0E19                     	;# 
  1661  0E1A                     	;# 
  1662  0E1B                     	;# 
  1663  0E1D                     	;# 
  1664  0E1E                     	;# 
  1665  0E1F                     	;# 
  1666  0E21                     	;# 
  1667  0E22                     	;# 
  1668  0E23                     	;# 
  1669  0E24                     	;# 
  1670  0E25                     	;# 
  1671  0E26                     	;# 
  1672  0E27                     	;# 
  1673  0E28                     	;# 
  1674  0E29                     	;# 
  1675  0E2D                     	;# 
  1676  0E2E                     	;# 
  1677  0E2F                     	;# 
  1678  0E30                     	;# 
  1679  0E31                     	;# 
  1680  0E32                     	;# 
  1681  0E35                     	;# 
  1682  0E36                     	;# 
  1683  0E37                     	;# 
  1684  0E38                     	;# 
  1685  0E39                     	;# 
  1686  0E3A                     	;# 
  1687  0E3B                     	;# 
  1688  0E3C                     	;# 
  1689  0E3D                     	;# 
  1690  0E3E                     	;# 
  1691  0E90                     	;# 
  1692  0E91                     	;# 
  1693  0E92                     	;# 
  1694  0E93                     	;# 
  1695  0E94                     	;# 
  1696  0E95                     	;# 
  1697  0E96                     	;# 
  1698  0E97                     	;# 
  1699  0E98                     	;# 
  1700  0E99                     	;# 
  1701  0E9A                     	;# 
  1702  0E9B                     	;# 
  1703  0E9C                     	;# 
  1704  0E9D                     	;# 
  1705  0E9E                     	;# 
  1706  0E9F                     	;# 
  1707  0EA0                     	;# 
  1708  0EA1                     	;# 
  1709  0EA2                     	;# 
  1710  0EA3                     	;# 
  1711  0EA4                     	;# 
  1712  0EA5                     	;# 
  1713  0EA6                     	;# 
  1714  0EA7                     	;# 
  1715  0F0F                     	;# 
  1716  0F10                     	;# 
  1717  0F11                     	;# 
  1718  0F12                     	;# 
  1719  0F13                     	;# 
  1720  0F14                     	;# 
  1721  0F15                     	;# 
  1722  0F16                     	;# 
  1723  0F17                     	;# 
  1724  0F18                     	;# 
  1725  0F19                     	;# 
  1726  0F1A                     	;# 
  1727  0F1B                     	;# 
  1728  0F1C                     	;# 
  1729  0F1D                     	;# 
  1730  0F1E                     	;# 
  1731  0F1F                     	;# 
  1732  0F20                     	;# 
  1733  0F21                     	;# 
  1734  0F22                     	;# 
  1735  0F23                     	;# 
  1736  0F24                     	;# 
  1737  0F25                     	;# 
  1738  0F26                     	;# 
  1739  0F27                     	;# 
  1740  0F28                     	;# 
  1741  0F29                     	;# 
  1742  0F2A                     	;# 
  1743  0F2B                     	;# 
  1744  0F2C                     	;# 
  1745  0F2D                     	;# 
  1746  0F2E                     	;# 
  1747  0F2F                     	;# 
  1748  0F30                     	;# 
  1749  0F31                     	;# 
  1750  0F32                     	;# 
  1751  0F33                     	;# 
  1752  0F34                     	;# 
  1753  0F35                     	;# 
  1754  0F36                     	;# 
  1755  0F37                     	;# 
  1756  0FE4                     	;# 
  1757  0FE5                     	;# 
  1758  0FE6                     	;# 
  1759  0FE7                     	;# 
  1760  0FE8                     	;# 
  1761  0FE9                     	;# 
  1762  0FEA                     	;# 
  1763  0FEB                     	;# 
  1764  0FED                     	;# 
  1765  0FEE                     	;# 
  1766  0FEF                     	;# 
  1767  0000                     	;# 
  1768  0001                     	;# 
  1769  0002                     	;# 
  1770  0003                     	;# 
  1771  0004                     	;# 
  1772  0005                     	;# 
  1773  0006                     	;# 
  1774  0007                     	;# 
  1775  0008                     	;# 
  1776  0009                     	;# 
  1777  000A                     	;# 
  1778  000B                     	;# 
  1779  000C                     	;# 
  1780  000D                     	;# 
  1781  000E                     	;# 
  1782  0010                     	;# 
  1783  0011                     	;# 
  1784  0012                     	;# 
  1785  0013                     	;# 
  1786  0014                     	;# 
  1787  0015                     	;# 
  1788  0016                     	;# 
  1789  0017                     	;# 
  1790  0018                     	;# 
  1791  0018                     	;# 
  1792  0019                     	;# 
  1793  001A                     	;# 
  1794  001B                     	;# 
  1795  001C                     	;# 
  1796  001C                     	;# 
  1797  001D                     	;# 
  1798  001E                     	;# 
  1799  001F                     	;# 
  1800  008C                     	;# 
  1801  008D                     	;# 
  1802  008E                     	;# 
  1803  0090                     	;# 
  1804  0091                     	;# 
  1805  0092                     	;# 
  1806  0093                     	;# 
  1807  0094                     	;# 
  1808  0095                     	;# 
  1809  0096                     	;# 
  1810  0097                     	;# 
  1811  0098                     	;# 
  1812  0099                     	;# 
  1813  009A                     	;# 
  1814  009B                     	;# 
  1815  009C                     	;# 
  1816  009D                     	;# 
  1817  009E                     	;# 
  1818  009F                     	;# 
  1819  010C                     	;# 
  1820  010D                     	;# 
  1821  010E                     	;# 
  1822  0111                     	;# 
  1823  0112                     	;# 
  1824  0113                     	;# 
  1825  0114                     	;# 
  1826  0115                     	;# 
  1827  0116                     	;# 
  1828  0117                     	;# 
  1829  0118                     	;# 
  1830  0119                     	;# 
  1831  011A                     	;# 
  1832  011B                     	;# 
  1833  011C                     	;# 
  1834  011D                     	;# 
  1835  018C                     	;# 
  1836  018D                     	;# 
  1837  018E                     	;# 
  1838  0191                     	;# 
  1839  0191                     	;# 
  1840  0192                     	;# 
  1841  0193                     	;# 
  1842  0193                     	;# 
  1843  0194                     	;# 
  1844  0195                     	;# 
  1845  0196                     	;# 
  1846  0197                     	;# 
  1847  0199                     	;# 
  1848  0199                     	;# 
  1849  0199                     	;# 
  1850  019A                     	;# 
  1851  019A                     	;# 
  1852  019A                     	;# 
  1853  019B                     	;# 
  1854  019B                     	;# 
  1855  019B                     	;# 
  1856  019B                     	;# 
  1857  019B                     	;# 
  1858  019C                     	;# 
  1859  019C                     	;# 
  1860  019C                     	;# 
  1861  019D                     	;# 
  1862  019D                     	;# 
  1863  019D                     	;# 
  1864  019E                     	;# 
  1865  019E                     	;# 
  1866  019E                     	;# 
  1867  019F                     	;# 
  1868  019F                     	;# 
  1869  019F                     	;# 
  1870  019F                     	;# 
  1871  019F                     	;# 
  1872  020C                     	;# 
  1873  020D                     	;# 
  1874  020E                     	;# 
  1875  0210                     	;# 
  1876  0211                     	;# 
  1877  0211                     	;# 
  1878  0212                     	;# 
  1879  0212                     	;# 
  1880  0213                     	;# 
  1881  0213                     	;# 
  1882  0214                     	;# 
  1883  0214                     	;# 
  1884  0215                     	;# 
  1885  0215                     	;# 
  1886  0215                     	;# 
  1887  0215                     	;# 
  1888  0216                     	;# 
  1889  0216                     	;# 
  1890  0217                     	;# 
  1891  0217                     	;# 
  1892  021B                     	;# 
  1893  021C                     	;# 
  1894  021D                     	;# 
  1895  021E                     	;# 
  1896  021F                     	;# 
  1897  028C                     	;# 
  1898  028D                     	;# 
  1899  028E                     	;# 
  1900  0291                     	;# 
  1901  0291                     	;# 
  1902  0292                     	;# 
  1903  0293                     	;# 
  1904  0294                     	;# 
  1905  0295                     	;# 
  1906  0295                     	;# 
  1907  0296                     	;# 
  1908  0297                     	;# 
  1909  0298                     	;# 
  1910  0299                     	;# 
  1911  0299                     	;# 
  1912  029A                     	;# 
  1913  029B                     	;# 
  1914  029C                     	;# 
  1915  029E                     	;# 
  1916  029F                     	;# 
  1917  030C                     	;# 
  1918  030D                     	;# 
  1919  030E                     	;# 
  1920  0315                     	;# 
  1921  0316                     	;# 
  1922  0317                     	;# 
  1923  0318                     	;# 
  1924  0319                     	;# 
  1925  031B                     	;# 
  1926  031C                     	;# 
  1927  031D                     	;# 
  1928  031E                     	;# 
  1929  031F                     	;# 
  1930  038C                     	;# 
  1931  038D                     	;# 
  1932  038E                     	;# 
  1933  0390                     	;# 
  1934  0391                     	;# 
  1935  0392                     	;# 
  1936  0393                     	;# 
  1937  0394                     	;# 
  1938  0395                     	;# 
  1939  0396                     	;# 
  1940  0397                     	;# 
  1941  0398                     	;# 
  1942  0399                     	;# 
  1943  039D                     	;# 
  1944  039E                     	;# 
  1945  039F                     	;# 
  1946  040D                     	;# 
  1947  040F                     	;# 
  1948  040F                     	;# 
  1949  0410                     	;# 
  1950  0411                     	;# 
  1951  0412                     	;# 
  1952  0413                     	;# 
  1953  0413                     	;# 
  1954  0414                     	;# 
  1955  0414                     	;# 
  1956  0415                     	;# 
  1957  0416                     	;# 
  1958  0417                     	;# 
  1959  0418                     	;# 
  1960  041A                     	;# 
  1961  041A                     	;# 
  1962  041B                     	;# 
  1963  041B                     	;# 
  1964  041C                     	;# 
  1965  041D                     	;# 
  1966  041E                     	;# 
  1967  041F                     	;# 
  1968  048E                     	;# 
  1969  048E                     	;# 
  1970  048F                     	;# 
  1971  0490                     	;# 
  1972  0491                     	;# 
  1973  0492                     	;# 
  1974  0493                     	;# 
  1975  0493                     	;# 
  1976  0494                     	;# 
  1977  0494                     	;# 
  1978  0495                     	;# 
  1979  0496                     	;# 
  1980  0497                     	;# 
  1981  0498                     	;# 
  1982  049A                     	;# 
  1983  049A                     	;# 
  1984  049B                     	;# 
  1985  049B                     	;# 
  1986  049C                     	;# 
  1987  049D                     	;# 
  1988  049E                     	;# 
  1989  049F                     	;# 
  1990  050F                     	;# 
  1991  0510                     	;# 
  1992  0511                     	;# 
  1993  0512                     	;# 
  1994  0513                     	;# 
  1995  0514                     	;# 
  1996  0515                     	;# 
  1997  0516                     	;# 
  1998  0517                     	;# 
  1999  0518                     	;# 
  2000  0519                     	;# 
  2001  051A                     	;# 
  2002  058D                     	;# 
  2003  058E                     	;# 
  2004  058F                     	;# 
  2005  058F                     	;# 
  2006  058F                     	;# 
  2007  0590                     	;# 
  2008  0590                     	;# 
  2009  0591                     	;# 
  2010  0592                     	;# 
  2011  0592                     	;# 
  2012  0592                     	;# 
  2013  0593                     	;# 
  2014  0593                     	;# 
  2015  0594                     	;# 
  2016  0595                     	;# 
  2017  0595                     	;# 
  2018  0596                     	;# 
  2019  0597                     	;# 
  2020  0597                     	;# 
  2021  0598                     	;# 
  2022  0599                     	;# 
  2023  0599                     	;# 
  2024  0599                     	;# 
  2025  059A                     	;# 
  2026  059A                     	;# 
  2027  059E                     	;# 
  2028  059F                     	;# 
  2029  059F                     	;# 
  2030  0614                     	;# 
  2031  0614                     	;# 
  2032  0615                     	;# 
  2033  0616                     	;# 
  2034  0617                     	;# 
  2035  0617                     	;# 
  2036  0618                     	;# 
  2037  0619                     	;# 
  2038  061A                     	;# 
  2039  061A                     	;# 
  2040  061B                     	;# 
  2041  061C                     	;# 
  2042  068D                     	;# 
  2043  068E                     	;# 
  2044  068F                     	;# 
  2045  0690                     	;# 
  2046  0691                     	;# 
  2047  0692                     	;# 
  2048  0693                     	;# 
  2049  0694                     	;# 
  2050  0695                     	;# 
  2051  0696                     	;# 
  2052  0697                     	;# 
  2053  0698                     	;# 
  2054  0699                     	;# 
  2055  069A                     	;# 
  2056  069B                     	;# 
  2057  069C                     	;# 
  2058  069D                     	;# 
  2059  069E                     	;# 
  2060  069F                     	;# 
  2061  070D                     	;# 
  2062  070E                     	;# 
  2063  070F                     	;# 
  2064  0710                     	;# 
  2065  0711                     	;# 
  2066  0712                     	;# 
  2067  0713                     	;# 
  2068  0714                     	;# 
  2069  0715                     	;# 
  2070  0716                     	;# 
  2071  0717                     	;# 
  2072  0718                     	;# 
  2073  0719                     	;# 
  2074  071A                     	;# 
  2075  071B                     	;# 
  2076  071C                     	;# 
  2077  071D                     	;# 
  2078  071E                     	;# 
  2079  071F                     	;# 
  2080  078E                     	;# 
  2081  078F                     	;# 
  2082  0790                     	;# 
  2083  0791                     	;# 
  2084  0792                     	;# 
  2085  0793                     	;# 
  2086  0794                     	;# 
  2087  0795                     	;# 
  2088  0796                     	;# 
  2089  0797                     	;# 
  2090  0798                     	;# 
  2091  0799                     	;# 
  2092  079A                     	;# 
  2093  079B                     	;# 
  2094  079C                     	;# 
  2095  079D                     	;# 
  2096  079E                     	;# 
  2097  079F                     	;# 
  2098  080D                     	;# 
  2099  080E                     	;# 
  2100  080F                     	;# 
  2101  0810                     	;# 
  2102  0811                     	;# 
  2103  0812                     	;# 
  2104  0813                     	;# 
  2105  0814                     	;# 
  2106  0815                     	;# 
  2107  0816                     	;# 
  2108  0817                     	;# 
  2109  0818                     	;# 
  2110  0819                     	;# 
  2111  081A                     	;# 
  2112  081B                     	;# 
  2113  081C                     	;# 
  2114  081D                     	;# 
  2115  081E                     	;# 
  2116  081F                     	;# 
  2117  090C                     	;# 
  2118  090D                     	;# 
  2119  090E                     	;# 
  2120  090F                     	;# 
  2121  0910                     	;# 
  2122  0911                     	;# 
  2123  0912                     	;# 
  2124  0913                     	;# 
  2125  0914                     	;# 
  2126  0915                     	;# 
  2127  0916                     	;# 
  2128  0917                     	;# 
  2129  0D8E                     	;# 
  2130  0D8F                     	;# 
  2131  0D90                     	;# 
  2132  0D91                     	;# 
  2133  0D91                     	;# 
  2134  0D92                     	;# 
  2135  0D93                     	;# 
  2136  0D93                     	;# 
  2137  0D94                     	;# 
  2138  0D95                     	;# 
  2139  0D95                     	;# 
  2140  0D96                     	;# 
  2141  0D97                     	;# 
  2142  0D97                     	;# 
  2143  0D98                     	;# 
  2144  0D99                     	;# 
  2145  0D99                     	;# 
  2146  0D9A                     	;# 
  2147  0D9B                     	;# 
  2148  0D9C                     	;# 
  2149  0D9C                     	;# 
  2150  0D9D                     	;# 
  2151  0D9D                     	;# 
  2152  0D9E                     	;# 
  2153  0D9F                     	;# 
  2154  0DA0                     	;# 
  2155  0DA1                     	;# 
  2156  0DA1                     	;# 
  2157  0DA2                     	;# 
  2158  0DA3                     	;# 
  2159  0DA3                     	;# 
  2160  0DA4                     	;# 
  2161  0DA5                     	;# 
  2162  0DA5                     	;# 
  2163  0DA6                     	;# 
  2164  0DA7                     	;# 
  2165  0DA7                     	;# 
  2166  0DA8                     	;# 
  2167  0DA9                     	;# 
  2168  0DA9                     	;# 
  2169  0DAA                     	;# 
  2170  0DAB                     	;# 
  2171  0DAC                     	;# 
  2172  0DAC                     	;# 
  2173  0DAD                     	;# 
  2174  0DAD                     	;# 
  2175  0DAE                     	;# 
  2176  0DAF                     	;# 
  2177  0DB0                     	;# 
  2178  0DB1                     	;# 
  2179  0DB1                     	;# 
  2180  0DB2                     	;# 
  2181  0DB3                     	;# 
  2182  0DB3                     	;# 
  2183  0DB4                     	;# 
  2184  0DB5                     	;# 
  2185  0DB5                     	;# 
  2186  0DB6                     	;# 
  2187  0DB7                     	;# 
  2188  0DB7                     	;# 
  2189  0DB8                     	;# 
  2190  0DB9                     	;# 
  2191  0DB9                     	;# 
  2192  0DBA                     	;# 
  2193  0DBB                     	;# 
  2194  0DBC                     	;# 
  2195  0DBC                     	;# 
  2196  0DBD                     	;# 
  2197  0DBD                     	;# 
  2198  0DBE                     	;# 
  2199  0DBF                     	;# 
  2200  0DC0                     	;# 
  2201  0E0C                     	;# 
  2202  0E0D                     	;# 
  2203  0E0E                     	;# 
  2204  0E0F                     	;# 
  2205  0E10                     	;# 
  2206  0E11                     	;# 
  2207  0E12                     	;# 
  2208  0E13                     	;# 
  2209  0E14                     	;# 
  2210  0E15                     	;# 
  2211  0E15                     	;# 
  2212  0E15                     	;# 
  2213  0E16                     	;# 
  2214  0E16                     	;# 
  2215  0E16                     	;# 
  2216  0E17                     	;# 
  2217  0E17                     	;# 
  2218  0E17                     	;# 
  2219  0E18                     	;# 
  2220  0E18                     	;# 
  2221  0E18                     	;# 
  2222  0E19                     	;# 
  2223  0E1A                     	;# 
  2224  0E1B                     	;# 
  2225  0E1D                     	;# 
  2226  0E1E                     	;# 
  2227  0E1F                     	;# 
  2228  0E21                     	;# 
  2229  0E22                     	;# 
  2230  0E23                     	;# 
  2231  0E24                     	;# 
  2232  0E25                     	;# 
  2233  0E26                     	;# 
  2234  0E27                     	;# 
  2235  0E28                     	;# 
  2236  0E29                     	;# 
  2237  0E2D                     	;# 
  2238  0E2E                     	;# 
  2239  0E2F                     	;# 
  2240  0E30                     	;# 
  2241  0E31                     	;# 
  2242  0E32                     	;# 
  2243  0E35                     	;# 
  2244  0E36                     	;# 
  2245  0E37                     	;# 
  2246  0E38                     	;# 
  2247  0E39                     	;# 
  2248  0E3A                     	;# 
  2249  0E3B                     	;# 
  2250  0E3C                     	;# 
  2251  0E3D                     	;# 
  2252  0E3E                     	;# 
  2253  0E90                     	;# 
  2254  0E91                     	;# 
  2255  0E92                     	;# 
  2256  0E93                     	;# 
  2257  0E94                     	;# 
  2258  0E95                     	;# 
  2259  0E96                     	;# 
  2260  0E97                     	;# 
  2261  0E98                     	;# 
  2262  0E99                     	;# 
  2263  0E9A                     	;# 
  2264  0E9B                     	;# 
  2265  0E9C                     	;# 
  2266  0E9D                     	;# 
  2267  0E9E                     	;# 
  2268  0E9F                     	;# 
  2269  0EA0                     	;# 
  2270  0EA1                     	;# 
  2271  0EA2                     	;# 
  2272  0EA3                     	;# 
  2273  0EA4                     	;# 
  2274  0EA5                     	;# 
  2275  0EA6                     	;# 
  2276  0EA7                     	;# 
  2277  0F0F                     	;# 
  2278  0F10                     	;# 
  2279  0F11                     	;# 
  2280  0F12                     	;# 
  2281  0F13                     	;# 
  2282  0F14                     	;# 
  2283  0F15                     	;# 
  2284  0F16                     	;# 
  2285  0F17                     	;# 
  2286  0F18                     	;# 
  2287  0F19                     	;# 
  2288  0F1A                     	;# 
  2289  0F1B                     	;# 
  2290  0F1C                     	;# 
  2291  0F1D                     	;# 
  2292  0F1E                     	;# 
  2293  0F1F                     	;# 
  2294  0F20                     	;# 
  2295  0F21                     	;# 
  2296  0F22                     	;# 
  2297  0F23                     	;# 
  2298  0F24                     	;# 
  2299  0F25                     	;# 
  2300  0F26                     	;# 
  2301  0F27                     	;# 
  2302  0F28                     	;# 
  2303  0F29                     	;# 
  2304  0F2A                     	;# 
  2305  0F2B                     	;# 
  2306  0F2C                     	;# 
  2307  0F2D                     	;# 
  2308  0F2E                     	;# 
  2309  0F2F                     	;# 
  2310  0F30                     	;# 
  2311  0F31                     	;# 
  2312  0F32                     	;# 
  2313  0F33                     	;# 
  2314  0F34                     	;# 
  2315  0F35                     	;# 
  2316  0F36                     	;# 
  2317  0F37                     	;# 
  2318  0FE4                     	;# 
  2319  0FE5                     	;# 
  2320  0FE6                     	;# 
  2321  0FE7                     	;# 
  2322  0FE8                     	;# 
  2323  0FE9                     	;# 
  2324  0FEA                     	;# 
  2325  0FEB                     	;# 
  2326  0FED                     	;# 
  2327  0FEE                     	;# 
  2328  0FEF                     	;# 
  2329  0000                     	;# 
  2330  0001                     	;# 
  2331  0002                     	;# 
  2332  0003                     	;# 
  2333  0004                     	;# 
  2334  0005                     	;# 
  2335  0006                     	;# 
  2336  0007                     	;# 
  2337  0008                     	;# 
  2338  0009                     	;# 
  2339  000A                     	;# 
  2340  000B                     	;# 
  2341  000C                     	;# 
  2342  000D                     	;# 
  2343  000E                     	;# 
  2344  0010                     	;# 
  2345  0011                     	;# 
  2346  0012                     	;# 
  2347  0013                     	;# 
  2348  0014                     	;# 
  2349  0015                     	;# 
  2350  0016                     	;# 
  2351  0017                     	;# 
  2352  0018                     	;# 
  2353  0018                     	;# 
  2354  0019                     	;# 
  2355  001A                     	;# 
  2356  001B                     	;# 
  2357  001C                     	;# 
  2358  001C                     	;# 
  2359  001D                     	;# 
  2360  001E                     	;# 
  2361  001F                     	;# 
  2362  008C                     	;# 
  2363  008D                     	;# 
  2364  008E                     	;# 
  2365  0090                     	;# 
  2366  0091                     	;# 
  2367  0092                     	;# 
  2368  0093                     	;# 
  2369  0094                     	;# 
  2370  0095                     	;# 
  2371  0096                     	;# 
  2372  0097                     	;# 
  2373  0098                     	;# 
  2374  0099                     	;# 
  2375  009A                     	;# 
  2376  009B                     	;# 
  2377  009C                     	;# 
  2378  009D                     	;# 
  2379  009E                     	;# 
  2380  009F                     	;# 
  2381  010C                     	;# 
  2382  010D                     	;# 
  2383  010E                     	;# 
  2384  0111                     	;# 
  2385  0112                     	;# 
  2386  0113                     	;# 
  2387  0114                     	;# 
  2388  0115                     	;# 
  2389  0116                     	;# 
  2390  0117                     	;# 
  2391  0118                     	;# 
  2392  0119                     	;# 
  2393  011A                     	;# 
  2394  011B                     	;# 
  2395  011C                     	;# 
  2396  011D                     	;# 
  2397  018C                     	;# 
  2398  018D                     	;# 
  2399  018E                     	;# 
  2400  0191                     	;# 
  2401  0191                     	;# 
  2402  0192                     	;# 
  2403  0193                     	;# 
  2404  0193                     	;# 
  2405  0194                     	;# 
  2406  0195                     	;# 
  2407  0196                     	;# 
  2408  0197                     	;# 
  2409  0199                     	;# 
  2410  0199                     	;# 
  2411  0199                     	;# 
  2412  019A                     	;# 
  2413  019A                     	;# 
  2414  019A                     	;# 
  2415  019B                     	;# 
  2416  019B                     	;# 
  2417  019B                     	;# 
  2418  019B                     	;# 
  2419  019B                     	;# 
  2420  019C                     	;# 
  2421  019C                     	;# 
  2422  019C                     	;# 
  2423  019D                     	;# 
  2424  019D                     	;# 
  2425  019D                     	;# 
  2426  019E                     	;# 
  2427  019E                     	;# 
  2428  019E                     	;# 
  2429  019F                     	;# 
  2430  019F                     	;# 
  2431  019F                     	;# 
  2432  019F                     	;# 
  2433  019F                     	;# 
  2434  020C                     	;# 
  2435  020D                     	;# 
  2436  020E                     	;# 
  2437  0210                     	;# 
  2438  0211                     	;# 
  2439  0211                     	;# 
  2440  0212                     	;# 
  2441  0212                     	;# 
  2442  0213                     	;# 
  2443  0213                     	;# 
  2444  0214                     	;# 
  2445  0214                     	;# 
  2446  0215                     	;# 
  2447  0215                     	;# 
  2448  0215                     	;# 
  2449  0215                     	;# 
  2450  0216                     	;# 
  2451  0216                     	;# 
  2452  0217                     	;# 
  2453  0217                     	;# 
  2454  021B                     	;# 
  2455  021C                     	;# 
  2456  021D                     	;# 
  2457  021E                     	;# 
  2458  021F                     	;# 
  2459  028C                     	;# 
  2460  028D                     	;# 
  2461  028E                     	;# 
  2462  0291                     	;# 
  2463  0291                     	;# 
  2464  0292                     	;# 
  2465  0293                     	;# 
  2466  0294                     	;# 
  2467  0295                     	;# 
  2468  0295                     	;# 
  2469  0296                     	;# 
  2470  0297                     	;# 
  2471  0298                     	;# 
  2472  0299                     	;# 
  2473  0299                     	;# 
  2474  029A                     	;# 
  2475  029B                     	;# 
  2476  029C                     	;# 
  2477  029E                     	;# 
  2478  029F                     	;# 
  2479  030C                     	;# 
  2480  030D                     	;# 
  2481  030E                     	;# 
  2482  0315                     	;# 
  2483  0316                     	;# 
  2484  0317                     	;# 
  2485  0318                     	;# 
  2486  0319                     	;# 
  2487  031B                     	;# 
  2488  031C                     	;# 
  2489  031D                     	;# 
  2490  031E                     	;# 
  2491  031F                     	;# 
  2492  038C                     	;# 
  2493  038D                     	;# 
  2494  038E                     	;# 
  2495  0390                     	;# 
  2496  0391                     	;# 
  2497  0392                     	;# 
  2498  0393                     	;# 
  2499  0394                     	;# 
  2500  0395                     	;# 
  2501  0396                     	;# 
  2502  0397                     	;# 
  2503  0398                     	;# 
  2504  0399                     	;# 
  2505  039D                     	;# 
  2506  039E                     	;# 
  2507  039F                     	;# 
  2508  040D                     	;# 
  2509  040F                     	;# 
  2510  040F                     	;# 
  2511  0410                     	;# 
  2512  0411                     	;# 
  2513  0412                     	;# 
  2514  0413                     	;# 
  2515  0413                     	;# 
  2516  0414                     	;# 
  2517  0414                     	;# 
  2518  0415                     	;# 
  2519  0416                     	;# 
  2520  0417                     	;# 
  2521  0418                     	;# 
  2522  041A                     	;# 
  2523  041A                     	;# 
  2524  041B                     	;# 
  2525  041B                     	;# 
  2526  041C                     	;# 
  2527  041D                     	;# 
  2528  041E                     	;# 
  2529  041F                     	;# 
  2530  048E                     	;# 
  2531  048E                     	;# 
  2532  048F                     	;# 
  2533  0490                     	;# 
  2534  0491                     	;# 
  2535  0492                     	;# 
  2536  0493                     	;# 
  2537  0493                     	;# 
  2538  0494                     	;# 
  2539  0494                     	;# 
  2540  0495                     	;# 
  2541  0496                     	;# 
  2542  0497                     	;# 
  2543  0498                     	;# 
  2544  049A                     	;# 
  2545  049A                     	;# 
  2546  049B                     	;# 
  2547  049B                     	;# 
  2548  049C                     	;# 
  2549  049D                     	;# 
  2550  049E                     	;# 
  2551  049F                     	;# 
  2552  050F                     	;# 
  2553  0510                     	;# 
  2554  0511                     	;# 
  2555  0512                     	;# 
  2556  0513                     	;# 
  2557  0514                     	;# 
  2558  0515                     	;# 
  2559  0516                     	;# 
  2560  0517                     	;# 
  2561  0518                     	;# 
  2562  0519                     	;# 
  2563  051A                     	;# 
  2564  058D                     	;# 
  2565  058E                     	;# 
  2566  058F                     	;# 
  2567  058F                     	;# 
  2568  058F                     	;# 
  2569  0590                     	;# 
  2570  0590                     	;# 
  2571  0591                     	;# 
  2572  0592                     	;# 
  2573  0592                     	;# 
  2574  0592                     	;# 
  2575  0593                     	;# 
  2576  0593                     	;# 
  2577  0594                     	;# 
  2578  0595                     	;# 
  2579  0595                     	;# 
  2580  0596                     	;# 
  2581  0597                     	;# 
  2582  0597                     	;# 
  2583  0598                     	;# 
  2584  0599                     	;# 
  2585  0599                     	;# 
  2586  0599                     	;# 
  2587  059A                     	;# 
  2588  059A                     	;# 
  2589  059E                     	;# 
  2590  059F                     	;# 
  2591  059F                     	;# 
  2592  0614                     	;# 
  2593  0614                     	;# 
  2594  0615                     	;# 
  2595  0616                     	;# 
  2596  0617                     	;# 
  2597  0617                     	;# 
  2598  0618                     	;# 
  2599  0619                     	;# 
  2600  061A                     	;# 
  2601  061A                     	;# 
  2602  061B                     	;# 
  2603  061C                     	;# 
  2604  068D                     	;# 
  2605  068E                     	;# 
  2606  068F                     	;# 
  2607  0690                     	;# 
  2608  0691                     	;# 
  2609  0692                     	;# 
  2610  0693                     	;# 
  2611  0694                     	;# 
  2612  0695                     	;# 
  2613  0696                     	;# 
  2614  0697                     	;# 
  2615  0698                     	;# 
  2616  0699                     	;# 
  2617  069A                     	;# 
  2618  069B                     	;# 
  2619  069C                     	;# 
  2620  069D                     	;# 
  2621  069E                     	;# 
  2622  069F                     	;# 
  2623  070D                     	;# 
  2624  070E                     	;# 
  2625  070F                     	;# 
  2626  0710                     	;# 
  2627  0711                     	;# 
  2628  0712                     	;# 
  2629  0713                     	;# 
  2630  0714                     	;# 
  2631  0715                     	;# 
  2632  0716                     	;# 
  2633  0717                     	;# 
  2634  0718                     	;# 
  2635  0719                     	;# 
  2636  071A                     	;# 
  2637  071B                     	;# 
  2638  071C                     	;# 
  2639  071D                     	;# 
  2640  071E                     	;# 
  2641  071F                     	;# 
  2642  078E                     	;# 
  2643  078F                     	;# 
  2644  0790                     	;# 
  2645  0791                     	;# 
  2646  0792                     	;# 
  2647  0793                     	;# 
  2648  0794                     	;# 
  2649  0795                     	;# 
  2650  0796                     	;# 
  2651  0797                     	;# 
  2652  0798                     	;# 
  2653  0799                     	;# 
  2654  079A                     	;# 
  2655  079B                     	;# 
  2656  079C                     	;# 
  2657  079D                     	;# 
  2658  079E                     	;# 
  2659  079F                     	;# 
  2660  080D                     	;# 
  2661  080E                     	;# 
  2662  080F                     	;# 
  2663  0810                     	;# 
  2664  0811                     	;# 
  2665  0812                     	;# 
  2666  0813                     	;# 
  2667  0814                     	;# 
  2668  0815                     	;# 
  2669  0816                     	;# 
  2670  0817                     	;# 
  2671  0818                     	;# 
  2672  0819                     	;# 
  2673  081A                     	;# 
  2674  081B                     	;# 
  2675  081C                     	;# 
  2676  081D                     	;# 
  2677  081E                     	;# 
  2678  081F                     	;# 
  2679  090C                     	;# 
  2680  090D                     	;# 
  2681  090E                     	;# 
  2682  090F                     	;# 
  2683  0910                     	;# 
  2684  0911                     	;# 
  2685  0912                     	;# 
  2686  0913                     	;# 
  2687  0914                     	;# 
  2688  0915                     	;# 
  2689  0916                     	;# 
  2690  0917                     	;# 
  2691  0D8E                     	;# 
  2692  0D8F                     	;# 
  2693  0D90                     	;# 
  2694  0D91                     	;# 
  2695  0D91                     	;# 
  2696  0D92                     	;# 
  2697  0D93                     	;# 
  2698  0D93                     	;# 
  2699  0D94                     	;# 
  2700  0D95                     	;# 
  2701  0D95                     	;# 
  2702  0D96                     	;# 
  2703  0D97                     	;# 
  2704  0D97                     	;# 
  2705  0D98                     	;# 
  2706  0D99                     	;# 
  2707  0D99                     	;# 
  2708  0D9A                     	;# 
  2709  0D9B                     	;# 
  2710  0D9C                     	;# 
  2711  0D9C                     	;# 
  2712  0D9D                     	;# 
  2713  0D9D                     	;# 
  2714  0D9E                     	;# 
  2715  0D9F                     	;# 
  2716  0DA0                     	;# 
  2717  0DA1                     	;# 
  2718  0DA1                     	;# 
  2719  0DA2                     	;# 
  2720  0DA3                     	;# 
  2721  0DA3                     	;# 
  2722  0DA4                     	;# 
  2723  0DA5                     	;# 
  2724  0DA5                     	;# 
  2725  0DA6                     	;# 
  2726  0DA7                     	;# 
  2727  0DA7                     	;# 
  2728  0DA8                     	;# 
  2729  0DA9                     	;# 
  2730  0DA9                     	;# 
  2731  0DAA                     	;# 
  2732  0DAB                     	;# 
  2733  0DAC                     	;# 
  2734  0DAC                     	;# 
  2735  0DAD                     	;# 
  2736  0DAD                     	;# 
  2737  0DAE                     	;# 
  2738  0DAF                     	;# 
  2739  0DB0                     	;# 
  2740  0DB1                     	;# 
  2741  0DB1                     	;# 
  2742  0DB2                     	;# 
  2743  0DB3                     	;# 
  2744  0DB3                     	;# 
  2745  0DB4                     	;# 
  2746  0DB5                     	;# 
  2747  0DB5                     	;# 
  2748  0DB6                     	;# 
  2749  0DB7                     	;# 
  2750  0DB7                     	;# 
  2751  0DB8                     	;# 
  2752  0DB9                     	;# 
  2753  0DB9                     	;# 
  2754  0DBA                     	;# 
  2755  0DBB                     	;# 
  2756  0DBC                     	;# 
  2757  0DBC                     	;# 
  2758  0DBD                     	;# 
  2759  0DBD                     	;# 
  2760  0DBE                     	;# 
  2761  0DBF                     	;# 
  2762  0DC0                     	;# 
  2763  0E0C                     	;# 
  2764  0E0D                     	;# 
  2765  0E0E                     	;# 
  2766  0E0F                     	;# 
  2767  0E10                     	;# 
  2768  0E11                     	;# 
  2769  0E12                     	;# 
  2770  0E13                     	;# 
  2771  0E14                     	;# 
  2772  0E15                     	;# 
  2773  0E15                     	;# 
  2774  0E15                     	;# 
  2775  0E16                     	;# 
  2776  0E16                     	;# 
  2777  0E16                     	;# 
  2778  0E17                     	;# 
  2779  0E17                     	;# 
  2780  0E17                     	;# 
  2781  0E18                     	;# 
  2782  0E18                     	;# 
  2783  0E18                     	;# 
  2784  0E19                     	;# 
  2785  0E1A                     	;# 
  2786  0E1B                     	;# 
  2787  0E1D                     	;# 
  2788  0E1E                     	;# 
  2789  0E1F                     	;# 
  2790  0E21                     	;# 
  2791  0E22                     	;# 
  2792  0E23                     	;# 
  2793  0E24                     	;# 
  2794  0E25                     	;# 
  2795  0E26                     	;# 
  2796  0E27                     	;# 
  2797  0E28                     	;# 
  2798  0E29                     	;# 
  2799  0E2D                     	;# 
  2800  0E2E                     	;# 
  2801  0E2F                     	;# 
  2802  0E30                     	;# 
  2803  0E31                     	;# 
  2804  0E32                     	;# 
  2805  0E35                     	;# 
  2806  0E36                     	;# 
  2807  0E37                     	;# 
  2808  0E38                     	;# 
  2809  0E39                     	;# 
  2810  0E3A                     	;# 
  2811  0E3B                     	;# 
  2812  0E3C                     	;# 
  2813  0E3D                     	;# 
  2814  0E3E                     	;# 
  2815  0E90                     	;# 
  2816  0E91                     	;# 
  2817  0E92                     	;# 
  2818  0E93                     	;# 
  2819  0E94                     	;# 
  2820  0E95                     	;# 
  2821  0E96                     	;# 
  2822  0E97                     	;# 
  2823  0E98                     	;# 
  2824  0E99                     	;# 
  2825  0E9A                     	;# 
  2826  0E9B                     	;# 
  2827  0E9C                     	;# 
  2828  0E9D                     	;# 
  2829  0E9E                     	;# 
  2830  0E9F                     	;# 
  2831  0EA0                     	;# 
  2832  0EA1                     	;# 
  2833  0EA2                     	;# 
  2834  0EA3                     	;# 
  2835  0EA4                     	;# 
  2836  0EA5                     	;# 
  2837  0EA6                     	;# 
  2838  0EA7                     	;# 
  2839  0F0F                     	;# 
  2840  0F10                     	;# 
  2841  0F11                     	;# 
  2842  0F12                     	;# 
  2843  0F13                     	;# 
  2844  0F14                     	;# 
  2845  0F15                     	;# 
  2846  0F16                     	;# 
  2847  0F17                     	;# 
  2848  0F18                     	;# 
  2849  0F19                     	;# 
  2850  0F1A                     	;# 
  2851  0F1B                     	;# 
  2852  0F1C                     	;# 
  2853  0F1D                     	;# 
  2854  0F1E                     	;# 
  2855  0F1F                     	;# 
  2856  0F20                     	;# 
  2857  0F21                     	;# 
  2858  0F22                     	;# 
  2859  0F23                     	;# 
  2860  0F24                     	;# 
  2861  0F25                     	;# 
  2862  0F26                     	;# 
  2863  0F27                     	;# 
  2864  0F28                     	;# 
  2865  0F29                     	;# 
  2866  0F2A                     	;# 
  2867  0F2B                     	;# 
  2868  0F2C                     	;# 
  2869  0F2D                     	;# 
  2870  0F2E                     	;# 
  2871  0F2F                     	;# 
  2872  0F30                     	;# 
  2873  0F31                     	;# 
  2874  0F32                     	;# 
  2875  0F33                     	;# 
  2876  0F34                     	;# 
  2877  0F35                     	;# 
  2878  0F36                     	;# 
  2879  0F37                     	;# 
  2880  0FE4                     	;# 
  2881  0FE5                     	;# 
  2882  0FE6                     	;# 
  2883  0FE7                     	;# 
  2884  0FE8                     	;# 
  2885  0FE9                     	;# 
  2886  0FEA                     	;# 
  2887  0FEB                     	;# 
  2888  0FED                     	;# 
  2889  0FEE                     	;# 
  2890  0FEF                     	;# 
  2891                           
  2892                           	psect	idataCOMMON
  2893  0600                     __pidataCOMMON:	
  2894                           
  2895                           ;initializer for _state
  2896  0600  3403               	retlw	3
  2897                           
  2898                           ;initializer for _readMessage
  2899  0601  34FF               	retlw	255
  2900                           
  2901                           ;initializer for _GLBL_Resp8
  2902  0602  34FF               	retlw	255
  2903                           
  2904                           	psect	idataBANK0
  2905  0603                     __pidataBANK0:	
  2906                           
  2907                           ;initializer for _buffer_write_index
  2908  0603  3401               	retlw	1
  2909  0604  3400               	retlw	0
  2910                           
  2911                           ;initializer for _isPlaying
  2912  0605  3401               	retlw	1
  2913                           
  2914                           	psect	idataBANK1
  2915  05EC                     __pidataBANK1:	
  2916                           
  2917                           ;initializer for _GLBL_Resp40
  2918  05EC  34FF               	retlw	255
  2919  05ED  34FF               	retlw	255
  2920  05EE  34FF               	retlw	255
  2921  05EF  34FF               	retlw	255
  2922  05F0  34FF               	retlw	255
  2923                           
  2924                           	psect	stringtext1
  2925  006E                     __pstringtext1:	
  2926  006E                     _CRCTable:	
  2927  006E  3400               	retlw	0
  2928  006F  3409               	retlw	9
  2929  0070  3412               	retlw	18
  2930  0071  341B               	retlw	27
  2931  0072  3424               	retlw	36
  2932  0073  342D               	retlw	45
  2933  0074  3436               	retlw	54
  2934  0075  343F               	retlw	63
  2935  0076  3448               	retlw	72
  2936  0077  3441               	retlw	65
  2937  0078  345A               	retlw	90
  2938  0079  3453               	retlw	83
  2939  007A  346C               	retlw	108
  2940  007B  3465               	retlw	101
  2941  007C  347E               	retlw	126
  2942  007D  3477               	retlw	119
  2943  007E  3419               	retlw	25
  2944  007F  3410               	retlw	16
  2945  0080  340B               	retlw	11
  2946  0081  3402               	retlw	2
  2947  0082  343D               	retlw	61
  2948  0083  3434               	retlw	52
  2949  0084  342F               	retlw	47
  2950  0085  3426               	retlw	38
  2951  0086  3451               	retlw	81
  2952  0087  3458               	retlw	88
  2953  0088  3443               	retlw	67
  2954  0089  344A               	retlw	74
  2955  008A  3475               	retlw	117
  2956  008B  347C               	retlw	124
  2957  008C  3467               	retlw	103
  2958  008D  346E               	retlw	110
  2959  008E  3432               	retlw	50
  2960  008F  343B               	retlw	59
  2961  0090  3420               	retlw	32
  2962  0091  3429               	retlw	41
  2963  0092  3416               	retlw	22
  2964  0093  341F               	retlw	31
  2965  0094  3404               	retlw	4
  2966  0095  340D               	retlw	13
  2967  0096  347A               	retlw	122
  2968  0097  3473               	retlw	115
  2969  0098  3468               	retlw	104
  2970  0099  3461               	retlw	97
  2971  009A  345E               	retlw	94
  2972  009B  3457               	retlw	87
  2973  009C  344C               	retlw	76
  2974  009D  3445               	retlw	69
  2975  009E  342B               	retlw	43
  2976  009F  3422               	retlw	34
  2977  00A0  3439               	retlw	57
  2978  00A1  3430               	retlw	48
  2979  00A2  340F               	retlw	15
  2980  00A3  3406               	retlw	6
  2981  00A4  341D               	retlw	29
  2982  00A5  3414               	retlw	20
  2983  00A6  3463               	retlw	99
  2984  00A7  346A               	retlw	106
  2985  00A8  3471               	retlw	113
  2986  00A9  3478               	retlw	120
  2987  00AA  3447               	retlw	71
  2988  00AB  344E               	retlw	78
  2989  00AC  3455               	retlw	85
  2990  00AD  345C               	retlw	92
  2991  00AE  3464               	retlw	100
  2992  00AF  346D               	retlw	109
  2993  00B0  3476               	retlw	118
  2994  00B1  347F               	retlw	127
  2995  00B2  3440               	retlw	64
  2996  00B3  3449               	retlw	73
  2997  00B4  3452               	retlw	82
  2998  00B5  345B               	retlw	91
  2999  00B6  342C               	retlw	44
  3000  00B7  3425               	retlw	37
  3001  00B8  343E               	retlw	62
  3002  00B9  3437               	retlw	55
  3003  00BA  3408               	retlw	8
  3004  00BB  3401               	retlw	1
  3005  00BC  341A               	retlw	26
  3006  00BD  3413               	retlw	19
  3007  00BE  347D               	retlw	125
  3008  00BF  3474               	retlw	116
  3009  00C0  346F               	retlw	111
  3010  00C1  3466               	retlw	102
  3011  00C2  3459               	retlw	89
  3012  00C3  3450               	retlw	80
  3013  00C4  344B               	retlw	75
  3014  00C5  3442               	retlw	66
  3015  00C6  3435               	retlw	53
  3016  00C7  343C               	retlw	60
  3017  00C8  3427               	retlw	39
  3018  00C9  342E               	retlw	46
  3019  00CA  3411               	retlw	17
  3020  00CB  3418               	retlw	24
  3021  00CC  3403               	retlw	3
  3022  00CD  340A               	retlw	10
  3023  00CE  3456               	retlw	86
  3024  00CF  345F               	retlw	95
  3025  00D0  3444               	retlw	68
  3026  00D1  344D               	retlw	77
  3027  00D2  3472               	retlw	114
  3028  00D3  347B               	retlw	123
  3029  00D4  3460               	retlw	96
  3030  00D5  3469               	retlw	105
  3031  00D6  341E               	retlw	30
  3032  00D7  3417               	retlw	23
  3033  00D8  340C               	retlw	12
  3034  00D9  3405               	retlw	5
  3035  00DA  343A               	retlw	58
  3036  00DB  3433               	retlw	51
  3037  00DC  3428               	retlw	40
  3038  00DD  3421               	retlw	33
  3039  00DE  344F               	retlw	79
  3040  00DF  3446               	retlw	70
  3041  00E0  345D               	retlw	93
  3042  00E1  3454               	retlw	84
  3043  00E2  346B               	retlw	107
  3044  00E3  3462               	retlw	98
  3045  00E4  3479               	retlw	121
  3046  00E5  3470               	retlw	112
  3047  00E6  3407               	retlw	7
  3048  00E7  340E               	retlw	14
  3049  00E8  3415               	retlw	21
  3050  00E9  341C               	retlw	28
  3051  00EA  3423               	retlw	35
  3052  00EB  342A               	retlw	42
  3053  00EC  3431               	retlw	49
  3054  00ED  3438               	retlw	56
  3055  00EE  3441               	retlw	65
  3056  00EF  3448               	retlw	72
  3057  00F0  3453               	retlw	83
  3058  00F1  345A               	retlw	90
  3059  00F2  3465               	retlw	101
  3060  00F3  346C               	retlw	108
  3061  00F4  3477               	retlw	119
  3062  00F5  347E               	retlw	126
  3063  00F6  3409               	retlw	9
  3064  00F7  3400               	retlw	0
  3065  00F8  341B               	retlw	27
  3066  00F9  3412               	retlw	18
  3067  00FA  342D               	retlw	45
  3068  00FB  3424               	retlw	36
  3069  00FC  343F               	retlw	63
  3070  00FD  3436               	retlw	54
  3071  00FE  3458               	retlw	88
  3072  00FF  3451               	retlw	81
  3073  0100  344A               	retlw	74
  3074  0101  3443               	retlw	67
  3075  0102  347C               	retlw	124
  3076  0103  3475               	retlw	117
  3077  0104  346E               	retlw	110
  3078  0105  3467               	retlw	103
  3079  0106  3410               	retlw	16
  3080  0107  3419               	retlw	25
  3081  0108  3402               	retlw	2
  3082  0109  340B               	retlw	11
  3083  010A  3434               	retlw	52
  3084  010B  343D               	retlw	61
  3085  010C  3426               	retlw	38
  3086  010D  342F               	retlw	47
  3087  010E  3473               	retlw	115
  3088  010F  347A               	retlw	122
  3089  0110  3461               	retlw	97
  3090  0111  3468               	retlw	104
  3091  0112  3457               	retlw	87
  3092  0113  345E               	retlw	94
  3093  0114  3445               	retlw	69
  3094  0115  344C               	retlw	76
  3095  0116  343B               	retlw	59
  3096  0117  3432               	retlw	50
  3097  0118  3429               	retlw	41
  3098  0119  3420               	retlw	32
  3099  011A  341F               	retlw	31
  3100  011B  3416               	retlw	22
  3101  011C  340D               	retlw	13
  3102  011D  3404               	retlw	4
  3103  011E  346A               	retlw	106
  3104  011F  3463               	retlw	99
  3105  0120  3478               	retlw	120
  3106  0121  3471               	retlw	113
  3107  0122  344E               	retlw	78
  3108  0123  3447               	retlw	71
  3109  0124  345C               	retlw	92
  3110  0125  3455               	retlw	85
  3111  0126  3422               	retlw	34
  3112  0127  342B               	retlw	43
  3113  0128  3430               	retlw	48
  3114  0129  3439               	retlw	57
  3115  012A  3406               	retlw	6
  3116  012B  340F               	retlw	15
  3117  012C  3414               	retlw	20
  3118  012D  341D               	retlw	29
  3119  012E  3425               	retlw	37
  3120  012F  342C               	retlw	44
  3121  0130  3437               	retlw	55
  3122  0131  343E               	retlw	62
  3123  0132  3401               	retlw	1
  3124  0133  3408               	retlw	8
  3125  0134  3413               	retlw	19
  3126  0135  341A               	retlw	26
  3127  0136  346D               	retlw	109
  3128  0137  3464               	retlw	100
  3129  0138  347F               	retlw	127
  3130  0139  3476               	retlw	118
  3131  013A  3449               	retlw	73
  3132  013B  3440               	retlw	64
  3133  013C  345B               	retlw	91
  3134  013D  3452               	retlw	82
  3135  013E  343C               	retlw	60
  3136  013F  3435               	retlw	53
  3137  0140  342E               	retlw	46
  3138  0141  3427               	retlw	39
  3139  0142  3418               	retlw	24
  3140  0143  3411               	retlw	17
  3141  0144  340A               	retlw	10
  3142  0145  3403               	retlw	3
  3143  0146  3474               	retlw	116
  3144  0147  347D               	retlw	125
  3145  0148  3466               	retlw	102
  3146  0149  346F               	retlw	111
  3147  014A  3450               	retlw	80
  3148  014B  3459               	retlw	89
  3149  014C  3442               	retlw	66
  3150  014D  344B               	retlw	75
  3151  014E  3417               	retlw	23
  3152  014F  341E               	retlw	30
  3153  0150  3405               	retlw	5
  3154  0151  340C               	retlw	12
  3155  0152  3433               	retlw	51
  3156  0153  343A               	retlw	58
  3157  0154  3421               	retlw	33
  3158  0155  3428               	retlw	40
  3159  0156  345F               	retlw	95
  3160  0157  3456               	retlw	86
  3161  0158  344D               	retlw	77
  3162  0159  3444               	retlw	68
  3163  015A  347B               	retlw	123
  3164  015B  3472               	retlw	114
  3165  015C  3469               	retlw	105
  3166  015D  3460               	retlw	96
  3167  015E  340E               	retlw	14
  3168  015F  3407               	retlw	7
  3169  0160  341C               	retlw	28
  3170  0161  3415               	retlw	21
  3171  0162  342A               	retlw	42
  3172  0163  3423               	retlw	35
  3173  0164  3438               	retlw	56
  3174  0165  3431               	retlw	49
  3175  0166  3446               	retlw	70
  3176  0167  344F               	retlw	79
  3177  0168  3454               	retlw	84
  3178  0169  345D               	retlw	93
  3179  016A  3462               	retlw	98
  3180  016B  346B               	retlw	107
  3181  016C  3470               	retlw	112
  3182  016D  3479               	retlw	121
  3183  016E                     __end_of_CRCTable:	
  3184  000B                     _INTCONbits	set	11
  3185  0011                     _PIR1bits	set	17
  3186  000E                     _PORTCbits	set	14
  3187  008C                     _TRISA	set	140
  3188  008E                     _TRISCbits	set	142
  3189  008D                     _TRISBbits	set	141
  3190  009C                     _OSCSTATbits	set	156
  3191  009B                     _OSCCON	set	155
  3192  0091                     _PIE1bits	set	145
  3193  0477                     _TRISC7	set	1143
  3194  0474                     _TRISC4	set	1140
  3195  0473                     _TRISC3	set	1139
  3196  0472                     _TRISC2	set	1138
  3197  018D                     _ANSELBbits	set	397
  3198  0C73                     _ANSC3	set	3187
  3199  0214                     _SSP1STATbits	set	532
  3200  0211                     _SSP1BUF	set	529
  3201  0212                     _SSP1ADD	set	530
  3202  0215                     _SSP1CON1	set	533
  3203  0214                     _SSP1STAT	set	532
  3204  0215                     _SSP1CON1bits	set	533
  3205  0495                     _T2CON	set	1173
  3206  0497                     _T2CLKCON	set	1175
  3207  0494                     _T2PR	set	1172
  3208  058E                     _DAC1CON0	set	1422
  3209  058F                     _DAC1REFL	set	1423
  3210  0590                     _DAC1REFH	set	1424
  3211  2C68                     _DAC1LD	set	11368
  3212  0E3B                     _SSPDATPPS	set	3643
  3213  0E3A                     _SSPCLKPPS	set	3642
  3214  0EA4                     _RC4PPS	set	3748
  3215  0EA2                     _RC2PPS	set	3746
  3216  016E                     STR_5:	
  3217  016E  3466               	retlw	102	;'f'
  3218  016F  346D               	retlw	109	;'m'
  3219  0170  3474               	retlw	116	;'t'
  3220  0171  3420               	retlw	32	;' '
  3221  0172  3400               	retlw	0
  3222                           
  3223                           	psect	stringtext2
  3224  05F1                     __pstringtext2:	
  3225  05F1                     STR_3:	
  3226  05F1  3457               	retlw	87	;'W'
  3227  05F2  3441               	retlw	65	;'A'
  3228  05F3  3456               	retlw	86	;'V'
  3229  05F4  3445               	retlw	69	;'E'
  3230  05F5  3400               	retlw	0
  3231                           
  3232                           	psect	stringtext3
  3233  05F6                     __pstringtext3:	
  3234  05F6                     STR_1:	
  3235  05F6  3452               	retlw	82	;'R'
  3236  05F7  3449               	retlw	73	;'I'
  3237  05F8  3446               	retlw	70	;'F'
  3238  05F9  3446               	retlw	70	;'F'
  3239  05FA  3400               	retlw	0
  3240                           
  3241                           	psect	stringtext4
  3242  05FB                     __pstringtext4:	
  3243  05FB                     STR_7:	
  3244  05FB  3464               	retlw	100	;'d'
  3245  05FC  3461               	retlw	97	;'a'
  3246  05FD  3474               	retlw	116	;'t'
  3247  05FE  3461               	retlw	97	;'a'
  3248  05FF  3400               	retlw	0
  3249                           
  3250                           	psect	stringtext5
  3251  0000                     __pstringtext5:	
  3252  016E                     
  3253                           ; #config settings
  3254  0000                     
  3255                           	psect	cinit
  3256  002E                     start_initialization:	
  3257  002E                     __initialization:	
  3258                           
  3259                           ; Initialize objects allocated to COMMON
  3260  002E  3000               	movlw	low __pidataCOMMON
  3261  002F  0084               	movwf	4
  3262  0030  3086               	movlw	(high __pidataCOMMON)| (0+128)
  3263  0031  0085               	movwf	5
  3264  0032  3076               	movlw	low __pdataCOMMON
  3265  0033  0086               	movwf	6
  3266  0034  3000               	movlw	high __pdataCOMMON
  3267  0035  0087               	movwf	7
  3268  0036  3003               	movlw	3
  3269  0037  3185  25E0  3180   	fcall	init_ram
  3270                           
  3271                           ; Initialize objects allocated to BANK0
  3272  003A  3003               	movlw	low __pidataBANK0
  3273  003B  0084               	movwf	4
  3274  003C  3086               	movlw	(high __pidataBANK0)| (0+128)
  3275  003D  0085               	movwf	5
  3276  003E  3044               	movlw	low __pdataBANK0
  3277  003F  0086               	movwf	6
  3278  0040  3000               	movlw	high __pdataBANK0
  3279  0041  0087               	movwf	7
  3280  0042  3003               	movlw	3
  3281  0043  3185  25E0  3180   	fcall	init_ram
  3282                           
  3283                           ; Initialize objects allocated to BANK1
  3284  0046  30EC               	movlw	low __pidataBANK1
  3285  0047  0084               	movwf	4
  3286  0048  3085               	movlw	(high __pidataBANK1)| (0+128)
  3287  0049  0085               	movwf	5
  3288  004A  30D9               	movlw	low __pdataBANK1
  3289  004B  0086               	movwf	6
  3290  004C  3000               	movlw	high __pdataBANK1
  3291  004D  0087               	movwf	7
  3292  004E  3005               	movlw	5
  3293  004F  3185  25E0  3180   	fcall	init_ram
  3294                           
  3295                           ; Clear objects allocated to COMMON
  3296  0052  01F9               	clrf	__pbssCOMMON& (0+127)
  3297                           
  3298                           ; Clear objects allocated to BANK0
  3299  0053  3039               	movlw	low __pbssBANK0
  3300  0054  0084               	movwf	4
  3301  0055  3000               	movlw	high __pbssBANK0
  3302  0056  0085               	movwf	5
  3303  0057  300B               	movlw	11
  3304  0058  3185  25E6  3180   	fcall	clear_ram0
  3305                           
  3306                           ; Clear objects allocated to BANK1
  3307  005B  30CD               	movlw	low __pbssBANK1
  3308  005C  0084               	movwf	4
  3309  005D  3000               	movlw	high __pbssBANK1
  3310  005E  0085               	movwf	5
  3311  005F  300C               	movlw	12
  3312  0060  3185  25E6  3180   	fcall	clear_ram0
  3313                           
  3314                           ; Clear objects allocated to BANK2
  3315  0063  3020               	movlw	low __pbssBANK2
  3316  0064  0084               	movwf	4
  3317  0065  3001               	movlw	high __pbssBANK2
  3318  0066  0085               	movwf	5
  3319  0067  3040               	movlw	64
  3320  0068  3185  25E6         	fcall	clear_ram0
  3321  006A                     end_of_initialization:	
  3322                           ;End of C runtime variable initialization code
  3323                           
  3324  006A                     __end_of__initialization:	
  3325  006A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3326  006B  0020               	movlb	0
  3327  006C  3181  2973         	ljmp	_main	;jump to C main() function
  3328                           
  3329                           	psect	bssCOMMON
  3330  0079                     __pbssCOMMON:	
  3331  0079                     _global_error:	
  3332  0079                     	ds	1
  3333                           
  3334                           	psect	dataCOMMON
  3335  0076                     __pdataCOMMON:	
  3336  0076                     _state:	
  3337  0076                     	ds	1
  3338  0077                     _readMessage:	
  3339  0077                     	ds	1
  3340  0078                     _GLBL_Resp8:	
  3341  0078                     	ds	1
  3342                           
  3343                           	psect	bssBANK0
  3344  0039                     __pbssBANK0:	
  3345  0039                     _blockIndex:	
  3346  0039                     	ds	2
  3347  003B                     _buffer_read_index:	
  3348  003B                     	ds	2
  3349  003D                     _sdata:	
  3350  003D                     	ds	2
  3351  003F                     _bitsPerSamp:	
  3352  003F                     	ds	2
  3353  0041                     _channels:	
  3354  0041                     	ds	2
  3355  0043                     _samplePending:	
  3356  0043                     	ds	1
  3357                           
  3358                           	psect	dataBANK0
  3359  0044                     __pdataBANK0:	
  3360  0044                     _buffer_write_index:	
  3361  0044                     	ds	2
  3362  0046                     _isPlaying:	
  3363  0046                     	ds	1
  3364                           
  3365                           	psect	bssBANK1
  3366  00CD                     __pbssBANK1:	
  3367  00CD                     _address:	
  3368  00CD                     	ds	4
  3369  00D1                     _filesize:	
  3370  00D1                     	ds	4
  3371  00D5                     _sampRate:	
  3372  00D5                     	ds	4
  3373                           
  3374                           	psect	dataBANK1
  3375  00D9                     __pdataBANK1:	
  3376  00D9                     _GLBL_Resp40:	
  3377  00D9                     	ds	5
  3378                           
  3379                           	psect	bssBANK2
  3380  0120                     __pbssBANK2:	
  3381  0120                     _buffer:	
  3382  0120                     	ds	64
  3383                           
  3384                           	psect	inittext
  3385  05E0                     init_ram:	
  3386  05E0  00FE               	movwf	126
  3387  05E1                     initloop:	
  3388  05E1  0012               	moviw fsr0++
  3389  05E2  001E               	movwi fsr1++
  3390  05E3  0BFE               	decfsz	126,f
  3391  05E4  2DE1               	goto	initloop
  3392  05E5  3400               	retlw	0
  3393                           
  3394                           	psect	clrtext
  3395  05E6                     clear_ram0:	
  3396                           ;	Called with FSR0 containing the base address, and
  3397                           ;	WREG with the size to clear
  3398                           
  3399  05E6  0064               	clrwdt	;clear the watchdog before getting into this loop
  3400  05E7                     clrloop0:	
  3401  05E7  0180               	clrf	0	;clear RAM location pointed to by FSR
  3402  05E8  3101               	addfsr 0,1
  3403  05E9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3404  05EA  2DE7               	goto	clrloop0	;have we reached the end yet?
  3405  05EB  3400               	retlw	0	;all done for this memory range, return
  3406                           
  3407                           	psect	cstackBANK1
  3408  00A0                     __pcstackBANK1:	
  3409  00A0                     openFile@riff:	
  3410                           
  3411                           ; 8 bytes @ 0x0
  3412  00A0                     	ds	8
  3413  00A8                     openFile@response:	
  3414                           
  3415                           ; 1 bytes @ 0x8
  3416  00A8                     	ds	1
  3417  00A9                     openFile@data:	
  3418                           
  3419                           ; 8 bytes @ 0x9
  3420  00A9                     	ds	8
  3421  00B1                     openFile@fmt:	
  3422                           
  3423                           ; 28 bytes @ 0x11
  3424  00B1                     	ds	28
  3425                           
  3426                           	psect	cstackCOMMON
  3427  0070                     __pcstackCOMMON:	
  3428  0070                     ?_SPI_Write:	
  3429  0070                     ?_SD_Read8bitResponse:	
  3430                           ; 1 bytes @ 0x0
  3431                           
  3432  0070                     ?_SD_Check8bitResponse:	
  3433                           ; 1 bytes @ 0x0
  3434                           
  3435  0070                     ?_SD_Read40bitResponse:	
  3436                           ; 1 bytes @ 0x0
  3437                           
  3438  0070                     ?_SPI_Read:	
  3439                           ; 1 bytes @ 0x0
  3440                           
  3441  0070                     ?_DAC_Init:	
  3442                           ; 1 bytes @ 0x0
  3443                           
  3444  0070                     ?_SD_Init:	
  3445                           ; 1 bytes @ 0x0
  3446                           
  3447  0070                     ?_SD_CloseBlock:	
  3448                           ; 1 bytes @ 0x0
  3449                           
  3450  0070                     ?_SPI_Init:	
  3451                           ; 1 bytes @ 0x0
  3452                           
  3453  0070                     ?_error:	
  3454                           ; 1 bytes @ 0x0
  3455                           
  3456  0070                     ?_init:	
  3457                           ; 1 bytes @ 0x0
  3458                           
  3459  0070                     ?_isr:	
  3460                           ; 1 bytes @ 0x0
  3461                           
  3462  0070                     ??_isr:	
  3463                           ; 1 bytes @ 0x0
  3464                           
  3465  0070                     ?_main:	
  3466                           ; 1 bytes @ 0x0
  3467                           
  3468                           
  3469                           ; 1 bytes @ 0x0
  3470  0070                     	ds	2
  3471  0072                     isr@level:	
  3472                           
  3473                           ; 2 bytes @ 0x2
  3474  0072                     	ds	2
  3475  0074                     ??_SPI_Write:	
  3476  0074                     ??_SD_Check8bitResponse:	
  3477                           ; 1 bytes @ 0x4
  3478                           
  3479  0074                     ??_SD_Check40bitResponse:	
  3480                           ; 1 bytes @ 0x4
  3481                           
  3482  0074                     ??_SPI_Read:	
  3483                           ; 1 bytes @ 0x4
  3484                           
  3485  0074                     ??_DAC_Init:	
  3486                           ; 1 bytes @ 0x4
  3487                           
  3488  0074                     ??_SPI_Init:	
  3489                           ; 1 bytes @ 0x4
  3490                           
  3491  0074                     ??_timer_Init:	
  3492                           ; 1 bytes @ 0x4
  3493                           
  3494  0074                     ??_error:	
  3495                           ; 1 bytes @ 0x4
  3496                           
  3497  0074                     ?_fourCCeq:	
  3498                           ; 1 bytes @ 0x4
  3499                           
  3500  0074                     SD_Check8bitResponse@Byte:	
  3501                           ; 1 bytes @ 0x4
  3502                           
  3503  0074                     SD_Check40bitResponse@Byte4:	
  3504                           ; 1 bytes @ 0x4
  3505                           
  3506  0074                     SPI_Write@Data_8bit:	
  3507                           ; 1 bytes @ 0x4
  3508                           
  3509  0074                     SPI_Read@i:	
  3510                           ; 1 bytes @ 0x4
  3511                           
  3512  0074                     fourCCeq@b:	
  3513                           ; 2 bytes @ 0x4
  3514                           
  3515                           
  3516                           ; 2 bytes @ 0x4
  3517  0074                     	ds	1
  3518  0075                     ??_SD_SendCommand:	
  3519  0075                     SD_Check8bitResponse@match:	
  3520                           ; 1 bytes @ 0x5
  3521                           
  3522  0075                     SD_Check40bitResponse@match:	
  3523                           ; 1 bytes @ 0x5
  3524                           
  3525  0075                     error@e:	
  3526                           ; 1 bytes @ 0x5
  3527                           
  3528                           
  3529                           ; 1 bytes @ 0x5
  3530  0075                     	ds	1
  3531  0076                     ??_SD_CloseBlock:	
  3532  0076                     ??_init:	
  3533                           ; 1 bytes @ 0x6
  3534                           
  3535                           
  3536                           	psect	cstackBANK0
  3537  0020                     __pcstackBANK0:	
  3538                           ; 1 bytes @ 0x6
  3539                           
  3540  0020                     ?_SD_SendCommand:	
  3541  0020                     ??_SD_Read8bitResponse:	
  3542                           ; 1 bytes @ 0x0
  3543                           
  3544  0020                     ??_SD_Read40bitResponse:	
  3545                           ; 1 bytes @ 0x0
  3546                           
  3547  0020                     ?_SD_Check40bitResponse:	
  3548                           ; 1 bytes @ 0x0
  3549                           
  3550  0020                     ??_fourCCeq:	
  3551                           ; 1 bytes @ 0x0
  3552                           
  3553  0020                     ?_readBytes:	
  3554                           ; 1 bytes @ 0x0
  3555                           
  3556  0020                     ?_timer_Init:	
  3557                           ; 1 bytes @ 0x0
  3558                           
  3559  0020                     SD_SendCommand@ARG3:	
  3560                           ; 2 bytes @ 0x0
  3561                           
  3562  0020                     SD_Check40bitResponse@Byte3:	
  3563                           ; 1 bytes @ 0x0
  3564                           
  3565  0020                     readBytes@len:	
  3566                           ; 1 bytes @ 0x0
  3567                           
  3568  0020                     timer_Init@rate:	
  3569                           ; 2 bytes @ 0x0
  3570                           
  3571                           
  3572                           ; 4 bytes @ 0x0
  3573  0020                     	ds	1
  3574  0021                     SD_SendCommand@ARG2:	
  3575  0021                     SD_Read8bitResponse@readMessage:	
  3576                           ; 1 bytes @ 0x1
  3577                           
  3578  0021                     SD_Read40bitResponse@readMessage:	
  3579                           ; 1 bytes @ 0x1
  3580                           
  3581  0021                     SD_Check40bitResponse@Byte2:	
  3582                           ; 1 bytes @ 0x1
  3583                           
  3584                           
  3585                           ; 1 bytes @ 0x1
  3586  0021                     	ds	1
  3587  0022                     ??_readBytes:	
  3588  0022                     SD_SendCommand@ARG1:	
  3589                           ; 1 bytes @ 0x2
  3590                           
  3591  0022                     SD_Check40bitResponse@Byte1:	
  3592                           ; 1 bytes @ 0x2
  3593                           
  3594                           
  3595                           ; 1 bytes @ 0x2
  3596  0022                     	ds	1
  3597  0023                     SD_SendCommand@ARG0:	
  3598  0023                     SD_Check40bitResponse@Byte0:	
  3599                           ; 1 bytes @ 0x3
  3600                           
  3601                           
  3602                           ; 1 bytes @ 0x3
  3603  0023                     	ds	1
  3604  0024                     SD_SendCommand@CMD_6bit:	
  3605  0024                     fourCCeq@a:	
  3606                           ; 1 bytes @ 0x4
  3607                           
  3608  0024                     readBytes@dest:	
  3609                           ; 1 bytes @ 0x4
  3610                           
  3611                           
  3612                           ; 1 bytes @ 0x4
  3613  0024                     	ds	1
  3614  0025                     SD_SendCommand@ByteToSend:	
  3615  0025                     fourCCeq@i:	
  3616                           ; 1 bytes @ 0x5
  3617                           
  3618  0025                     readBytes@i:	
  3619                           ; 1 bytes @ 0x5
  3620                           
  3621                           
  3622                           ; 2 bytes @ 0x5
  3623  0025                     	ds	1
  3624  0026                     SD_SendCommand@Checksum:	
  3625                           
  3626                           ; 1 bytes @ 0x6
  3627  0026                     	ds	1
  3628  0027                     ??_SD_Init:	
  3629  0027                     ?_SD_OpenBlock:	
  3630                           ; 1 bytes @ 0x7
  3631                           
  3632  0027                     SD_OpenBlock@address:	
  3633                           ; 1 bytes @ 0x7
  3634                           
  3635                           
  3636                           ; 4 bytes @ 0x7
  3637  0027                     	ds	4
  3638  002B                     ??_SD_OpenBlock:	
  3639                           
  3640                           ; 1 bytes @ 0xB
  3641  002B                     	ds	4
  3642  002F                     SD_OpenBlock@a:	
  3643                           
  3644                           ; 4 bytes @ 0xF
  3645  002F                     	ds	4
  3646  0033                     ?_openFile:	
  3647  0033                     openFile@a:	
  3648                           ; 1 bytes @ 0x13
  3649                           
  3650                           
  3651                           ; 4 bytes @ 0x13
  3652  0033                     	ds	4
  3653  0037                     ??_openFile:	
  3654                           
  3655                           ; 1 bytes @ 0x17
  3656  0037                     	ds	1
  3657  0038                     ??_main:	
  3658                           
  3659                           ; 1 bytes @ 0x18
  3660  0038                     	ds	1
  3661                           
  3662                           	psect	maintext
  3663  0173                     __pmaintext:	
  3664 ;;
  3665 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3666 ;;
  3667 ;; *************** function _main *****************
  3668 ;; Defined at:
  3669 ;;		line 127 in file "main.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;		None
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;		None
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      void 
  3676 ;; Registers used:
  3677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3678 ;; Tracked objects:
  3679 ;;		On entry : B1F/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3685 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3686 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3687 ;;Total ram usage:        1 bytes
  3688 ;; Hardware stack levels required when called:    5
  3689 ;; This function calls:
  3690 ;;		_SD_CloseBlock
  3691 ;;		_SD_OpenBlock
  3692 ;;		_SPI_Read
  3693 ;;		_error
  3694 ;;		_init
  3695 ;;		_openFile
  3696 ;;		_timer_Init
  3697 ;; This function is called by:
  3698 ;;		Startup code after reset
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           
  3703                           ;psect for function _main
  3704  0173                     _main:	
  3705                           
  3706                           ;main.c: 129:     init();
  3707                           
  3708                           ;incstack = 0
  3709                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3710  0173  3185  2586  3181   	fcall	_init
  3711                           
  3712                           ;main.c: 132:         address = 0;
  3713  0176  3000               	movlw	0
  3714  0177  0021               	movlb	1	; select bank1
  3715  0178  00D0               	movwf	(_address+3)^(0+128)
  3716  0179  3000               	movlw	0
  3717  017A  00CF               	movwf	(_address+2)^(0+128)
  3718  017B  3000               	movlw	0
  3719  017C  00CE               	movwf	(_address+1)^(0+128)
  3720  017D  3000               	movlw	0
  3721  017E  00CD               	movwf	_address^(0+128)
  3722                           
  3723                           ;main.c: 134:         openFile(address);
  3724  017F  0850               	movf	(_address+3)^(0+128),w
  3725  0180  0020               	movlb	0	; select bank0
  3726  0181  00B6               	movwf	openFile@a+3
  3727  0182  0021               	movlb	1	; select bank1
  3728  0183  084F               	movf	(_address+2)^(0+128),w
  3729  0184  0020               	movlb	0	; select bank0
  3730  0185  00B5               	movwf	openFile@a+2
  3731  0186  0021               	movlb	1	; select bank1
  3732  0187  084E               	movf	(_address+1)^(0+128),w
  3733  0188  0020               	movlb	0	; select bank0
  3734  0189  00B4               	movwf	openFile@a+1
  3735  018A  0021               	movlb	1	; select bank1
  3736  018B  084D               	movf	_address^(0+128),w
  3737  018C  0020               	movlb	0	; select bank0
  3738  018D  00B3               	movwf	openFile@a
  3739  018E  3182  2241  3181   	fcall	_openFile
  3740                           
  3741                           ;main.c: 135:         __nop();
  3742  0191  0000               	nop
  3743                           
  3744                           ;main.c: 136:         if(channels != 2) samplePending = 0;
  3745  0192  3002               	movlw	2
  3746  0193  0020               	movlb	0	; select bank0
  3747  0194  0641               	xorwf	_channels,w
  3748  0195  0442               	iorwf	_channels+1,w
  3749  0196  1D03               	btfss	3,2
  3750  0197  01C3               	clrf	_samplePending
  3751                           
  3752                           ;main.c: 137:         timer_Init(sampRate);
  3753  0198  0021               	movlb	1	; select bank1
  3754  0199  0858               	movf	(_sampRate+3)^(0+128),w
  3755  019A  0020               	movlb	0	; select bank0
  3756  019B  00A3               	movwf	timer_Init@rate+3
  3757  019C  0021               	movlb	1	; select bank1
  3758  019D  0857               	movf	(_sampRate+2)^(0+128),w
  3759  019E  0020               	movlb	0	; select bank0
  3760  019F  00A2               	movwf	timer_Init@rate+2
  3761  01A0  0021               	movlb	1	; select bank1
  3762  01A1  0856               	movf	(_sampRate+1)^(0+128),w
  3763  01A2  0020               	movlb	0	; select bank0
  3764  01A3  00A1               	movwf	timer_Init@rate+1
  3765  01A4  0021               	movlb	1	; select bank1
  3766  01A5  0855               	movf	_sampRate^(0+128),w
  3767  01A6  0020               	movlb	0	; select bank0
  3768  01A7  00A0               	movwf	timer_Init@rate
  3769  01A8  3184  2420  3181   	fcall	_timer_Init
  3770  01AB                     l2368:	
  3771                           
  3772                           ;main.c: 141:             if (state == CLOSED && isPlaying) {
  3773  01AB  3003               	movlw	3
  3774  01AC  0676               	xorwf	_state,w
  3775  01AD  1D03               	btfss	3,2
  3776  01AE  29CB               	goto	l2376
  3777                           
  3778                           ;main.c: 143:                 SD_OpenBlock(address);
  3779  01AF  0021               	movlb	1	; select bank1
  3780  01B0  0850               	movf	(_address+3)^(0+128),w
  3781  01B1  0020               	movlb	0	; select bank0
  3782  01B2  00AA               	movwf	SD_OpenBlock@address+3
  3783  01B3  0021               	movlb	1	; select bank1
  3784  01B4  084F               	movf	(_address+2)^(0+128),w
  3785  01B5  0020               	movlb	0	; select bank0
  3786  01B6  00A9               	movwf	SD_OpenBlock@address+2
  3787  01B7  0021               	movlb	1	; select bank1
  3788  01B8  084E               	movf	(_address+1)^(0+128),w
  3789  01B9  0020               	movlb	0	; select bank0
  3790  01BA  00A8               	movwf	SD_OpenBlock@address+1
  3791  01BB  0021               	movlb	1	; select bank1
  3792  01BC  084D               	movf	_address^(0+128),w
  3793  01BD  0020               	movlb	0	; select bank0
  3794  01BE  00A7               	movwf	SD_OpenBlock@address
  3795  01BF  3185  2524  3181   	fcall	_SD_OpenBlock
  3796                           
  3797                           ;main.c: 144:                 state = OPENING;
  3798  01C2  3002               	movlw	2
  3799  01C3  0020               	movlb	0	; select bank0
  3800  01C4  00B8               	movwf	??_main
  3801  01C5  0838               	movf	??_main,w
  3802  01C6  00F6               	movwf	_state
  3803                           
  3804                           ;main.c: 146:                 readMessage = 0xFF;
  3805  01C7  30FF               	movlw	255
  3806  01C8  00B8               	movwf	??_main
  3807  01C9  0838               	movf	??_main,w
  3808  01CA  00F7               	movwf	_readMessage
  3809  01CB                     l2376:	
  3810                           
  3811                           ;main.c: 151:             if (state == OPENING) {
  3812  01CB  3002               	movlw	2
  3813  01CC  0676               	xorwf	_state,w
  3814  01CD  1D03               	btfss	3,2
  3815  01CE  29E7               	goto	l2390
  3816                           
  3817                           ;main.c: 152:                 readMessage = SPI_Read();
  3818  01CF  3185  25AB  3181   	fcall	_SPI_Read
  3819  01D2  0020               	movlb	0	; select bank0
  3820  01D3  00B8               	movwf	??_main
  3821  01D4  0838               	movf	??_main,w
  3822  01D5  00F7               	movwf	_readMessage
  3823                           
  3824                           ;main.c: 153:                 if (readMessage != 0xFF) {
  3825  01D6  0A77               	incf	_readMessage,w
  3826  01D7  1903               	btfsc	3,2
  3827  01D8  29E7               	goto	l2390
  3828                           
  3829                           ;main.c: 154:                     if (readMessage == 0xFE){
  3830  01D9  30FE               	movlw	254
  3831  01DA  0677               	xorwf	_readMessage,w
  3832  01DB  1D03               	btfss	3,2
  3833  01DC  29DF               	goto	l2386
  3834                           
  3835                           ;main.c: 155:                         state = OPEN;
  3836  01DD  01F6               	clrf	_state
  3837                           
  3838                           ;main.c: 156:                     } else {
  3839  01DE  29E7               	goto	l2390
  3840  01DF                     l2386:	
  3841                           
  3842                           ;main.c: 157:                         state = CLOSED;
  3843  01DF  3003               	movlw	3
  3844  01E0  00B8               	movwf	??_main
  3845  01E1  0838               	movf	??_main,w
  3846  01E2  00F6               	movwf	_state
  3847                           
  3848                           ;main.c: 158:                         error(OPEN_BLOCK);
  3849  01E3  3000               	movlw	0
  3850  01E4  3185  25CB  3181   	fcall	_error
  3851  01E7                     l2390:	
  3852                           
  3853                           ;main.c: 163:             if (state == OPEN) {
  3854  01E7  0876               	movf	_state,w
  3855  01E8  1D03               	btfss	3,2
  3856  01E9  29AB               	goto	l2368
  3857                           
  3858                           ;main.c: 164:                 if (blockIndex >= 512) {
  3859  01EA  0020               	movlb	0	; select bank0
  3860  01EB  083A               	movf	_blockIndex+1,w
  3861  01EC  3A80               	xorlw	128
  3862  01ED  00B8               	movwf	??_main
  3863  01EE  3082               	movlw	130
  3864  01EF  0238               	subwf	??_main,w
  3865  01F0  1D03               	skipz
  3866  01F1  29F4               	goto	u1085
  3867  01F2  3000               	movlw	0
  3868  01F3  0239               	subwf	_blockIndex,w
  3869  01F4                     u1085:	
  3870  01F4  1C03               	skipc
  3871  01F5  2A0A               	goto	l2402
  3872                           
  3873                           ;main.c: 165:                     SD_CloseBlock();
  3874  01F6  3185  25B9  3181   	fcall	_SD_CloseBlock
  3875                           
  3876                           ;main.c: 166:                     ++address;
  3877  01F9  3001               	movlw	1
  3878  01FA  0021               	movlb	1	; select bank1
  3879  01FB  07CD               	addwf	_address^(0+128),f
  3880  01FC  3000               	movlw	0
  3881  01FD  3DCE               	addwfc	(_address+1)^(0+128),f
  3882  01FE  3000               	movlw	0
  3883  01FF  3DCF               	addwfc	(_address+2)^(0+128),f
  3884  0200  3000               	movlw	0
  3885  0201  3DD0               	addwfc	(_address+3)^(0+128),f
  3886                           
  3887                           ;main.c: 167:                     blockIndex = 0;
  3888  0202  0020               	movlb	0	; select bank0
  3889  0203  01B9               	clrf	_blockIndex
  3890  0204  01BA               	clrf	_blockIndex+1
  3891                           
  3892                           ;main.c: 168:                     state = CLOSED;
  3893  0205  3003               	movlw	3
  3894  0206  00B8               	movwf	??_main
  3895  0207  0838               	movf	??_main,w
  3896  0208  00F6               	movwf	_state
  3897                           
  3898                           ;main.c: 169:                 } else if (buffer_write_index != buffer_read_index) {
  3899  0209  29AB               	goto	l2368
  3900  020A                     l2402:	
  3901  020A  0020               	movlb	0	; select bank0
  3902  020B  083C               	movf	_buffer_read_index+1,w
  3903  020C  0645               	xorwf	_buffer_write_index+1,w
  3904  020D  1D03               	skipz
  3905  020E  2A11               	goto	u1095
  3906  020F  083B               	movf	_buffer_read_index,w
  3907  0210  0644               	xorwf	_buffer_write_index,w
  3908  0211                     u1095:	
  3909  0211  1903               	skipnz
  3910  0212  29AB               	goto	l2368
  3911                           
  3912                           ;main.c: 193:                     PORTCbits.RC0 = 1;
  3913  0213  140E               	bsf	14,0	;volatile
  3914                           
  3915                           ;main.c: 194:                     sdata[0] = SPI_Read();
  3916  0214  3185  25AB  3181   	fcall	_SPI_Read
  3917  0217  0020               	movlb	0	; select bank0
  3918  0218  00B8               	movwf	??_main
  3919  0219  0838               	movf	??_main,w
  3920  021A  00BD               	movwf	_sdata
  3921                           
  3922                           ;main.c: 195:                     sdata[1] = SPI_Read();
  3923  021B  3185  25AB  3181   	fcall	_SPI_Read
  3924  021E  0020               	movlb	0	; select bank0
  3925  021F  00B8               	movwf	??_main
  3926  0220  0838               	movf	??_main,w
  3927  0221  00BE               	movwf	_sdata+1
  3928                           
  3929                           ;main.c: 197:                     buffer[ buffer_write_index++ ] = *((short*)sdata);
  3930  0222  303D               	movlw	low (_sdata| 0)
  3931  0223  0086               	movwf	6
  3932  0224  0187               	clrf	7
  3933  0225  3544               	lslf	_buffer_write_index,w
  3934  0226  3E20               	addlw	(low (_buffer| (0+256)))& (0+255)
  3935  0227  0084               	movwf	4
  3936  0228  3001               	movlw	1	; select bank2/3
  3937  0229  0085               	movwf	5
  3938  022A  3F40               	moviw [0]fsr1
  3939  022B  3F80               	movwi [0]fsr0
  3940  022C  3F41               	moviw [1]fsr1
  3941  022D  3F81               	movwi [1]fsr0
  3942  022E  3001               	movlw	1
  3943  022F  07C4               	addwf	_buffer_write_index,f
  3944  0230  3000               	movlw	0
  3945  0231  3DC5               	addwfc	_buffer_write_index+1,f
  3946                           
  3947                           ;main.c: 198:                     PORTCbits.RC0 = 0;
  3948  0232  100E               	bcf	14,0	;volatile
  3949                           
  3950                           ;main.c: 204:                     if (buffer_write_index >= 32) buffer_write_index = 0;
  3951  0233  3000               	movlw	0
  3952  0234  0245               	subwf	_buffer_write_index+1,w
  3953  0235  3020               	movlw	32
  3954  0236  1903               	skipnz
  3955  0237  0244               	subwf	_buffer_write_index,w
  3956  0238  1C03               	skipc
  3957  0239  2A3C               	goto	l2418
  3958  023A  01C4               	clrf	_buffer_write_index
  3959  023B  01C5               	clrf	_buffer_write_index+1
  3960  023C                     l2418:	
  3961                           
  3962                           ;main.c: 205:                     blockIndex += 2;
  3963  023C  3002               	movlw	2
  3964  023D  07B9               	addwf	_blockIndex,f
  3965  023E  3000               	movlw	0
  3966  023F  3DBA               	addwfc	_blockIndex+1,f
  3967                           
  3968                           ;main.c: 208:             }
  3969  0240  29AB               	goto	l2368
  3970  0241                     __end_of_main:	
  3971                           
  3972                           	psect	text1
  3973  0420                     __ptext1:	
  3974 ;; *************** function _timer_Init *****************
  3975 ;; Defined at:
  3976 ;;		line 8 in file "timer.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  rate            4    0[BANK0 ] long 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  2    0[BANK0 ] int 
  3983 ;; Registers used:
  3984 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3990 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3993 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3994 ;;Total ram usage:        4 bytes
  3995 ;; Hardware stack levels used:    1
  3996 ;; Hardware stack levels required when called:    1
  3997 ;; This function calls:
  3998 ;;		Nothing
  3999 ;; This function is called by:
  4000 ;;		_main
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           
  4005                           ;psect for function _timer_Init
  4006  0420                     _timer_Init:	
  4007                           
  4008                           ;timer.c: 9:     PIR1bits.TMR2IF = 0;
  4009                           
  4010                           ;incstack = 0
  4011                           ; Regs used in _timer_Init: [wreg-fsr0h+status,2+status,0]
  4012  0420  0020               	movlb	0	; select bank0
  4013  0421  1091               	bcf	17,1	;volatile
  4014                           
  4015                           ;timer.c: 10:     PIE1bits.TMR2IE = 1;
  4016  0422  0021               	movlb	1	; select bank1
  4017  0423  1491               	bsf	17,1	;volatile
  4018                           
  4019                           ;timer.c: 11:     INTCONbits.PEIE = 1;
  4020  0424  170B               	bsf	11,6	;volatile
  4021                           
  4022                           ;timer.c: 12:     INTCONbits.GIE = 1;
  4023  0425  178B               	bsf	11,7	;volatile
  4024                           
  4025                           ;timer.c: 14:     switch (rate) {
  4026  0426  2C51               	goto	l2264
  4027  0427                     l2236:	
  4028                           
  4029                           ;timer.c: 16:             T2PR = 100;
  4030  0427  3064               	movlw	100
  4031  0428  0029               	movlb	9	; select bank9
  4032  0429  0094               	movwf	20	;volatile
  4033                           
  4034                           ;timer.c: 17:             T2CLKCON = 0x03;
  4035  042A  3003               	movlw	3
  4036  042B  0097               	movwf	23	;volatile
  4037                           
  4038                           ;timer.c: 18:             T2CON = 0x89;
  4039  042C  3089               	movlw	137
  4040  042D  0095               	movwf	21	;volatile
  4041                           
  4042                           ;timer.c: 19:             PIR1bits.TMR2IF = 0;
  4043  042E  0020               	movlb	0	; select bank0
  4044  042F  1091               	bcf	17,1	;volatile
  4045  0430  0008               	return
  4046  0431                     l2244:	
  4047                           
  4048                           ;timer.c: 23:             T2PR = 32;
  4049  0431  3020               	movlw	32
  4050  0432  0029               	movlb	9	; select bank9
  4051  0433  0094               	movwf	20	;volatile
  4052                           
  4053                           ;timer.c: 24:             T2CLKCON = 0x03;
  4054  0434  3003               	movlw	3
  4055  0435  0097               	movwf	23	;volatile
  4056                           
  4057                           ;timer.c: 25:             T2CON = 0x8A;
  4058  0436  308A               	movlw	138
  4059  0437  0095               	movwf	21	;volatile
  4060  0438  0008               	return
  4061  0439                     l2250:	
  4062                           
  4063                           ;timer.c: 29:             T2PR = 111;
  4064  0439  306F               	movlw	111
  4065  043A  0029               	movlb	9	; select bank9
  4066  043B  0094               	movwf	20	;volatile
  4067                           
  4068                           ;timer.c: 30:             T2CLKCON = 0x03;
  4069  043C  3003               	movlw	3
  4070  043D  0097               	movwf	23	;volatile
  4071                           
  4072                           ;timer.c: 31:             T2CON = 0x82;
  4073  043E  3082               	movlw	130
  4074  043F  0095               	movwf	21	;volatile
  4075  0440  0008               	return
  4076  0441                     l2256:	
  4077                           
  4078                           ;timer.c: 35:             T2PR = 100;
  4079  0441  3064               	movlw	100
  4080  0442  0029               	movlb	9	; select bank9
  4081  0443  0094               	movwf	20	;volatile
  4082                           
  4083                           ;timer.c: 36:             T2CLKCON = 0x03;
  4084  0444  3003               	movlw	3
  4085  0445  0097               	movwf	23	;volatile
  4086                           
  4087                           ;timer.c: 37:             T2CON = 0x84;
  4088  0446  3084               	movlw	132
  4089  0447  0095               	movwf	21	;volatile
  4090                           
  4091                           ;timer.c: 38:         break;
  4092  0448  0008               	return
  4093  0449                     l2258:	
  4094                           
  4095                           ;timer.c: 40:             T2PR = 65;
  4096  0449  3041               	movlw	65
  4097  044A  0029               	movlb	9	; select bank9
  4098  044B  0094               	movwf	20	;volatile
  4099                           
  4100                           ;timer.c: 41:             T2CLKCON = 0x03;
  4101  044C  3003               	movlw	3
  4102  044D  0097               	movwf	23	;volatile
  4103                           
  4104                           ;timer.c: 42:             T2CON = 0x8A;
  4105  044E  308A               	movlw	138
  4106  044F  0095               	movwf	21	;volatile
  4107  0450  0008               	return
  4108  0451                     l2264:	
  4109                           
  4110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4111                           ; Switch size 1, requested type "simple"
  4112                           ; Number of cases is 1, Range of values is 0 to 0
  4113                           ; switch strategies available:
  4114                           ; Name         Instructions Cycles
  4115                           ; simple_byte            4     3 (average)
  4116                           ; direct_byte            8     6 (fixed)
  4117                           ; jumptable            260     6 (fixed)
  4118                           ;	Chosen strategy is simple_byte
  4119  0451  0020               	movlb	0	; select bank0
  4120  0452  0823               	movf	timer_Init@rate+3,w
  4121  0453  3A00               	xorlw	0	; case 0
  4122  0454  1903               	skipnz
  4123  0455  2C81               	goto	l2562
  4124  0456  2C86               	goto	l127
  4125  0457                     l2560:	
  4126                           
  4127                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
  4128                           ; Switch size 1, requested type "simple"
  4129                           ; Number of cases is 5, Range of values is 62 to 187
  4130                           ; switch strategies available:
  4131                           ; Name         Instructions Cycles
  4132                           ; simple_byte           16     9 (average)
  4133                           ; direct_byte          261     9 (fixed)
  4134                           ; jumptable            263     9 (fixed)
  4135                           ;	Chosen strategy is simple_byte
  4136  0457  0821               	movf	timer_Init@rate+1,w
  4137  0458  3A3E               	xorlw	62	; case 62
  4138  0459  1903               	skipnz
  4139  045A  2C68               	goto	l2564
  4140  045B  3A68               	xorlw	104	; case 86
  4141  045C  1903               	skipnz
  4142  045D  2C6D               	goto	l2566
  4143  045E  3A2B               	xorlw	43	; case 125
  4144  045F  1903               	skipnz
  4145  0460  2C72               	goto	l2568
  4146  0461  3AD1               	xorlw	209	; case 172
  4147  0462  1903               	skipnz
  4148  0463  2C77               	goto	l2570
  4149  0464  3A17               	xorlw	23	; case 187
  4150  0465  1903               	skipnz
  4151  0466  2C7C               	goto	l2572
  4152  0467  2C86               	goto	l127
  4153  0468                     l2564:	
  4154                           
  4155                           ; Switch size 1, requested type "simple"
  4156                           ; Number of cases is 1, Range of values is 128 to 128
  4157                           ; switch strategies available:
  4158                           ; Name         Instructions Cycles
  4159                           ; simple_byte            4     3 (average)
  4160                           ; direct_byte           11     9 (fixed)
  4161                           ; jumptable            263     9 (fixed)
  4162                           ;	Chosen strategy is simple_byte
  4163  0468  0820               	movf	timer_Init@rate,w
  4164  0469  3A80               	xorlw	128	; case 128
  4165  046A  1903               	skipnz
  4166  046B  2C27               	goto	l2236
  4167  046C  2C86               	goto	l127
  4168  046D                     l2566:	
  4169                           
  4170                           ; Switch size 1, requested type "simple"
  4171                           ; Number of cases is 1, Range of values is 34 to 34
  4172                           ; switch strategies available:
  4173                           ; Name         Instructions Cycles
  4174                           ; simple_byte            4     3 (average)
  4175                           ; direct_byte           11     9 (fixed)
  4176                           ; jumptable            263     9 (fixed)
  4177                           ;	Chosen strategy is simple_byte
  4178  046D  0820               	movf	timer_Init@rate,w
  4179  046E  3A22               	xorlw	34	; case 34
  4180  046F  1903               	skipnz
  4181  0470  2C49               	goto	l2258
  4182  0471  2C86               	goto	l127
  4183  0472                     l2568:	
  4184                           
  4185                           ; Switch size 1, requested type "simple"
  4186                           ; Number of cases is 1, Range of values is 0 to 0
  4187                           ; switch strategies available:
  4188                           ; Name         Instructions Cycles
  4189                           ; simple_byte            4     3 (average)
  4190                           ; direct_byte            8     6 (fixed)
  4191                           ; jumptable            260     6 (fixed)
  4192                           ;	Chosen strategy is simple_byte
  4193  0472  0820               	movf	timer_Init@rate,w
  4194  0473  3A00               	xorlw	0	; case 0
  4195  0474  1903               	skipnz
  4196  0475  2C41               	goto	l2256
  4197  0476  2C86               	goto	l127
  4198  0477                     l2570:	
  4199                           
  4200                           ; Switch size 1, requested type "simple"
  4201                           ; Number of cases is 1, Range of values is 68 to 68
  4202                           ; switch strategies available:
  4203                           ; Name         Instructions Cycles
  4204                           ; simple_byte            4     3 (average)
  4205                           ; direct_byte           11     9 (fixed)
  4206                           ; jumptable            263     9 (fixed)
  4207                           ;	Chosen strategy is simple_byte
  4208  0477  0820               	movf	timer_Init@rate,w
  4209  0478  3A44               	xorlw	68	; case 68
  4210  0479  1903               	skipnz
  4211  047A  2C31               	goto	l2244
  4212  047B  2C86               	goto	l127
  4213  047C                     l2572:	
  4214                           
  4215                           ; Switch size 1, requested type "simple"
  4216                           ; Number of cases is 1, Range of values is 128 to 128
  4217                           ; switch strategies available:
  4218                           ; Name         Instructions Cycles
  4219                           ; simple_byte            4     3 (average)
  4220                           ; direct_byte           11     9 (fixed)
  4221                           ; jumptable            263     9 (fixed)
  4222                           ;	Chosen strategy is simple_byte
  4223  047C  0820               	movf	timer_Init@rate,w
  4224  047D  3A80               	xorlw	128	; case 128
  4225  047E  1903               	skipnz
  4226  047F  2C39               	goto	l2250
  4227  0480  2C86               	goto	l127
  4228  0481                     l2562:	
  4229                           
  4230                           ; Switch size 1, requested type "simple"
  4231                           ; Number of cases is 1, Range of values is 0 to 0
  4232                           ; switch strategies available:
  4233                           ; Name         Instructions Cycles
  4234                           ; simple_byte            4     3 (average)
  4235                           ; direct_byte            8     6 (fixed)
  4236                           ; jumptable            260     6 (fixed)
  4237                           ;	Chosen strategy is simple_byte
  4238  0481  0822               	movf	timer_Init@rate+2,w
  4239  0482  3A00               	xorlw	0	; case 0
  4240  0483  1903               	skipnz
  4241  0484  2C57               	goto	l2560
  4242  0485  2C86               	goto	l127
  4243  0486                     l127:	
  4244  0486  0008               	return
  4245  0487                     __end_of_timer_Init:	
  4246                           
  4247                           	psect	text2
  4248  0241                     __ptext2:	
  4249 ;; *************** function _openFile *****************
  4250 ;; Defined at:
  4251 ;;		line 82 in file "main.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  a               4   19[BANK0 ] long 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  data            8    9[BANK1 ] struct .
  4256 ;;  fmt            28   17[BANK1 ] struct .
  4257 ;;  riff            8    0[BANK1 ] struct .
  4258 ;;  response        1    8[BANK1 ] unsigned char 
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      void 
  4261 ;; Registers used:
  4262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4268 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4269 ;;      Locals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4270 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4271 ;;      Totals:         0       5      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4272 ;;Total ram usage:       50 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; Hardware stack levels required when called:    4
  4275 ;; This function calls:
  4276 ;;		_SD_OpenBlock
  4277 ;;		_SPI_Read
  4278 ;;		_error
  4279 ;;		_fourCCeq
  4280 ;;		_readBytes
  4281 ;; This function is called by:
  4282 ;;		_main
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           
  4287                           ;psect for function _openFile
  4288  0241                     _openFile:	
  4289                           
  4290                           ;main.c: 83:     SD_OpenBlock(a);
  4291                           
  4292                           ;incstack = 0
  4293                           ; Regs used in _openFile: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4294  0241  0020               	movlb	0	; select bank0
  4295  0242  0836               	movf	openFile@a+3,w
  4296  0243  00AA               	movwf	SD_OpenBlock@address+3
  4297  0244  0835               	movf	openFile@a+2,w
  4298  0245  00A9               	movwf	SD_OpenBlock@address+2
  4299  0246  0834               	movf	openFile@a+1,w
  4300  0247  00A8               	movwf	SD_OpenBlock@address+1
  4301  0248  0833               	movf	openFile@a,w
  4302  0249  00A7               	movwf	SD_OpenBlock@address
  4303  024A  3185  2524  3182   	fcall	_SD_OpenBlock
  4304                           
  4305                           ;main.c: 84:     state = OPEN;
  4306  024D  01F6               	clrf	_state
  4307                           
  4308                           ;main.c: 85:     char response = 0xFF;
  4309  024E  30FF               	movlw	255
  4310  024F                     L1:	
  4311  024F  0020               	movlb	0	; select bank0
  4312  0250  00B7               	movwf	??_openFile
  4313  0251  0837               	movf	??_openFile,w
  4314  0252  0021               	movlb	1	; select bank1
  4315  0253  00A8               	movwf	openFile@response^(0+128)
  4316  0254  0A28               	incf	openFile@response^(0+128),w
  4317  0255  1D03               	btfss	3,2
  4318  0256  2A5B               	goto	l2312
  4319                           
  4320                           ;main.c: 86:     while (response == 0xFF) response = SPI_Read();
  4321  0257  3185  25AB  3182   	fcall	_SPI_Read
  4322  025A  2A4F               	goto	L1
  4323  025B                     l2312:	
  4324                           
  4325                           ;main.c: 87:     if (response != 0xFE) error(OPEN_BLOCK);
  4326  025B  30FE               	movlw	254
  4327  025C  0628               	xorwf	openFile@response^(0+128),w
  4328  025D  1903               	btfsc	3,2
  4329  025E  2A63               	goto	l2316
  4330  025F  3000               	movlw	0
  4331  0260  3185  25CB  3182   	fcall	_error
  4332  0263                     l2316:	
  4333                           
  4334                           ;main.c: 89:     {;main.c: 90:         RiffTag riff;;main.c: 91:         readBytes((char
      +                          *)&riff, sizeof(riff));;
  4335  0263  3008               	movlw	8
  4336  0264  0020               	movlb	0	; select bank0
  4337  0265  00A0               	movwf	readBytes@len
  4338  0266  3000               	movlw	0
  4339  0267  00A1               	movwf	readBytes@len+1
  4340  0268  30A0               	movlw	(low (openFile@riff| 0))& (0+255)
  4341  0269  3184  2487  3182   	fcall	_readBytes
  4342                           
  4343                           ;main.c: 92:         if (!fourCCeq(riff.ckID, "RIFF")) error(RIFF_HEADER);
  4344  026C  30F6               	movlw	low (STR_1| (0+32768))
  4345  026D  00F4               	movwf	fourCCeq@b
  4346  026E  3085               	movlw	high (STR_1| (0+32768))
  4347  026F  00F5               	movwf	fourCCeq@b+1
  4348  0270  30A0               	movlw	(low (openFile@riff| 0))& (0+255)
  4349  0271  3184  24FE  3182   	fcall	_fourCCeq
  4350  0274  3A00               	xorlw	0
  4351  0275  1D03               	skipz
  4352  0276  2A7B               	goto	l2322
  4353  0277  3001               	movlw	1
  4354  0278  3185  25CB  3182   	fcall	_error
  4355  027B                     l2322:	
  4356                           
  4357                           ;main.c: 93:     }{;main.c: 94:         FmtChunk fmt;;main.c: 95:         readBytes((cha
      +                          r*)&fmt, sizeof(fmt));;
  4358  027B  301C               	movlw	28
  4359  027C  0020               	movlb	0	; select bank0
  4360  027D  00A0               	movwf	readBytes@len
  4361  027E  3000               	movlw	0
  4362  027F  00A1               	movwf	readBytes@len+1
  4363  0280  30B1               	movlw	(low (openFile@fmt| 0))& (0+255)
  4364  0281  3184  2487  3182   	fcall	_readBytes
  4365                           
  4366                           ;main.c: 96:         if (!fourCCeq(fmt.WAVEID, "WAVE")) error(WAVE_HEADER);
  4367  0284  30F1               	movlw	low (STR_3| (0+32768))
  4368  0285  00F4               	movwf	fourCCeq@b
  4369  0286  3085               	movlw	high (STR_3| (0+32768))
  4370  0287  00F5               	movwf	fourCCeq@b+1
  4371  0288  30B1               	movlw	(low (openFile@fmt| 0))& (0+255)
  4372  0289  3184  24FE  3182   	fcall	_fourCCeq
  4373  028C  3A00               	xorlw	0
  4374  028D  1D03               	skipz
  4375  028E  2A93               	goto	l2328
  4376  028F  3002               	movlw	2
  4377  0290  3185  25CB  3182   	fcall	_error
  4378  0293                     l2328:	
  4379                           
  4380                           ;main.c: 97:         if (!fourCCeq(fmt.fmtHeader.ckID, "fmt ")) error(FMT_HEADER);
  4381  0293  306E               	movlw	low (STR_5| (0+32768))
  4382  0294  00F4               	movwf	fourCCeq@b
  4383  0295  3081               	movlw	high (STR_5| (0+32768))
  4384  0296  00F5               	movwf	fourCCeq@b+1
  4385  0297  30B5               	movlw	(low ((openFile@fmt| 0+4)))& (0+255)
  4386  0298  3184  24FE  3182   	fcall	_fourCCeq
  4387  029B  3A00               	xorlw	0
  4388  029C  1D03               	skipz
  4389  029D  2AA2               	goto	l2332
  4390  029E  3003               	movlw	3
  4391  029F  3185  25CB  3182   	fcall	_error
  4392  02A2                     l2332:	
  4393                           
  4394                           ;main.c: 98:         if (fmt.formatTag != 0x0001) error(CODEC);
  4395  02A2  0021               	movlb	1	; select bank1
  4396  02A3  033D               	decf	(openFile@fmt^(0+128)+12),w
  4397  02A4  043E               	iorwf	((openFile@fmt+1)^(0+128)+12),w
  4398  02A5  1903               	btfsc	3,2
  4399  02A6  2AAB               	goto	l2336
  4400  02A7  3004               	movlw	4
  4401  02A8  3185  25CB  3182   	fcall	_error
  4402  02AB                     l2336:	
  4403                           
  4404                           ;main.c: 99:         if (fmt.bitsPerSamp != 16) error(BIT_DEPTH);
  4405  02AB  3010               	movlw	16
  4406  02AC  0021               	movlb	1	; select bank1
  4407  02AD  064B               	xorwf	(openFile@fmt^(0+128)+26),w
  4408  02AE  044C               	iorwf	((openFile@fmt+1)^(0+128)+26),w
  4409  02AF  1903               	btfsc	3,2
  4410  02B0  2AB5               	goto	l2340
  4411  02B1  3005               	movlw	5
  4412  02B2  3185  25CB  3182   	fcall	_error
  4413  02B5                     l2340:	
  4414                           
  4415                           ;main.c: 101:         channels = fmt.channels;
  4416  02B5  0021               	movlb	1	; select bank1
  4417  02B6  0840               	movf	((openFile@fmt+1)^(0+128)+14),w
  4418  02B7  0020               	movlb	0	; select bank0
  4419  02B8  00C2               	movwf	_channels+1
  4420  02B9  0021               	movlb	1	; select bank1
  4421  02BA  083F               	movf	(openFile@fmt^(0+128)+14),w
  4422  02BB  0020               	movlb	0	; select bank0
  4423  02BC  00C1               	movwf	_channels
  4424                           
  4425                           ;main.c: 102:         sampRate = fmt.sampRate;
  4426  02BD  3010               	movlw	16
  4427  02BE  3EB1               	addlw	(low (openFile@fmt| 0))& (0+255)
  4428  02BF  0086               	movwf	6
  4429  02C0  0187               	clrf	7
  4430  02C1  3F40               	moviw [0]fsr1
  4431  02C2  0021               	movlb	1	; select bank1
  4432  02C3  00D5               	movwf	_sampRate^(0+128)
  4433  02C4  3F41               	moviw [1]fsr1
  4434  02C5  00D6               	movwf	(_sampRate+1)^(0+128)
  4435  02C6  3F42               	moviw [2]fsr1
  4436  02C7  00D7               	movwf	(_sampRate+2)^(0+128)
  4437  02C8  3F43               	moviw [3]fsr1
  4438  02C9  00D8               	movwf	(_sampRate+3)^(0+128)
  4439                           
  4440                           ;main.c: 104:     }{;main.c: 105:         RiffTag data;;main.c: 106:         readBytes((
      +                          char*)&data, sizeof(data));;
  4441  02CA  3008               	movlw	8
  4442  02CB  0020               	movlb	0	; select bank0
  4443  02CC  00A0               	movwf	readBytes@len
  4444  02CD  3000               	movlw	0
  4445  02CE  00A1               	movwf	readBytes@len+1
  4446  02CF  30A9               	movlw	(low (openFile@data| 0))& (0+255)
  4447  02D0  3184  2487  3182   	fcall	_readBytes
  4448                           
  4449                           ;main.c: 107:         if (!fourCCeq(data.ckID, "data")) error(DATA_HEADER);
  4450  02D3  30FB               	movlw	low (STR_7| (0+32768))
  4451  02D4  00F4               	movwf	fourCCeq@b
  4452  02D5  3085               	movlw	high (STR_7| (0+32768))
  4453  02D6  00F5               	movwf	fourCCeq@b+1
  4454  02D7  30A9               	movlw	(low (openFile@data| 0))& (0+255)
  4455  02D8  3184  24FE  3182   	fcall	_fourCCeq
  4456  02DB  3A00               	xorlw	0
  4457  02DC  1D03               	skipz
  4458  02DD  2AE1               	goto	l2350
  4459  02DE  3006               	movlw	6
  4460  02DF  3185  25CB         	fcall	_error
  4461  02E1                     l2350:	
  4462                           
  4463                           ;main.c: 108:         filesize = data.ckSize;
  4464  02E1  3004               	movlw	4
  4465  02E2  3EA9               	addlw	(low (openFile@data| 0))& (0+255)
  4466  02E3  0086               	movwf	6
  4467  02E4  0187               	clrf	7
  4468  02E5  3F40               	moviw [0]fsr1
  4469  02E6  0021               	movlb	1	; select bank1
  4470  02E7  00D1               	movwf	_filesize^(0+128)
  4471  02E8  3F41               	moviw [1]fsr1
  4472  02E9  00D2               	movwf	(_filesize+1)^(0+128)
  4473  02EA  3F42               	moviw [2]fsr1
  4474  02EB  00D3               	movwf	(_filesize+2)^(0+128)
  4475  02EC  3F43               	moviw [3]fsr1
  4476  02ED  00D4               	movwf	(_filesize+3)^(0+128)
  4477                           
  4478                           ;main.c: 109:     };main.c: 110:         __nop();
  4479  02EE  0000               	nop
  4480  02EF  0008               	return
  4481  02F0                     __end_of_openFile:	
  4482                           
  4483                           	psect	text3
  4484  0487                     __ptext3:	
  4485 ;; *************** function _readBytes *****************
  4486 ;; Defined at:
  4487 ;;		line 68 in file "main.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;  dest            1    wreg     PTR unsigned char 
  4490 ;;		 -> openFile@data(8), openFile@fmt(28), openFile@riff(8), 
  4491 ;;  len             2    0[BANK0 ] int 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  dest            1    4[BANK0 ] PTR unsigned char 
  4494 ;;		 -> openFile@data(8), openFile@fmt(28), openFile@riff(8), 
  4495 ;;  i               2    5[BANK0 ] int 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      void 
  4498 ;; Registers used:
  4499 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4505 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4506 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4507 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4508 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4509 ;;Total ram usage:        7 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:    3
  4512 ;; This function calls:
  4513 ;;		_SD_CloseBlock
  4514 ;;		_SPI_Read
  4515 ;; This function is called by:
  4516 ;;		_openFile
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           
  4521                           ;psect for function _readBytes
  4522  0487                     _readBytes:	
  4523                           
  4524                           ;incstack = 0
  4525                           ; Regs used in _readBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4526                           ;readBytes@dest stored from wreg
  4527  0487  0020               	movlb	0	; select bank0
  4528  0488  00A4               	movwf	readBytes@dest
  4529                           
  4530                           ;main.c: 69:     for (int i=0; i<len; i++) {
  4531  0489  01A5               	clrf	readBytes@i
  4532  048A  01A6               	clrf	readBytes@i+1
  4533  048B                     l2232:	
  4534  048B  0826               	movf	readBytes@i+1,w
  4535  048C  3A80               	xorlw	128
  4536  048D  00A2               	movwf	??_readBytes
  4537  048E  0821               	movf	readBytes@len+1,w
  4538  048F  3A80               	xorlw	128
  4539  0490  0222               	subwf	??_readBytes,w
  4540  0491  1D03               	skipz
  4541  0492  2C95               	goto	u925
  4542  0493  0820               	movf	readBytes@len,w
  4543  0494  0225               	subwf	readBytes@i,w
  4544  0495                     u925:	
  4545  0495  1803               	btfsc	3,0
  4546  0496  0008               	return
  4547                           
  4548                           ;main.c: 70:         dest[i] = SPI_Read();
  4549  0497  3185  25AB  3184   	fcall	_SPI_Read
  4550  049A  0020               	movlb	0	; select bank0
  4551  049B  00A2               	movwf	??_readBytes
  4552  049C  0825               	movf	readBytes@i,w
  4553  049D  0724               	addwf	readBytes@dest,w
  4554  049E  00A3               	movwf	??_readBytes+1
  4555  049F  0823               	movf	??_readBytes+1,w
  4556  04A0  0086               	movwf	6
  4557  04A1  0187               	clrf	7
  4558  04A2  0822               	movf	??_readBytes,w
  4559  04A3  0081               	movwf	1
  4560                           
  4561                           ;main.c: 71:         ++blockIndex;
  4562  04A4  3001               	movlw	1
  4563  04A5  07B9               	addwf	_blockIndex,f
  4564  04A6  3000               	movlw	0
  4565  04A7  3DBA               	addwfc	_blockIndex+1,f
  4566                           
  4567                           ;main.c: 72:         if (blockIndex >= 512) {
  4568  04A8  083A               	movf	_blockIndex+1,w
  4569  04A9  3A80               	xorlw	128
  4570  04AA  00A2               	movwf	??_readBytes
  4571  04AB  3082               	movlw	130
  4572  04AC  0222               	subwf	??_readBytes,w
  4573  04AD  1D03               	skipz
  4574  04AE  2CB1               	goto	u915
  4575  04AF  3000               	movlw	0
  4576  04B0  0239               	subwf	_blockIndex,w
  4577  04B1                     u915:	
  4578  04B1  1C03               	skipc
  4579  04B2  2CC6               	goto	l2230
  4580                           
  4581                           ;main.c: 73:             SD_CloseBlock();
  4582  04B3  3185  25B9  3184   	fcall	_SD_CloseBlock
  4583                           
  4584                           ;main.c: 74:             ++address;
  4585  04B6  3001               	movlw	1
  4586  04B7  0021               	movlb	1	; select bank1
  4587  04B8  07CD               	addwf	_address^(0+128),f
  4588  04B9  3000               	movlw	0
  4589  04BA  3DCE               	addwfc	(_address+1)^(0+128),f
  4590  04BB  3000               	movlw	0
  4591  04BC  3DCF               	addwfc	(_address+2)^(0+128),f
  4592  04BD  3000               	movlw	0
  4593  04BE  3DD0               	addwfc	(_address+3)^(0+128),f
  4594                           
  4595                           ;main.c: 75:             blockIndex = 0;
  4596  04BF  0020               	movlb	0	; select bank0
  4597  04C0  01B9               	clrf	_blockIndex
  4598  04C1  01BA               	clrf	_blockIndex+1
  4599                           
  4600                           ;main.c: 76:             state = CLOSED;
  4601  04C2  3003               	movlw	3
  4602  04C3  00A2               	movwf	??_readBytes
  4603  04C4  0822               	movf	??_readBytes,w
  4604  04C5  00F6               	movwf	_state
  4605  04C6                     l2230:	
  4606                           
  4607                           ;main.c: 78:     }
  4608  04C6  3001               	movlw	1
  4609  04C7  0020               	movlb	0	; select bank0
  4610  04C8  07A5               	addwf	readBytes@i,f
  4611  04C9  3000               	movlw	0
  4612  04CA  3DA6               	addwfc	readBytes@i+1,f
  4613  04CB  2C8B               	goto	l2232
  4614  04CC                     __end_of_readBytes:	
  4615                           
  4616                           	psect	text4
  4617  05B9                     __ptext4:	
  4618 ;; *************** function _SD_CloseBlock *****************
  4619 ;; Defined at:
  4620 ;;		line 275 in file "SD.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;		None
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;		None
  4625 ;; Return value:  Size  Location     Type
  4626 ;;                  1    wreg      _Bool 
  4627 ;; Registers used:
  4628 ;;		wreg, status,2, status,0, pclath, cstack
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4638 ;;Total ram usage:        0 bytes
  4639 ;; Hardware stack levels used:    1
  4640 ;; Hardware stack levels required when called:    2
  4641 ;; This function calls:
  4642 ;;		_SPI_Read
  4643 ;; This function is called by:
  4644 ;;		_readBytes
  4645 ;;		_main
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           
  4650                           ;psect for function _SD_CloseBlock
  4651  05B9                     _SD_CloseBlock:	
  4652                           
  4653                           ;SD.c: 277:     SPI_Read();
  4654                           
  4655                           ;incstack = 0
  4656                           ; Regs used in _SD_CloseBlock: [wreg+status,2+status,0+pclath+cstack]
  4657  05B9  3185  25AB  3185   	fcall	_SPI_Read
  4658                           
  4659                           ;SD.c: 278:     SPI_Read();
  4660  05BC  3185  25AB  3185   	fcall	_SPI_Read
  4661                           
  4662                           ;SD.c: 280:     SPI_Read();
  4663  05BF  3185  25AB         	fcall	_SPI_Read
  4664  05C1  0008               	return
  4665  05C2                     __end_of_SD_CloseBlock:	
  4666                           
  4667                           	psect	text5
  4668  04FE                     __ptext5:	
  4669 ;; *************** function _fourCCeq *****************
  4670 ;; Defined at:
  4671 ;;		line 44 in file "main.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;  a               1    wreg     PTR unsigned char 
  4674 ;;		 -> openFile@data(8), fmt.fmtHeader(8), openFile@fmt(28), openFile@riff(8), 
  4675 ;;  b               2    4[COMMON] PTR unsigned char 
  4676 ;;		 -> STR_8(5), STR_6(5), STR_4(5), STR_2(5), 
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;  a               1    4[BANK0 ] PTR unsigned char 
  4679 ;;		 -> openFile@data(8), fmt.fmtHeader(8), openFile@fmt(28), openFile@riff(8), 
  4680 ;;  i               1    5[BANK0 ] unsigned char 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      _Bool 
  4683 ;; Registers used:
  4684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4690 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4691 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4692 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4693 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4694 ;;Total ram usage:        8 bytes
  4695 ;; Hardware stack levels used:    1
  4696 ;; Hardware stack levels required when called:    1
  4697 ;; This function calls:
  4698 ;;		Nothing
  4699 ;; This function is called by:
  4700 ;;		_openFile
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           
  4705                           ;psect for function _fourCCeq
  4706  04FE                     _fourCCeq:	
  4707                           
  4708                           ;incstack = 0
  4709                           ; Regs used in _fourCCeq: [wreg-fsr1h+status,2+status,0+pclath]
  4710                           ;fourCCeq@a stored from wreg
  4711  04FE  0020               	movlb	0	; select bank0
  4712  04FF  00A4               	movwf	fourCCeq@a
  4713                           
  4714                           ;main.c: 45:     for (char i=0; i<4; i++) {
  4715  0500  01A5               	clrf	fourCCeq@i
  4716  0501                     l2200:	
  4717                           
  4718                           ;main.c: 46:         if (a[i] != b[i]) return 0;
  4719  0501  0875               	movf	fourCCeq@b+1,w
  4720  0502  00A1               	movwf	??_fourCCeq+1
  4721  0503  0874               	movf	fourCCeq@b,w
  4722  0504  00A0               	movwf	??_fourCCeq
  4723  0505  0825               	movf	fourCCeq@i,w
  4724  0506  0720               	addwf	??_fourCCeq,w
  4725  0507  0084               	movwf	4
  4726  0508  0821               	movf	??_fourCCeq+1,w
  4727  0509  1803               	skipnc
  4728  050A  0A21               	incf	??_fourCCeq+1,w
  4729  050B  0085               	movwf	5
  4730  050C  0800               	movf	0,w	;code access
  4731  050D  00A2               	movwf	??_fourCCeq+2
  4732  050E  0825               	movf	fourCCeq@i,w
  4733  050F  0724               	addwf	fourCCeq@a,w
  4734  0510  00A3               	movwf	??_fourCCeq+3
  4735  0511  0823               	movf	??_fourCCeq+3,w
  4736  0512  0086               	movwf	6
  4737  0513  0187               	clrf	7
  4738  0514  0801               	movf	1,w
  4739  0515  0622               	xorwf	??_fourCCeq+2,w
  4740  0516  1903               	skipnz
  4741  0517  2D1A               	goto	l2206
  4742  0518  3000               	movlw	0
  4743  0519  0008               	return
  4744  051A                     l2206:	
  4745                           
  4746                           ;main.c: 47:     }
  4747  051A  3001               	movlw	1
  4748  051B  00A0               	movwf	??_fourCCeq
  4749  051C  0820               	movf	??_fourCCeq,w
  4750  051D  07A5               	addwf	fourCCeq@i,f
  4751  051E  3004               	movlw	4
  4752  051F  0225               	subwf	fourCCeq@i,w
  4753  0520  1C03               	skipc
  4754  0521  2D01               	goto	l2200
  4755                           
  4756                           ;main.c: 48:     return 1;
  4757  0522  3001               	movlw	1
  4758  0523  0008               	return
  4759  0524                     __end_of_fourCCeq:	
  4760                           
  4761                           	psect	text6
  4762  05CB                     __ptext6:	
  4763 ;; *************** function _error *****************
  4764 ;; Defined at:
  4765 ;;		line 17 in file "./error.h"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  e               1    wreg     enum E12100
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;  e               1    5[COMMON] enum E12100
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1    wreg      void 
  4772 ;; Registers used:
  4773 ;;		wreg
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4782 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4783 ;;Total ram usage:        2 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; Hardware stack levels required when called:    1
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_openFile
  4790 ;;		_main
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           
  4795                           ;psect for function _error
  4796  05CB                     _error:	
  4797                           
  4798                           ;incstack = 0
  4799                           ; Regs used in _error: [wreg]
  4800                           ;error@e stored from wreg
  4801  05CB  00F5               	movwf	error@e
  4802                           
  4803                           ;./error.h: 19:     global_error = e;
  4804  05CC  0875               	movf	error@e,w
  4805  05CD  00F4               	movwf	??_error
  4806  05CE  0874               	movf	??_error,w
  4807  05CF  00F9               	movwf	_global_error
  4808                           
  4809                           ;./error.h: 20:     __nop();
  4810  05D0  0000               	nop
  4811  05D1  0008               	return
  4812  05D2                     __end_of_error:	
  4813                           
  4814                           	psect	text7
  4815  0524                     __ptext7:	
  4816 ;; *************** function _SD_OpenBlock *****************
  4817 ;; Defined at:
  4818 ;;		line 256 in file "SD.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  address         4    7[BANK0 ] long 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  a               4   15[BANK0 ] struct .
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  1    wreg      _Bool 
  4825 ;; Registers used:
  4826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4832 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4833 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4834 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4835 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4836 ;;Total ram usage:       12 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    3
  4839 ;; This function calls:
  4840 ;;		_SD_Check8bitResponse
  4841 ;;		_SD_Read8bitResponse
  4842 ;;		_SD_SendCommand
  4843 ;; This function is called by:
  4844 ;;		_openFile
  4845 ;;		_main
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           
  4850                           ;psect for function _SD_OpenBlock
  4851  0524                     _SD_OpenBlock:	
  4852                           
  4853                           ;SD.c: 260:     BlockAddress a = *((BlockAddress*)(&address));
  4854                           
  4855                           ;incstack = 0
  4856                           ; Regs used in _SD_OpenBlock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4857  0524  0020               	movlb	0	; select bank0
  4858  0525  082A               	movf	SD_OpenBlock@address+3,w
  4859  0526  00B2               	movwf	SD_OpenBlock@a+3
  4860  0527  0829               	movf	SD_OpenBlock@address+2,w
  4861  0528  00B1               	movwf	SD_OpenBlock@a+2
  4862  0529  0828               	movf	SD_OpenBlock@address+1,w
  4863  052A  00B0               	movwf	SD_OpenBlock@a+1
  4864  052B  0827               	movf	SD_OpenBlock@address,w
  4865  052C  00AF               	movwf	SD_OpenBlock@a
  4866                           
  4867                           ;SD.c: 262:     SD_SendCommand(17, a.a3, a.a2, a.a1, a.a0);
  4868  052D  0832               	movf	SD_OpenBlock@a+3,w
  4869  052E  00AB               	movwf	??_SD_OpenBlock
  4870  052F  082B               	movf	??_SD_OpenBlock,w
  4871  0530  00A0               	movwf	SD_SendCommand@ARG3
  4872  0531  0831               	movf	SD_OpenBlock@a+2,w
  4873  0532  00AC               	movwf	??_SD_OpenBlock+1
  4874  0533  082C               	movf	??_SD_OpenBlock+1,w
  4875  0534  00A1               	movwf	SD_SendCommand@ARG2
  4876  0535  0830               	movf	SD_OpenBlock@a+1,w
  4877  0536  00AD               	movwf	??_SD_OpenBlock+2
  4878  0537  082D               	movf	??_SD_OpenBlock+2,w
  4879  0538  00A2               	movwf	SD_SendCommand@ARG1
  4880  0539  082F               	movf	SD_OpenBlock@a,w
  4881  053A  00AE               	movwf	??_SD_OpenBlock+3
  4882  053B  082E               	movf	??_SD_OpenBlock+3,w
  4883  053C  00A3               	movwf	SD_SendCommand@ARG0
  4884  053D  3011               	movlw	17
  4885  053E  3182  22F0  3185   	fcall	_SD_SendCommand
  4886                           
  4887                           ;SD.c: 265:     SD_Read8bitResponse();
  4888  0541  3185  259A  3185   	fcall	_SD_Read8bitResponse
  4889                           
  4890                           ;SD.c: 268:     if(SD_Check8bitResponse(0x00) == 0) return 0;
  4891  0544  3000               	movlw	0
  4892  0545  3185  25C2         	fcall	_SD_Check8bitResponse
  4893  0547  0008               	return
  4894  0548                     __end_of_SD_OpenBlock:	
  4895                           
  4896                           	psect	text8
  4897  0586                     __ptext8:	
  4898 ;; *************** function _init *****************
  4899 ;; Defined at:
  4900 ;;		line 51 in file "main.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4918 ;;Total ram usage:        0 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; Hardware stack levels required when called:    4
  4921 ;; This function calls:
  4922 ;;		_DAC_Init
  4923 ;;		_SD_Init
  4924 ;;		_SPI_Init
  4925 ;; This function is called by:
  4926 ;;		_main
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           
  4931                           ;psect for function _init
  4932  0586                     _init:	
  4933                           
  4934                           ;main.c: 53:     OSCCON = 0xF4;
  4935                           
  4936                           ;incstack = 0
  4937                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4938  0586  30F4               	movlw	244
  4939  0587  0021               	movlb	1	; select bank1
  4940  0588  009B               	movwf	27	;volatile
  4941  0589                     l220:	
  4942                           ;main.c: 54:     while(OSCSTATbits.HFIOFR == 0);
  4943                           
  4944  0589  1E1C               	btfss	28,4	;volatile
  4945  058A  2D89               	goto	l220
  4946                           
  4947                           ;main.c: 56:     TRISBbits.TRISB1 = 1;
  4948  058B  148D               	bsf	13,1	;volatile
  4949                           
  4950                           ;main.c: 57:     ANSELBbits.ANSB1 = 0;
  4951  058C  0023               	movlb	3	; select bank3
  4952  058D  108D               	bcf	13,1	;volatile
  4953                           
  4954                           ;main.c: 59:     TRISCbits.TRISC0 = 0;
  4955  058E  0021               	movlb	1	; select bank1
  4956  058F  100E               	bcf	14,0	;volatile
  4957                           
  4958                           ;main.c: 60:     TRISCbits.TRISC1 = 0;
  4959  0590  108E               	bcf	14,1	;volatile
  4960                           
  4961                           ;main.c: 63:     SPI_Init();
  4962  0591  3185  2569  3185   	fcall	_SPI_Init
  4963                           
  4964                           ;main.c: 64:     SD_Init();
  4965  0594  3183  238F  3185   	fcall	_SD_Init
  4966                           
  4967                           ;main.c: 65:     DAC_Init();
  4968  0597  3185  25D9         	fcall	_DAC_Init
  4969  0599  0008               	return
  4970  059A                     __end_of_init:	
  4971                           
  4972                           	psect	text9
  4973  0569                     __ptext9:	
  4974 ;; *************** function _SPI_Init *****************
  4975 ;; Defined at:
  4976 ;;		line 7 in file "SPI.c"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;		None
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;		None
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  1    wreg      void 
  4983 ;; Registers used:
  4984 ;;		wreg, status,2
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4994 ;;Total ram usage:        0 bytes
  4995 ;; Hardware stack levels used:    1
  4996 ;; Hardware stack levels required when called:    1
  4997 ;; This function calls:
  4998 ;;		Nothing
  4999 ;; This function is called by:
  5000 ;;		_init
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           
  5005                           ;psect for function _SPI_Init
  5006  0569                     _SPI_Init:	
  5007                           
  5008                           ;SPI.c: 9:     TRISC2 = 0;
  5009                           
  5010                           ;incstack = 0
  5011                           ; Regs used in _SPI_Init: [wreg+status,2]
  5012  0569  0021               	movlb	1	; select bank1
  5013  056A  110E               	bcf	14,2	;volatile
  5014                           
  5015                           ;SPI.c: 10:     RC2PPS = 0x21;
  5016  056B  3021               	movlw	33
  5017  056C  003D               	movlb	29	; select bank29
  5018  056D  00A2               	movwf	34	;volatile
  5019                           
  5020                           ;SPI.c: 11:     SSPCLKPPS = 0x12;
  5021  056E  3012               	movlw	18
  5022  056F  003C               	movlb	28	; select bank28
  5023  0570  00BA               	movwf	58	;volatile
  5024                           
  5025                           ;SPI.c: 14:     TRISC3 = 1;
  5026  0571  0021               	movlb	1	; select bank1
  5027  0572  158E               	bsf	14,3	;volatile
  5028                           
  5029                           ;SPI.c: 15:     ANSC3 = 0;
  5030  0573  0023               	movlb	3	; select bank3
  5031  0574  118E               	bcf	14,3	;volatile
  5032                           
  5033                           ;SPI.c: 16:     SSPDATPPS = 0x13;
  5034  0575  3013               	movlw	19
  5035  0576  003C               	movlb	28	; select bank28
  5036  0577  00BB               	movwf	59	;volatile
  5037                           
  5038                           ;SPI.c: 19:     TRISC4 = 0;
  5039  0578  0021               	movlb	1	; select bank1
  5040  0579  120E               	bcf	14,4	;volatile
  5041                           
  5042                           ;SPI.c: 20:     RC4PPS = 0x23;
  5043  057A  3023               	movlw	35
  5044  057B  003D               	movlb	29	; select bank29
  5045  057C  00A4               	movwf	36	;volatile
  5046                           
  5047                           ;SPI.c: 23:     TRISC7 = 0;
  5048  057D  0021               	movlb	1	; select bank1
  5049  057E  138E               	bcf	14,7	;volatile
  5050                           
  5051                           ;SPI.c: 26:     SSP1STAT = 0x80;
  5052  057F  3080               	movlw	128
  5053  0580  0024               	movlb	4	; select bank4
  5054  0581  0094               	movwf	20	;volatile
  5055                           
  5056                           ;SPI.c: 29:     SSP1CON1 = 0x30;
  5057  0582  3030               	movlw	48
  5058  0583  0095               	movwf	21	;volatile
  5059                           
  5060                           ;SPI.c: 32:     SSP1ADD = 0x00;
  5061  0584  0192               	clrf	18	;volatile
  5062  0585  0008               	return
  5063  0586                     __end_of_SPI_Init:	
  5064                           
  5065                           	psect	text10
  5066  038F                     __ptext10:	
  5067 ;; *************** function _SD_Init *****************
  5068 ;; Defined at:
  5069 ;;		line 11 in file "SD.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;		None
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;		None
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  1    wreg      void 
  5076 ;; Registers used:
  5077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5085 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5086 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5087 ;;Total ram usage:        1 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    3
  5090 ;; This function calls:
  5091 ;;		_SD_Check40bitResponse
  5092 ;;		_SD_Check8bitResponse
  5093 ;;		_SD_Read40bitResponse
  5094 ;;		_SD_Read8bitResponse
  5095 ;;		_SD_SendCommand
  5096 ;;		_SPI_Write
  5097 ;; This function is called by:
  5098 ;;		_init
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           
  5103                           ;psect for function _SD_Init
  5104  038F                     _SD_Init:	
  5105                           
  5106                           ;SD.c: 14:     { PORTCbits.RC7 = 1; SSP1CON1bits.WCOL = 0; };
  5107                           
  5108                           ;incstack = 0
  5109                           ; Regs used in _SD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5110  038F  0020               	movlb	0	; select bank0
  5111  0390  178E               	bsf	14,7	;volatile
  5112  0391  0024               	movlb	4	; select bank4
  5113  0392  1395               	bcf	21,7	;volatile
  5114                           
  5115                           ;SD.c: 16:     SPI_Write(0xFF);
  5116  0393  30FF               	movlw	255
  5117  0394  3185  25D2  3183   	fcall	_SPI_Write
  5118                           
  5119                           ;SD.c: 17:     SPI_Write(0xFF);
  5120  0397  30FF               	movlw	255
  5121  0398  3185  25D2  3183   	fcall	_SPI_Write
  5122                           
  5123                           ;SD.c: 18:     SPI_Write(0xFF);
  5124  039B  30FF               	movlw	255
  5125  039C  3185  25D2  3183   	fcall	_SPI_Write
  5126                           
  5127                           ;SD.c: 19:     SPI_Write(0xFF);
  5128  039F  30FF               	movlw	255
  5129  03A0  3185  25D2  3183   	fcall	_SPI_Write
  5130                           
  5131                           ;SD.c: 20:     SPI_Write(0xFF);
  5132  03A3  30FF               	movlw	255
  5133  03A4  3185  25D2  3183   	fcall	_SPI_Write
  5134                           
  5135                           ;SD.c: 21:     SPI_Write(0xFF);
  5136  03A7  30FF               	movlw	255
  5137  03A8  3185  25D2  3183   	fcall	_SPI_Write
  5138                           
  5139                           ;SD.c: 22:     SPI_Write(0xFF);
  5140  03AB  30FF               	movlw	255
  5141  03AC  3185  25D2  3183   	fcall	_SPI_Write
  5142                           
  5143                           ;SD.c: 23:     SPI_Write(0xFF);
  5144  03AF  30FF               	movlw	255
  5145  03B0  3185  25D2  3183   	fcall	_SPI_Write
  5146                           
  5147                           ;SD.c: 24:     SPI_Write(0xFF);
  5148  03B3  30FF               	movlw	255
  5149  03B4  3185  25D2  3183   	fcall	_SPI_Write
  5150                           
  5151                           ;SD.c: 25:     SPI_Write(0xFF);
  5152  03B7  30FF               	movlw	255
  5153  03B8  3185  25D2  3183   	fcall	_SPI_Write
  5154                           
  5155                           ;SD.c: 27:     { PORTCbits.RC7 = 0; SSP1CON1bits.WCOL = 0; };
  5156  03BB  0020               	movlb	0	; select bank0
  5157  03BC  138E               	bcf	14,7	;volatile
  5158  03BD  0024               	movlb	4	; select bank4
  5159  03BE  1395               	bcf	21,7	;volatile
  5160  03BF                     l2156:	
  5161                           
  5162                           ;SD.c: 34:         SD_SendCommand(0, 0x00, 0x00, 0x00, 0x00);
  5163  03BF  0020               	movlb	0	; select bank0
  5164  03C0  01A0               	clrf	SD_SendCommand@ARG3
  5165  03C1  01A1               	clrf	SD_SendCommand@ARG2
  5166  03C2  01A2               	clrf	SD_SendCommand@ARG1
  5167  03C3  01A3               	clrf	SD_SendCommand@ARG0
  5168  03C4  3000               	movlw	0
  5169  03C5  3182  22F0  3183   	fcall	_SD_SendCommand
  5170                           
  5171                           ;SD.c: 35:         SD_Read8bitResponse();
  5172  03C8  3185  259A  3183   	fcall	_SD_Read8bitResponse
  5173  03CB  0000               	nop	;# 
  5174                           
  5175                           ;SD.c: 37:     } while (SD_Check8bitResponse(0x01) == 0);
  5176  03CC  3001               	movlw	1
  5177  03CD  3185  25C2  3183   	fcall	_SD_Check8bitResponse
  5178  03D0  3A00               	xorlw	0
  5179  03D1  1903               	skipnz
  5180  03D2  2BBF               	goto	l2156
  5181  03D3                     l2162:	
  5182                           
  5183                           ;SD.c: 44:         SD_SendCommand(8, 0x00, 0x00, 0x01, 0xAA);
  5184  03D3  0020               	movlb	0	; select bank0
  5185  03D4  01A0               	clrf	SD_SendCommand@ARG3
  5186  03D5  01A1               	clrf	SD_SendCommand@ARG2
  5187  03D6  01A2               	clrf	SD_SendCommand@ARG1
  5188  03D7  0AA2               	incf	SD_SendCommand@ARG1,f
  5189  03D8  30AA               	movlw	170
  5190  03D9  00A7               	movwf	??_SD_Init
  5191  03DA  0827               	movf	??_SD_Init,w
  5192  03DB  00A3               	movwf	SD_SendCommand@ARG0
  5193  03DC  3008               	movlw	8
  5194  03DD  3182  22F0  3183   	fcall	_SD_SendCommand
  5195                           
  5196                           ;SD.c: 45:         SD_Read40bitResponse();
  5197  03E0  3184  24CC  3183   	fcall	_SD_Read40bitResponse
  5198  03E3  0000               	nop	;# 
  5199                           
  5200                           ;SD.c: 47:     } while (SD_Check40bitResponse(0x01, 0x00, 0x00, 0x01, 0xAA) == 0);
  5201  03E4  0020               	movlb	0	; select bank0
  5202  03E5  01A0               	clrf	SD_Check40bitResponse@Byte3
  5203  03E6  01A1               	clrf	SD_Check40bitResponse@Byte2
  5204  03E7  01A2               	clrf	SD_Check40bitResponse@Byte1
  5205  03E8  0AA2               	incf	SD_Check40bitResponse@Byte1,f
  5206  03E9  30AA               	movlw	170
  5207  03EA  00A7               	movwf	??_SD_Init
  5208  03EB  0827               	movf	??_SD_Init,w
  5209  03EC  00A3               	movwf	SD_Check40bitResponse@Byte0
  5210  03ED  3001               	movlw	1
  5211  03EE  3185  2548  3183   	fcall	_SD_Check40bitResponse
  5212  03F1  3A00               	xorlw	0
  5213  03F2  1903               	skipnz
  5214  03F3  2BD3               	goto	l2162
  5215  03F4                     l2168:	
  5216                           
  5217                           ;SD.c: 55:             SD_SendCommand(55, 0x00, 0x00, 0x00, 0x00);
  5218  03F4  0020               	movlb	0	; select bank0
  5219  03F5  01A0               	clrf	SD_SendCommand@ARG3
  5220  03F6  01A1               	clrf	SD_SendCommand@ARG2
  5221  03F7  01A2               	clrf	SD_SendCommand@ARG1
  5222  03F8  01A3               	clrf	SD_SendCommand@ARG0
  5223  03F9  3037               	movlw	55
  5224  03FA  3182  22F0  3183   	fcall	_SD_SendCommand
  5225                           
  5226                           ;SD.c: 56:             SD_Read8bitResponse();
  5227  03FD  3185  259A  3183   	fcall	_SD_Read8bitResponse
  5228  0400  0000               	nop	;# 
  5229                           
  5230                           ;SD.c: 58:         } while (SD_Check8bitResponse(0x01) == 0);
  5231  0401  3001               	movlw	1
  5232  0402  3185  25C2  3183   	fcall	_SD_Check8bitResponse
  5233  0405  3A00               	xorlw	0
  5234  0406  1903               	skipnz
  5235  0407  2BF4               	goto	l2168
  5236                           
  5237                           ;SD.c: 65:         SD_SendCommand(41, 0x40, 0x00, 0x00, 0x00);
  5238  0408  3040               	movlw	64
  5239  0409  0020               	movlb	0	; select bank0
  5240  040A  00A7               	movwf	??_SD_Init
  5241  040B  0827               	movf	??_SD_Init,w
  5242  040C  00A0               	movwf	SD_SendCommand@ARG3
  5243  040D  01A1               	clrf	SD_SendCommand@ARG2
  5244  040E  01A2               	clrf	SD_SendCommand@ARG1
  5245  040F  01A3               	clrf	SD_SendCommand@ARG0
  5246  0410  3029               	movlw	41
  5247  0411  3182  22F0  3183   	fcall	_SD_SendCommand
  5248                           
  5249                           ;SD.c: 66:         SD_Read8bitResponse();
  5250  0414  3185  259A  3183   	fcall	_SD_Read8bitResponse
  5251  0417  0000               	nop	;# 
  5252                           
  5253                           ;SD.c: 68:     } while (SD_Check8bitResponse(0x00) == 0);
  5254  0418  3000               	movlw	0
  5255  0419  3185  25C2  3183   	fcall	_SD_Check8bitResponse
  5256  041C  3A00               	xorlw	0
  5257  041D  1D03               	btfss	3,2
  5258  041E  0008               	return
  5259  041F  2BF4               	goto	l2168
  5260  0420                     __end_of_SD_Init:	
  5261                           
  5262                           	psect	text11
  5263  02F0                     __ptext11:	
  5264 ;; *************** function _SD_SendCommand *****************
  5265 ;; Defined at:
  5266 ;;		line 77 in file "SD.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;  CMD_6bit        1    wreg     unsigned char 
  5269 ;;  ARG3            1    0[BANK0 ] unsigned char 
  5270 ;;  ARG2            1    1[BANK0 ] unsigned char 
  5271 ;;  ARG1            1    2[BANK0 ] unsigned char 
  5272 ;;  ARG0            1    3[BANK0 ] unsigned char 
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;  CMD_6bit        1    4[BANK0 ] unsigned char 
  5275 ;;  Checksum        1    6[BANK0 ] unsigned char 
  5276 ;;  ByteToSend      1    5[BANK0 ] unsigned char 
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  1    wreg      void 
  5279 ;; Registers used:
  5280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5286 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5287 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5288 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5289 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5290 ;;Total ram usage:        8 bytes
  5291 ;; Hardware stack levels used:    1
  5292 ;; Hardware stack levels required when called:    2
  5293 ;; This function calls:
  5294 ;;		_SPI_Write
  5295 ;; This function is called by:
  5296 ;;		_SD_Init
  5297 ;;		_SD_OpenBlock
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           
  5302                           ;psect for function _SD_SendCommand
  5303  02F0                     _SD_SendCommand:	
  5304                           
  5305                           ;incstack = 0
  5306                           ; Regs used in _SD_SendCommand: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5307                           ;SD_SendCommand@CMD_6bit stored from wreg
  5308  02F0  0020               	movlb	0	; select bank0
  5309  02F1  00A4               	movwf	SD_SendCommand@CMD_6bit
  5310                           
  5311                           ;SD.c: 79:     char Checksum = 0x00;
  5312  02F2  01A6               	clrf	SD_SendCommand@Checksum
  5313                           
  5314                           ;SD.c: 82:     ByteToSend = (CMD_6bit & 0x3F) | 0x40;
  5315  02F3  0824               	movf	SD_SendCommand@CMD_6bit,w
  5316  02F4  393F               	andlw	63
  5317  02F5  3840               	iorlw	64
  5318  02F6  00F5               	movwf	??_SD_SendCommand
  5319  02F7  0875               	movf	??_SD_SendCommand,w
  5320  02F8  00A5               	movwf	SD_SendCommand@ByteToSend
  5321                           
  5322                           ;SD.c: 83:     SPI_Write(ByteToSend);
  5323  02F9  0825               	movf	SD_SendCommand@ByteToSend,w
  5324  02FA  3185  25D2  3182   	fcall	_SPI_Write
  5325                           
  5326                           ;SD.c: 84:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5327  02FD  0020               	movlb	0	; select bank0
  5328  02FE  3526               	lslf	SD_SendCommand@Checksum,w
  5329  02FF  00F5               	movwf	??_SD_SendCommand
  5330  0300  0875               	movf	??_SD_SendCommand,w
  5331  0301  00A6               	movwf	SD_SendCommand@Checksum
  5332  0302  0826               	movf	SD_SendCommand@Checksum,w
  5333  0303  0625               	xorwf	SD_SendCommand@ByteToSend,w
  5334  0304  00F5               	movwf	??_SD_SendCommand
  5335  0305  0875               	movf	??_SD_SendCommand,w
  5336  0306  00A6               	movwf	SD_SendCommand@Checksum
  5337  0307  0826               	movf	SD_SendCommand@Checksum,w
  5338  0308  3E6E               	addlw	low (_CRCTable| (0+32768))
  5339  0309  0084               	movwf	4
  5340  030A  3080               	movlw	high (_CRCTable| (0+32768))
  5341  030B  1803               	skipnc
  5342  030C  3E01               	addlw	1
  5343  030D  0085               	movwf	5
  5344  030E  0800               	movf	0,w	;code access
  5345  030F  00F5               	movwf	??_SD_SendCommand
  5346  0310  0875               	movf	??_SD_SendCommand,w
  5347  0311  00A6               	movwf	SD_SendCommand@Checksum
  5348                           
  5349                           ;SD.c: 87:     ByteToSend = ARG3;
  5350  0312  0820               	movf	SD_SendCommand@ARG3,w
  5351  0313  00F5               	movwf	??_SD_SendCommand
  5352  0314  0875               	movf	??_SD_SendCommand,w
  5353  0315  00A5               	movwf	SD_SendCommand@ByteToSend
  5354                           
  5355                           ;SD.c: 88:     SPI_Write(ByteToSend);
  5356  0316  0825               	movf	SD_SendCommand@ByteToSend,w
  5357  0317  3185  25D2  3182   	fcall	_SPI_Write
  5358                           
  5359                           ;SD.c: 89:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5360  031A  0020               	movlb	0	; select bank0
  5361  031B  3526               	lslf	SD_SendCommand@Checksum,w
  5362  031C  00F5               	movwf	??_SD_SendCommand
  5363  031D  0875               	movf	??_SD_SendCommand,w
  5364  031E  00A6               	movwf	SD_SendCommand@Checksum
  5365  031F  0826               	movf	SD_SendCommand@Checksum,w
  5366  0320  0625               	xorwf	SD_SendCommand@ByteToSend,w
  5367  0321  00F5               	movwf	??_SD_SendCommand
  5368  0322  0875               	movf	??_SD_SendCommand,w
  5369  0323  00A6               	movwf	SD_SendCommand@Checksum
  5370  0324  0826               	movf	SD_SendCommand@Checksum,w
  5371  0325  3E6E               	addlw	low (_CRCTable| (0+32768))
  5372  0326  0084               	movwf	4
  5373  0327  3080               	movlw	high (_CRCTable| (0+32768))
  5374  0328  1803               	skipnc
  5375  0329  3E01               	addlw	1
  5376  032A  0085               	movwf	5
  5377  032B  0800               	movf	0,w	;code access
  5378  032C  00F5               	movwf	??_SD_SendCommand
  5379  032D  0875               	movf	??_SD_SendCommand,w
  5380  032E  00A6               	movwf	SD_SendCommand@Checksum
  5381                           
  5382                           ;SD.c: 91:     ByteToSend = ARG2;
  5383  032F  0821               	movf	SD_SendCommand@ARG2,w
  5384  0330  00F5               	movwf	??_SD_SendCommand
  5385  0331  0875               	movf	??_SD_SendCommand,w
  5386  0332  00A5               	movwf	SD_SendCommand@ByteToSend
  5387                           
  5388                           ;SD.c: 92:     SPI_Write(ByteToSend);
  5389  0333  0825               	movf	SD_SendCommand@ByteToSend,w
  5390  0334  3185  25D2  3182   	fcall	_SPI_Write
  5391                           
  5392                           ;SD.c: 93:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5393  0337  0020               	movlb	0	; select bank0
  5394  0338  3526               	lslf	SD_SendCommand@Checksum,w
  5395  0339  00F5               	movwf	??_SD_SendCommand
  5396  033A  0875               	movf	??_SD_SendCommand,w
  5397  033B  00A6               	movwf	SD_SendCommand@Checksum
  5398  033C  0826               	movf	SD_SendCommand@Checksum,w
  5399  033D  0625               	xorwf	SD_SendCommand@ByteToSend,w
  5400  033E  00F5               	movwf	??_SD_SendCommand
  5401  033F  0875               	movf	??_SD_SendCommand,w
  5402  0340  00A6               	movwf	SD_SendCommand@Checksum
  5403  0341  0826               	movf	SD_SendCommand@Checksum,w
  5404  0342  3E6E               	addlw	low (_CRCTable| (0+32768))
  5405  0343  0084               	movwf	4
  5406  0344  3080               	movlw	high (_CRCTable| (0+32768))
  5407  0345  1803               	skipnc
  5408  0346  3E01               	addlw	1
  5409  0347  0085               	movwf	5
  5410  0348  0800               	movf	0,w	;code access
  5411  0349  00F5               	movwf	??_SD_SendCommand
  5412  034A  0875               	movf	??_SD_SendCommand,w
  5413  034B  00A6               	movwf	SD_SendCommand@Checksum
  5414                           
  5415                           ;SD.c: 95:     ByteToSend = ARG1;
  5416  034C  0822               	movf	SD_SendCommand@ARG1,w
  5417  034D  00F5               	movwf	??_SD_SendCommand
  5418  034E  0875               	movf	??_SD_SendCommand,w
  5419  034F  00A5               	movwf	SD_SendCommand@ByteToSend
  5420                           
  5421                           ;SD.c: 96:     SPI_Write(ByteToSend);
  5422  0350  0825               	movf	SD_SendCommand@ByteToSend,w
  5423  0351  3185  25D2  3182   	fcall	_SPI_Write
  5424                           
  5425                           ;SD.c: 97:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5426  0354  0020               	movlb	0	; select bank0
  5427  0355  3526               	lslf	SD_SendCommand@Checksum,w
  5428  0356  00F5               	movwf	??_SD_SendCommand
  5429  0357  0875               	movf	??_SD_SendCommand,w
  5430  0358  00A6               	movwf	SD_SendCommand@Checksum
  5431  0359  0826               	movf	SD_SendCommand@Checksum,w
  5432  035A  0625               	xorwf	SD_SendCommand@ByteToSend,w
  5433  035B  00F5               	movwf	??_SD_SendCommand
  5434  035C  0875               	movf	??_SD_SendCommand,w
  5435  035D  00A6               	movwf	SD_SendCommand@Checksum
  5436  035E  0826               	movf	SD_SendCommand@Checksum,w
  5437  035F  3E6E               	addlw	low (_CRCTable| (0+32768))
  5438  0360  0084               	movwf	4
  5439  0361  3080               	movlw	high (_CRCTable| (0+32768))
  5440  0362  1803               	skipnc
  5441  0363  3E01               	addlw	1
  5442  0364  0085               	movwf	5
  5443  0365  0800               	movf	0,w	;code access
  5444  0366  00F5               	movwf	??_SD_SendCommand
  5445  0367  0875               	movf	??_SD_SendCommand,w
  5446  0368  00A6               	movwf	SD_SendCommand@Checksum
  5447                           
  5448                           ;SD.c: 99:     ByteToSend = ARG0;
  5449  0369  0823               	movf	SD_SendCommand@ARG0,w
  5450  036A  00F5               	movwf	??_SD_SendCommand
  5451  036B  0875               	movf	??_SD_SendCommand,w
  5452  036C  00A5               	movwf	SD_SendCommand@ByteToSend
  5453                           
  5454                           ;SD.c: 100:     SPI_Write(ByteToSend);
  5455  036D  0825               	movf	SD_SendCommand@ByteToSend,w
  5456  036E  3185  25D2  3182   	fcall	_SPI_Write
  5457                           
  5458                           ;SD.c: 101:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum =
      +                           CRCTable[Checksum]; };
  5459  0371  0020               	movlb	0	; select bank0
  5460  0372  3526               	lslf	SD_SendCommand@Checksum,w
  5461  0373  00F5               	movwf	??_SD_SendCommand
  5462  0374  0875               	movf	??_SD_SendCommand,w
  5463  0375  00A6               	movwf	SD_SendCommand@Checksum
  5464  0376  0826               	movf	SD_SendCommand@Checksum,w
  5465  0377  0625               	xorwf	SD_SendCommand@ByteToSend,w
  5466  0378  00F5               	movwf	??_SD_SendCommand
  5467  0379  0875               	movf	??_SD_SendCommand,w
  5468  037A  00A6               	movwf	SD_SendCommand@Checksum
  5469  037B  0826               	movf	SD_SendCommand@Checksum,w
  5470  037C  3E6E               	addlw	low (_CRCTable| (0+32768))
  5471  037D  0084               	movwf	4
  5472  037E  3080               	movlw	high (_CRCTable| (0+32768))
  5473  037F  1803               	skipnc
  5474  0380  3E01               	addlw	1
  5475  0381  0085               	movwf	5
  5476  0382  0800               	movf	0,w	;code access
  5477  0383  00F5               	movwf	??_SD_SendCommand
  5478  0384  0875               	movf	??_SD_SendCommand,w
  5479  0385  00A6               	movwf	SD_SendCommand@Checksum
  5480                           
  5481                           ;SD.c: 104:     ByteToSend = (Checksum << 1) | 0x01;
  5482  0386  1403               	setc
  5483  0387  0D26               	rlf	SD_SendCommand@Checksum,w
  5484  0388  00F5               	movwf	??_SD_SendCommand
  5485  0389  0875               	movf	??_SD_SendCommand,w
  5486  038A  00A5               	movwf	SD_SendCommand@ByteToSend
  5487                           
  5488                           ;SD.c: 105:     SPI_Write(ByteToSend);
  5489  038B  0825               	movf	SD_SendCommand@ByteToSend,w
  5490  038C  3185  25D2         	fcall	_SPI_Write
  5491  038E  0008               	return
  5492  038F                     __end_of_SD_SendCommand:	
  5493                           
  5494                           	psect	text12
  5495  05D2                     __ptext12:	
  5496 ;; *************** function _SPI_Write *****************
  5497 ;; Defined at:
  5498 ;;		line 38 in file "SPI.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;  Data_8bit       1    wreg     unsigned char 
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;  Data_8bit       1    4[COMMON] unsigned char 
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1    wreg      void 
  5505 ;; Registers used:
  5506 ;;		wreg
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5515 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5516 ;;Total ram usage:        1 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; Hardware stack levels required when called:    1
  5519 ;; This function calls:
  5520 ;;		Nothing
  5521 ;; This function is called by:
  5522 ;;		_SD_Init
  5523 ;;		_SD_SendCommand
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527                           
  5528                           ;psect for function _SPI_Write
  5529  05D2                     _SPI_Write:	
  5530                           
  5531                           ;incstack = 0
  5532                           ; Regs used in _SPI_Write: [wreg]
  5533                           ;SPI_Write@Data_8bit stored from wreg
  5534  05D2  00F4               	movwf	SPI_Write@Data_8bit
  5535                           
  5536                           ;SPI.c: 39:     SSP1BUF = Data_8bit;
  5537  05D3  0874               	movf	SPI_Write@Data_8bit,w
  5538  05D4  0024               	movlb	4	; select bank4
  5539  05D5  0091               	movwf	17	;volatile
  5540  05D6                     l101:	
  5541                           ;SPI.c: 40:     while(SSP1STATbits.BF == 0);
  5542                           
  5543  05D6  1814               	btfsc	20,0	;volatile
  5544  05D7  0008               	return
  5545  05D8  2DD6               	goto	l101
  5546  05D9                     __end_of_SPI_Write:	
  5547                           
  5548                           	psect	text13
  5549  059A                     __ptext13:	
  5550 ;; *************** function _SD_Read8bitResponse *****************
  5551 ;; Defined at:
  5552 ;;		line 112 in file "SD.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;		None
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;  readMessage     1    1[BANK0 ] unsigned char 
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1    wreg      void 
  5559 ;; Registers used:
  5560 ;;		wreg, status,2, status,0, pclath, cstack
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5567 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5568 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5569 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5570 ;;Total ram usage:        2 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:    2
  5573 ;; This function calls:
  5574 ;;		_SPI_Read
  5575 ;; This function is called by:
  5576 ;;		_SD_Init
  5577 ;;		_SD_OpenBlock
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           
  5582                           ;psect for function _SD_Read8bitResponse
  5583  059A                     _SD_Read8bitResponse:	
  5584  059A                     l2078:	
  5585                           ;incstack = 0
  5586                           ; Regs used in _SD_Read8bitResponse: [wreg+status,2+status,0+pclath+cstack]
  5587                           
  5588  059A  3185  25AB  3185   	fcall	_SPI_Read
  5589  059D  0020               	movlb	0	; select bank0
  5590  059E  00A0               	movwf	??_SD_Read8bitResponse
  5591  059F  0820               	movf	??_SD_Read8bitResponse,w
  5592  05A0  00A1               	movwf	SD_Read8bitResponse@readMessage
  5593  05A1  0A21               	incf	SD_Read8bitResponse@readMessage,w
  5594  05A2  1903               	btfsc	3,2
  5595  05A3  2D9A               	goto	l2078
  5596                           
  5597                           ;SD.c: 121:     GLBL_Resp8 = readMessage;
  5598  05A4  0821               	movf	SD_Read8bitResponse@readMessage,w
  5599  05A5  00A0               	movwf	??_SD_Read8bitResponse
  5600  05A6  0820               	movf	??_SD_Read8bitResponse,w
  5601  05A7  00F8               	movwf	_GLBL_Resp8
  5602                           
  5603                           ;SD.c: 124:     SPI_Read();
  5604  05A8  3185  25AB         	fcall	_SPI_Read
  5605  05AA  0008               	return
  5606  05AB                     __end_of_SD_Read8bitResponse:	
  5607                           
  5608                           	psect	text14
  5609  04CC                     __ptext14:	
  5610 ;; *************** function _SD_Read40bitResponse *****************
  5611 ;; Defined at:
  5612 ;;		line 141 in file "SD.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;		None
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;  readMessage     1    1[BANK0 ] unsigned char 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      void 
  5619 ;; Registers used:
  5620 ;;		wreg, status,2, status,0, pclath, cstack
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5627 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5628 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5629 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5630 ;;Total ram usage:        2 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:    2
  5633 ;; This function calls:
  5634 ;;		_SPI_Read
  5635 ;; This function is called by:
  5636 ;;		_SD_Init
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           
  5641                           ;psect for function _SD_Read40bitResponse
  5642  04CC                     _SD_Read40bitResponse:	
  5643  04CC                     l2100:	
  5644                           ;incstack = 0
  5645                           ; Regs used in _SD_Read40bitResponse: [wreg+status,2+status,0+pclath+cstack]
  5646                           
  5647  04CC  3185  25AB  3184   	fcall	_SPI_Read
  5648  04CF  0020               	movlb	0	; select bank0
  5649  04D0  00A0               	movwf	??_SD_Read40bitResponse
  5650  04D1  0820               	movf	??_SD_Read40bitResponse,w
  5651  04D2  00A1               	movwf	SD_Read40bitResponse@readMessage
  5652  04D3  0A21               	incf	SD_Read40bitResponse@readMessage,w
  5653  04D4  1903               	btfsc	3,2
  5654  04D5  2CCC               	goto	l2100
  5655                           
  5656                           ;SD.c: 150:     GLBL_Resp40[0] = readMessage;
  5657  04D6  0821               	movf	SD_Read40bitResponse@readMessage,w
  5658  04D7  00A0               	movwf	??_SD_Read40bitResponse
  5659  04D8  0820               	movf	??_SD_Read40bitResponse,w
  5660  04D9  0021               	movlb	1	; select bank1
  5661  04DA  00D9               	movwf	_GLBL_Resp40^(0+128)
  5662                           
  5663                           ;SD.c: 151:     GLBL_Resp40[1] = SPI_Read();
  5664  04DB  3185  25AB  3184   	fcall	_SPI_Read
  5665  04DE  0020               	movlb	0	; select bank0
  5666  04DF  00A0               	movwf	??_SD_Read40bitResponse
  5667  04E0  0820               	movf	??_SD_Read40bitResponse,w
  5668  04E1  0021               	movlb	1	; select bank1
  5669  04E2  00DA               	movwf	(_GLBL_Resp40^(0+128)+1)
  5670                           
  5671                           ;SD.c: 152:     GLBL_Resp40[2] = SPI_Read();
  5672  04E3  3185  25AB  3184   	fcall	_SPI_Read
  5673  04E6  0020               	movlb	0	; select bank0
  5674  04E7  00A0               	movwf	??_SD_Read40bitResponse
  5675  04E8  0820               	movf	??_SD_Read40bitResponse,w
  5676  04E9  0021               	movlb	1	; select bank1
  5677  04EA  00DB               	movwf	(_GLBL_Resp40^(0+128)+2)
  5678                           
  5679                           ;SD.c: 153:     GLBL_Resp40[3] = SPI_Read();
  5680  04EB  3185  25AB  3184   	fcall	_SPI_Read
  5681  04EE  0020               	movlb	0	; select bank0
  5682  04EF  00A0               	movwf	??_SD_Read40bitResponse
  5683  04F0  0820               	movf	??_SD_Read40bitResponse,w
  5684  04F1  0021               	movlb	1	; select bank1
  5685  04F2  00DC               	movwf	(_GLBL_Resp40^(0+128)+3)
  5686                           
  5687                           ;SD.c: 154:     GLBL_Resp40[4] = SPI_Read();
  5688  04F3  3185  25AB  3184   	fcall	_SPI_Read
  5689  04F6  0020               	movlb	0	; select bank0
  5690  04F7  00A0               	movwf	??_SD_Read40bitResponse
  5691  04F8  0820               	movf	??_SD_Read40bitResponse,w
  5692  04F9  0021               	movlb	1	; select bank1
  5693  04FA  00DD               	movwf	(_GLBL_Resp40^(0+128)+4)
  5694                           
  5695                           ;SD.c: 157:     SPI_Read();
  5696  04FB  3185  25AB         	fcall	_SPI_Read
  5697  04FD  0008               	return
  5698  04FE                     __end_of_SD_Read40bitResponse:	
  5699                           
  5700                           	psect	text15
  5701  05AB                     __ptext15:	
  5702 ;; *************** function _SPI_Read *****************
  5703 ;; Defined at:
  5704 ;;		line 46 in file "SPI.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;		None
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;  i               2    4[COMMON] int 
  5709 ;; Return value:  Size  Location     Type
  5710 ;;                  1    wreg      unsigned char 
  5711 ;; Registers used:
  5712 ;;		wreg, status,2
  5713 ;; Tracked objects:
  5714 ;;		On entry : 0/0
  5715 ;;		On exit  : 0/0
  5716 ;;		Unchanged: 0/0
  5717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5719 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5722 ;;Total ram usage:        2 bytes
  5723 ;; Hardware stack levels used:    1
  5724 ;; Hardware stack levels required when called:    1
  5725 ;; This function calls:
  5726 ;;		Nothing
  5727 ;; This function is called by:
  5728 ;;		_SD_Read8bitResponse
  5729 ;;		_SD_Read40bitResponse
  5730 ;;		_SD_CloseBlock
  5731 ;;		_readBytes
  5732 ;;		_openFile
  5733 ;;		_main
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           
  5738                           ;psect for function _SPI_Read
  5739  05AB                     _SPI_Read:	
  5740                           
  5741                           ;SPI.c: 47:     SSP1BUF = 0xFF;
  5742                           
  5743                           ;incstack = 0
  5744                           ; Regs used in _SPI_Read: [wreg+status,2]
  5745  05AB  30FF               	movlw	255
  5746  05AC  0024               	movlb	4	; select bank4
  5747  05AD  0091               	movwf	17	;volatile
  5748                           
  5749                           ;SPI.c: 48:     int i=0;
  5750  05AE  01F4               	clrf	SPI_Read@i
  5751  05AF  01F5               	clrf	SPI_Read@i+1
  5752  05B0                     l2014:	
  5753                           ;SPI.c: 49:     while(SSP1STATbits.BF == 0) ++i;
  5754                           
  5755  05B0  1814               	btfsc	20,0	;volatile
  5756  05B1  2DB7               	goto	l2016
  5757  05B2  3001               	movlw	1
  5758  05B3  07F4               	addwf	SPI_Read@i,f
  5759  05B4  3000               	movlw	0
  5760  05B5  3DF5               	addwfc	SPI_Read@i+1,f
  5761  05B6  2DB0               	goto	l2014
  5762  05B7                     l2016:	
  5763                           
  5764                           ;SPI.c: 50:     return SSP1BUF;
  5765  05B7  0811               	movf	17,w	;volatile
  5766  05B8  0008               	return
  5767  05B9                     __end_of_SPI_Read:	
  5768                           
  5769                           	psect	text16
  5770  05C2                     __ptext16:	
  5771 ;; *************** function _SD_Check8bitResponse *****************
  5772 ;; Defined at:
  5773 ;;		line 132 in file "SD.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;  Byte            1    wreg     unsigned char 
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  Byte            1    4[COMMON] unsigned char 
  5778 ;;  match           1    5[COMMON] _Bool 
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  1    wreg      _Bool 
  5781 ;; Registers used:
  5782 ;;		wreg, status,2
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5789 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5791 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5792 ;;Total ram usage:        2 bytes
  5793 ;; Hardware stack levels used:    1
  5794 ;; Hardware stack levels required when called:    1
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		_SD_Init
  5799 ;;		_SD_OpenBlock
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           
  5804                           ;psect for function _SD_Check8bitResponse
  5805  05C2                     _SD_Check8bitResponse:	
  5806                           
  5807                           ;incstack = 0
  5808                           ; Regs used in _SD_Check8bitResponse: [wreg+status,2]
  5809                           ;SD_Check8bitResponse@Byte stored from wreg
  5810  05C2  00F4               	movwf	SD_Check8bitResponse@Byte
  5811                           
  5812                           ;SD.c: 133:     _Bool match = 1;
  5813  05C3  01F5               	clrf	SD_Check8bitResponse@match
  5814  05C4  0AF5               	incf	SD_Check8bitResponse@match,f
  5815                           
  5816                           ;SD.c: 134:     if (Byte != GLBL_Resp8) match = 0;
  5817  05C5  0874               	movf	SD_Check8bitResponse@Byte,w
  5818  05C6  0678               	xorwf	_GLBL_Resp8,w
  5819  05C7  1D03               	btfss	3,2
  5820  05C8  01F5               	clrf	SD_Check8bitResponse@match
  5821                           
  5822                           ;SD.c: 135:     return match;
  5823  05C9  0875               	movf	SD_Check8bitResponse@match,w
  5824  05CA  0008               	return
  5825  05CB                     __end_of_SD_Check8bitResponse:	
  5826                           
  5827                           	psect	text17
  5828  0548                     __ptext17:	
  5829 ;; *************** function _SD_Check40bitResponse *****************
  5830 ;; Defined at:
  5831 ;;		line 166 in file "SD.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;  Byte4           1    wreg     unsigned char 
  5834 ;;  Byte3           1    0[BANK0 ] unsigned char 
  5835 ;;  Byte2           1    1[BANK0 ] unsigned char 
  5836 ;;  Byte1           1    2[BANK0 ] unsigned char 
  5837 ;;  Byte0           1    3[BANK0 ] unsigned char 
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;  Byte4           1    4[COMMON] unsigned char 
  5840 ;;  match           1    5[COMMON] _Bool 
  5841 ;; Return value:  Size  Location     Type
  5842 ;;                  1    wreg      _Bool 
  5843 ;; Registers used:
  5844 ;;		wreg, status,2
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5850 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5851 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5853 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5854 ;;Total ram usage:        6 bytes
  5855 ;; Hardware stack levels used:    1
  5856 ;; Hardware stack levels required when called:    1
  5857 ;; This function calls:
  5858 ;;		Nothing
  5859 ;; This function is called by:
  5860 ;;		_SD_Init
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           
  5865                           ;psect for function _SD_Check40bitResponse
  5866  0548                     _SD_Check40bitResponse:	
  5867                           
  5868                           ;incstack = 0
  5869                           ; Regs used in _SD_Check40bitResponse: [wreg+status,2]
  5870                           ;SD_Check40bitResponse@Byte4 stored from wreg
  5871  0548  00F4               	movwf	SD_Check40bitResponse@Byte4
  5872                           
  5873                           ;SD.c: 167:     _Bool match = 1;
  5874  0549  01F5               	clrf	SD_Check40bitResponse@match
  5875  054A  0AF5               	incf	SD_Check40bitResponse@match,f
  5876                           
  5877                           ;SD.c: 168:     if (Byte4 != GLBL_Resp40[0]) match = 0;
  5878  054B  0021               	movlb	1	; select bank1
  5879  054C  0859               	movf	_GLBL_Resp40^(0+128),w
  5880  054D  0674               	xorwf	SD_Check40bitResponse@Byte4,w
  5881  054E  1D03               	btfss	3,2
  5882  054F  01F5               	clrf	SD_Check40bitResponse@match
  5883                           
  5884                           ;SD.c: 169:     if (Byte3 != GLBL_Resp40[1]) match = 0;
  5885  0550  085A               	movf	(_GLBL_Resp40^(0+128)+1),w
  5886  0551  0020               	movlb	0	; select bank0
  5887  0552  0620               	xorwf	SD_Check40bitResponse@Byte3,w
  5888  0553  1D03               	btfss	3,2
  5889  0554  01F5               	clrf	SD_Check40bitResponse@match
  5890                           
  5891                           ;SD.c: 170:     if (Byte2 != GLBL_Resp40[2]) match = 0;
  5892  0555  0021               	movlb	1	; select bank1
  5893  0556  085B               	movf	(_GLBL_Resp40^(0+128)+2),w
  5894  0557  0020               	movlb	0	; select bank0
  5895  0558  0621               	xorwf	SD_Check40bitResponse@Byte2,w
  5896  0559  1D03               	btfss	3,2
  5897  055A  01F5               	clrf	SD_Check40bitResponse@match
  5898                           
  5899                           ;SD.c: 171:     if (Byte1 != GLBL_Resp40[3]) match = 0;
  5900  055B  0021               	movlb	1	; select bank1
  5901  055C  085C               	movf	(_GLBL_Resp40^(0+128)+3),w
  5902  055D  0020               	movlb	0	; select bank0
  5903  055E  0622               	xorwf	SD_Check40bitResponse@Byte1,w
  5904  055F  1D03               	btfss	3,2
  5905  0560  01F5               	clrf	SD_Check40bitResponse@match
  5906                           
  5907                           ;SD.c: 172:     if (Byte0 != GLBL_Resp40[4]) match = 0;
  5908  0561  0021               	movlb	1	; select bank1
  5909  0562  085D               	movf	(_GLBL_Resp40^(0+128)+4),w
  5910  0563  0020               	movlb	0	; select bank0
  5911  0564  0623               	xorwf	SD_Check40bitResponse@Byte0,w
  5912  0565  1D03               	btfss	3,2
  5913  0566  01F5               	clrf	SD_Check40bitResponse@match
  5914                           
  5915                           ;SD.c: 173:     return match;
  5916  0567  0875               	movf	SD_Check40bitResponse@match,w
  5917  0568  0008               	return
  5918  0569                     __end_of_SD_Check40bitResponse:	
  5919                           
  5920                           	psect	text18
  5921  05D9                     __ptext18:	
  5922 ;; *************** function _DAC_Init *****************
  5923 ;; Defined at:
  5924 ;;		line 30 in file "DAC.c"
  5925 ;; Parameters:    Size  Location     Type
  5926 ;;		None
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;		None
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  1    wreg      void 
  5931 ;; Registers used:
  5932 ;;		wreg
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5942 ;;Total ram usage:        0 bytes
  5943 ;; Hardware stack levels used:    1
  5944 ;; Hardware stack levels required when called:    1
  5945 ;; This function calls:
  5946 ;;		Nothing
  5947 ;; This function is called by:
  5948 ;;		_init
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           
  5952                           
  5953                           ;psect for function _DAC_Init
  5954  05D9                     _DAC_Init:	
  5955                           
  5956                           ;DAC.c: 31:     TRISA = 0xFB;
  5957                           
  5958                           ;incstack = 0
  5959                           ; Regs used in _DAC_Init: [wreg]
  5960  05D9  30FB               	movlw	251
  5961  05DA  0021               	movlb	1	; select bank1
  5962  05DB  008C               	movwf	12	;volatile
  5963                           
  5964                           ;DAC.c: 32:     DAC1CON0 = 0xE0;
  5965  05DC  30E0               	movlw	224
  5966  05DD  002B               	movlb	11	; select bank11
  5967  05DE  008E               	movwf	14	;volatile
  5968  05DF  0008               	return
  5969  05E0                     __end_of_DAC_Init:	
  5970                           
  5971                           	psect	intentry
  5972  0004                     __pintentry:	
  5973 ;; *************** function _isr *****************
  5974 ;; Defined at:
  5975 ;;		line 114 in file "main.c"
  5976 ;; Parameters:    Size  Location     Type
  5977 ;;		None
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;  level           2    2[COMMON] short 
  5980 ;; Return value:  Size  Location     Type
  5981 ;;                  1    wreg      void 
  5982 ;; Registers used:
  5983 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5984 ;; Tracked objects:
  5985 ;;		On entry : 0/0
  5986 ;;		On exit  : 0/0
  5987 ;;		Unchanged: 0/0
  5988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5990 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5991 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5992 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5993 ;;Total ram usage:        4 bytes
  5994 ;; Hardware stack levels used:    1
  5995 ;; This function calls:
  5996 ;;		Nothing
  5997 ;; This function is called by:
  5998 ;;		Interrupt level 1
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002  0004                     _isr:	
  6003                           
  6004                           ;incstack = 0
  6005  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6006                           
  6007                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  6008  0005  3180               	pagesel	$
  6009                           
  6010                           ;main.c: 115:     PIR1bits.TMR2IF = 0;
  6011  0006  0020               	movlb	0	; select bank0
  6012  0007  1091               	bcf	17,1	;volatile
  6013                           
  6014                           ;main.c: 118:     short level = buffer[buffer_read_index++] - 0x8000;
  6015  0008  353B               	lslf	_buffer_read_index,w
  6016  0009  3E20               	addlw	(low (_buffer| (0+256)))& (0+255)
  6017  000A  0086               	movwf	6
  6018  000B  3001               	movlw	1	; select bank2/3
  6019  000C  0087               	movwf	7
  6020  000D  3F40               	moviw [0]fsr1
  6021  000E  00F0               	movwf	??_isr
  6022  000F  3F41               	moviw [1]fsr1
  6023  0010  00F1               	movwf	??_isr+1
  6024  0011  0870               	movf	??_isr,w
  6025  0012  3E00               	addlw	0
  6026  0013  00F2               	movwf	isr@level
  6027  0014  3080               	movlw	128
  6028  0015  3D71               	addwfc	??_isr+1,w
  6029  0016  00F3               	movwf	isr@level+1
  6030  0017  3001               	movlw	1
  6031  0018  07BB               	addwf	_buffer_read_index,f
  6032  0019  3000               	movlw	0
  6033  001A  3DBC               	addwfc	_buffer_read_index+1,f
  6034                           
  6035                           ;main.c: 119:     DAC1REFH = (level & 0xff00) >> 8;
  6036  001B  0873               	movf	isr@level+1,w
  6037  001C  002B               	movlb	11	; select bank11
  6038  001D  0090               	movwf	16	;volatile
  6039                           
  6040                           ;main.c: 120:     DAC1REFL = (level & 0x00C0) << 8;
  6041  001E  018F               	clrf	15	;volatile
  6042                           
  6043                           ;main.c: 121:     DAC1LD = 1;
  6044  001F  140D               	bsf	13,0	;volatile
  6045                           
  6046                           ;main.c: 123:     if (buffer_read_index >= 32) buffer_read_index = 0;
  6047  0020  3000               	movlw	0
  6048  0021  0020               	movlb	0	; select bank0
  6049  0022  023C               	subwf	_buffer_read_index+1,w
  6050  0023  3020               	movlw	32
  6051  0024  1903               	skipnz
  6052  0025  023B               	subwf	_buffer_read_index,w
  6053  0026  1C03               	skipc
  6054  0027  282A               	goto	i1l249
  6055  0028  01BB               	clrf	_buffer_read_index
  6056  0029  01BC               	clrf	_buffer_read_index+1
  6057  002A                     i1l249:	
  6058  002A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6059  002B  0009               	retfie
  6060  002C                     __end_of_isr:	
  6061  007E                     btemp	set	126	;btemp
  6062  007E                     int$flags	set	126
  6063  007E                     wtemp0	set	126


Data Sizes:
    Strings     20
    Constant    256
    Data        11
    BSS         88
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     25      39
    BANK1            80     45      62
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    readBytes@dest	PTR unsigned char  size(1) Largest target is 28
		 -> openFile@data(BANK1[8]), openFile@fmt(BANK1[28]), openFile@riff(BANK1[8]), 

    fourCCeq@b	PTR unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), STR_6(CODE[5]), STR_4(CODE[5]), STR_2(CODE[5]), 

    fourCCeq@a	PTR unsigned char  size(1) Largest target is 28
		 -> openFile@data(BANK1[8]), fmt.fmtHeader(BANK0[8]), openFile@fmt(BANK1[28]), openFile@riff(BANK1[8]), 


Critical Paths under _main in COMMON

    _main->_SPI_Read
    _main->_error
    _openFile->_SPI_Read
    _openFile->_error
    _openFile->_fourCCeq
    _readBytes->_SPI_Read
    _SD_CloseBlock->_SPI_Read
    _SD_OpenBlock->_SD_Check8bitResponse
    _SD_OpenBlock->_SD_SendCommand
    _SD_Init->_SD_Check40bitResponse
    _SD_Init->_SD_Check8bitResponse
    _SD_Init->_SD_SendCommand
    _SD_SendCommand->_SPI_Write
    _SD_Read8bitResponse->_SPI_Read
    _SD_Read40bitResponse->_SPI_Read

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_openFile
    _openFile->_SD_OpenBlock
    _SD_OpenBlock->_SD_SendCommand
    _init->_SD_Init
    _SD_Init->_SD_SendCommand

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_openFile

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   12485
                                             24 BANK0      1     1      0
                      _SD_CloseBlock
                       _SD_OpenBlock
                           _SPI_Read
                              _error
                               _init
                           _openFile
                         _timer_Init
 ---------------------------------------------------------------------------------
 (1) _timer_Init                                           4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _openFile                                            50    46      4    5237
                                             19 BANK0      5     1      4
                                              0 BANK1     45    45      0
                       _SD_OpenBlock
                           _SPI_Read
                              _error
                           _fourCCeq
                          _readBytes
 ---------------------------------------------------------------------------------
 (2) _readBytes                                            7     5      2     520
                                              0 BANK0      7     5      2
                      _SD_CloseBlock
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SD_CloseBlock                                        0     0      0       6
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (2) _fourCCeq                                             8     6      2     696
                                              4 COMMON     2     0      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _error                                                2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SD_OpenBlock                                        12     8      4    3381
                                              7 BANK0     12     8      4
               _SD_Check8bitResponse
                _SD_Read8bitResponse
                     _SD_SendCommand
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    3703
                           _DAC_Init
                            _SD_Init
                           _SPI_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SD_Init                                              1     1      0    3703
                                              7 BANK0      1     1      0
              _SD_Check40bitResponse
               _SD_Check8bitResponse
               _SD_Read40bitResponse
                _SD_Read8bitResponse
                     _SD_SendCommand
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SD_SendCommand                                       8     4      4    2892
                                              5 COMMON     1     1      0
                                              0 BANK0      7     3      4
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (4) _SPI_Write                                            1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SD_Read8bitResponse                                  2     2      0      74
                                              0 BANK0      2     2      0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SD_Read40bitResponse                                 2     2      0      74
                                              0 BANK0      2     2      0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SPI_Read                                             2     2      0       6
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _SD_Check8bitResponse                                 2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _SD_Check40bitResponse                                6     2      4     564
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _DAC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0      23
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SD_CloseBlock
     _SPI_Read
   _SD_OpenBlock
     _SD_Check8bitResponse
     _SD_Read8bitResponse
       _SPI_Read
     _SD_SendCommand
       _SPI_Write
   _SPI_Read
   _error
   _init
     _DAC_Init
     _SD_Init
       _SD_Check40bitResponse
       _SD_Check8bitResponse
       _SD_Read40bitResponse
         _SPI_Read
       _SD_Read8bitResponse
         _SPI_Read
       _SD_SendCommand
         _SPI_Write
       _SPI_Write
     _SPI_Init
   _openFile
     _SD_OpenBlock
       _SD_Check8bitResponse
       _SD_Read8bitResponse
         _SPI_Read
       _SD_SendCommand
         _SPI_Write
     _SPI_Read
     _error
     _fourCCeq
     _readBytes
       _SD_CloseBlock
         _SPI_Read
       _SPI_Read
   _timer_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BIGRAM             3F0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITCOMMON            E      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
COMMON               E      6       A       3       71.4%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
STACK                0      0       0       4        0.0%
BANK0               50     19      27       5       48.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK0            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     2D      3E       8       77.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
ABS                  0      0      AF      13        0.0%
BITBANK4            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK5            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK6            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK7            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK8            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK9            50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9               50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK10           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITBANK11           50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
DATA                 0      0      AF      30        0.0%
BITBANK12           30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12              30      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK13           50      0       0      33        0.0%
BANK13              50      0       0      34        0.0%
BITBANK14           50      0       0      35        0.0%
BANK14              50      0       0      36        0.0%
BITBANK15           50      0       0      37        0.0%
BANK15              50      0       0      38        0.0%
BITBANK16           50      0       0      39        0.0%
BANK16              50      0       0      40        0.0%
BITBANK17           50      0       0      41        0.0%
BANK17              50      0       0      42        0.0%
BITBANK18           50      0       0      43        0.0%
BANK18              50      0       0      44        0.0%
BITBANK19           50      0       0      45        0.0%
BANK19              50      0       0      46        0.0%
BITBANK20           50      0       0      47        0.0%
BANK20              50      0       0      48        0.0%
BITBANK21           50      0       0      49        0.0%
BANK21              50      0       0      50        0.0%
BITBANK22           50      0       0      51        0.0%
BANK22              50      0       0      52        0.0%
BITBANK23           50      0       0      53        0.0%
BANK23              50      0       0      54        0.0%
BITBANK24           50      0       0      55        0.0%
BANK24              50      0       0      56        0.0%
BITBANK25           20      0       0      57        0.0%
BANK25              20      0       0      58        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 02 15:38:36 2019

            SD_OpenBlock@address 0027                              l101 05D6                              l220 0589  
                            l127 0486                              u915 04B1                              u925 0495  
                            _isr 0004                              wreg 0009           ??_SD_Check8bitResponse 0074  
                ?_SD_SendCommand 0020                             l2100 04CC                             l2014 05B0  
                           l2016 05B7                             l2200 0501                             l2206 051A  
                           l2230 04C6                             l2232 048B                             l2312 025B  
                           l2162 03D3                             l2322 027B                             l2250 0439  
                           l2402 020A                             l2156 03BF                             l2340 02B5  
                           l2332 02A2                             l2316 0263                             l2244 0431  
                           l2236 0427                             l2078 059A                             l2350 02E1  
                           l2168 03F4                             l2336 02AB                             l2328 0293  
                           l2256 0441                             l2264 0451                             l2258 0449  
                           l2418 023C                             l2390 01E7                             l2560 0457  
                           l2376 01CB                             l2368 01AB                             l2570 0477  
                           l2562 0481                             l2386 01DF                             l2572 047C  
                           l2564 0468                             l2566 046D                             l2568 0472  
                           ?_isr 0070                             STR_1 05F6                             STR_2 05F6  
                           STR_3 05F1                             STR_4 05F1                             STR_5 016E  
                           STR_6 016E                             STR_7 05FB                             STR_8 05FB  
                           u1085 01F4                             u1095 0211                             _T2PR 0494  
                           _main 0173                             _init 0586                  __end_of_SD_Init 0420  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                 __end_of_DAC_Init 05E0                             start 002C  
  __size_of_SD_Read40bitResponse 0032                  ??_SD_CloseBlock 0076     __size_of_SD_Read8bitResponse 0011  
               __end_of_CRCTable 016E                            ??_isr 0070                    __CFG_PLLEN$ON 0000  
                          ?_main 0070                            ?_init 0070                    __CFG_WDTE$OFF 0000  
                          _ANSC3 0C73                            _T2CON 0495                            i1l249 002A  
                          _TRISA 008C                            _error 05CB                            _sdata 003D  
                          _state 0076                 __end_of_SPI_Init 0586                 __end_of_SPI_Read 05B9  
                          status 0003                            wtemp0 007E               __size_of_SPI_Write 0007  
                __initialization 002E                     __end_of_main 0241                     __end_of_init 059A  
             _buffer_write_index 0044                           ??_main 0038                           ??_init 0076  
       SD_Check8bitResponse@Byte 0074                           _DAC1LD 2C68                           ?_error 0070  
                      ??_SD_Init 0027                           _RC2PPS 0EA2                           _RC4PPS 0EA4  
                         _OSCCON 009B                           _TRISC2 0472                           _TRISC3 0473  
                         _TRISC4 0474                           _TRISC7 0477                    SD_OpenBlock@a 002F  
               __end_of_fourCCeq 0524                           _buffer 0120         SD_SendCommand@ByteToSend 0025  
               __end_of_openFile 02F0                __end_of_SPI_Write 05D9                           error@e 0075  
                   __pdataCOMMON 0076                        ?_DAC_Init 0070          __end_of__initialization 006A  
 __size_of_SD_Check40bitResponse 0021    __end_of_SD_Check40bitResponse 0569                   __pcstackCOMMON 0070  
                   __pidataBANK0 0603                     __pidataBANK1 05EC                    __end_of_error 05D2  
                      ?_SPI_Init 0070                        ?_SPI_Read 0070                 ??_SD_SendCommand 0075  
                     ??_DAC_Init 0074              _SD_Read8bitResponse 059A                          ??_error 0074  
                     __pbssBANK0 0039                       __pbssBANK1 00CD                       __pbssBANK2 0120  
             __size_of_readBytes 0045                       __pmaintext 0173             ?_SD_Read8bitResponse 0070  
                     _blockIndex 0039                      openFile@fmt 00B1                       __pintentry 0004  
                     ??_SPI_Init 0074                       ??_SPI_Read 0074     __end_of_SD_Read40bitResponse 04FE  
                        _SSP1ADD 0212                          _SSP1BUF 0211                          _SD_Init 038F  
  __size_of_SD_Check8bitResponse 0009                        ?_fourCCeq 0074                     readBytes@len 0020  
                      SPI_Read@i 0074                        ?_openFile 0033            ??_SD_Read8bitResponse 0020  
          __end_of_SD_CloseBlock 05C2                          _address 00CD                          __ptext1 0420  
                        __ptext2 0241                          __ptext3 0487                          __ptext4 05B9  
                        __ptext5 04FE                          __ptext6 05CB                          __ptext7 0524  
                        __ptext8 0586                          __ptext9 0569                __end_of_readBytes 04CC  
                   __size_of_isr 0028                          clrloop0 05E7             end_of_initialization 006A  
                     ??_fourCCeq 0020       SD_Check40bitResponse@Byte0 0023       SD_Check40bitResponse@Byte1 0022  
     SD_Check40bitResponse@Byte2 0021       SD_Check40bitResponse@Byte3 0020       SD_Check40bitResponse@Byte4 0074  
                        init_ram 05E0                          initloop 05E1       SD_Check40bitResponse@match 0075  
                     ??_openFile 0037                       _timer_Init 0420                        _PORTCbits 000E  
                      _SSPDATPPS 0E3B                        _SSPCLKPPS 0E3A                 __CFG_FOSC$INTOSC 0000  
                      _TRISBbits 008D                        _TRISCbits 008E                        _SPI_Write 05D2  
              __size_of_DAC_Init 0007                    ?_SD_OpenBlock 0027  SD_Read40bitResponse@readMessage 0021  
           _SD_Read40bitResponse 04CC                     _global_error 0079                    __pidataCOMMON 0600  
              __size_of_SPI_Init 001D                __size_of_SPI_Read 000E              start_initialization 002E  
             SPI_Write@Data_8bit 0074                      __end_of_isr 002C                       ?_SPI_Write 0070  
                 ??_SD_OpenBlock 002B            ?_SD_Read40bitResponse 0070                    _samplePending 0043  
                     readBytes@i 0025            _SD_Check40bitResponse 0548                      __pdataBANK0 0044  
                    __pdataBANK1 00D9                      ?_timer_Init 0020                      __pbssCOMMON 0079  
                      ___latbits 0003                    __pcstackBANK0 0020                    __pcstackBANK1 00A0  
                       ?_SD_Init 0070                __size_of_fourCCeq 0026                __size_of_openFile 00AF  
   __end_of_SD_Check8bitResponse 05CB                     openFile@data 00A9                     openFile@riff 00A0  
                       _DAC1CON0 058E                         _DAC1REFH 0590                         _DAC1REFL 058F  
                      _isPlaying 0046                      _bitsPerSamp 003F                      _GLBL_Resp40 00D9  
                       _DAC_Init 05D9                      ??_SPI_Write 0074                        _readBytes 0487  
                 __size_of_error 0007                         _T2CLKCON 0497                         _CRCTable 006E  
        __size_of_SD_SendCommand 009F              __size_of_timer_Init 0067           ??_SD_Read40bitResponse 0020  
    __end_of_SD_Read8bitResponse 05AB                        clear_ram0 05E6                         _PIE1bits 0091  
         SD_SendCommand@CMD_6bit 0024                         _PIR1bits 0011           ?_SD_Check40bitResponse 0020  
                       _SSP1CON1 0215                         _SSP1STAT 0214             __end_of_SD_OpenBlock 0548  
                       _SPI_Init 0569                         _SPI_Read 05AB                       ?_readBytes 0020  
         __size_of_SD_CloseBlock 0009                 __size_of_SD_Init 0091                        fourCCeq@a 0024  
                      fourCCeq@b 0074                        fourCCeq@i 0025                    readBytes@dest 0024  
         SD_SendCommand@Checksum 0026                      _readMessage 0077                       _ANSELBbits 018D  
                       _channels 0041                        openFile@a 0033                         __ptext10 038F  
                       __ptext11 02F0                         __ptext12 05D2                         __ptext13 059A  
                       __ptext14 04CC                         __ptext15 05AB                         __ptext16 05C2  
                       __ptext17 0548                         __ptext18 05D9                     _SSP1CON1bits 0215  
                       _filesize 00D1             _SD_Check8bitResponse 05C2                         _fourCCeq 04FE  
                     _GLBL_Resp8 0078                    __size_of_main 00CE                    __size_of_init 0014  
             SD_SendCommand@ARG0 0023               SD_SendCommand@ARG1 0022               SD_SendCommand@ARG2 0021  
             SD_SendCommand@ARG3 0020                         _sampRate 00D5                         _openFile 0241  
                       int$flags 007E                    _SD_CloseBlock 05B9                     ??_timer_Init 0074  
                   _SSP1STATbits 0214                      _OSCSTATbits 009C                 openFile@response 00A8  
 SD_Read8bitResponse@readMessage 0021                       _INTCONbits 000B                         isr@level 0072  
                    ??_readBytes 0022            ?_SD_Check8bitResponse 0070                         intlevel1 0000  
                 _SD_SendCommand 02F0        SD_Check8bitResponse@match 0075               __end_of_timer_Init 0487  
                 timer_Init@rate 0020            __size_of_SD_OpenBlock 0024                   ?_SD_CloseBlock 0070  
              _buffer_read_index 003B                    __pstringtext1 006E                    __pstringtext2 05F1  
                  __pstringtext3 05F6                    __pstringtext4 05FB                    __pstringtext5 0000  
         __end_of_SD_SendCommand 038F                     _SD_OpenBlock 0524          ??_SD_Check40bitResponse 0074  
