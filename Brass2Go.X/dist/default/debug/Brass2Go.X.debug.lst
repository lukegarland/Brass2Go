

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Apr 04 22:09:29 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1778
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.05
    46                           ; Generated 20/12/2018 GMT
    47                           ; 
    48                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F1778 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  0111                     	;# 
   135  0112                     	;# 
   136  0113                     	;# 
   137  0114                     	;# 
   138  0115                     	;# 
   139  0116                     	;# 
   140  0117                     	;# 
   141  0118                     	;# 
   142  0119                     	;# 
   143  011A                     	;# 
   144  011B                     	;# 
   145  011C                     	;# 
   146  011D                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  018E                     	;# 
   150  0191                     	;# 
   151  0191                     	;# 
   152  0192                     	;# 
   153  0193                     	;# 
   154  0193                     	;# 
   155  0194                     	;# 
   156  0195                     	;# 
   157  0196                     	;# 
   158  0197                     	;# 
   159  0199                     	;# 
   160  0199                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019A                     	;# 
   164  019A                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019C                     	;# 
   173  019D                     	;# 
   174  019D                     	;# 
   175  019D                     	;# 
   176  019E                     	;# 
   177  019E                     	;# 
   178  019E                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  020C                     	;# 
   185  020D                     	;# 
   186  020E                     	;# 
   187  0210                     	;# 
   188  0211                     	;# 
   189  0211                     	;# 
   190  0212                     	;# 
   191  0212                     	;# 
   192  0213                     	;# 
   193  0213                     	;# 
   194  0214                     	;# 
   195  0214                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0216                     	;# 
   201  0216                     	;# 
   202  0217                     	;# 
   203  0217                     	;# 
   204  021B                     	;# 
   205  021C                     	;# 
   206  021D                     	;# 
   207  021E                     	;# 
   208  021F                     	;# 
   209  028C                     	;# 
   210  028D                     	;# 
   211  028E                     	;# 
   212  0291                     	;# 
   213  0291                     	;# 
   214  0292                     	;# 
   215  0293                     	;# 
   216  0294                     	;# 
   217  0295                     	;# 
   218  0295                     	;# 
   219  0296                     	;# 
   220  0297                     	;# 
   221  0298                     	;# 
   222  0299                     	;# 
   223  0299                     	;# 
   224  029A                     	;# 
   225  029B                     	;# 
   226  029C                     	;# 
   227  029E                     	;# 
   228  029F                     	;# 
   229  030C                     	;# 
   230  030D                     	;# 
   231  030E                     	;# 
   232  0315                     	;# 
   233  0316                     	;# 
   234  0317                     	;# 
   235  0318                     	;# 
   236  0319                     	;# 
   237  031B                     	;# 
   238  031C                     	;# 
   239  031D                     	;# 
   240  031E                     	;# 
   241  031F                     	;# 
   242  038C                     	;# 
   243  038D                     	;# 
   244  038E                     	;# 
   245  0390                     	;# 
   246  0391                     	;# 
   247  0392                     	;# 
   248  0393                     	;# 
   249  0394                     	;# 
   250  0395                     	;# 
   251  0396                     	;# 
   252  0397                     	;# 
   253  0398                     	;# 
   254  0399                     	;# 
   255  039D                     	;# 
   256  039E                     	;# 
   257  039F                     	;# 
   258  040D                     	;# 
   259  040F                     	;# 
   260  040F                     	;# 
   261  0410                     	;# 
   262  0411                     	;# 
   263  0412                     	;# 
   264  0413                     	;# 
   265  0413                     	;# 
   266  0414                     	;# 
   267  0414                     	;# 
   268  0415                     	;# 
   269  0416                     	;# 
   270  0417                     	;# 
   271  0418                     	;# 
   272  041A                     	;# 
   273  041A                     	;# 
   274  041B                     	;# 
   275  041B                     	;# 
   276  041C                     	;# 
   277  041D                     	;# 
   278  041E                     	;# 
   279  041F                     	;# 
   280  048E                     	;# 
   281  048E                     	;# 
   282  048F                     	;# 
   283  0490                     	;# 
   284  0491                     	;# 
   285  0492                     	;# 
   286  0493                     	;# 
   287  0493                     	;# 
   288  0494                     	;# 
   289  0494                     	;# 
   290  0495                     	;# 
   291  0496                     	;# 
   292  0497                     	;# 
   293  0498                     	;# 
   294  049A                     	;# 
   295  049A                     	;# 
   296  049B                     	;# 
   297  049B                     	;# 
   298  049C                     	;# 
   299  049D                     	;# 
   300  049E                     	;# 
   301  049F                     	;# 
   302  050F                     	;# 
   303  0510                     	;# 
   304  0511                     	;# 
   305  0512                     	;# 
   306  0513                     	;# 
   307  0514                     	;# 
   308  0515                     	;# 
   309  0516                     	;# 
   310  0517                     	;# 
   311  0518                     	;# 
   312  0519                     	;# 
   313  051A                     	;# 
   314  058D                     	;# 
   315  058E                     	;# 
   316  058F                     	;# 
   317  058F                     	;# 
   318  058F                     	;# 
   319  0590                     	;# 
   320  0590                     	;# 
   321  0591                     	;# 
   322  0592                     	;# 
   323  0592                     	;# 
   324  0592                     	;# 
   325  0593                     	;# 
   326  0593                     	;# 
   327  0594                     	;# 
   328  0595                     	;# 
   329  0595                     	;# 
   330  0596                     	;# 
   331  0597                     	;# 
   332  0597                     	;# 
   333  0598                     	;# 
   334  0599                     	;# 
   335  0599                     	;# 
   336  0599                     	;# 
   337  059A                     	;# 
   338  059A                     	;# 
   339  059E                     	;# 
   340  059F                     	;# 
   341  059F                     	;# 
   342  0614                     	;# 
   343  0614                     	;# 
   344  0615                     	;# 
   345  0616                     	;# 
   346  0617                     	;# 
   347  0617                     	;# 
   348  0618                     	;# 
   349  0619                     	;# 
   350  061A                     	;# 
   351  061A                     	;# 
   352  061B                     	;# 
   353  061C                     	;# 
   354  068D                     	;# 
   355  068E                     	;# 
   356  068F                     	;# 
   357  0690                     	;# 
   358  0691                     	;# 
   359  0692                     	;# 
   360  0693                     	;# 
   361  0694                     	;# 
   362  0695                     	;# 
   363  0696                     	;# 
   364  0697                     	;# 
   365  0698                     	;# 
   366  0699                     	;# 
   367  069A                     	;# 
   368  069B                     	;# 
   369  069C                     	;# 
   370  069D                     	;# 
   371  069E                     	;# 
   372  069F                     	;# 
   373  070D                     	;# 
   374  070E                     	;# 
   375  070F                     	;# 
   376  0710                     	;# 
   377  0711                     	;# 
   378  0712                     	;# 
   379  0713                     	;# 
   380  0714                     	;# 
   381  0715                     	;# 
   382  0716                     	;# 
   383  0717                     	;# 
   384  0718                     	;# 
   385  0719                     	;# 
   386  071A                     	;# 
   387  071B                     	;# 
   388  071C                     	;# 
   389  071D                     	;# 
   390  071E                     	;# 
   391  071F                     	;# 
   392  078E                     	;# 
   393  078F                     	;# 
   394  0790                     	;# 
   395  0791                     	;# 
   396  0792                     	;# 
   397  0793                     	;# 
   398  0794                     	;# 
   399  0795                     	;# 
   400  0796                     	;# 
   401  0797                     	;# 
   402  0798                     	;# 
   403  0799                     	;# 
   404  079A                     	;# 
   405  079B                     	;# 
   406  079C                     	;# 
   407  079D                     	;# 
   408  079E                     	;# 
   409  079F                     	;# 
   410  080D                     	;# 
   411  080E                     	;# 
   412  080F                     	;# 
   413  0810                     	;# 
   414  0811                     	;# 
   415  0812                     	;# 
   416  0813                     	;# 
   417  0814                     	;# 
   418  0815                     	;# 
   419  0816                     	;# 
   420  0817                     	;# 
   421  0818                     	;# 
   422  0819                     	;# 
   423  081A                     	;# 
   424  081B                     	;# 
   425  081C                     	;# 
   426  081D                     	;# 
   427  081E                     	;# 
   428  081F                     	;# 
   429  090C                     	;# 
   430  090D                     	;# 
   431  090E                     	;# 
   432  090F                     	;# 
   433  0910                     	;# 
   434  0911                     	;# 
   435  0912                     	;# 
   436  0913                     	;# 
   437  0914                     	;# 
   438  0915                     	;# 
   439  0916                     	;# 
   440  0917                     	;# 
   441  0D8E                     	;# 
   442  0D8F                     	;# 
   443  0D90                     	;# 
   444  0D91                     	;# 
   445  0D91                     	;# 
   446  0D92                     	;# 
   447  0D93                     	;# 
   448  0D93                     	;# 
   449  0D94                     	;# 
   450  0D95                     	;# 
   451  0D95                     	;# 
   452  0D96                     	;# 
   453  0D97                     	;# 
   454  0D97                     	;# 
   455  0D98                     	;# 
   456  0D99                     	;# 
   457  0D99                     	;# 
   458  0D9A                     	;# 
   459  0D9B                     	;# 
   460  0D9C                     	;# 
   461  0D9C                     	;# 
   462  0D9D                     	;# 
   463  0D9D                     	;# 
   464  0D9E                     	;# 
   465  0D9F                     	;# 
   466  0DA0                     	;# 
   467  0DA1                     	;# 
   468  0DA1                     	;# 
   469  0DA2                     	;# 
   470  0DA3                     	;# 
   471  0DA3                     	;# 
   472  0DA4                     	;# 
   473  0DA5                     	;# 
   474  0DA5                     	;# 
   475  0DA6                     	;# 
   476  0DA7                     	;# 
   477  0DA7                     	;# 
   478  0DA8                     	;# 
   479  0DA9                     	;# 
   480  0DA9                     	;# 
   481  0DAA                     	;# 
   482  0DAB                     	;# 
   483  0DAC                     	;# 
   484  0DAC                     	;# 
   485  0DAD                     	;# 
   486  0DAD                     	;# 
   487  0DAE                     	;# 
   488  0DAF                     	;# 
   489  0DB0                     	;# 
   490  0DB1                     	;# 
   491  0DB1                     	;# 
   492  0DB2                     	;# 
   493  0DB3                     	;# 
   494  0DB3                     	;# 
   495  0DB4                     	;# 
   496  0DB5                     	;# 
   497  0DB5                     	;# 
   498  0DB6                     	;# 
   499  0DB7                     	;# 
   500  0DB7                     	;# 
   501  0DB8                     	;# 
   502  0DB9                     	;# 
   503  0DB9                     	;# 
   504  0DBA                     	;# 
   505  0DBB                     	;# 
   506  0DBC                     	;# 
   507  0DBC                     	;# 
   508  0DBD                     	;# 
   509  0DBD                     	;# 
   510  0DBE                     	;# 
   511  0DBF                     	;# 
   512  0DC0                     	;# 
   513  0E0C                     	;# 
   514  0E0D                     	;# 
   515  0E0E                     	;# 
   516  0E0F                     	;# 
   517  0E10                     	;# 
   518  0E11                     	;# 
   519  0E12                     	;# 
   520  0E13                     	;# 
   521  0E14                     	;# 
   522  0E15                     	;# 
   523  0E15                     	;# 
   524  0E15                     	;# 
   525  0E16                     	;# 
   526  0E16                     	;# 
   527  0E16                     	;# 
   528  0E17                     	;# 
   529  0E17                     	;# 
   530  0E17                     	;# 
   531  0E18                     	;# 
   532  0E18                     	;# 
   533  0E18                     	;# 
   534  0E19                     	;# 
   535  0E1A                     	;# 
   536  0E1B                     	;# 
   537  0E1D                     	;# 
   538  0E1E                     	;# 
   539  0E1F                     	;# 
   540  0E21                     	;# 
   541  0E22                     	;# 
   542  0E23                     	;# 
   543  0E24                     	;# 
   544  0E25                     	;# 
   545  0E26                     	;# 
   546  0E27                     	;# 
   547  0E28                     	;# 
   548  0E29                     	;# 
   549  0E2D                     	;# 
   550  0E2E                     	;# 
   551  0E2F                     	;# 
   552  0E30                     	;# 
   553  0E31                     	;# 
   554  0E32                     	;# 
   555  0E35                     	;# 
   556  0E36                     	;# 
   557  0E37                     	;# 
   558  0E38                     	;# 
   559  0E39                     	;# 
   560  0E3A                     	;# 
   561  0E3B                     	;# 
   562  0E3C                     	;# 
   563  0E3D                     	;# 
   564  0E3E                     	;# 
   565  0E90                     	;# 
   566  0E91                     	;# 
   567  0E92                     	;# 
   568  0E93                     	;# 
   569  0E94                     	;# 
   570  0E95                     	;# 
   571  0E96                     	;# 
   572  0E97                     	;# 
   573  0E98                     	;# 
   574  0E99                     	;# 
   575  0E9A                     	;# 
   576  0E9B                     	;# 
   577  0E9C                     	;# 
   578  0E9D                     	;# 
   579  0E9E                     	;# 
   580  0E9F                     	;# 
   581  0EA0                     	;# 
   582  0EA1                     	;# 
   583  0EA2                     	;# 
   584  0EA3                     	;# 
   585  0EA4                     	;# 
   586  0EA5                     	;# 
   587  0EA6                     	;# 
   588  0EA7                     	;# 
   589  0F0F                     	;# 
   590  0F10                     	;# 
   591  0F11                     	;# 
   592  0F12                     	;# 
   593  0F13                     	;# 
   594  0F14                     	;# 
   595  0F15                     	;# 
   596  0F16                     	;# 
   597  0F17                     	;# 
   598  0F18                     	;# 
   599  0F19                     	;# 
   600  0F1A                     	;# 
   601  0F1B                     	;# 
   602  0F1C                     	;# 
   603  0F1D                     	;# 
   604  0F1E                     	;# 
   605  0F1F                     	;# 
   606  0F20                     	;# 
   607  0F21                     	;# 
   608  0F22                     	;# 
   609  0F23                     	;# 
   610  0F24                     	;# 
   611  0F25                     	;# 
   612  0F26                     	;# 
   613  0F27                     	;# 
   614  0F28                     	;# 
   615  0F29                     	;# 
   616  0F2A                     	;# 
   617  0F2B                     	;# 
   618  0F2C                     	;# 
   619  0F2D                     	;# 
   620  0F2E                     	;# 
   621  0F2F                     	;# 
   622  0F30                     	;# 
   623  0F31                     	;# 
   624  0F32                     	;# 
   625  0F33                     	;# 
   626  0F34                     	;# 
   627  0F35                     	;# 
   628  0F36                     	;# 
   629  0F37                     	;# 
   630  0FE4                     	;# 
   631  0FE5                     	;# 
   632  0FE6                     	;# 
   633  0FE7                     	;# 
   634  0FE8                     	;# 
   635  0FE9                     	;# 
   636  0FEA                     	;# 
   637  0FEB                     	;# 
   638  0FED                     	;# 
   639  0FEE                     	;# 
   640  0FEF                     	;# 
   641  0000                     	;# 
   642  0001                     	;# 
   643  0002                     	;# 
   644  0003                     	;# 
   645  0004                     	;# 
   646  0005                     	;# 
   647  0006                     	;# 
   648  0007                     	;# 
   649  0008                     	;# 
   650  0009                     	;# 
   651  000A                     	;# 
   652  000B                     	;# 
   653  000C                     	;# 
   654  000D                     	;# 
   655  000E                     	;# 
   656  0010                     	;# 
   657  0011                     	;# 
   658  0012                     	;# 
   659  0013                     	;# 
   660  0014                     	;# 
   661  0015                     	;# 
   662  0016                     	;# 
   663  0017                     	;# 
   664  0018                     	;# 
   665  0018                     	;# 
   666  0019                     	;# 
   667  001A                     	;# 
   668  001B                     	;# 
   669  001C                     	;# 
   670  001C                     	;# 
   671  001D                     	;# 
   672  001E                     	;# 
   673  001F                     	;# 
   674  008C                     	;# 
   675  008D                     	;# 
   676  008E                     	;# 
   677  0090                     	;# 
   678  0091                     	;# 
   679  0092                     	;# 
   680  0093                     	;# 
   681  0094                     	;# 
   682  0095                     	;# 
   683  0096                     	;# 
   684  0097                     	;# 
   685  0098                     	;# 
   686  0099                     	;# 
   687  009A                     	;# 
   688  009B                     	;# 
   689  009C                     	;# 
   690  009D                     	;# 
   691  009E                     	;# 
   692  009F                     	;# 
   693  010C                     	;# 
   694  010D                     	;# 
   695  010E                     	;# 
   696  0111                     	;# 
   697  0112                     	;# 
   698  0113                     	;# 
   699  0114                     	;# 
   700  0115                     	;# 
   701  0116                     	;# 
   702  0117                     	;# 
   703  0118                     	;# 
   704  0119                     	;# 
   705  011A                     	;# 
   706  011B                     	;# 
   707  011C                     	;# 
   708  011D                     	;# 
   709  018C                     	;# 
   710  018D                     	;# 
   711  018E                     	;# 
   712  0191                     	;# 
   713  0191                     	;# 
   714  0192                     	;# 
   715  0193                     	;# 
   716  0193                     	;# 
   717  0194                     	;# 
   718  0195                     	;# 
   719  0196                     	;# 
   720  0197                     	;# 
   721  0199                     	;# 
   722  0199                     	;# 
   723  0199                     	;# 
   724  019A                     	;# 
   725  019A                     	;# 
   726  019A                     	;# 
   727  019B                     	;# 
   728  019B                     	;# 
   729  019B                     	;# 
   730  019B                     	;# 
   731  019B                     	;# 
   732  019C                     	;# 
   733  019C                     	;# 
   734  019C                     	;# 
   735  019D                     	;# 
   736  019D                     	;# 
   737  019D                     	;# 
   738  019E                     	;# 
   739  019E                     	;# 
   740  019E                     	;# 
   741  019F                     	;# 
   742  019F                     	;# 
   743  019F                     	;# 
   744  019F                     	;# 
   745  019F                     	;# 
   746  020C                     	;# 
   747  020D                     	;# 
   748  020E                     	;# 
   749  0210                     	;# 
   750  0211                     	;# 
   751  0211                     	;# 
   752  0212                     	;# 
   753  0212                     	;# 
   754  0213                     	;# 
   755  0213                     	;# 
   756  0214                     	;# 
   757  0214                     	;# 
   758  0215                     	;# 
   759  0215                     	;# 
   760  0215                     	;# 
   761  0215                     	;# 
   762  0216                     	;# 
   763  0216                     	;# 
   764  0217                     	;# 
   765  0217                     	;# 
   766  021B                     	;# 
   767  021C                     	;# 
   768  021D                     	;# 
   769  021E                     	;# 
   770  021F                     	;# 
   771  028C                     	;# 
   772  028D                     	;# 
   773  028E                     	;# 
   774  0291                     	;# 
   775  0291                     	;# 
   776  0292                     	;# 
   777  0293                     	;# 
   778  0294                     	;# 
   779  0295                     	;# 
   780  0295                     	;# 
   781  0296                     	;# 
   782  0297                     	;# 
   783  0298                     	;# 
   784  0299                     	;# 
   785  0299                     	;# 
   786  029A                     	;# 
   787  029B                     	;# 
   788  029C                     	;# 
   789  029E                     	;# 
   790  029F                     	;# 
   791  030C                     	;# 
   792  030D                     	;# 
   793  030E                     	;# 
   794  0315                     	;# 
   795  0316                     	;# 
   796  0317                     	;# 
   797  0318                     	;# 
   798  0319                     	;# 
   799  031B                     	;# 
   800  031C                     	;# 
   801  031D                     	;# 
   802  031E                     	;# 
   803  031F                     	;# 
   804  038C                     	;# 
   805  038D                     	;# 
   806  038E                     	;# 
   807  0390                     	;# 
   808  0391                     	;# 
   809  0392                     	;# 
   810  0393                     	;# 
   811  0394                     	;# 
   812  0395                     	;# 
   813  0396                     	;# 
   814  0397                     	;# 
   815  0398                     	;# 
   816  0399                     	;# 
   817  039D                     	;# 
   818  039E                     	;# 
   819  039F                     	;# 
   820  040D                     	;# 
   821  040F                     	;# 
   822  040F                     	;# 
   823  0410                     	;# 
   824  0411                     	;# 
   825  0412                     	;# 
   826  0413                     	;# 
   827  0413                     	;# 
   828  0414                     	;# 
   829  0414                     	;# 
   830  0415                     	;# 
   831  0416                     	;# 
   832  0417                     	;# 
   833  0418                     	;# 
   834  041A                     	;# 
   835  041A                     	;# 
   836  041B                     	;# 
   837  041B                     	;# 
   838  041C                     	;# 
   839  041D                     	;# 
   840  041E                     	;# 
   841  041F                     	;# 
   842  048E                     	;# 
   843  048E                     	;# 
   844  048F                     	;# 
   845  0490                     	;# 
   846  0491                     	;# 
   847  0492                     	;# 
   848  0493                     	;# 
   849  0493                     	;# 
   850  0494                     	;# 
   851  0494                     	;# 
   852  0495                     	;# 
   853  0496                     	;# 
   854  0497                     	;# 
   855  0498                     	;# 
   856  049A                     	;# 
   857  049A                     	;# 
   858  049B                     	;# 
   859  049B                     	;# 
   860  049C                     	;# 
   861  049D                     	;# 
   862  049E                     	;# 
   863  049F                     	;# 
   864  050F                     	;# 
   865  0510                     	;# 
   866  0511                     	;# 
   867  0512                     	;# 
   868  0513                     	;# 
   869  0514                     	;# 
   870  0515                     	;# 
   871  0516                     	;# 
   872  0517                     	;# 
   873  0518                     	;# 
   874  0519                     	;# 
   875  051A                     	;# 
   876  058D                     	;# 
   877  058E                     	;# 
   878  058F                     	;# 
   879  058F                     	;# 
   880  058F                     	;# 
   881  0590                     	;# 
   882  0590                     	;# 
   883  0591                     	;# 
   884  0592                     	;# 
   885  0592                     	;# 
   886  0592                     	;# 
   887  0593                     	;# 
   888  0593                     	;# 
   889  0594                     	;# 
   890  0595                     	;# 
   891  0595                     	;# 
   892  0596                     	;# 
   893  0597                     	;# 
   894  0597                     	;# 
   895  0598                     	;# 
   896  0599                     	;# 
   897  0599                     	;# 
   898  0599                     	;# 
   899  059A                     	;# 
   900  059A                     	;# 
   901  059E                     	;# 
   902  059F                     	;# 
   903  059F                     	;# 
   904  0614                     	;# 
   905  0614                     	;# 
   906  0615                     	;# 
   907  0616                     	;# 
   908  0617                     	;# 
   909  0617                     	;# 
   910  0618                     	;# 
   911  0619                     	;# 
   912  061A                     	;# 
   913  061A                     	;# 
   914  061B                     	;# 
   915  061C                     	;# 
   916  068D                     	;# 
   917  068E                     	;# 
   918  068F                     	;# 
   919  0690                     	;# 
   920  0691                     	;# 
   921  0692                     	;# 
   922  0693                     	;# 
   923  0694                     	;# 
   924  0695                     	;# 
   925  0696                     	;# 
   926  0697                     	;# 
   927  0698                     	;# 
   928  0699                     	;# 
   929  069A                     	;# 
   930  069B                     	;# 
   931  069C                     	;# 
   932  069D                     	;# 
   933  069E                     	;# 
   934  069F                     	;# 
   935  070D                     	;# 
   936  070E                     	;# 
   937  070F                     	;# 
   938  0710                     	;# 
   939  0711                     	;# 
   940  0712                     	;# 
   941  0713                     	;# 
   942  0714                     	;# 
   943  0715                     	;# 
   944  0716                     	;# 
   945  0717                     	;# 
   946  0718                     	;# 
   947  0719                     	;# 
   948  071A                     	;# 
   949  071B                     	;# 
   950  071C                     	;# 
   951  071D                     	;# 
   952  071E                     	;# 
   953  071F                     	;# 
   954  078E                     	;# 
   955  078F                     	;# 
   956  0790                     	;# 
   957  0791                     	;# 
   958  0792                     	;# 
   959  0793                     	;# 
   960  0794                     	;# 
   961  0795                     	;# 
   962  0796                     	;# 
   963  0797                     	;# 
   964  0798                     	;# 
   965  0799                     	;# 
   966  079A                     	;# 
   967  079B                     	;# 
   968  079C                     	;# 
   969  079D                     	;# 
   970  079E                     	;# 
   971  079F                     	;# 
   972  080D                     	;# 
   973  080E                     	;# 
   974  080F                     	;# 
   975  0810                     	;# 
   976  0811                     	;# 
   977  0812                     	;# 
   978  0813                     	;# 
   979  0814                     	;# 
   980  0815                     	;# 
   981  0816                     	;# 
   982  0817                     	;# 
   983  0818                     	;# 
   984  0819                     	;# 
   985  081A                     	;# 
   986  081B                     	;# 
   987  081C                     	;# 
   988  081D                     	;# 
   989  081E                     	;# 
   990  081F                     	;# 
   991  090C                     	;# 
   992  090D                     	;# 
   993  090E                     	;# 
   994  090F                     	;# 
   995  0910                     	;# 
   996  0911                     	;# 
   997  0912                     	;# 
   998  0913                     	;# 
   999  0914                     	;# 
  1000  0915                     	;# 
  1001  0916                     	;# 
  1002  0917                     	;# 
  1003  0D8E                     	;# 
  1004  0D8F                     	;# 
  1005  0D90                     	;# 
  1006  0D91                     	;# 
  1007  0D91                     	;# 
  1008  0D92                     	;# 
  1009  0D93                     	;# 
  1010  0D93                     	;# 
  1011  0D94                     	;# 
  1012  0D95                     	;# 
  1013  0D95                     	;# 
  1014  0D96                     	;# 
  1015  0D97                     	;# 
  1016  0D97                     	;# 
  1017  0D98                     	;# 
  1018  0D99                     	;# 
  1019  0D99                     	;# 
  1020  0D9A                     	;# 
  1021  0D9B                     	;# 
  1022  0D9C                     	;# 
  1023  0D9C                     	;# 
  1024  0D9D                     	;# 
  1025  0D9D                     	;# 
  1026  0D9E                     	;# 
  1027  0D9F                     	;# 
  1028  0DA0                     	;# 
  1029  0DA1                     	;# 
  1030  0DA1                     	;# 
  1031  0DA2                     	;# 
  1032  0DA3                     	;# 
  1033  0DA3                     	;# 
  1034  0DA4                     	;# 
  1035  0DA5                     	;# 
  1036  0DA5                     	;# 
  1037  0DA6                     	;# 
  1038  0DA7                     	;# 
  1039  0DA7                     	;# 
  1040  0DA8                     	;# 
  1041  0DA9                     	;# 
  1042  0DA9                     	;# 
  1043  0DAA                     	;# 
  1044  0DAB                     	;# 
  1045  0DAC                     	;# 
  1046  0DAC                     	;# 
  1047  0DAD                     	;# 
  1048  0DAD                     	;# 
  1049  0DAE                     	;# 
  1050  0DAF                     	;# 
  1051  0DB0                     	;# 
  1052  0DB1                     	;# 
  1053  0DB1                     	;# 
  1054  0DB2                     	;# 
  1055  0DB3                     	;# 
  1056  0DB3                     	;# 
  1057  0DB4                     	;# 
  1058  0DB5                     	;# 
  1059  0DB5                     	;# 
  1060  0DB6                     	;# 
  1061  0DB7                     	;# 
  1062  0DB7                     	;# 
  1063  0DB8                     	;# 
  1064  0DB9                     	;# 
  1065  0DB9                     	;# 
  1066  0DBA                     	;# 
  1067  0DBB                     	;# 
  1068  0DBC                     	;# 
  1069  0DBC                     	;# 
  1070  0DBD                     	;# 
  1071  0DBD                     	;# 
  1072  0DBE                     	;# 
  1073  0DBF                     	;# 
  1074  0DC0                     	;# 
  1075  0E0C                     	;# 
  1076  0E0D                     	;# 
  1077  0E0E                     	;# 
  1078  0E0F                     	;# 
  1079  0E10                     	;# 
  1080  0E11                     	;# 
  1081  0E12                     	;# 
  1082  0E13                     	;# 
  1083  0E14                     	;# 
  1084  0E15                     	;# 
  1085  0E15                     	;# 
  1086  0E15                     	;# 
  1087  0E16                     	;# 
  1088  0E16                     	;# 
  1089  0E16                     	;# 
  1090  0E17                     	;# 
  1091  0E17                     	;# 
  1092  0E17                     	;# 
  1093  0E18                     	;# 
  1094  0E18                     	;# 
  1095  0E18                     	;# 
  1096  0E19                     	;# 
  1097  0E1A                     	;# 
  1098  0E1B                     	;# 
  1099  0E1D                     	;# 
  1100  0E1E                     	;# 
  1101  0E1F                     	;# 
  1102  0E21                     	;# 
  1103  0E22                     	;# 
  1104  0E23                     	;# 
  1105  0E24                     	;# 
  1106  0E25                     	;# 
  1107  0E26                     	;# 
  1108  0E27                     	;# 
  1109  0E28                     	;# 
  1110  0E29                     	;# 
  1111  0E2D                     	;# 
  1112  0E2E                     	;# 
  1113  0E2F                     	;# 
  1114  0E30                     	;# 
  1115  0E31                     	;# 
  1116  0E32                     	;# 
  1117  0E35                     	;# 
  1118  0E36                     	;# 
  1119  0E37                     	;# 
  1120  0E38                     	;# 
  1121  0E39                     	;# 
  1122  0E3A                     	;# 
  1123  0E3B                     	;# 
  1124  0E3C                     	;# 
  1125  0E3D                     	;# 
  1126  0E3E                     	;# 
  1127  0E90                     	;# 
  1128  0E91                     	;# 
  1129  0E92                     	;# 
  1130  0E93                     	;# 
  1131  0E94                     	;# 
  1132  0E95                     	;# 
  1133  0E96                     	;# 
  1134  0E97                     	;# 
  1135  0E98                     	;# 
  1136  0E99                     	;# 
  1137  0E9A                     	;# 
  1138  0E9B                     	;# 
  1139  0E9C                     	;# 
  1140  0E9D                     	;# 
  1141  0E9E                     	;# 
  1142  0E9F                     	;# 
  1143  0EA0                     	;# 
  1144  0EA1                     	;# 
  1145  0EA2                     	;# 
  1146  0EA3                     	;# 
  1147  0EA4                     	;# 
  1148  0EA5                     	;# 
  1149  0EA6                     	;# 
  1150  0EA7                     	;# 
  1151  0F0F                     	;# 
  1152  0F10                     	;# 
  1153  0F11                     	;# 
  1154  0F12                     	;# 
  1155  0F13                     	;# 
  1156  0F14                     	;# 
  1157  0F15                     	;# 
  1158  0F16                     	;# 
  1159  0F17                     	;# 
  1160  0F18                     	;# 
  1161  0F19                     	;# 
  1162  0F1A                     	;# 
  1163  0F1B                     	;# 
  1164  0F1C                     	;# 
  1165  0F1D                     	;# 
  1166  0F1E                     	;# 
  1167  0F1F                     	;# 
  1168  0F20                     	;# 
  1169  0F21                     	;# 
  1170  0F22                     	;# 
  1171  0F23                     	;# 
  1172  0F24                     	;# 
  1173  0F25                     	;# 
  1174  0F26                     	;# 
  1175  0F27                     	;# 
  1176  0F28                     	;# 
  1177  0F29                     	;# 
  1178  0F2A                     	;# 
  1179  0F2B                     	;# 
  1180  0F2C                     	;# 
  1181  0F2D                     	;# 
  1182  0F2E                     	;# 
  1183  0F2F                     	;# 
  1184  0F30                     	;# 
  1185  0F31                     	;# 
  1186  0F32                     	;# 
  1187  0F33                     	;# 
  1188  0F34                     	;# 
  1189  0F35                     	;# 
  1190  0F36                     	;# 
  1191  0F37                     	;# 
  1192  0FE4                     	;# 
  1193  0FE5                     	;# 
  1194  0FE6                     	;# 
  1195  0FE7                     	;# 
  1196  0FE8                     	;# 
  1197  0FE9                     	;# 
  1198  0FEA                     	;# 
  1199  0FEB                     	;# 
  1200  0FED                     	;# 
  1201  0FEE                     	;# 
  1202  0FEF                     	;# 
  1203  0000                     	;# 
  1204  0001                     	;# 
  1205  0002                     	;# 
  1206  0003                     	;# 
  1207  0004                     	;# 
  1208  0005                     	;# 
  1209  0006                     	;# 
  1210  0007                     	;# 
  1211  0008                     	;# 
  1212  0009                     	;# 
  1213  000A                     	;# 
  1214  000B                     	;# 
  1215  000C                     	;# 
  1216  000D                     	;# 
  1217  000E                     	;# 
  1218  0010                     	;# 
  1219  0011                     	;# 
  1220  0012                     	;# 
  1221  0013                     	;# 
  1222  0014                     	;# 
  1223  0015                     	;# 
  1224  0016                     	;# 
  1225  0017                     	;# 
  1226  0018                     	;# 
  1227  0018                     	;# 
  1228  0019                     	;# 
  1229  001A                     	;# 
  1230  001B                     	;# 
  1231  001C                     	;# 
  1232  001C                     	;# 
  1233  001D                     	;# 
  1234  001E                     	;# 
  1235  001F                     	;# 
  1236  008C                     	;# 
  1237  008D                     	;# 
  1238  008E                     	;# 
  1239  0090                     	;# 
  1240  0091                     	;# 
  1241  0092                     	;# 
  1242  0093                     	;# 
  1243  0094                     	;# 
  1244  0095                     	;# 
  1245  0096                     	;# 
  1246  0097                     	;# 
  1247  0098                     	;# 
  1248  0099                     	;# 
  1249  009A                     	;# 
  1250  009B                     	;# 
  1251  009C                     	;# 
  1252  009D                     	;# 
  1253  009E                     	;# 
  1254  009F                     	;# 
  1255  010C                     	;# 
  1256  010D                     	;# 
  1257  010E                     	;# 
  1258  0111                     	;# 
  1259  0112                     	;# 
  1260  0113                     	;# 
  1261  0114                     	;# 
  1262  0115                     	;# 
  1263  0116                     	;# 
  1264  0117                     	;# 
  1265  0118                     	;# 
  1266  0119                     	;# 
  1267  011A                     	;# 
  1268  011B                     	;# 
  1269  011C                     	;# 
  1270  011D                     	;# 
  1271  018C                     	;# 
  1272  018D                     	;# 
  1273  018E                     	;# 
  1274  0191                     	;# 
  1275  0191                     	;# 
  1276  0192                     	;# 
  1277  0193                     	;# 
  1278  0193                     	;# 
  1279  0194                     	;# 
  1280  0195                     	;# 
  1281  0196                     	;# 
  1282  0197                     	;# 
  1283  0199                     	;# 
  1284  0199                     	;# 
  1285  0199                     	;# 
  1286  019A                     	;# 
  1287  019A                     	;# 
  1288  019A                     	;# 
  1289  019B                     	;# 
  1290  019B                     	;# 
  1291  019B                     	;# 
  1292  019B                     	;# 
  1293  019B                     	;# 
  1294  019C                     	;# 
  1295  019C                     	;# 
  1296  019C                     	;# 
  1297  019D                     	;# 
  1298  019D                     	;# 
  1299  019D                     	;# 
  1300  019E                     	;# 
  1301  019E                     	;# 
  1302  019E                     	;# 
  1303  019F                     	;# 
  1304  019F                     	;# 
  1305  019F                     	;# 
  1306  019F                     	;# 
  1307  019F                     	;# 
  1308  020C                     	;# 
  1309  020D                     	;# 
  1310  020E                     	;# 
  1311  0210                     	;# 
  1312  0211                     	;# 
  1313  0211                     	;# 
  1314  0212                     	;# 
  1315  0212                     	;# 
  1316  0213                     	;# 
  1317  0213                     	;# 
  1318  0214                     	;# 
  1319  0214                     	;# 
  1320  0215                     	;# 
  1321  0215                     	;# 
  1322  0215                     	;# 
  1323  0215                     	;# 
  1324  0216                     	;# 
  1325  0216                     	;# 
  1326  0217                     	;# 
  1327  0217                     	;# 
  1328  021B                     	;# 
  1329  021C                     	;# 
  1330  021D                     	;# 
  1331  021E                     	;# 
  1332  021F                     	;# 
  1333  028C                     	;# 
  1334  028D                     	;# 
  1335  028E                     	;# 
  1336  0291                     	;# 
  1337  0291                     	;# 
  1338  0292                     	;# 
  1339  0293                     	;# 
  1340  0294                     	;# 
  1341  0295                     	;# 
  1342  0295                     	;# 
  1343  0296                     	;# 
  1344  0297                     	;# 
  1345  0298                     	;# 
  1346  0299                     	;# 
  1347  0299                     	;# 
  1348  029A                     	;# 
  1349  029B                     	;# 
  1350  029C                     	;# 
  1351  029E                     	;# 
  1352  029F                     	;# 
  1353  030C                     	;# 
  1354  030D                     	;# 
  1355  030E                     	;# 
  1356  0315                     	;# 
  1357  0316                     	;# 
  1358  0317                     	;# 
  1359  0318                     	;# 
  1360  0319                     	;# 
  1361  031B                     	;# 
  1362  031C                     	;# 
  1363  031D                     	;# 
  1364  031E                     	;# 
  1365  031F                     	;# 
  1366  038C                     	;# 
  1367  038D                     	;# 
  1368  038E                     	;# 
  1369  0390                     	;# 
  1370  0391                     	;# 
  1371  0392                     	;# 
  1372  0393                     	;# 
  1373  0394                     	;# 
  1374  0395                     	;# 
  1375  0396                     	;# 
  1376  0397                     	;# 
  1377  0398                     	;# 
  1378  0399                     	;# 
  1379  039D                     	;# 
  1380  039E                     	;# 
  1381  039F                     	;# 
  1382  040D                     	;# 
  1383  040F                     	;# 
  1384  040F                     	;# 
  1385  0410                     	;# 
  1386  0411                     	;# 
  1387  0412                     	;# 
  1388  0413                     	;# 
  1389  0413                     	;# 
  1390  0414                     	;# 
  1391  0414                     	;# 
  1392  0415                     	;# 
  1393  0416                     	;# 
  1394  0417                     	;# 
  1395  0418                     	;# 
  1396  041A                     	;# 
  1397  041A                     	;# 
  1398  041B                     	;# 
  1399  041B                     	;# 
  1400  041C                     	;# 
  1401  041D                     	;# 
  1402  041E                     	;# 
  1403  041F                     	;# 
  1404  048E                     	;# 
  1405  048E                     	;# 
  1406  048F                     	;# 
  1407  0490                     	;# 
  1408  0491                     	;# 
  1409  0492                     	;# 
  1410  0493                     	;# 
  1411  0493                     	;# 
  1412  0494                     	;# 
  1413  0494                     	;# 
  1414  0495                     	;# 
  1415  0496                     	;# 
  1416  0497                     	;# 
  1417  0498                     	;# 
  1418  049A                     	;# 
  1419  049A                     	;# 
  1420  049B                     	;# 
  1421  049B                     	;# 
  1422  049C                     	;# 
  1423  049D                     	;# 
  1424  049E                     	;# 
  1425  049F                     	;# 
  1426  050F                     	;# 
  1427  0510                     	;# 
  1428  0511                     	;# 
  1429  0512                     	;# 
  1430  0513                     	;# 
  1431  0514                     	;# 
  1432  0515                     	;# 
  1433  0516                     	;# 
  1434  0517                     	;# 
  1435  0518                     	;# 
  1436  0519                     	;# 
  1437  051A                     	;# 
  1438  058D                     	;# 
  1439  058E                     	;# 
  1440  058F                     	;# 
  1441  058F                     	;# 
  1442  058F                     	;# 
  1443  0590                     	;# 
  1444  0590                     	;# 
  1445  0591                     	;# 
  1446  0592                     	;# 
  1447  0592                     	;# 
  1448  0592                     	;# 
  1449  0593                     	;# 
  1450  0593                     	;# 
  1451  0594                     	;# 
  1452  0595                     	;# 
  1453  0595                     	;# 
  1454  0596                     	;# 
  1455  0597                     	;# 
  1456  0597                     	;# 
  1457  0598                     	;# 
  1458  0599                     	;# 
  1459  0599                     	;# 
  1460  0599                     	;# 
  1461  059A                     	;# 
  1462  059A                     	;# 
  1463  059E                     	;# 
  1464  059F                     	;# 
  1465  059F                     	;# 
  1466  0614                     	;# 
  1467  0614                     	;# 
  1468  0615                     	;# 
  1469  0616                     	;# 
  1470  0617                     	;# 
  1471  0617                     	;# 
  1472  0618                     	;# 
  1473  0619                     	;# 
  1474  061A                     	;# 
  1475  061A                     	;# 
  1476  061B                     	;# 
  1477  061C                     	;# 
  1478  068D                     	;# 
  1479  068E                     	;# 
  1480  068F                     	;# 
  1481  0690                     	;# 
  1482  0691                     	;# 
  1483  0692                     	;# 
  1484  0693                     	;# 
  1485  0694                     	;# 
  1486  0695                     	;# 
  1487  0696                     	;# 
  1488  0697                     	;# 
  1489  0698                     	;# 
  1490  0699                     	;# 
  1491  069A                     	;# 
  1492  069B                     	;# 
  1493  069C                     	;# 
  1494  069D                     	;# 
  1495  069E                     	;# 
  1496  069F                     	;# 
  1497  070D                     	;# 
  1498  070E                     	;# 
  1499  070F                     	;# 
  1500  0710                     	;# 
  1501  0711                     	;# 
  1502  0712                     	;# 
  1503  0713                     	;# 
  1504  0714                     	;# 
  1505  0715                     	;# 
  1506  0716                     	;# 
  1507  0717                     	;# 
  1508  0718                     	;# 
  1509  0719                     	;# 
  1510  071A                     	;# 
  1511  071B                     	;# 
  1512  071C                     	;# 
  1513  071D                     	;# 
  1514  071E                     	;# 
  1515  071F                     	;# 
  1516  078E                     	;# 
  1517  078F                     	;# 
  1518  0790                     	;# 
  1519  0791                     	;# 
  1520  0792                     	;# 
  1521  0793                     	;# 
  1522  0794                     	;# 
  1523  0795                     	;# 
  1524  0796                     	;# 
  1525  0797                     	;# 
  1526  0798                     	;# 
  1527  0799                     	;# 
  1528  079A                     	;# 
  1529  079B                     	;# 
  1530  079C                     	;# 
  1531  079D                     	;# 
  1532  079E                     	;# 
  1533  079F                     	;# 
  1534  080D                     	;# 
  1535  080E                     	;# 
  1536  080F                     	;# 
  1537  0810                     	;# 
  1538  0811                     	;# 
  1539  0812                     	;# 
  1540  0813                     	;# 
  1541  0814                     	;# 
  1542  0815                     	;# 
  1543  0816                     	;# 
  1544  0817                     	;# 
  1545  0818                     	;# 
  1546  0819                     	;# 
  1547  081A                     	;# 
  1548  081B                     	;# 
  1549  081C                     	;# 
  1550  081D                     	;# 
  1551  081E                     	;# 
  1552  081F                     	;# 
  1553  090C                     	;# 
  1554  090D                     	;# 
  1555  090E                     	;# 
  1556  090F                     	;# 
  1557  0910                     	;# 
  1558  0911                     	;# 
  1559  0912                     	;# 
  1560  0913                     	;# 
  1561  0914                     	;# 
  1562  0915                     	;# 
  1563  0916                     	;# 
  1564  0917                     	;# 
  1565  0D8E                     	;# 
  1566  0D8F                     	;# 
  1567  0D90                     	;# 
  1568  0D91                     	;# 
  1569  0D91                     	;# 
  1570  0D92                     	;# 
  1571  0D93                     	;# 
  1572  0D93                     	;# 
  1573  0D94                     	;# 
  1574  0D95                     	;# 
  1575  0D95                     	;# 
  1576  0D96                     	;# 
  1577  0D97                     	;# 
  1578  0D97                     	;# 
  1579  0D98                     	;# 
  1580  0D99                     	;# 
  1581  0D99                     	;# 
  1582  0D9A                     	;# 
  1583  0D9B                     	;# 
  1584  0D9C                     	;# 
  1585  0D9C                     	;# 
  1586  0D9D                     	;# 
  1587  0D9D                     	;# 
  1588  0D9E                     	;# 
  1589  0D9F                     	;# 
  1590  0DA0                     	;# 
  1591  0DA1                     	;# 
  1592  0DA1                     	;# 
  1593  0DA2                     	;# 
  1594  0DA3                     	;# 
  1595  0DA3                     	;# 
  1596  0DA4                     	;# 
  1597  0DA5                     	;# 
  1598  0DA5                     	;# 
  1599  0DA6                     	;# 
  1600  0DA7                     	;# 
  1601  0DA7                     	;# 
  1602  0DA8                     	;# 
  1603  0DA9                     	;# 
  1604  0DA9                     	;# 
  1605  0DAA                     	;# 
  1606  0DAB                     	;# 
  1607  0DAC                     	;# 
  1608  0DAC                     	;# 
  1609  0DAD                     	;# 
  1610  0DAD                     	;# 
  1611  0DAE                     	;# 
  1612  0DAF                     	;# 
  1613  0DB0                     	;# 
  1614  0DB1                     	;# 
  1615  0DB1                     	;# 
  1616  0DB2                     	;# 
  1617  0DB3                     	;# 
  1618  0DB3                     	;# 
  1619  0DB4                     	;# 
  1620  0DB5                     	;# 
  1621  0DB5                     	;# 
  1622  0DB6                     	;# 
  1623  0DB7                     	;# 
  1624  0DB7                     	;# 
  1625  0DB8                     	;# 
  1626  0DB9                     	;# 
  1627  0DB9                     	;# 
  1628  0DBA                     	;# 
  1629  0DBB                     	;# 
  1630  0DBC                     	;# 
  1631  0DBC                     	;# 
  1632  0DBD                     	;# 
  1633  0DBD                     	;# 
  1634  0DBE                     	;# 
  1635  0DBF                     	;# 
  1636  0DC0                     	;# 
  1637  0E0C                     	;# 
  1638  0E0D                     	;# 
  1639  0E0E                     	;# 
  1640  0E0F                     	;# 
  1641  0E10                     	;# 
  1642  0E11                     	;# 
  1643  0E12                     	;# 
  1644  0E13                     	;# 
  1645  0E14                     	;# 
  1646  0E15                     	;# 
  1647  0E15                     	;# 
  1648  0E15                     	;# 
  1649  0E16                     	;# 
  1650  0E16                     	;# 
  1651  0E16                     	;# 
  1652  0E17                     	;# 
  1653  0E17                     	;# 
  1654  0E17                     	;# 
  1655  0E18                     	;# 
  1656  0E18                     	;# 
  1657  0E18                     	;# 
  1658  0E19                     	;# 
  1659  0E1A                     	;# 
  1660  0E1B                     	;# 
  1661  0E1D                     	;# 
  1662  0E1E                     	;# 
  1663  0E1F                     	;# 
  1664  0E21                     	;# 
  1665  0E22                     	;# 
  1666  0E23                     	;# 
  1667  0E24                     	;# 
  1668  0E25                     	;# 
  1669  0E26                     	;# 
  1670  0E27                     	;# 
  1671  0E28                     	;# 
  1672  0E29                     	;# 
  1673  0E2D                     	;# 
  1674  0E2E                     	;# 
  1675  0E2F                     	;# 
  1676  0E30                     	;# 
  1677  0E31                     	;# 
  1678  0E32                     	;# 
  1679  0E35                     	;# 
  1680  0E36                     	;# 
  1681  0E37                     	;# 
  1682  0E38                     	;# 
  1683  0E39                     	;# 
  1684  0E3A                     	;# 
  1685  0E3B                     	;# 
  1686  0E3C                     	;# 
  1687  0E3D                     	;# 
  1688  0E3E                     	;# 
  1689  0E90                     	;# 
  1690  0E91                     	;# 
  1691  0E92                     	;# 
  1692  0E93                     	;# 
  1693  0E94                     	;# 
  1694  0E95                     	;# 
  1695  0E96                     	;# 
  1696  0E97                     	;# 
  1697  0E98                     	;# 
  1698  0E99                     	;# 
  1699  0E9A                     	;# 
  1700  0E9B                     	;# 
  1701  0E9C                     	;# 
  1702  0E9D                     	;# 
  1703  0E9E                     	;# 
  1704  0E9F                     	;# 
  1705  0EA0                     	;# 
  1706  0EA1                     	;# 
  1707  0EA2                     	;# 
  1708  0EA3                     	;# 
  1709  0EA4                     	;# 
  1710  0EA5                     	;# 
  1711  0EA6                     	;# 
  1712  0EA7                     	;# 
  1713  0F0F                     	;# 
  1714  0F10                     	;# 
  1715  0F11                     	;# 
  1716  0F12                     	;# 
  1717  0F13                     	;# 
  1718  0F14                     	;# 
  1719  0F15                     	;# 
  1720  0F16                     	;# 
  1721  0F17                     	;# 
  1722  0F18                     	;# 
  1723  0F19                     	;# 
  1724  0F1A                     	;# 
  1725  0F1B                     	;# 
  1726  0F1C                     	;# 
  1727  0F1D                     	;# 
  1728  0F1E                     	;# 
  1729  0F1F                     	;# 
  1730  0F20                     	;# 
  1731  0F21                     	;# 
  1732  0F22                     	;# 
  1733  0F23                     	;# 
  1734  0F24                     	;# 
  1735  0F25                     	;# 
  1736  0F26                     	;# 
  1737  0F27                     	;# 
  1738  0F28                     	;# 
  1739  0F29                     	;# 
  1740  0F2A                     	;# 
  1741  0F2B                     	;# 
  1742  0F2C                     	;# 
  1743  0F2D                     	;# 
  1744  0F2E                     	;# 
  1745  0F2F                     	;# 
  1746  0F30                     	;# 
  1747  0F31                     	;# 
  1748  0F32                     	;# 
  1749  0F33                     	;# 
  1750  0F34                     	;# 
  1751  0F35                     	;# 
  1752  0F36                     	;# 
  1753  0F37                     	;# 
  1754  0FE4                     	;# 
  1755  0FE5                     	;# 
  1756  0FE6                     	;# 
  1757  0FE7                     	;# 
  1758  0FE8                     	;# 
  1759  0FE9                     	;# 
  1760  0FEA                     	;# 
  1761  0FEB                     	;# 
  1762  0FED                     	;# 
  1763  0FEE                     	;# 
  1764  0FEF                     	;# 
  1765  0000                     	;# 
  1766  0001                     	;# 
  1767  0002                     	;# 
  1768  0003                     	;# 
  1769  0004                     	;# 
  1770  0005                     	;# 
  1771  0006                     	;# 
  1772  0007                     	;# 
  1773  0008                     	;# 
  1774  0009                     	;# 
  1775  000A                     	;# 
  1776  000B                     	;# 
  1777  000C                     	;# 
  1778  000D                     	;# 
  1779  000E                     	;# 
  1780  0010                     	;# 
  1781  0011                     	;# 
  1782  0012                     	;# 
  1783  0013                     	;# 
  1784  0014                     	;# 
  1785  0015                     	;# 
  1786  0016                     	;# 
  1787  0017                     	;# 
  1788  0018                     	;# 
  1789  0018                     	;# 
  1790  0019                     	;# 
  1791  001A                     	;# 
  1792  001B                     	;# 
  1793  001C                     	;# 
  1794  001C                     	;# 
  1795  001D                     	;# 
  1796  001E                     	;# 
  1797  001F                     	;# 
  1798  008C                     	;# 
  1799  008D                     	;# 
  1800  008E                     	;# 
  1801  0090                     	;# 
  1802  0091                     	;# 
  1803  0092                     	;# 
  1804  0093                     	;# 
  1805  0094                     	;# 
  1806  0095                     	;# 
  1807  0096                     	;# 
  1808  0097                     	;# 
  1809  0098                     	;# 
  1810  0099                     	;# 
  1811  009A                     	;# 
  1812  009B                     	;# 
  1813  009C                     	;# 
  1814  009D                     	;# 
  1815  009E                     	;# 
  1816  009F                     	;# 
  1817  010C                     	;# 
  1818  010D                     	;# 
  1819  010E                     	;# 
  1820  0111                     	;# 
  1821  0112                     	;# 
  1822  0113                     	;# 
  1823  0114                     	;# 
  1824  0115                     	;# 
  1825  0116                     	;# 
  1826  0117                     	;# 
  1827  0118                     	;# 
  1828  0119                     	;# 
  1829  011A                     	;# 
  1830  011B                     	;# 
  1831  011C                     	;# 
  1832  011D                     	;# 
  1833  018C                     	;# 
  1834  018D                     	;# 
  1835  018E                     	;# 
  1836  0191                     	;# 
  1837  0191                     	;# 
  1838  0192                     	;# 
  1839  0193                     	;# 
  1840  0193                     	;# 
  1841  0194                     	;# 
  1842  0195                     	;# 
  1843  0196                     	;# 
  1844  0197                     	;# 
  1845  0199                     	;# 
  1846  0199                     	;# 
  1847  0199                     	;# 
  1848  019A                     	;# 
  1849  019A                     	;# 
  1850  019A                     	;# 
  1851  019B                     	;# 
  1852  019B                     	;# 
  1853  019B                     	;# 
  1854  019B                     	;# 
  1855  019B                     	;# 
  1856  019C                     	;# 
  1857  019C                     	;# 
  1858  019C                     	;# 
  1859  019D                     	;# 
  1860  019D                     	;# 
  1861  019D                     	;# 
  1862  019E                     	;# 
  1863  019E                     	;# 
  1864  019E                     	;# 
  1865  019F                     	;# 
  1866  019F                     	;# 
  1867  019F                     	;# 
  1868  019F                     	;# 
  1869  019F                     	;# 
  1870  020C                     	;# 
  1871  020D                     	;# 
  1872  020E                     	;# 
  1873  0210                     	;# 
  1874  0211                     	;# 
  1875  0211                     	;# 
  1876  0212                     	;# 
  1877  0212                     	;# 
  1878  0213                     	;# 
  1879  0213                     	;# 
  1880  0214                     	;# 
  1881  0214                     	;# 
  1882  0215                     	;# 
  1883  0215                     	;# 
  1884  0215                     	;# 
  1885  0215                     	;# 
  1886  0216                     	;# 
  1887  0216                     	;# 
  1888  0217                     	;# 
  1889  0217                     	;# 
  1890  021B                     	;# 
  1891  021C                     	;# 
  1892  021D                     	;# 
  1893  021E                     	;# 
  1894  021F                     	;# 
  1895  028C                     	;# 
  1896  028D                     	;# 
  1897  028E                     	;# 
  1898  0291                     	;# 
  1899  0291                     	;# 
  1900  0292                     	;# 
  1901  0293                     	;# 
  1902  0294                     	;# 
  1903  0295                     	;# 
  1904  0295                     	;# 
  1905  0296                     	;# 
  1906  0297                     	;# 
  1907  0298                     	;# 
  1908  0299                     	;# 
  1909  0299                     	;# 
  1910  029A                     	;# 
  1911  029B                     	;# 
  1912  029C                     	;# 
  1913  029E                     	;# 
  1914  029F                     	;# 
  1915  030C                     	;# 
  1916  030D                     	;# 
  1917  030E                     	;# 
  1918  0315                     	;# 
  1919  0316                     	;# 
  1920  0317                     	;# 
  1921  0318                     	;# 
  1922  0319                     	;# 
  1923  031B                     	;# 
  1924  031C                     	;# 
  1925  031D                     	;# 
  1926  031E                     	;# 
  1927  031F                     	;# 
  1928  038C                     	;# 
  1929  038D                     	;# 
  1930  038E                     	;# 
  1931  0390                     	;# 
  1932  0391                     	;# 
  1933  0392                     	;# 
  1934  0393                     	;# 
  1935  0394                     	;# 
  1936  0395                     	;# 
  1937  0396                     	;# 
  1938  0397                     	;# 
  1939  0398                     	;# 
  1940  0399                     	;# 
  1941  039D                     	;# 
  1942  039E                     	;# 
  1943  039F                     	;# 
  1944  040D                     	;# 
  1945  040F                     	;# 
  1946  040F                     	;# 
  1947  0410                     	;# 
  1948  0411                     	;# 
  1949  0412                     	;# 
  1950  0413                     	;# 
  1951  0413                     	;# 
  1952  0414                     	;# 
  1953  0414                     	;# 
  1954  0415                     	;# 
  1955  0416                     	;# 
  1956  0417                     	;# 
  1957  0418                     	;# 
  1958  041A                     	;# 
  1959  041A                     	;# 
  1960  041B                     	;# 
  1961  041B                     	;# 
  1962  041C                     	;# 
  1963  041D                     	;# 
  1964  041E                     	;# 
  1965  041F                     	;# 
  1966  048E                     	;# 
  1967  048E                     	;# 
  1968  048F                     	;# 
  1969  0490                     	;# 
  1970  0491                     	;# 
  1971  0492                     	;# 
  1972  0493                     	;# 
  1973  0493                     	;# 
  1974  0494                     	;# 
  1975  0494                     	;# 
  1976  0495                     	;# 
  1977  0496                     	;# 
  1978  0497                     	;# 
  1979  0498                     	;# 
  1980  049A                     	;# 
  1981  049A                     	;# 
  1982  049B                     	;# 
  1983  049B                     	;# 
  1984  049C                     	;# 
  1985  049D                     	;# 
  1986  049E                     	;# 
  1987  049F                     	;# 
  1988  050F                     	;# 
  1989  0510                     	;# 
  1990  0511                     	;# 
  1991  0512                     	;# 
  1992  0513                     	;# 
  1993  0514                     	;# 
  1994  0515                     	;# 
  1995  0516                     	;# 
  1996  0517                     	;# 
  1997  0518                     	;# 
  1998  0519                     	;# 
  1999  051A                     	;# 
  2000  058D                     	;# 
  2001  058E                     	;# 
  2002  058F                     	;# 
  2003  058F                     	;# 
  2004  058F                     	;# 
  2005  0590                     	;# 
  2006  0590                     	;# 
  2007  0591                     	;# 
  2008  0592                     	;# 
  2009  0592                     	;# 
  2010  0592                     	;# 
  2011  0593                     	;# 
  2012  0593                     	;# 
  2013  0594                     	;# 
  2014  0595                     	;# 
  2015  0595                     	;# 
  2016  0596                     	;# 
  2017  0597                     	;# 
  2018  0597                     	;# 
  2019  0598                     	;# 
  2020  0599                     	;# 
  2021  0599                     	;# 
  2022  0599                     	;# 
  2023  059A                     	;# 
  2024  059A                     	;# 
  2025  059E                     	;# 
  2026  059F                     	;# 
  2027  059F                     	;# 
  2028  0614                     	;# 
  2029  0614                     	;# 
  2030  0615                     	;# 
  2031  0616                     	;# 
  2032  0617                     	;# 
  2033  0617                     	;# 
  2034  0618                     	;# 
  2035  0619                     	;# 
  2036  061A                     	;# 
  2037  061A                     	;# 
  2038  061B                     	;# 
  2039  061C                     	;# 
  2040  068D                     	;# 
  2041  068E                     	;# 
  2042  068F                     	;# 
  2043  0690                     	;# 
  2044  0691                     	;# 
  2045  0692                     	;# 
  2046  0693                     	;# 
  2047  0694                     	;# 
  2048  0695                     	;# 
  2049  0696                     	;# 
  2050  0697                     	;# 
  2051  0698                     	;# 
  2052  0699                     	;# 
  2053  069A                     	;# 
  2054  069B                     	;# 
  2055  069C                     	;# 
  2056  069D                     	;# 
  2057  069E                     	;# 
  2058  069F                     	;# 
  2059  070D                     	;# 
  2060  070E                     	;# 
  2061  070F                     	;# 
  2062  0710                     	;# 
  2063  0711                     	;# 
  2064  0712                     	;# 
  2065  0713                     	;# 
  2066  0714                     	;# 
  2067  0715                     	;# 
  2068  0716                     	;# 
  2069  0717                     	;# 
  2070  0718                     	;# 
  2071  0719                     	;# 
  2072  071A                     	;# 
  2073  071B                     	;# 
  2074  071C                     	;# 
  2075  071D                     	;# 
  2076  071E                     	;# 
  2077  071F                     	;# 
  2078  078E                     	;# 
  2079  078F                     	;# 
  2080  0790                     	;# 
  2081  0791                     	;# 
  2082  0792                     	;# 
  2083  0793                     	;# 
  2084  0794                     	;# 
  2085  0795                     	;# 
  2086  0796                     	;# 
  2087  0797                     	;# 
  2088  0798                     	;# 
  2089  0799                     	;# 
  2090  079A                     	;# 
  2091  079B                     	;# 
  2092  079C                     	;# 
  2093  079D                     	;# 
  2094  079E                     	;# 
  2095  079F                     	;# 
  2096  080D                     	;# 
  2097  080E                     	;# 
  2098  080F                     	;# 
  2099  0810                     	;# 
  2100  0811                     	;# 
  2101  0812                     	;# 
  2102  0813                     	;# 
  2103  0814                     	;# 
  2104  0815                     	;# 
  2105  0816                     	;# 
  2106  0817                     	;# 
  2107  0818                     	;# 
  2108  0819                     	;# 
  2109  081A                     	;# 
  2110  081B                     	;# 
  2111  081C                     	;# 
  2112  081D                     	;# 
  2113  081E                     	;# 
  2114  081F                     	;# 
  2115  090C                     	;# 
  2116  090D                     	;# 
  2117  090E                     	;# 
  2118  090F                     	;# 
  2119  0910                     	;# 
  2120  0911                     	;# 
  2121  0912                     	;# 
  2122  0913                     	;# 
  2123  0914                     	;# 
  2124  0915                     	;# 
  2125  0916                     	;# 
  2126  0917                     	;# 
  2127  0D8E                     	;# 
  2128  0D8F                     	;# 
  2129  0D90                     	;# 
  2130  0D91                     	;# 
  2131  0D91                     	;# 
  2132  0D92                     	;# 
  2133  0D93                     	;# 
  2134  0D93                     	;# 
  2135  0D94                     	;# 
  2136  0D95                     	;# 
  2137  0D95                     	;# 
  2138  0D96                     	;# 
  2139  0D97                     	;# 
  2140  0D97                     	;# 
  2141  0D98                     	;# 
  2142  0D99                     	;# 
  2143  0D99                     	;# 
  2144  0D9A                     	;# 
  2145  0D9B                     	;# 
  2146  0D9C                     	;# 
  2147  0D9C                     	;# 
  2148  0D9D                     	;# 
  2149  0D9D                     	;# 
  2150  0D9E                     	;# 
  2151  0D9F                     	;# 
  2152  0DA0                     	;# 
  2153  0DA1                     	;# 
  2154  0DA1                     	;# 
  2155  0DA2                     	;# 
  2156  0DA3                     	;# 
  2157  0DA3                     	;# 
  2158  0DA4                     	;# 
  2159  0DA5                     	;# 
  2160  0DA5                     	;# 
  2161  0DA6                     	;# 
  2162  0DA7                     	;# 
  2163  0DA7                     	;# 
  2164  0DA8                     	;# 
  2165  0DA9                     	;# 
  2166  0DA9                     	;# 
  2167  0DAA                     	;# 
  2168  0DAB                     	;# 
  2169  0DAC                     	;# 
  2170  0DAC                     	;# 
  2171  0DAD                     	;# 
  2172  0DAD                     	;# 
  2173  0DAE                     	;# 
  2174  0DAF                     	;# 
  2175  0DB0                     	;# 
  2176  0DB1                     	;# 
  2177  0DB1                     	;# 
  2178  0DB2                     	;# 
  2179  0DB3                     	;# 
  2180  0DB3                     	;# 
  2181  0DB4                     	;# 
  2182  0DB5                     	;# 
  2183  0DB5                     	;# 
  2184  0DB6                     	;# 
  2185  0DB7                     	;# 
  2186  0DB7                     	;# 
  2187  0DB8                     	;# 
  2188  0DB9                     	;# 
  2189  0DB9                     	;# 
  2190  0DBA                     	;# 
  2191  0DBB                     	;# 
  2192  0DBC                     	;# 
  2193  0DBC                     	;# 
  2194  0DBD                     	;# 
  2195  0DBD                     	;# 
  2196  0DBE                     	;# 
  2197  0DBF                     	;# 
  2198  0DC0                     	;# 
  2199  0E0C                     	;# 
  2200  0E0D                     	;# 
  2201  0E0E                     	;# 
  2202  0E0F                     	;# 
  2203  0E10                     	;# 
  2204  0E11                     	;# 
  2205  0E12                     	;# 
  2206  0E13                     	;# 
  2207  0E14                     	;# 
  2208  0E15                     	;# 
  2209  0E15                     	;# 
  2210  0E15                     	;# 
  2211  0E16                     	;# 
  2212  0E16                     	;# 
  2213  0E16                     	;# 
  2214  0E17                     	;# 
  2215  0E17                     	;# 
  2216  0E17                     	;# 
  2217  0E18                     	;# 
  2218  0E18                     	;# 
  2219  0E18                     	;# 
  2220  0E19                     	;# 
  2221  0E1A                     	;# 
  2222  0E1B                     	;# 
  2223  0E1D                     	;# 
  2224  0E1E                     	;# 
  2225  0E1F                     	;# 
  2226  0E21                     	;# 
  2227  0E22                     	;# 
  2228  0E23                     	;# 
  2229  0E24                     	;# 
  2230  0E25                     	;# 
  2231  0E26                     	;# 
  2232  0E27                     	;# 
  2233  0E28                     	;# 
  2234  0E29                     	;# 
  2235  0E2D                     	;# 
  2236  0E2E                     	;# 
  2237  0E2F                     	;# 
  2238  0E30                     	;# 
  2239  0E31                     	;# 
  2240  0E32                     	;# 
  2241  0E35                     	;# 
  2242  0E36                     	;# 
  2243  0E37                     	;# 
  2244  0E38                     	;# 
  2245  0E39                     	;# 
  2246  0E3A                     	;# 
  2247  0E3B                     	;# 
  2248  0E3C                     	;# 
  2249  0E3D                     	;# 
  2250  0E3E                     	;# 
  2251  0E90                     	;# 
  2252  0E91                     	;# 
  2253  0E92                     	;# 
  2254  0E93                     	;# 
  2255  0E94                     	;# 
  2256  0E95                     	;# 
  2257  0E96                     	;# 
  2258  0E97                     	;# 
  2259  0E98                     	;# 
  2260  0E99                     	;# 
  2261  0E9A                     	;# 
  2262  0E9B                     	;# 
  2263  0E9C                     	;# 
  2264  0E9D                     	;# 
  2265  0E9E                     	;# 
  2266  0E9F                     	;# 
  2267  0EA0                     	;# 
  2268  0EA1                     	;# 
  2269  0EA2                     	;# 
  2270  0EA3                     	;# 
  2271  0EA4                     	;# 
  2272  0EA5                     	;# 
  2273  0EA6                     	;# 
  2274  0EA7                     	;# 
  2275  0F0F                     	;# 
  2276  0F10                     	;# 
  2277  0F11                     	;# 
  2278  0F12                     	;# 
  2279  0F13                     	;# 
  2280  0F14                     	;# 
  2281  0F15                     	;# 
  2282  0F16                     	;# 
  2283  0F17                     	;# 
  2284  0F18                     	;# 
  2285  0F19                     	;# 
  2286  0F1A                     	;# 
  2287  0F1B                     	;# 
  2288  0F1C                     	;# 
  2289  0F1D                     	;# 
  2290  0F1E                     	;# 
  2291  0F1F                     	;# 
  2292  0F20                     	;# 
  2293  0F21                     	;# 
  2294  0F22                     	;# 
  2295  0F23                     	;# 
  2296  0F24                     	;# 
  2297  0F25                     	;# 
  2298  0F26                     	;# 
  2299  0F27                     	;# 
  2300  0F28                     	;# 
  2301  0F29                     	;# 
  2302  0F2A                     	;# 
  2303  0F2B                     	;# 
  2304  0F2C                     	;# 
  2305  0F2D                     	;# 
  2306  0F2E                     	;# 
  2307  0F2F                     	;# 
  2308  0F30                     	;# 
  2309  0F31                     	;# 
  2310  0F32                     	;# 
  2311  0F33                     	;# 
  2312  0F34                     	;# 
  2313  0F35                     	;# 
  2314  0F36                     	;# 
  2315  0F37                     	;# 
  2316  0FE4                     	;# 
  2317  0FE5                     	;# 
  2318  0FE6                     	;# 
  2319  0FE7                     	;# 
  2320  0FE8                     	;# 
  2321  0FE9                     	;# 
  2322  0FEA                     	;# 
  2323  0FEB                     	;# 
  2324  0FED                     	;# 
  2325  0FEE                     	;# 
  2326  0FEF                     	;# 
  2327  0000                     	;# 
  2328  0001                     	;# 
  2329  0002                     	;# 
  2330  0003                     	;# 
  2331  0004                     	;# 
  2332  0005                     	;# 
  2333  0006                     	;# 
  2334  0007                     	;# 
  2335  0008                     	;# 
  2336  0009                     	;# 
  2337  000A                     	;# 
  2338  000B                     	;# 
  2339  000C                     	;# 
  2340  000D                     	;# 
  2341  000E                     	;# 
  2342  0010                     	;# 
  2343  0011                     	;# 
  2344  0012                     	;# 
  2345  0013                     	;# 
  2346  0014                     	;# 
  2347  0015                     	;# 
  2348  0016                     	;# 
  2349  0017                     	;# 
  2350  0018                     	;# 
  2351  0018                     	;# 
  2352  0019                     	;# 
  2353  001A                     	;# 
  2354  001B                     	;# 
  2355  001C                     	;# 
  2356  001C                     	;# 
  2357  001D                     	;# 
  2358  001E                     	;# 
  2359  001F                     	;# 
  2360  008C                     	;# 
  2361  008D                     	;# 
  2362  008E                     	;# 
  2363  0090                     	;# 
  2364  0091                     	;# 
  2365  0092                     	;# 
  2366  0093                     	;# 
  2367  0094                     	;# 
  2368  0095                     	;# 
  2369  0096                     	;# 
  2370  0097                     	;# 
  2371  0098                     	;# 
  2372  0099                     	;# 
  2373  009A                     	;# 
  2374  009B                     	;# 
  2375  009C                     	;# 
  2376  009D                     	;# 
  2377  009E                     	;# 
  2378  009F                     	;# 
  2379  010C                     	;# 
  2380  010D                     	;# 
  2381  010E                     	;# 
  2382  0111                     	;# 
  2383  0112                     	;# 
  2384  0113                     	;# 
  2385  0114                     	;# 
  2386  0115                     	;# 
  2387  0116                     	;# 
  2388  0117                     	;# 
  2389  0118                     	;# 
  2390  0119                     	;# 
  2391  011A                     	;# 
  2392  011B                     	;# 
  2393  011C                     	;# 
  2394  011D                     	;# 
  2395  018C                     	;# 
  2396  018D                     	;# 
  2397  018E                     	;# 
  2398  0191                     	;# 
  2399  0191                     	;# 
  2400  0192                     	;# 
  2401  0193                     	;# 
  2402  0193                     	;# 
  2403  0194                     	;# 
  2404  0195                     	;# 
  2405  0196                     	;# 
  2406  0197                     	;# 
  2407  0199                     	;# 
  2408  0199                     	;# 
  2409  0199                     	;# 
  2410  019A                     	;# 
  2411  019A                     	;# 
  2412  019A                     	;# 
  2413  019B                     	;# 
  2414  019B                     	;# 
  2415  019B                     	;# 
  2416  019B                     	;# 
  2417  019B                     	;# 
  2418  019C                     	;# 
  2419  019C                     	;# 
  2420  019C                     	;# 
  2421  019D                     	;# 
  2422  019D                     	;# 
  2423  019D                     	;# 
  2424  019E                     	;# 
  2425  019E                     	;# 
  2426  019E                     	;# 
  2427  019F                     	;# 
  2428  019F                     	;# 
  2429  019F                     	;# 
  2430  019F                     	;# 
  2431  019F                     	;# 
  2432  020C                     	;# 
  2433  020D                     	;# 
  2434  020E                     	;# 
  2435  0210                     	;# 
  2436  0211                     	;# 
  2437  0211                     	;# 
  2438  0212                     	;# 
  2439  0212                     	;# 
  2440  0213                     	;# 
  2441  0213                     	;# 
  2442  0214                     	;# 
  2443  0214                     	;# 
  2444  0215                     	;# 
  2445  0215                     	;# 
  2446  0215                     	;# 
  2447  0215                     	;# 
  2448  0216                     	;# 
  2449  0216                     	;# 
  2450  0217                     	;# 
  2451  0217                     	;# 
  2452  021B                     	;# 
  2453  021C                     	;# 
  2454  021D                     	;# 
  2455  021E                     	;# 
  2456  021F                     	;# 
  2457  028C                     	;# 
  2458  028D                     	;# 
  2459  028E                     	;# 
  2460  0291                     	;# 
  2461  0291                     	;# 
  2462  0292                     	;# 
  2463  0293                     	;# 
  2464  0294                     	;# 
  2465  0295                     	;# 
  2466  0295                     	;# 
  2467  0296                     	;# 
  2468  0297                     	;# 
  2469  0298                     	;# 
  2470  0299                     	;# 
  2471  0299                     	;# 
  2472  029A                     	;# 
  2473  029B                     	;# 
  2474  029C                     	;# 
  2475  029E                     	;# 
  2476  029F                     	;# 
  2477  030C                     	;# 
  2478  030D                     	;# 
  2479  030E                     	;# 
  2480  0315                     	;# 
  2481  0316                     	;# 
  2482  0317                     	;# 
  2483  0318                     	;# 
  2484  0319                     	;# 
  2485  031B                     	;# 
  2486  031C                     	;# 
  2487  031D                     	;# 
  2488  031E                     	;# 
  2489  031F                     	;# 
  2490  038C                     	;# 
  2491  038D                     	;# 
  2492  038E                     	;# 
  2493  0390                     	;# 
  2494  0391                     	;# 
  2495  0392                     	;# 
  2496  0393                     	;# 
  2497  0394                     	;# 
  2498  0395                     	;# 
  2499  0396                     	;# 
  2500  0397                     	;# 
  2501  0398                     	;# 
  2502  0399                     	;# 
  2503  039D                     	;# 
  2504  039E                     	;# 
  2505  039F                     	;# 
  2506  040D                     	;# 
  2507  040F                     	;# 
  2508  040F                     	;# 
  2509  0410                     	;# 
  2510  0411                     	;# 
  2511  0412                     	;# 
  2512  0413                     	;# 
  2513  0413                     	;# 
  2514  0414                     	;# 
  2515  0414                     	;# 
  2516  0415                     	;# 
  2517  0416                     	;# 
  2518  0417                     	;# 
  2519  0418                     	;# 
  2520  041A                     	;# 
  2521  041A                     	;# 
  2522  041B                     	;# 
  2523  041B                     	;# 
  2524  041C                     	;# 
  2525  041D                     	;# 
  2526  041E                     	;# 
  2527  041F                     	;# 
  2528  048E                     	;# 
  2529  048E                     	;# 
  2530  048F                     	;# 
  2531  0490                     	;# 
  2532  0491                     	;# 
  2533  0492                     	;# 
  2534  0493                     	;# 
  2535  0493                     	;# 
  2536  0494                     	;# 
  2537  0494                     	;# 
  2538  0495                     	;# 
  2539  0496                     	;# 
  2540  0497                     	;# 
  2541  0498                     	;# 
  2542  049A                     	;# 
  2543  049A                     	;# 
  2544  049B                     	;# 
  2545  049B                     	;# 
  2546  049C                     	;# 
  2547  049D                     	;# 
  2548  049E                     	;# 
  2549  049F                     	;# 
  2550  050F                     	;# 
  2551  0510                     	;# 
  2552  0511                     	;# 
  2553  0512                     	;# 
  2554  0513                     	;# 
  2555  0514                     	;# 
  2556  0515                     	;# 
  2557  0516                     	;# 
  2558  0517                     	;# 
  2559  0518                     	;# 
  2560  0519                     	;# 
  2561  051A                     	;# 
  2562  058D                     	;# 
  2563  058E                     	;# 
  2564  058F                     	;# 
  2565  058F                     	;# 
  2566  058F                     	;# 
  2567  0590                     	;# 
  2568  0590                     	;# 
  2569  0591                     	;# 
  2570  0592                     	;# 
  2571  0592                     	;# 
  2572  0592                     	;# 
  2573  0593                     	;# 
  2574  0593                     	;# 
  2575  0594                     	;# 
  2576  0595                     	;# 
  2577  0595                     	;# 
  2578  0596                     	;# 
  2579  0597                     	;# 
  2580  0597                     	;# 
  2581  0598                     	;# 
  2582  0599                     	;# 
  2583  0599                     	;# 
  2584  0599                     	;# 
  2585  059A                     	;# 
  2586  059A                     	;# 
  2587  059E                     	;# 
  2588  059F                     	;# 
  2589  059F                     	;# 
  2590  0614                     	;# 
  2591  0614                     	;# 
  2592  0615                     	;# 
  2593  0616                     	;# 
  2594  0617                     	;# 
  2595  0617                     	;# 
  2596  0618                     	;# 
  2597  0619                     	;# 
  2598  061A                     	;# 
  2599  061A                     	;# 
  2600  061B                     	;# 
  2601  061C                     	;# 
  2602  068D                     	;# 
  2603  068E                     	;# 
  2604  068F                     	;# 
  2605  0690                     	;# 
  2606  0691                     	;# 
  2607  0692                     	;# 
  2608  0693                     	;# 
  2609  0694                     	;# 
  2610  0695                     	;# 
  2611  0696                     	;# 
  2612  0697                     	;# 
  2613  0698                     	;# 
  2614  0699                     	;# 
  2615  069A                     	;# 
  2616  069B                     	;# 
  2617  069C                     	;# 
  2618  069D                     	;# 
  2619  069E                     	;# 
  2620  069F                     	;# 
  2621  070D                     	;# 
  2622  070E                     	;# 
  2623  070F                     	;# 
  2624  0710                     	;# 
  2625  0711                     	;# 
  2626  0712                     	;# 
  2627  0713                     	;# 
  2628  0714                     	;# 
  2629  0715                     	;# 
  2630  0716                     	;# 
  2631  0717                     	;# 
  2632  0718                     	;# 
  2633  0719                     	;# 
  2634  071A                     	;# 
  2635  071B                     	;# 
  2636  071C                     	;# 
  2637  071D                     	;# 
  2638  071E                     	;# 
  2639  071F                     	;# 
  2640  078E                     	;# 
  2641  078F                     	;# 
  2642  0790                     	;# 
  2643  0791                     	;# 
  2644  0792                     	;# 
  2645  0793                     	;# 
  2646  0794                     	;# 
  2647  0795                     	;# 
  2648  0796                     	;# 
  2649  0797                     	;# 
  2650  0798                     	;# 
  2651  0799                     	;# 
  2652  079A                     	;# 
  2653  079B                     	;# 
  2654  079C                     	;# 
  2655  079D                     	;# 
  2656  079E                     	;# 
  2657  079F                     	;# 
  2658  080D                     	;# 
  2659  080E                     	;# 
  2660  080F                     	;# 
  2661  0810                     	;# 
  2662  0811                     	;# 
  2663  0812                     	;# 
  2664  0813                     	;# 
  2665  0814                     	;# 
  2666  0815                     	;# 
  2667  0816                     	;# 
  2668  0817                     	;# 
  2669  0818                     	;# 
  2670  0819                     	;# 
  2671  081A                     	;# 
  2672  081B                     	;# 
  2673  081C                     	;# 
  2674  081D                     	;# 
  2675  081E                     	;# 
  2676  081F                     	;# 
  2677  090C                     	;# 
  2678  090D                     	;# 
  2679  090E                     	;# 
  2680  090F                     	;# 
  2681  0910                     	;# 
  2682  0911                     	;# 
  2683  0912                     	;# 
  2684  0913                     	;# 
  2685  0914                     	;# 
  2686  0915                     	;# 
  2687  0916                     	;# 
  2688  0917                     	;# 
  2689  0D8E                     	;# 
  2690  0D8F                     	;# 
  2691  0D90                     	;# 
  2692  0D91                     	;# 
  2693  0D91                     	;# 
  2694  0D92                     	;# 
  2695  0D93                     	;# 
  2696  0D93                     	;# 
  2697  0D94                     	;# 
  2698  0D95                     	;# 
  2699  0D95                     	;# 
  2700  0D96                     	;# 
  2701  0D97                     	;# 
  2702  0D97                     	;# 
  2703  0D98                     	;# 
  2704  0D99                     	;# 
  2705  0D99                     	;# 
  2706  0D9A                     	;# 
  2707  0D9B                     	;# 
  2708  0D9C                     	;# 
  2709  0D9C                     	;# 
  2710  0D9D                     	;# 
  2711  0D9D                     	;# 
  2712  0D9E                     	;# 
  2713  0D9F                     	;# 
  2714  0DA0                     	;# 
  2715  0DA1                     	;# 
  2716  0DA1                     	;# 
  2717  0DA2                     	;# 
  2718  0DA3                     	;# 
  2719  0DA3                     	;# 
  2720  0DA4                     	;# 
  2721  0DA5                     	;# 
  2722  0DA5                     	;# 
  2723  0DA6                     	;# 
  2724  0DA7                     	;# 
  2725  0DA7                     	;# 
  2726  0DA8                     	;# 
  2727  0DA9                     	;# 
  2728  0DA9                     	;# 
  2729  0DAA                     	;# 
  2730  0DAB                     	;# 
  2731  0DAC                     	;# 
  2732  0DAC                     	;# 
  2733  0DAD                     	;# 
  2734  0DAD                     	;# 
  2735  0DAE                     	;# 
  2736  0DAF                     	;# 
  2737  0DB0                     	;# 
  2738  0DB1                     	;# 
  2739  0DB1                     	;# 
  2740  0DB2                     	;# 
  2741  0DB3                     	;# 
  2742  0DB3                     	;# 
  2743  0DB4                     	;# 
  2744  0DB5                     	;# 
  2745  0DB5                     	;# 
  2746  0DB6                     	;# 
  2747  0DB7                     	;# 
  2748  0DB7                     	;# 
  2749  0DB8                     	;# 
  2750  0DB9                     	;# 
  2751  0DB9                     	;# 
  2752  0DBA                     	;# 
  2753  0DBB                     	;# 
  2754  0DBC                     	;# 
  2755  0DBC                     	;# 
  2756  0DBD                     	;# 
  2757  0DBD                     	;# 
  2758  0DBE                     	;# 
  2759  0DBF                     	;# 
  2760  0DC0                     	;# 
  2761  0E0C                     	;# 
  2762  0E0D                     	;# 
  2763  0E0E                     	;# 
  2764  0E0F                     	;# 
  2765  0E10                     	;# 
  2766  0E11                     	;# 
  2767  0E12                     	;# 
  2768  0E13                     	;# 
  2769  0E14                     	;# 
  2770  0E15                     	;# 
  2771  0E15                     	;# 
  2772  0E15                     	;# 
  2773  0E16                     	;# 
  2774  0E16                     	;# 
  2775  0E16                     	;# 
  2776  0E17                     	;# 
  2777  0E17                     	;# 
  2778  0E17                     	;# 
  2779  0E18                     	;# 
  2780  0E18                     	;# 
  2781  0E18                     	;# 
  2782  0E19                     	;# 
  2783  0E1A                     	;# 
  2784  0E1B                     	;# 
  2785  0E1D                     	;# 
  2786  0E1E                     	;# 
  2787  0E1F                     	;# 
  2788  0E21                     	;# 
  2789  0E22                     	;# 
  2790  0E23                     	;# 
  2791  0E24                     	;# 
  2792  0E25                     	;# 
  2793  0E26                     	;# 
  2794  0E27                     	;# 
  2795  0E28                     	;# 
  2796  0E29                     	;# 
  2797  0E2D                     	;# 
  2798  0E2E                     	;# 
  2799  0E2F                     	;# 
  2800  0E30                     	;# 
  2801  0E31                     	;# 
  2802  0E32                     	;# 
  2803  0E35                     	;# 
  2804  0E36                     	;# 
  2805  0E37                     	;# 
  2806  0E38                     	;# 
  2807  0E39                     	;# 
  2808  0E3A                     	;# 
  2809  0E3B                     	;# 
  2810  0E3C                     	;# 
  2811  0E3D                     	;# 
  2812  0E3E                     	;# 
  2813  0E90                     	;# 
  2814  0E91                     	;# 
  2815  0E92                     	;# 
  2816  0E93                     	;# 
  2817  0E94                     	;# 
  2818  0E95                     	;# 
  2819  0E96                     	;# 
  2820  0E97                     	;# 
  2821  0E98                     	;# 
  2822  0E99                     	;# 
  2823  0E9A                     	;# 
  2824  0E9B                     	;# 
  2825  0E9C                     	;# 
  2826  0E9D                     	;# 
  2827  0E9E                     	;# 
  2828  0E9F                     	;# 
  2829  0EA0                     	;# 
  2830  0EA1                     	;# 
  2831  0EA2                     	;# 
  2832  0EA3                     	;# 
  2833  0EA4                     	;# 
  2834  0EA5                     	;# 
  2835  0EA6                     	;# 
  2836  0EA7                     	;# 
  2837  0F0F                     	;# 
  2838  0F10                     	;# 
  2839  0F11                     	;# 
  2840  0F12                     	;# 
  2841  0F13                     	;# 
  2842  0F14                     	;# 
  2843  0F15                     	;# 
  2844  0F16                     	;# 
  2845  0F17                     	;# 
  2846  0F18                     	;# 
  2847  0F19                     	;# 
  2848  0F1A                     	;# 
  2849  0F1B                     	;# 
  2850  0F1C                     	;# 
  2851  0F1D                     	;# 
  2852  0F1E                     	;# 
  2853  0F1F                     	;# 
  2854  0F20                     	;# 
  2855  0F21                     	;# 
  2856  0F22                     	;# 
  2857  0F23                     	;# 
  2858  0F24                     	;# 
  2859  0F25                     	;# 
  2860  0F26                     	;# 
  2861  0F27                     	;# 
  2862  0F28                     	;# 
  2863  0F29                     	;# 
  2864  0F2A                     	;# 
  2865  0F2B                     	;# 
  2866  0F2C                     	;# 
  2867  0F2D                     	;# 
  2868  0F2E                     	;# 
  2869  0F2F                     	;# 
  2870  0F30                     	;# 
  2871  0F31                     	;# 
  2872  0F32                     	;# 
  2873  0F33                     	;# 
  2874  0F34                     	;# 
  2875  0F35                     	;# 
  2876  0F36                     	;# 
  2877  0F37                     	;# 
  2878  0FE4                     	;# 
  2879  0FE5                     	;# 
  2880  0FE6                     	;# 
  2881  0FE7                     	;# 
  2882  0FE8                     	;# 
  2883  0FE9                     	;# 
  2884  0FEA                     	;# 
  2885  0FEB                     	;# 
  2886  0FED                     	;# 
  2887  0FEE                     	;# 
  2888  0FEF                     	;# 
  2889                           
  2890                           	psect	idataCOMMON
  2891  05A7                     __pidataCOMMON:	
  2892                           
  2893                           ;initializer for _state
  2894  05A7  3403               	retlw	3
  2895                           
  2896                           ;initializer for _GLBL_Resp8
  2897  05A8  34FF               	retlw	255
  2898                           
  2899                           	psect	idataBANK0
  2900  05A3                     __pidataBANK0:	
  2901                           
  2902                           ;initializer for _buffer_write_index
  2903  05A3  3401               	retlw	1
  2904  05A4  3400               	retlw	0
  2905                           
  2906                           ;initializer for _isPlaying
  2907  05A5  3401               	retlw	1
  2908                           
  2909                           ;initializer for _readMessage
  2910  05A6  34FF               	retlw	255
  2911                           
  2912                           	psect	idataBANK1
  2913  058F                     __pidataBANK1:	
  2914                           
  2915                           ;initializer for _GLBL_Resp40
  2916  058F  34FF               	retlw	255
  2917  0590  34FF               	retlw	255
  2918  0591  34FF               	retlw	255
  2919  0592  34FF               	retlw	255
  2920  0593  34FF               	retlw	255
  2921                           
  2922                           	psect	stringtext1
  2923  005C                     __pstringtext1:	
  2924  005C                     _CRCTable:	
  2925  005C  3400               	retlw	0
  2926  005D  3409               	retlw	9
  2927  005E  3412               	retlw	18
  2928  005F  341B               	retlw	27
  2929  0060  3424               	retlw	36
  2930  0061  342D               	retlw	45
  2931  0062  3436               	retlw	54
  2932  0063  343F               	retlw	63
  2933  0064  3448               	retlw	72
  2934  0065  3441               	retlw	65
  2935  0066  345A               	retlw	90
  2936  0067  3453               	retlw	83
  2937  0068  346C               	retlw	108
  2938  0069  3465               	retlw	101
  2939  006A  347E               	retlw	126
  2940  006B  3477               	retlw	119
  2941  006C  3419               	retlw	25
  2942  006D  3410               	retlw	16
  2943  006E  340B               	retlw	11
  2944  006F  3402               	retlw	2
  2945  0070  343D               	retlw	61
  2946  0071  3434               	retlw	52
  2947  0072  342F               	retlw	47
  2948  0073  3426               	retlw	38
  2949  0074  3451               	retlw	81
  2950  0075  3458               	retlw	88
  2951  0076  3443               	retlw	67
  2952  0077  344A               	retlw	74
  2953  0078  3475               	retlw	117
  2954  0079  347C               	retlw	124
  2955  007A  3467               	retlw	103
  2956  007B  346E               	retlw	110
  2957  007C  3432               	retlw	50
  2958  007D  343B               	retlw	59
  2959  007E  3420               	retlw	32
  2960  007F  3429               	retlw	41
  2961  0080  3416               	retlw	22
  2962  0081  341F               	retlw	31
  2963  0082  3404               	retlw	4
  2964  0083  340D               	retlw	13
  2965  0084  347A               	retlw	122
  2966  0085  3473               	retlw	115
  2967  0086  3468               	retlw	104
  2968  0087  3461               	retlw	97
  2969  0088  345E               	retlw	94
  2970  0089  3457               	retlw	87
  2971  008A  344C               	retlw	76
  2972  008B  3445               	retlw	69
  2973  008C  342B               	retlw	43
  2974  008D  3422               	retlw	34
  2975  008E  3439               	retlw	57
  2976  008F  3430               	retlw	48
  2977  0090  340F               	retlw	15
  2978  0091  3406               	retlw	6
  2979  0092  341D               	retlw	29
  2980  0093  3414               	retlw	20
  2981  0094  3463               	retlw	99
  2982  0095  346A               	retlw	106
  2983  0096  3471               	retlw	113
  2984  0097  3478               	retlw	120
  2985  0098  3447               	retlw	71
  2986  0099  344E               	retlw	78
  2987  009A  3455               	retlw	85
  2988  009B  345C               	retlw	92
  2989  009C  3464               	retlw	100
  2990  009D  346D               	retlw	109
  2991  009E  3476               	retlw	118
  2992  009F  347F               	retlw	127
  2993  00A0  3440               	retlw	64
  2994  00A1  3449               	retlw	73
  2995  00A2  3452               	retlw	82
  2996  00A3  345B               	retlw	91
  2997  00A4  342C               	retlw	44
  2998  00A5  3425               	retlw	37
  2999  00A6  343E               	retlw	62
  3000  00A7  3437               	retlw	55
  3001  00A8  3408               	retlw	8
  3002  00A9  3401               	retlw	1
  3003  00AA  341A               	retlw	26
  3004  00AB  3413               	retlw	19
  3005  00AC  347D               	retlw	125
  3006  00AD  3474               	retlw	116
  3007  00AE  346F               	retlw	111
  3008  00AF  3466               	retlw	102
  3009  00B0  3459               	retlw	89
  3010  00B1  3450               	retlw	80
  3011  00B2  344B               	retlw	75
  3012  00B3  3442               	retlw	66
  3013  00B4  3435               	retlw	53
  3014  00B5  343C               	retlw	60
  3015  00B6  3427               	retlw	39
  3016  00B7  342E               	retlw	46
  3017  00B8  3411               	retlw	17
  3018  00B9  3418               	retlw	24
  3019  00BA  3403               	retlw	3
  3020  00BB  340A               	retlw	10
  3021  00BC  3456               	retlw	86
  3022  00BD  345F               	retlw	95
  3023  00BE  3444               	retlw	68
  3024  00BF  344D               	retlw	77
  3025  00C0  3472               	retlw	114
  3026  00C1  347B               	retlw	123
  3027  00C2  3460               	retlw	96
  3028  00C3  3469               	retlw	105
  3029  00C4  341E               	retlw	30
  3030  00C5  3417               	retlw	23
  3031  00C6  340C               	retlw	12
  3032  00C7  3405               	retlw	5
  3033  00C8  343A               	retlw	58
  3034  00C9  3433               	retlw	51
  3035  00CA  3428               	retlw	40
  3036  00CB  3421               	retlw	33
  3037  00CC  344F               	retlw	79
  3038  00CD  3446               	retlw	70
  3039  00CE  345D               	retlw	93
  3040  00CF  3454               	retlw	84
  3041  00D0  346B               	retlw	107
  3042  00D1  3462               	retlw	98
  3043  00D2  3479               	retlw	121
  3044  00D3  3470               	retlw	112
  3045  00D4  3407               	retlw	7
  3046  00D5  340E               	retlw	14
  3047  00D6  3415               	retlw	21
  3048  00D7  341C               	retlw	28
  3049  00D8  3423               	retlw	35
  3050  00D9  342A               	retlw	42
  3051  00DA  3431               	retlw	49
  3052  00DB  3438               	retlw	56
  3053  00DC  3441               	retlw	65
  3054  00DD  3448               	retlw	72
  3055  00DE  3453               	retlw	83
  3056  00DF  345A               	retlw	90
  3057  00E0  3465               	retlw	101
  3058  00E1  346C               	retlw	108
  3059  00E2  3477               	retlw	119
  3060  00E3  347E               	retlw	126
  3061  00E4  3409               	retlw	9
  3062  00E5  3400               	retlw	0
  3063  00E6  341B               	retlw	27
  3064  00E7  3412               	retlw	18
  3065  00E8  342D               	retlw	45
  3066  00E9  3424               	retlw	36
  3067  00EA  343F               	retlw	63
  3068  00EB  3436               	retlw	54
  3069  00EC  3458               	retlw	88
  3070  00ED  3451               	retlw	81
  3071  00EE  344A               	retlw	74
  3072  00EF  3443               	retlw	67
  3073  00F0  347C               	retlw	124
  3074  00F1  3475               	retlw	117
  3075  00F2  346E               	retlw	110
  3076  00F3  3467               	retlw	103
  3077  00F4  3410               	retlw	16
  3078  00F5  3419               	retlw	25
  3079  00F6  3402               	retlw	2
  3080  00F7  340B               	retlw	11
  3081  00F8  3434               	retlw	52
  3082  00F9  343D               	retlw	61
  3083  00FA  3426               	retlw	38
  3084  00FB  342F               	retlw	47
  3085  00FC  3473               	retlw	115
  3086  00FD  347A               	retlw	122
  3087  00FE  3461               	retlw	97
  3088  00FF  3468               	retlw	104
  3089  0100  3457               	retlw	87
  3090  0101  345E               	retlw	94
  3091  0102  3445               	retlw	69
  3092  0103  344C               	retlw	76
  3093  0104  343B               	retlw	59
  3094  0105  3432               	retlw	50
  3095  0106  3429               	retlw	41
  3096  0107  3420               	retlw	32
  3097  0108  341F               	retlw	31
  3098  0109  3416               	retlw	22
  3099  010A  340D               	retlw	13
  3100  010B  3404               	retlw	4
  3101  010C  346A               	retlw	106
  3102  010D  3463               	retlw	99
  3103  010E  3478               	retlw	120
  3104  010F  3471               	retlw	113
  3105  0110  344E               	retlw	78
  3106  0111  3447               	retlw	71
  3107  0112  345C               	retlw	92
  3108  0113  3455               	retlw	85
  3109  0114  3422               	retlw	34
  3110  0115  342B               	retlw	43
  3111  0116  3430               	retlw	48
  3112  0117  3439               	retlw	57
  3113  0118  3406               	retlw	6
  3114  0119  340F               	retlw	15
  3115  011A  3414               	retlw	20
  3116  011B  341D               	retlw	29
  3117  011C  3425               	retlw	37
  3118  011D  342C               	retlw	44
  3119  011E  3437               	retlw	55
  3120  011F  343E               	retlw	62
  3121  0120  3401               	retlw	1
  3122  0121  3408               	retlw	8
  3123  0122  3413               	retlw	19
  3124  0123  341A               	retlw	26
  3125  0124  346D               	retlw	109
  3126  0125  3464               	retlw	100
  3127  0126  347F               	retlw	127
  3128  0127  3476               	retlw	118
  3129  0128  3449               	retlw	73
  3130  0129  3440               	retlw	64
  3131  012A  345B               	retlw	91
  3132  012B  3452               	retlw	82
  3133  012C  343C               	retlw	60
  3134  012D  3435               	retlw	53
  3135  012E  342E               	retlw	46
  3136  012F  3427               	retlw	39
  3137  0130  3418               	retlw	24
  3138  0131  3411               	retlw	17
  3139  0132  340A               	retlw	10
  3140  0133  3403               	retlw	3
  3141  0134  3474               	retlw	116
  3142  0135  347D               	retlw	125
  3143  0136  3466               	retlw	102
  3144  0137  346F               	retlw	111
  3145  0138  3450               	retlw	80
  3146  0139  3459               	retlw	89
  3147  013A  3442               	retlw	66
  3148  013B  344B               	retlw	75
  3149  013C  3417               	retlw	23
  3150  013D  341E               	retlw	30
  3151  013E  3405               	retlw	5
  3152  013F  340C               	retlw	12
  3153  0140  3433               	retlw	51
  3154  0141  343A               	retlw	58
  3155  0142  3421               	retlw	33
  3156  0143  3428               	retlw	40
  3157  0144  345F               	retlw	95
  3158  0145  3456               	retlw	86
  3159  0146  344D               	retlw	77
  3160  0147  3444               	retlw	68
  3161  0148  347B               	retlw	123
  3162  0149  3472               	retlw	114
  3163  014A  3469               	retlw	105
  3164  014B  3460               	retlw	96
  3165  014C  340E               	retlw	14
  3166  014D  3407               	retlw	7
  3167  014E  341C               	retlw	28
  3168  014F  3415               	retlw	21
  3169  0150  342A               	retlw	42
  3170  0151  3423               	retlw	35
  3171  0152  3438               	retlw	56
  3172  0153  3431               	retlw	49
  3173  0154  3446               	retlw	70
  3174  0155  344F               	retlw	79
  3175  0156  3454               	retlw	84
  3176  0157  345D               	retlw	93
  3177  0158  3462               	retlw	98
  3178  0159  346B               	retlw	107
  3179  015A  3470               	retlw	112
  3180  015B  3479               	retlw	121
  3181  015C                     __end_of_CRCTable:	
  3182  000B                     _INTCONbits	set	11
  3183  0011                     _PIR1bits	set	17
  3184  000E                     _PORTCbits	set	14
  3185  008C                     _TRISA	set	140
  3186  009C                     _OSCSTATbits	set	156
  3187  009B                     _OSCCON	set	155
  3188  0091                     _PIE1bits	set	145
  3189  0476                     _TRISC6	set	1142
  3190  0468                     _TRISB0	set	1128
  3191  0471                     _TRISC1	set	1137
  3192  0470                     _TRISC0	set	1136
  3193  0469                     _TRISB1	set	1129
  3194  0477                     _TRISC7	set	1143
  3195  0474                     _TRISC4	set	1140
  3196  0473                     _TRISC3	set	1139
  3197  0472                     _TRISC2	set	1138
  3198  0C69                     _ANSB1	set	3177
  3199  0C73                     _ANSC3	set	3187
  3200  0214                     _SSP1STATbits	set	532
  3201  0211                     _SSP1BUF	set	529
  3202  0212                     _SSP1ADD	set	530
  3203  0215                     _SSP1CON1	set	533
  3204  0214                     _SSP1STAT	set	532
  3205  0215                     _SSP1CON1bits	set	533
  3206  0495                     _T2CON	set	1173
  3207  0497                     _T2CLKCON	set	1175
  3208  0494                     _T2PR	set	1172
  3209  058E                     _DAC1CON0	set	1422
  3210  058F                     _DAC1REFL	set	1423
  3211  0590                     _DAC1REFH	set	1424
  3212  2C68                     _DAC1LD	set	11368
  3213  0E3B                     _SSPDATPPS	set	3643
  3214  0E3A                     _SSPCLKPPS	set	3642
  3215  0EA4                     _RC4PPS	set	3748
  3216  0EA2                     _RC2PPS	set	3746
  3217  015C                     STR_5:	
  3218  015C  3466               	retlw	102	;'f'
  3219  015D  346D               	retlw	109	;'m'
  3220  015E  3474               	retlw	116	;'t'
  3221  015F  3420               	retlw	32	;' '
  3222  0160  3400               	retlw	0
  3223                           
  3224                           	psect	stringtext2
  3225  0594                     __pstringtext2:	
  3226  0594                     STR_3:	
  3227  0594  3457               	retlw	87	;'W'
  3228  0595  3441               	retlw	65	;'A'
  3229  0596  3456               	retlw	86	;'V'
  3230  0597  3445               	retlw	69	;'E'
  3231  0598  3400               	retlw	0
  3232                           
  3233                           	psect	stringtext3
  3234  0599                     __pstringtext3:	
  3235  0599                     STR_1:	
  3236  0599  3452               	retlw	82	;'R'
  3237  059A  3449               	retlw	73	;'I'
  3238  059B  3446               	retlw	70	;'F'
  3239  059C  3446               	retlw	70	;'F'
  3240  059D  3400               	retlw	0
  3241                           
  3242                           	psect	stringtext4
  3243  059E                     __pstringtext4:	
  3244  059E                     STR_7:	
  3245  059E  3464               	retlw	100	;'d'
  3246  059F  3461               	retlw	97	;'a'
  3247  05A0  3474               	retlw	116	;'t'
  3248  05A1  3461               	retlw	97	;'a'
  3249  05A2  3400               	retlw	0
  3250                           
  3251                           	psect	stringtext5
  3252  0000                     __pstringtext5:	
  3253  015C                     
  3254                           ; #config settings
  3255  0000                     
  3256                           	psect	cinit
  3257  0029                     start_initialization:	
  3258  0029                     __initialization:	
  3259                           
  3260                           ; Initialize objects allocated to COMMON
  3261  0029  3185  25A7  3180   	fcall	__pidataCOMMON	;fetch initializer
  3262  002C  00FA               	movwf	__pdataCOMMON& (0+127)
  3263  002D  3185  25A8  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  3264  0030  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
  3265                           
  3266                           ; Initialize objects allocated to BANK0
  3267  0031  30A3               	movlw	low __pidataBANK0
  3268  0032  0084               	movwf	4
  3269  0033  3085               	movlw	(high __pidataBANK0)| (0+128)
  3270  0034  0085               	movwf	5
  3271  0035  306B               	movlw	low __pdataBANK0
  3272  0036  0086               	movwf	6
  3273  0037  3000               	movlw	high __pdataBANK0
  3274  0038  0087               	movwf	7
  3275  0039  3004               	movlw	4
  3276  003A  3185  2583  3180   	fcall	init_ram
  3277                           
  3278                           ; Initialize objects allocated to BANK1
  3279  003D  308F               	movlw	low __pidataBANK1
  3280  003E  0084               	movwf	4
  3281  003F  3085               	movlw	(high __pidataBANK1)| (0+128)
  3282  0040  0085               	movwf	5
  3283  0041  30CE               	movlw	low __pdataBANK1
  3284  0042  0086               	movwf	6
  3285  0043  3000               	movlw	high __pdataBANK1
  3286  0044  0087               	movwf	7
  3287  0045  3005               	movlw	5
  3288  0046  3185  2583  3180   	fcall	init_ram
  3289                           
  3290                           ; Clear objects allocated to BANK0
  3291  0049  3061               	movlw	low __pbssBANK0
  3292  004A  0084               	movwf	4
  3293  004B  3000               	movlw	high __pbssBANK0
  3294  004C  0085               	movwf	5
  3295  004D  300A               	movlw	10
  3296  004E  3185  2589  3180   	fcall	clear_ram0
  3297                           
  3298                           ; Clear objects allocated to BANK1
  3299  0051  30A0               	movlw	low __pbssBANK1
  3300  0052  0084               	movwf	4
  3301  0053  3000               	movlw	high __pbssBANK1
  3302  0054  0085               	movwf	5
  3303  0055  302E               	movlw	46
  3304  0056  3185  2589         	fcall	clear_ram0
  3305  0058                     end_of_initialization:	
  3306                           ;End of C runtime variable initialization code
  3307                           
  3308  0058                     __end_of__initialization:	
  3309  0058  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3310  0059  0020               	movlb	0
  3311  005A  3182  2A09         	ljmp	_main	;jump to C main() function
  3312                           
  3313                           	psect	dataCOMMON
  3314  007A                     __pdataCOMMON:	
  3315  007A                     _state:	
  3316  007A                     	ds	1
  3317  007B                     _GLBL_Resp8:	
  3318  007B                     	ds	1
  3319                           
  3320                           	psect	bssBANK0
  3321  0061                     __pbssBANK0:	
  3322  0061                     _blockIndex:	
  3323  0061                     	ds	2
  3324  0063                     _buffer_read_index:	
  3325  0063                     	ds	2
  3326  0065                     _sdata:	
  3327  0065                     	ds	2
  3328  0067                     _channels:	
  3329  0067                     	ds	2
  3330  0069                     _samplePending:	
  3331  0069                     	ds	1
  3332  006A                     _global_error:	
  3333  006A                     	ds	1
  3334                           
  3335                           	psect	dataBANK0
  3336  006B                     __pdataBANK0:	
  3337  006B                     _buffer_write_index:	
  3338  006B                     	ds	2
  3339  006D                     _isPlaying:	
  3340  006D                     	ds	1
  3341  006E                     _readMessage:	
  3342  006E                     	ds	1
  3343                           
  3344                           	psect	bssBANK1
  3345  00A0                     __pbssBANK1:	
  3346  00A0                     _buffer:	
  3347  00A0                     	ds	32
  3348  00C0                     _address:	
  3349  00C0                     	ds	4
  3350  00C4                     _filesize:	
  3351  00C4                     	ds	4
  3352  00C8                     _sampRate:	
  3353  00C8                     	ds	4
  3354  00CC                     _bitsPerSamp:	
  3355  00CC                     	ds	2
  3356                           
  3357                           	psect	dataBANK1
  3358  00CE                     __pdataBANK1:	
  3359  00CE                     _GLBL_Resp40:	
  3360  00CE                     	ds	5
  3361                           
  3362                           	psect	inittext
  3363  0583                     init_ram:	
  3364  0583  00FE               	movwf	126
  3365  0584                     initloop:	
  3366  0584  0012               	moviw fsr0++
  3367  0585  001E               	movwi fsr1++
  3368  0586  0BFE               	decfsz	126,f
  3369  0587  2D84               	goto	initloop
  3370  0588  3400               	retlw	0
  3371                           
  3372                           	psect	clrtext
  3373  0589                     clear_ram0:	
  3374                           ;	Called with FSR0 containing the base address, and
  3375                           ;	WREG with the size to clear
  3376                           
  3377  0589  0064               	clrwdt	;clear the watchdog before getting into this loop
  3378  058A                     clrloop0:	
  3379  058A  0180               	clrf	0	;clear RAM location pointed to by FSR
  3380  058B  3101               	addfsr 0,1
  3381  058C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3382  058D  2D8A               	goto	clrloop0	;have we reached the end yet?
  3383  058E  3400               	retlw	0	;all done for this memory range, return
  3384                           
  3385                           	psect	cstackBANK1
  3386  00D3                     __pcstackBANK1:	
  3387  00D3                     ??_main:	
  3388                           
  3389                           ; 1 bytes @ 0x0
  3390  00D3                     	ds	4
  3391                           
  3392                           	psect	cstackCOMMON
  3393  0070                     __pcstackCOMMON:	
  3394  0070                     ?_SPI_Write:	
  3395  0070                     ?_SD_Read8bitResponse:	
  3396                           ; 1 bytes @ 0x0
  3397                           
  3398  0070                     ?_SD_Check8bitResponse:	
  3399                           ; 1 bytes @ 0x0
  3400                           
  3401  0070                     ?_SD_Read40bitResponse:	
  3402                           ; 1 bytes @ 0x0
  3403                           
  3404  0070                     ?_SPI_Read:	
  3405                           ; 1 bytes @ 0x0
  3406                           
  3407  0070                     ?_DAC_Init:	
  3408                           ; 1 bytes @ 0x0
  3409                           
  3410  0070                     ?_SD_Init:	
  3411                           ; 1 bytes @ 0x0
  3412                           
  3413  0070                     ?_SD_CloseBlock:	
  3414                           ; 1 bytes @ 0x0
  3415                           
  3416  0070                     ?_SPI_Init:	
  3417                           ; 1 bytes @ 0x0
  3418                           
  3419  0070                     ?_error:	
  3420                           ; 1 bytes @ 0x0
  3421                           
  3422  0070                     ?_init:	
  3423                           ; 1 bytes @ 0x0
  3424                           
  3425  0070                     ?_isr:	
  3426                           ; 1 bytes @ 0x0
  3427                           
  3428  0070                     ??_isr:	
  3429                           ; 1 bytes @ 0x0
  3430                           
  3431  0070                     ?_main:	
  3432                           ; 1 bytes @ 0x0
  3433                           
  3434  0070                     isr@level:	
  3435                           ; 1 bytes @ 0x0
  3436                           
  3437                           
  3438                           ; 2 bytes @ 0x0
  3439  0070                     	ds	2
  3440  0072                     ??_SPI_Write:	
  3441  0072                     ??_SD_Read8bitResponse:	
  3442                           ; 1 bytes @ 0x2
  3443                           
  3444  0072                     ??_SD_Check8bitResponse:	
  3445                           ; 1 bytes @ 0x2
  3446                           
  3447  0072                     ??_SD_Read40bitResponse:	
  3448                           ; 1 bytes @ 0x2
  3449                           
  3450  0072                     ?_SD_Check40bitResponse:	
  3451                           ; 1 bytes @ 0x2
  3452                           
  3453  0072                     ??_SPI_Read:	
  3454                           ; 1 bytes @ 0x2
  3455                           
  3456  0072                     ??_DAC_Init:	
  3457                           ; 1 bytes @ 0x2
  3458                           
  3459  0072                     ??_SD_CloseBlock:	
  3460                           ; 1 bytes @ 0x2
  3461                           
  3462  0072                     ??_SPI_Init:	
  3463                           ; 1 bytes @ 0x2
  3464                           
  3465  0072                     ??_error:	
  3466                           ; 1 bytes @ 0x2
  3467                           
  3468  0072                     ?_fourCCeq:	
  3469                           ; 1 bytes @ 0x2
  3470                           
  3471  0072                     ?_readBytes:	
  3472                           ; 1 bytes @ 0x2
  3473                           
  3474  0072                     ?_timer_Init:	
  3475                           ; 1 bytes @ 0x2
  3476                           
  3477  0072                     SD_Check8bitResponse@Byte:	
  3478                           ; 2 bytes @ 0x2
  3479                           
  3480  0072                     SD_Check40bitResponse@Byte3:	
  3481                           ; 1 bytes @ 0x2
  3482                           
  3483  0072                     SPI_Write@Data_8bit:	
  3484                           ; 1 bytes @ 0x2
  3485                           
  3486  0072                     fourCCeq@b:	
  3487                           ; 1 bytes @ 0x2
  3488                           
  3489  0072                     readBytes@len:	
  3490                           ; 2 bytes @ 0x2
  3491                           
  3492  0072                     timer_Init@rate:	
  3493                           ; 2 bytes @ 0x2
  3494                           
  3495                           
  3496                           ; 4 bytes @ 0x2
  3497  0072                     	ds	1
  3498  0073                     ?_SD_SendCommand:	
  3499  0073                     SD_SendCommand@ARG3:	
  3500                           ; 1 bytes @ 0x3
  3501                           
  3502  0073                     SD_Read8bitResponse@readMessage:	
  3503                           ; 1 bytes @ 0x3
  3504                           
  3505  0073                     SD_Check8bitResponse@match:	
  3506                           ; 1 bytes @ 0x3
  3507                           
  3508  0073                     SD_Read40bitResponse@readMessage:	
  3509                           ; 1 bytes @ 0x3
  3510                           
  3511  0073                     SD_Check40bitResponse@Byte2:	
  3512                           ; 1 bytes @ 0x3
  3513                           
  3514  0073                     error@e:	
  3515                           ; 1 bytes @ 0x3
  3516                           
  3517                           
  3518                           ; 1 bytes @ 0x3
  3519  0073                     	ds	1
  3520  0074                     ??_fourCCeq:	
  3521  0074                     ??_readBytes:	
  3522                           ; 1 bytes @ 0x4
  3523                           
  3524  0074                     SD_SendCommand@ARG2:	
  3525                           ; 1 bytes @ 0x4
  3526                           
  3527  0074                     SD_Check40bitResponse@Byte1:	
  3528                           ; 1 bytes @ 0x4
  3529                           
  3530                           
  3531                           ; 1 bytes @ 0x4
  3532  0074                     	ds	1
  3533  0075                     SD_SendCommand@ARG1:	
  3534  0075                     SD_Check40bitResponse@Byte0:	
  3535                           ; 1 bytes @ 0x5
  3536                           
  3537                           
  3538                           ; 1 bytes @ 0x5
  3539  0075                     	ds	1
  3540  0076                     ??_SD_Check40bitResponse:	
  3541  0076                     ??_timer_Init:	
  3542                           ; 1 bytes @ 0x6
  3543                           
  3544  0076                     SD_SendCommand@ARG0:	
  3545                           ; 1 bytes @ 0x6
  3546                           
  3547  0076                     SD_Check40bitResponse@Byte4:	
  3548                           ; 1 bytes @ 0x6
  3549                           
  3550  0076                     readBytes@dest:	
  3551                           ; 1 bytes @ 0x6
  3552                           
  3553                           
  3554                           ; 1 bytes @ 0x6
  3555  0076                     	ds	1
  3556  0077                     ??_SD_SendCommand:	
  3557  0077                     SD_Check40bitResponse@match:	
  3558                           ; 1 bytes @ 0x7
  3559                           
  3560  0077                     readBytes@i:	
  3561                           ; 1 bytes @ 0x7
  3562                           
  3563                           
  3564                           ; 2 bytes @ 0x7
  3565  0077                     	ds	1
  3566  0078                     ??_SD_Init:	
  3567  0078                     fourCCeq@a:	
  3568                           ; 1 bytes @ 0x8
  3569                           
  3570                           
  3571                           ; 1 bytes @ 0x8
  3572  0078                     	ds	1
  3573  0079                     ??_init:	
  3574  0079                     fourCCeq@i:	
  3575                           ; 1 bytes @ 0x9
  3576                           
  3577                           
  3578                           ; 1 bytes @ 0x9
  3579  0079                     	ds	1
  3580                           
  3581                           	psect	cstackBANK0
  3582  0020                     __pcstackBANK0:	
  3583  0020                     SD_SendCommand@CMD_6bit:	
  3584                           
  3585                           ; 1 bytes @ 0x0
  3586  0020                     	ds	1
  3587  0021                     SD_SendCommand@ByteToSend:	
  3588                           
  3589                           ; 1 bytes @ 0x1
  3590  0021                     	ds	1
  3591  0022                     SD_SendCommand@Checksum:	
  3592                           
  3593                           ; 1 bytes @ 0x2
  3594  0022                     	ds	1
  3595  0023                     ?_SD_OpenStream:	
  3596  0023                     SD_OpenStream@address:	
  3597                           ; 1 bytes @ 0x3
  3598                           
  3599                           
  3600                           ; 4 bytes @ 0x3
  3601  0023                     	ds	4
  3602  0027                     ??_SD_OpenStream:	
  3603                           
  3604                           ; 1 bytes @ 0x7
  3605  0027                     	ds	4
  3606  002B                     SD_OpenStream@a:	
  3607                           
  3608                           ; 4 bytes @ 0xB
  3609  002B                     	ds	4
  3610  002F                     ?_openFile:	
  3611  002F                     openFile@a:	
  3612                           ; 1 bytes @ 0xF
  3613                           
  3614                           
  3615                           ; 4 bytes @ 0xF
  3616  002F                     	ds	4
  3617  0033                     ??_openFile:	
  3618                           
  3619                           ; 1 bytes @ 0x13
  3620  0033                     	ds	1
  3621  0034                     openFile@riff:	
  3622                           
  3623                           ; 8 bytes @ 0x14
  3624  0034                     	ds	8
  3625  003C                     openFile@response:	
  3626                           
  3627                           ; 1 bytes @ 0x1C
  3628  003C                     	ds	1
  3629  003D                     openFile@data:	
  3630                           
  3631                           ; 8 bytes @ 0x1D
  3632  003D                     	ds	8
  3633  0045                     openFile@fmt:	
  3634                           
  3635                           ; 28 bytes @ 0x25
  3636  0045                     	ds	28
  3637                           
  3638                           	psect	maintext
  3639  0209                     __pmaintext:	
  3640 ;;
  3641 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  3642 ;;
  3643 ;; *************** function _main *****************
  3644 ;; Defined at:
  3645 ;;		line 137 in file "main.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;		None
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : B1F/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3661 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3662 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3663 ;;Total ram usage:        4 bytes
  3664 ;; Hardware stack levels required when called:    5
  3665 ;; This function calls:
  3666 ;;		_SPI_Read
  3667 ;;		_init
  3668 ;;		_openFile
  3669 ;;		_timer_Init
  3670 ;; This function is called by:
  3671 ;;		Startup code after reset
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           
  3676                           ;psect for function _main
  3677  0209                     _main:	
  3678                           
  3679                           ;main.c: 138:     init();
  3680                           
  3681                           ;incstack = 0
  3682                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3683  0209  3185  252C  3182   	fcall	_init
  3684  020C                     l2195:	
  3685                           
  3686                           ;main.c: 142:         address = 0;
  3687  020C  3000               	movlw	0
  3688  020D  0021               	movlb	1	; select bank1
  3689  020E  00C3               	movwf	(_address+3)^(0+128)
  3690  020F  3000               	movlw	0
  3691  0210  00C2               	movwf	(_address+2)^(0+128)
  3692  0211  3000               	movlw	0
  3693  0212  00C1               	movwf	(_address+1)^(0+128)
  3694  0213  3000               	movlw	0
  3695  0214  00C0               	movwf	_address^(0+128)
  3696                           
  3697                           ;main.c: 144:         openFile(address);
  3698  0215  0843               	movf	(_address+3)^(0+128),w
  3699  0216  0020               	movlb	0	; select bank0
  3700  0217  00B2               	movwf	openFile@a+3
  3701  0218  0021               	movlb	1	; select bank1
  3702  0219  0842               	movf	(_address+2)^(0+128),w
  3703  021A  0020               	movlb	0	; select bank0
  3704  021B  00B1               	movwf	openFile@a+2
  3705  021C  0021               	movlb	1	; select bank1
  3706  021D  0841               	movf	(_address+1)^(0+128),w
  3707  021E  0020               	movlb	0	; select bank0
  3708  021F  00B0               	movwf	openFile@a+1
  3709  0220  0021               	movlb	1	; select bank1
  3710  0221  0840               	movf	_address^(0+128),w
  3711  0222  0020               	movlb	0	; select bank0
  3712  0223  00AF               	movwf	openFile@a
  3713  0224  3181  2161  3182   	fcall	_openFile
  3714                           
  3715                           ;main.c: 145:         if(channels != 2) samplePending = 0;
  3716  0227  3002               	movlw	2
  3717  0228  0020               	movlb	0	; select bank0
  3718  0229  0667               	xorwf	_channels,w
  3719  022A  0468               	iorwf	_channels+1,w
  3720  022B  1D03               	btfss	3,2
  3721  022C  01E9               	clrf	_samplePending
  3722                           
  3723                           ;main.c: 146:         timer_Init(sampRate);
  3724  022D  0021               	movlb	1	; select bank1
  3725  022E  084B               	movf	(_sampRate+3)^(0+128),w
  3726  022F  00F5               	movwf	timer_Init@rate+3
  3727  0230  084A               	movf	(_sampRate+2)^(0+128),w
  3728  0231  00F4               	movwf	timer_Init@rate+2
  3729  0232  0849               	movf	(_sampRate+1)^(0+128),w
  3730  0233  00F3               	movwf	timer_Init@rate+1
  3731  0234  0848               	movf	_sampRate^(0+128),w
  3732  0235  00F2               	movwf	timer_Init@rate
  3733  0236  3183  23D6  3182   	fcall	_timer_Init
  3734  0239                     l2237:	
  3735                           ;main.c: 148:         while(state == OPEN) {
  3736                           
  3737                           
  3738                           ;main.c: 148:         while(state == OPEN) {
  3739  0239  087A               	movf	_state,w
  3740  023A  1D03               	btfss	3,2
  3741  023B  2A0C               	goto	l2195
  3742                           
  3743                           ;main.c: 174:             if (state == OPEN) {
  3744  023C  087A               	movf	_state,w
  3745  023D  1D03               	btfss	3,2
  3746  023E  2A39               	goto	l2237
  3747                           
  3748                           ;main.c: 175:                 if (blockIndex >= 512) {
  3749  023F  0020               	movlb	0	; select bank0
  3750  0240  0862               	movf	_blockIndex+1,w
  3751  0241  3A80               	xorlw	128
  3752  0242  0021               	movlb	1	; select bank1
  3753  0243  00D3               	movwf	??_main^(0+128)
  3754  0244  3082               	movlw	130
  3755  0245  0253               	subwf	??_main^(0+128),w
  3756  0246  1D03               	skipz
  3757  0247  2A4B               	goto	u915
  3758  0248  3000               	movlw	0
  3759  0249  0020               	movlb	0	; select bank0
  3760  024A  0261               	subwf	_blockIndex,w
  3761  024B                     u915:	
  3762  024B  1C03               	skipc
  3763  024C  2A5D               	goto	l278
  3764                           
  3765                           ;main.c: 178:                     blockIndex = 0;
  3766  024D  0020               	movlb	0	; select bank0
  3767  024E  01E1               	clrf	_blockIndex
  3768  024F  01E2               	clrf	_blockIndex+1
  3769                           
  3770                           ;main.c: 179:                     SPI_Read();
  3771  0250  3185  2575  3182   	fcall	_SPI_Read
  3772                           
  3773                           ;main.c: 180:                     SPI_Read();
  3774  0253  3185  2575  3182   	fcall	_SPI_Read
  3775                           
  3776                           ;main.c: 181:                     SPI_Read();
  3777  0256  3185  2575  3182   	fcall	_SPI_Read
  3778                           
  3779                           ;main.c: 182:                     SPI_Read();
  3780  0259  3185  2575  3182   	fcall	_SPI_Read
  3781                           
  3782                           ;main.c: 185:                 } else {
  3783  025C  2A39               	goto	l2237
  3784  025D                     l278:	
  3785                           
  3786                           ;main.c: 186:                     PIE1bits.TMR2IE = 0;
  3787  025D  0021               	movlb	1	; select bank1
  3788  025E  1091               	bcf	17,1	;volatile
  3789                           
  3790                           ;main.c: 187:                     if (buffer_write_index != buffer_read_index) {
  3791  025F  0020               	movlb	0	; select bank0
  3792  0260  0864               	movf	_buffer_read_index+1,w
  3793  0261  066C               	xorwf	_buffer_write_index+1,w
  3794  0262  1D03               	skipz
  3795  0263  2A66               	goto	u925
  3796  0264  0863               	movf	_buffer_read_index,w
  3797  0265  066B               	xorwf	_buffer_write_index,w
  3798  0266                     u925:	
  3799  0266  1903               	skipnz
  3800  0267  2AA8               	goto	l280
  3801                           
  3802                           ;main.c: 188:                         PIE1bits.TMR2IE = 1;
  3803  0268  0021               	movlb	1	; select bank1
  3804  0269  1491               	bsf	17,1	;volatile
  3805                           
  3806                           ;main.c: 212:                         PORTCbits.RC1 = 1;
  3807  026A  0020               	movlb	0	; select bank0
  3808  026B  148E               	bsf	14,1	;volatile
  3809                           
  3810                           ;main.c: 213:                         sdata[0] = SPI_Read();
  3811  026C  3185  2575  3182   	fcall	_SPI_Read
  3812  026F  0021               	movlb	1	; select bank1
  3813  0270  00D3               	movwf	??_main^(0+128)
  3814  0271  0853               	movf	??_main^(0+128),w
  3815  0272  0020               	movlb	0	; select bank0
  3816  0273  00E5               	movwf	_sdata
  3817                           
  3818                           ;main.c: 214:                         sdata[1] = SPI_Read();
  3819  0274  3185  2575  3182   	fcall	_SPI_Read
  3820  0277  0021               	movlb	1	; select bank1
  3821  0278  00D3               	movwf	??_main^(0+128)
  3822  0279  0853               	movf	??_main^(0+128),w
  3823  027A  0020               	movlb	0	; select bank0
  3824  027B  00E6               	movwf	_sdata+1
  3825                           
  3826                           ;main.c: 216:                         buffer[ buffer_write_index++ ] = *((short*)sdata)-
      +                           0x8000;
  3827  027C  3065               	movlw	low (_sdata| 0)
  3828  027D  0086               	movwf	6
  3829  027E  0187               	clrf	7
  3830  027F  3F40               	moviw [0]fsr1
  3831  0280  0021               	movlb	1	; select bank1
  3832  0281  00D3               	movwf	??_main^(0+128)
  3833  0282  3F41               	moviw [1]fsr1
  3834  0283  00D4               	movwf	(??_main^(0+128)+1)
  3835  0284  0853               	movf	??_main^(0+128),w
  3836  0285  3E00               	addlw	0
  3837  0286  00D5               	movwf	(??_main+2)^(0+128)
  3838  0287  3080               	movlw	128
  3839  0288  3D54               	addwfc	(??_main+1)^(0+128),w
  3840  0289  00D6               	movwf	(??_main+3)^(0+128)
  3841  028A  0020               	movlb	0	; select bank0
  3842  028B  356B               	lslf	_buffer_write_index,w
  3843  028C  3EA0               	addlw	(low (_buffer| 0))& (0+255)
  3844  028D  0086               	movwf	6
  3845  028E  0187               	clrf	7
  3846  028F  0021               	movlb	1	; select bank1
  3847  0290  0855               	movf	(??_main+2)^(0+128),w
  3848  0291  3FC0               	movwi [0]fsr1
  3849  0292  0856               	movf	(??_main+3)^(0+128),w
  3850  0293  3FC1               	movwi [1]fsr1
  3851  0294  3001               	movlw	1
  3852  0295  0020               	movlb	0	; select bank0
  3853  0296  07EB               	addwf	_buffer_write_index,f
  3854  0297  3000               	movlw	0
  3855  0298  3DEC               	addwfc	_buffer_write_index+1,f
  3856                           
  3857                           ;main.c: 217:                         PORTCbits.RC1 = 0;
  3858  0299  108E               	bcf	14,1	;volatile
  3859                           
  3860                           ;main.c: 221:                         if (buffer_write_index >= 16) buffer_write_index =
      +                           0;
  3861  029A  3000               	movlw	0
  3862  029B  026C               	subwf	_buffer_write_index+1,w
  3863  029C  3010               	movlw	16
  3864  029D  1903               	skipnz
  3865  029E  026B               	subwf	_buffer_write_index,w
  3866  029F  1C03               	skipc
  3867  02A0  2AA3               	goto	l2235
  3868  02A1  01EB               	clrf	_buffer_write_index
  3869  02A2  01EC               	clrf	_buffer_write_index+1
  3870  02A3                     l2235:	
  3871                           
  3872                           ;main.c: 222:                         blockIndex += 2;
  3873  02A3  3002               	movlw	2
  3874  02A4  07E1               	addwf	_blockIndex,f
  3875  02A5  3000               	movlw	0
  3876  02A6  3DE2               	addwfc	_blockIndex+1,f
  3877                           
  3878                           ;main.c: 224:                     } else PIE1bits.TMR2IE = 1;
  3879  02A7  2A39               	goto	l2237
  3880  02A8                     l280:	
  3881  02A8  0021               	movlb	1	; select bank1
  3882  02A9  1491               	bsf	17,1	;volatile
  3883  02AA  2A39               	goto	l2237
  3884  02AB                     __end_of_main:	
  3885                           
  3886                           	psect	text1
  3887  03D6                     __ptext1:	
  3888 ;; *************** function _timer_Init *****************
  3889 ;; Defined at:
  3890 ;;		line 8 in file "timer.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  rate            4    2[COMMON] long 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;		None
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  2    2[COMMON] int 
  3897 ;; Registers used:
  3898 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3904 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3907 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3908 ;;Total ram usage:        4 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; Hardware stack levels required when called:    1
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_main
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           
  3919                           ;psect for function _timer_Init
  3920  03D6                     _timer_Init:	
  3921                           
  3922                           ;timer.c: 9:     PIR1bits.TMR2IF = 0;
  3923                           
  3924                           ;incstack = 0
  3925                           ; Regs used in _timer_Init: [wreg-fsr0h+status,2+status,0]
  3926  03D6  0020               	movlb	0	; select bank0
  3927  03D7  1091               	bcf	17,1	;volatile
  3928                           
  3929                           ;timer.c: 10:     PIE1bits.TMR2IE = 1;
  3930  03D8  0021               	movlb	1	; select bank1
  3931  03D9  1491               	bsf	17,1	;volatile
  3932                           
  3933                           ;timer.c: 11:     INTCONbits.PEIE = 1;
  3934  03DA  170B               	bsf	11,6	;volatile
  3935                           
  3936                           ;timer.c: 12:     INTCONbits.GIE = 1;
  3937  03DB  178B               	bsf	11,7	;volatile
  3938                           
  3939                           ;timer.c: 14:     switch (rate) {
  3940  03DC  2C07               	goto	l1699
  3941  03DD                     l1671:	
  3942                           
  3943                           ;timer.c: 16:             T2PR = 100;
  3944  03DD  3064               	movlw	100
  3945  03DE  0029               	movlb	9	; select bank9
  3946  03DF  0094               	movwf	20	;volatile
  3947                           
  3948                           ;timer.c: 17:             T2CLKCON = 0x03;
  3949  03E0  3003               	movlw	3
  3950  03E1  0097               	movwf	23	;volatile
  3951                           
  3952                           ;timer.c: 18:             T2CON = 0x89;
  3953  03E2  3089               	movlw	137
  3954  03E3  0095               	movwf	21	;volatile
  3955                           
  3956                           ;timer.c: 19:             PIR1bits.TMR2IF = 0;
  3957  03E4  0020               	movlb	0	; select bank0
  3958  03E5  1091               	bcf	17,1	;volatile
  3959  03E6  0008               	return
  3960  03E7                     l1679:	
  3961                           
  3962                           ;timer.c: 23:             T2PR = 32;
  3963  03E7  3020               	movlw	32
  3964  03E8  0029               	movlb	9	; select bank9
  3965  03E9  0094               	movwf	20	;volatile
  3966                           
  3967                           ;timer.c: 24:             T2CLKCON = 0x03;
  3968  03EA  3003               	movlw	3
  3969  03EB  0097               	movwf	23	;volatile
  3970                           
  3971                           ;timer.c: 25:             T2CON = 0x8A;
  3972  03EC  308A               	movlw	138
  3973  03ED  0095               	movwf	21	;volatile
  3974  03EE  0008               	return
  3975  03EF                     l1685:	
  3976                           
  3977                           ;timer.c: 29:             T2PR = 111;
  3978  03EF  306F               	movlw	111
  3979  03F0  0029               	movlb	9	; select bank9
  3980  03F1  0094               	movwf	20	;volatile
  3981                           
  3982                           ;timer.c: 30:             T2CLKCON = 0x03;
  3983  03F2  3003               	movlw	3
  3984  03F3  0097               	movwf	23	;volatile
  3985                           
  3986                           ;timer.c: 31:             T2CON = 0x82;
  3987  03F4  3082               	movlw	130
  3988  03F5  0095               	movwf	21	;volatile
  3989  03F6  0008               	return
  3990  03F7                     l1691:	
  3991                           
  3992                           ;timer.c: 35:             T2PR = 100;
  3993  03F7  3064               	movlw	100
  3994  03F8  0029               	movlb	9	; select bank9
  3995  03F9  0094               	movwf	20	;volatile
  3996                           
  3997                           ;timer.c: 36:             T2CLKCON = 0x03;
  3998  03FA  3003               	movlw	3
  3999  03FB  0097               	movwf	23	;volatile
  4000                           
  4001                           ;timer.c: 37:             T2CON = 0x84;
  4002  03FC  3084               	movlw	132
  4003  03FD  0095               	movwf	21	;volatile
  4004                           
  4005                           ;timer.c: 38:         break;
  4006  03FE  0008               	return
  4007  03FF                     l1693:	
  4008                           
  4009                           ;timer.c: 40:             T2PR = 65;
  4010  03FF  3041               	movlw	65
  4011  0400  0029               	movlb	9	; select bank9
  4012  0401  0094               	movwf	20	;volatile
  4013                           
  4014                           ;timer.c: 41:             T2CLKCON = 0x03;
  4015  0402  3003               	movlw	3
  4016  0403  0097               	movwf	23	;volatile
  4017                           
  4018                           ;timer.c: 42:             T2CON = 0x8A;
  4019  0404  308A               	movlw	138
  4020  0405  0095               	movwf	21	;volatile
  4021  0406  0008               	return
  4022  0407                     l1699:	
  4023                           
  4024                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4025                           ; Switch size 1, requested type "simple"
  4026                           ; Number of cases is 1, Range of values is 0 to 0
  4027                           ; switch strategies available:
  4028                           ; Name         Instructions Cycles
  4029                           ; simple_byte            4     3 (average)
  4030                           ; direct_byte            8     6 (fixed)
  4031                           ; jumptable            260     6 (fixed)
  4032                           ;	Chosen strategy is simple_byte
  4033  0407  0875               	movf	timer_Init@rate+3,w
  4034  0408  3A00               	xorlw	0	; case 0
  4035  0409  1903               	skipnz
  4036  040A  2C36               	goto	l2381
  4037  040B  2C3B               	goto	l138
  4038  040C                     l2379:	
  4039                           
  4040                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
  4041                           ; Switch size 1, requested type "simple"
  4042                           ; Number of cases is 5, Range of values is 62 to 187
  4043                           ; switch strategies available:
  4044                           ; Name         Instructions Cycles
  4045                           ; simple_byte           16     9 (average)
  4046                           ; direct_byte          261     9 (fixed)
  4047                           ; jumptable            263     9 (fixed)
  4048                           ;	Chosen strategy is simple_byte
  4049  040C  0873               	movf	timer_Init@rate+1,w
  4050  040D  3A3E               	xorlw	62	; case 62
  4051  040E  1903               	skipnz
  4052  040F  2C1D               	goto	l2383
  4053  0410  3A68               	xorlw	104	; case 86
  4054  0411  1903               	skipnz
  4055  0412  2C22               	goto	l2385
  4056  0413  3A2B               	xorlw	43	; case 125
  4057  0414  1903               	skipnz
  4058  0415  2C27               	goto	l2387
  4059  0416  3AD1               	xorlw	209	; case 172
  4060  0417  1903               	skipnz
  4061  0418  2C2C               	goto	l2389
  4062  0419  3A17               	xorlw	23	; case 187
  4063  041A  1903               	skipnz
  4064  041B  2C31               	goto	l2391
  4065  041C  2C3B               	goto	l138
  4066  041D                     l2383:	
  4067                           
  4068                           ; Switch size 1, requested type "simple"
  4069                           ; Number of cases is 1, Range of values is 128 to 128
  4070                           ; switch strategies available:
  4071                           ; Name         Instructions Cycles
  4072                           ; simple_byte            4     3 (average)
  4073                           ; direct_byte           11     9 (fixed)
  4074                           ; jumptable            263     9 (fixed)
  4075                           ;	Chosen strategy is simple_byte
  4076  041D  0872               	movf	timer_Init@rate,w
  4077  041E  3A80               	xorlw	128	; case 128
  4078  041F  1903               	skipnz
  4079  0420  2BDD               	goto	l1671
  4080  0421  2C3B               	goto	l138
  4081  0422                     l2385:	
  4082                           
  4083                           ; Switch size 1, requested type "simple"
  4084                           ; Number of cases is 1, Range of values is 34 to 34
  4085                           ; switch strategies available:
  4086                           ; Name         Instructions Cycles
  4087                           ; simple_byte            4     3 (average)
  4088                           ; direct_byte           11     9 (fixed)
  4089                           ; jumptable            263     9 (fixed)
  4090                           ;	Chosen strategy is simple_byte
  4091  0422  0872               	movf	timer_Init@rate,w
  4092  0423  3A22               	xorlw	34	; case 34
  4093  0424  1903               	skipnz
  4094  0425  2BFF               	goto	l1693
  4095  0426  2C3B               	goto	l138
  4096  0427                     l2387:	
  4097                           
  4098                           ; Switch size 1, requested type "simple"
  4099                           ; Number of cases is 1, Range of values is 0 to 0
  4100                           ; switch strategies available:
  4101                           ; Name         Instructions Cycles
  4102                           ; simple_byte            4     3 (average)
  4103                           ; direct_byte            8     6 (fixed)
  4104                           ; jumptable            260     6 (fixed)
  4105                           ;	Chosen strategy is simple_byte
  4106  0427  0872               	movf	timer_Init@rate,w
  4107  0428  3A00               	xorlw	0	; case 0
  4108  0429  1903               	skipnz
  4109  042A  2BF7               	goto	l1691
  4110  042B  2C3B               	goto	l138
  4111  042C                     l2389:	
  4112                           
  4113                           ; Switch size 1, requested type "simple"
  4114                           ; Number of cases is 1, Range of values is 68 to 68
  4115                           ; switch strategies available:
  4116                           ; Name         Instructions Cycles
  4117                           ; simple_byte            4     3 (average)
  4118                           ; direct_byte           11     9 (fixed)
  4119                           ; jumptable            263     9 (fixed)
  4120                           ;	Chosen strategy is simple_byte
  4121  042C  0872               	movf	timer_Init@rate,w
  4122  042D  3A44               	xorlw	68	; case 68
  4123  042E  1903               	skipnz
  4124  042F  2BE7               	goto	l1679
  4125  0430  2C3B               	goto	l138
  4126  0431                     l2391:	
  4127                           
  4128                           ; Switch size 1, requested type "simple"
  4129                           ; Number of cases is 1, Range of values is 128 to 128
  4130                           ; switch strategies available:
  4131                           ; Name         Instructions Cycles
  4132                           ; simple_byte            4     3 (average)
  4133                           ; direct_byte           11     9 (fixed)
  4134                           ; jumptable            263     9 (fixed)
  4135                           ;	Chosen strategy is simple_byte
  4136  0431  0872               	movf	timer_Init@rate,w
  4137  0432  3A80               	xorlw	128	; case 128
  4138  0433  1903               	skipnz
  4139  0434  2BEF               	goto	l1685
  4140  0435  2C3B               	goto	l138
  4141  0436                     l2381:	
  4142                           
  4143                           ; Switch size 1, requested type "simple"
  4144                           ; Number of cases is 1, Range of values is 0 to 0
  4145                           ; switch strategies available:
  4146                           ; Name         Instructions Cycles
  4147                           ; simple_byte            4     3 (average)
  4148                           ; direct_byte            8     6 (fixed)
  4149                           ; jumptable            260     6 (fixed)
  4150                           ;	Chosen strategy is simple_byte
  4151  0436  0874               	movf	timer_Init@rate+2,w
  4152  0437  3A00               	xorlw	0	; case 0
  4153  0438  1903               	skipnz
  4154  0439  2C0C               	goto	l2379
  4155  043A  2C3B               	goto	l138
  4156  043B                     l138:	
  4157  043B  0008               	return
  4158  043C                     __end_of_timer_Init:	
  4159                           
  4160                           	psect	text2
  4161  0161                     __ptext2:	
  4162 ;; *************** function _openFile *****************
  4163 ;; Defined at:
  4164 ;;		line 69 in file "main.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  a               4   15[BANK0 ] long 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;  data            8   29[BANK0 ] struct .
  4169 ;;  fmt            28   37[BANK0 ] struct .
  4170 ;;  riff            8   20[BANK0 ] struct .
  4171 ;;  response        1   28[BANK0 ] unsigned char 
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  1    wreg      void 
  4174 ;; Registers used:
  4175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4181 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4182 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4183 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4184 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4185 ;;Total ram usage:       50 bytes
  4186 ;; Hardware stack levels used:    1
  4187 ;; Hardware stack levels required when called:    4
  4188 ;; This function calls:
  4189 ;;		_SD_OpenStream
  4190 ;;		_SPI_Read
  4191 ;;		_error
  4192 ;;		_fourCCeq
  4193 ;;		_readBytes
  4194 ;; This function is called by:
  4195 ;;		_main
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           
  4200                           ;psect for function _openFile
  4201  0161                     _openFile:	
  4202                           
  4203                           ;main.c: 70:     SD_OpenStream(a);
  4204                           
  4205                           ;incstack = 0
  4206                           ; Regs used in _openFile: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4207  0161  0020               	movlb	0	; select bank0
  4208  0162  0832               	movf	openFile@a+3,w
  4209  0163  00A6               	movwf	SD_OpenStream@address+3
  4210  0164  0831               	movf	openFile@a+2,w
  4211  0165  00A5               	movwf	SD_OpenStream@address+2
  4212  0166  0830               	movf	openFile@a+1,w
  4213  0167  00A4               	movwf	SD_OpenStream@address+1
  4214  0168  082F               	movf	openFile@a,w
  4215  0169  00A3               	movwf	SD_OpenStream@address
  4216  016A  3184  24D1  3181   	fcall	_SD_OpenStream
  4217                           
  4218                           ;main.c: 71:     state = OPEN;
  4219  016D  01FA               	clrf	_state
  4220                           
  4221                           ;main.c: 72:     char response = 0xFF;
  4222  016E  30FF               	movlw	255
  4223  016F                     L1:	
  4224  016F  0020               	movlb	0	; select bank0
  4225  0170  00B3               	movwf	??_openFile
  4226  0171  0833               	movf	??_openFile,w
  4227  0172  00BC               	movwf	openFile@response
  4228  0173  0A3C               	incf	openFile@response,w
  4229  0174  1D03               	btfss	3,2
  4230  0175  297A               	goto	l2123
  4231                           
  4232                           ;main.c: 73:     while (response == 0xFF) response = SPI_Read();
  4233  0176  3185  2575  3181   	fcall	_SPI_Read
  4234  0179  296F               	goto	L1
  4235  017A                     l2123:	
  4236                           
  4237                           ;main.c: 74:     if (response != 0xFE) error(OPEN_BLOCK);
  4238  017A  30FE               	movlw	254
  4239  017B  063C               	xorwf	openFile@response,w
  4240  017C  1903               	btfsc	3,2
  4241  017D  2982               	goto	l2127
  4242  017E  3000               	movlw	0
  4243  017F  3185  2566  3181   	fcall	_error
  4244  0182                     l2127:	
  4245                           
  4246                           ;main.c: 76:     {;main.c: 77:         RiffTag riff;;main.c: 78:         readBytes((char
      +                          *)&riff, sizeof(riff));;
  4247  0182  3008               	movlw	8
  4248  0183  00F2               	movwf	readBytes@len
  4249  0184  3000               	movlw	0
  4250  0185  00F3               	movwf	readBytes@len+1
  4251  0186  3034               	movlw	(low (openFile@riff| 0))& (0+255)
  4252  0187  3184  243C  3181   	fcall	_readBytes
  4253                           
  4254                           ;main.c: 79:         if (!fourCCeq(riff.ckID, "RIFF")) error(RIFF_HEADER);
  4255  018A  3099               	movlw	low (STR_1| (0+32768))
  4256  018B  00F2               	movwf	fourCCeq@b
  4257  018C  3085               	movlw	high (STR_1| (0+32768))
  4258  018D  00F3               	movwf	fourCCeq@b+1
  4259  018E  3034               	movlw	(low (openFile@riff| 0))& (0+255)
  4260  018F  3184  24AC  3181   	fcall	_fourCCeq
  4261  0192  3A00               	xorlw	0
  4262  0193  1D03               	skipz
  4263  0194  2999               	goto	l2133
  4264  0195  3001               	movlw	1
  4265  0196  3185  2566  3181   	fcall	_error
  4266  0199                     l2133:	
  4267                           
  4268                           ;main.c: 80:     }{;main.c: 81:         FmtChunk fmt;;main.c: 82:         readBytes((cha
      +                          r*)&fmt, sizeof(fmt));;
  4269  0199  301C               	movlw	28
  4270  019A  00F2               	movwf	readBytes@len
  4271  019B  3000               	movlw	0
  4272  019C  00F3               	movwf	readBytes@len+1
  4273  019D  3045               	movlw	(low (openFile@fmt| 0))& (0+255)
  4274  019E  3184  243C  3181   	fcall	_readBytes
  4275                           
  4276                           ;main.c: 83:         if (!fourCCeq(fmt.WAVEID, "WAVE")) error(WAVE_HEADER);
  4277  01A1  3094               	movlw	low (STR_3| (0+32768))
  4278  01A2  00F2               	movwf	fourCCeq@b
  4279  01A3  3085               	movlw	high (STR_3| (0+32768))
  4280  01A4  00F3               	movwf	fourCCeq@b+1
  4281  01A5  3045               	movlw	(low (openFile@fmt| 0))& (0+255)
  4282  01A6  3184  24AC  3181   	fcall	_fourCCeq
  4283  01A9  3A00               	xorlw	0
  4284  01AA  1D03               	skipz
  4285  01AB  29B0               	goto	l2139
  4286  01AC  3002               	movlw	2
  4287  01AD  3185  2566  3181   	fcall	_error
  4288  01B0                     l2139:	
  4289                           
  4290                           ;main.c: 84:         if (!fourCCeq(fmt.fmtHeader.ckID, "fmt ")) error(FMT_HEADER);
  4291  01B0  305C               	movlw	low (STR_5| (0+32768))
  4292  01B1  00F2               	movwf	fourCCeq@b
  4293  01B2  3081               	movlw	high (STR_5| (0+32768))
  4294  01B3  00F3               	movwf	fourCCeq@b+1
  4295  01B4  3049               	movlw	(low ((openFile@fmt| 0+4)))& (0+255)
  4296  01B5  3184  24AC  3181   	fcall	_fourCCeq
  4297  01B8  3A00               	xorlw	0
  4298  01B9  1D03               	skipz
  4299  01BA  29BF               	goto	l2143
  4300  01BB  3003               	movlw	3
  4301  01BC  3185  2566  3181   	fcall	_error
  4302  01BF                     l2143:	
  4303                           
  4304                           ;main.c: 85:         if (fmt.formatTag != 0x0001) error(CODEC);
  4305  01BF  0020               	movlb	0	; select bank0
  4306  01C0  0351               	decf	openFile@fmt+12,w
  4307  01C1  0452               	iorwf	openFile@fmt+13,w
  4308  01C2  1903               	btfsc	3,2
  4309  01C3  29C8               	goto	l2147
  4310  01C4  3004               	movlw	4
  4311  01C5  3185  2566  3181   	fcall	_error
  4312  01C8                     l2147:	
  4313                           
  4314                           ;main.c: 86:         if (fmt.bitsPerSamp != 16) error(BIT_DEPTH);
  4315  01C8  3010               	movlw	16
  4316  01C9  0020               	movlb	0	; select bank0
  4317  01CA  065F               	xorwf	openFile@fmt+26,w
  4318  01CB  0460               	iorwf	openFile@fmt+27,w
  4319  01CC  1903               	btfsc	3,2
  4320  01CD  29D2               	goto	l2151
  4321  01CE  3005               	movlw	5
  4322  01CF  3185  2566  3181   	fcall	_error
  4323  01D2                     l2151:	
  4324                           
  4325                           ;main.c: 88:         channels = fmt.channels;
  4326  01D2  0020               	movlb	0	; select bank0
  4327  01D3  0854               	movf	openFile@fmt+15,w
  4328  01D4  00E8               	movwf	_channels+1
  4329  01D5  0853               	movf	openFile@fmt+14,w
  4330  01D6  00E7               	movwf	_channels
  4331                           
  4332                           ;main.c: 89:         sampRate = fmt.sampRate;
  4333  01D7  3010               	movlw	16
  4334  01D8  3E45               	addlw	(low (openFile@fmt| 0))& (0+255)
  4335  01D9  0086               	movwf	6
  4336  01DA  0187               	clrf	7
  4337  01DB  3F40               	moviw [0]fsr1
  4338  01DC  0021               	movlb	1	; select bank1
  4339  01DD  00C8               	movwf	_sampRate^(0+128)
  4340  01DE  3F41               	moviw [1]fsr1
  4341  01DF  00C9               	movwf	(_sampRate+1)^(0+128)
  4342  01E0  3F42               	moviw [2]fsr1
  4343  01E1  00CA               	movwf	(_sampRate+2)^(0+128)
  4344  01E2  3F43               	moviw [3]fsr1
  4345  01E3  00CB               	movwf	(_sampRate+3)^(0+128)
  4346                           
  4347                           ;main.c: 91:     }{;main.c: 92:         RiffTag data;;main.c: 93:         readBytes((cha
      +                          r*)&data, sizeof(data));;
  4348  01E4  3008               	movlw	8
  4349  01E5  00F2               	movwf	readBytes@len
  4350  01E6  3000               	movlw	0
  4351  01E7  00F3               	movwf	readBytes@len+1
  4352  01E8  303D               	movlw	(low (openFile@data| 0))& (0+255)
  4353  01E9  3184  243C  3181   	fcall	_readBytes
  4354                           
  4355                           ;main.c: 94:         if (!fourCCeq(data.ckID, "data")) error(DATA_HEADER);
  4356  01EC  309E               	movlw	low (STR_7| (0+32768))
  4357  01ED  00F2               	movwf	fourCCeq@b
  4358  01EE  3085               	movlw	high (STR_7| (0+32768))
  4359  01EF  00F3               	movwf	fourCCeq@b+1
  4360  01F0  303D               	movlw	(low (openFile@data| 0))& (0+255)
  4361  01F1  3184  24AC  3181   	fcall	_fourCCeq
  4362  01F4  3A00               	xorlw	0
  4363  01F5  1D03               	skipz
  4364  01F6  29FA               	goto	l2161
  4365  01F7  3006               	movlw	6
  4366  01F8  3185  2566         	fcall	_error
  4367  01FA                     l2161:	
  4368                           
  4369                           ;main.c: 95:         filesize = data.ckSize;
  4370  01FA  3004               	movlw	4
  4371  01FB  3E3D               	addlw	(low (openFile@data| 0))& (0+255)
  4372  01FC  0086               	movwf	6
  4373  01FD  0187               	clrf	7
  4374  01FE  3F40               	moviw [0]fsr1
  4375  01FF  0021               	movlb	1	; select bank1
  4376  0200  00C4               	movwf	_filesize^(0+128)
  4377  0201  3F41               	moviw [1]fsr1
  4378  0202  00C5               	movwf	(_filesize+1)^(0+128)
  4379  0203  3F42               	moviw [2]fsr1
  4380  0204  00C6               	movwf	(_filesize+2)^(0+128)
  4381  0205  3F43               	moviw [3]fsr1
  4382  0206  00C7               	movwf	(_filesize+3)^(0+128)
  4383                           
  4384                           ;main.c: 96:     };main.c: 97:         __nop();
  4385  0207  0000               	nop
  4386  0208  0008               	return
  4387  0209                     __end_of_openFile:	
  4388                           
  4389                           	psect	text3
  4390  043C                     __ptext3:	
  4391 ;; *************** function _readBytes *****************
  4392 ;; Defined at:
  4393 ;;		line 55 in file "main.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;  dest            1    wreg     PTR unsigned char 
  4396 ;;		 -> openFile@data(8), openFile@fmt(28), openFile@riff(8), 
  4397 ;;  len             2    2[COMMON] int 
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;  dest            1    6[COMMON] PTR unsigned char 
  4400 ;;		 -> openFile@data(8), openFile@fmt(28), openFile@riff(8), 
  4401 ;;  i               2    7[COMMON] int 
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  1    wreg      void 
  4404 ;; Registers used:
  4405 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4412 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4413 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4414 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4415 ;;Total ram usage:        7 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; Hardware stack levels required when called:    3
  4418 ;; This function calls:
  4419 ;;		_SD_CloseBlock
  4420 ;;		_SPI_Read
  4421 ;; This function is called by:
  4422 ;;		_openFile
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           
  4427                           ;psect for function _readBytes
  4428  043C                     _readBytes:	
  4429                           
  4430                           ;incstack = 0
  4431                           ; Regs used in _readBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4432                           ;readBytes@dest stored from wreg
  4433  043C  00F6               	movwf	readBytes@dest
  4434                           
  4435                           ;main.c: 56:     for (int i=0; i<len; i++) {
  4436  043D  01F7               	clrf	readBytes@i
  4437  043E  01F8               	clrf	readBytes@i+1
  4438  043F                     l1665:	
  4439  043F  0878               	movf	readBytes@i+1,w
  4440  0440  3A80               	xorlw	128
  4441  0441  00F4               	movwf	??_readBytes
  4442  0442  0873               	movf	readBytes@len+1,w
  4443  0443  3A80               	xorlw	128
  4444  0444  0274               	subwf	??_readBytes,w
  4445  0445  1D03               	skipz
  4446  0446  2C49               	goto	u545
  4447  0447  0872               	movf	readBytes@len,w
  4448  0448  0277               	subwf	readBytes@i,w
  4449  0449                     u545:	
  4450  0449  1803               	btfsc	3,0
  4451  044A  0008               	return
  4452                           
  4453                           ;main.c: 57:         dest[i] = SPI_Read();
  4454  044B  3185  2575  3184   	fcall	_SPI_Read
  4455  044E  00F4               	movwf	??_readBytes
  4456  044F  0877               	movf	readBytes@i,w
  4457  0450  0776               	addwf	readBytes@dest,w
  4458  0451  00F5               	movwf	??_readBytes+1
  4459  0452  0875               	movf	??_readBytes+1,w
  4460  0453  0086               	movwf	6
  4461  0454  0187               	clrf	7
  4462  0455  0874               	movf	??_readBytes,w
  4463  0456  0081               	movwf	1
  4464                           
  4465                           ;main.c: 58:         ++blockIndex;
  4466  0457  3001               	movlw	1
  4467  0458  0020               	movlb	0	; select bank0
  4468  0459  07E1               	addwf	_blockIndex,f
  4469  045A  3000               	movlw	0
  4470  045B  3DE2               	addwfc	_blockIndex+1,f
  4471                           
  4472                           ;main.c: 59:         if (blockIndex >= 512) {
  4473  045C  0862               	movf	_blockIndex+1,w
  4474  045D  3A80               	xorlw	128
  4475  045E  00F4               	movwf	??_readBytes
  4476  045F  3082               	movlw	130
  4477  0460  0274               	subwf	??_readBytes,w
  4478  0461  1D03               	skipz
  4479  0462  2C65               	goto	u535
  4480  0463  3000               	movlw	0
  4481  0464  0261               	subwf	_blockIndex,w
  4482  0465                     u535:	
  4483  0465  1C03               	skipc
  4484  0466  2C7A               	goto	l1663
  4485                           
  4486                           ;main.c: 60:             SD_CloseBlock();
  4487  0467  3185  2554  3184   	fcall	_SD_CloseBlock
  4488                           
  4489                           ;main.c: 61:             ++address;
  4490  046A  3001               	movlw	1
  4491  046B  0021               	movlb	1	; select bank1
  4492  046C  07C0               	addwf	_address^(0+128),f
  4493  046D  3000               	movlw	0
  4494  046E  3DC1               	addwfc	(_address+1)^(0+128),f
  4495  046F  3000               	movlw	0
  4496  0470  3DC2               	addwfc	(_address+2)^(0+128),f
  4497  0471  3000               	movlw	0
  4498  0472  3DC3               	addwfc	(_address+3)^(0+128),f
  4499                           
  4500                           ;main.c: 62:             blockIndex = 0;
  4501  0473  0020               	movlb	0	; select bank0
  4502  0474  01E1               	clrf	_blockIndex
  4503  0475  01E2               	clrf	_blockIndex+1
  4504                           
  4505                           ;main.c: 63:             state = CLOSED;
  4506  0476  3003               	movlw	3
  4507  0477  00F4               	movwf	??_readBytes
  4508  0478  0874               	movf	??_readBytes,w
  4509  0479  00FA               	movwf	_state
  4510  047A                     l1663:	
  4511                           
  4512                           ;main.c: 65:     }
  4513  047A  3001               	movlw	1
  4514  047B  07F7               	addwf	readBytes@i,f
  4515  047C  3000               	movlw	0
  4516  047D  3DF8               	addwfc	readBytes@i+1,f
  4517  047E  2C3F               	goto	l1665
  4518  047F                     __end_of_readBytes:	
  4519                           
  4520                           	psect	text4
  4521  0554                     __ptext4:	
  4522 ;; *************** function _SD_CloseBlock *****************
  4523 ;; Defined at:
  4524 ;;		line 275 in file "SD.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;		None
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;		None
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  1    wreg      _Bool 
  4531 ;; Registers used:
  4532 ;;		wreg, status,2, status,0, pclath, cstack
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4542 ;;Total ram usage:        0 bytes
  4543 ;; Hardware stack levels used:    1
  4544 ;; Hardware stack levels required when called:    2
  4545 ;; This function calls:
  4546 ;;		_SPI_Read
  4547 ;; This function is called by:
  4548 ;;		_readBytes
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           
  4553                           ;psect for function _SD_CloseBlock
  4554  0554                     _SD_CloseBlock:	
  4555                           
  4556                           ;SD.c: 277:     SPI_Read();
  4557                           
  4558                           ;incstack = 0
  4559                           ; Regs used in _SD_CloseBlock: [wreg+status,2+status,0+pclath+cstack]
  4560  0554  3185  2575  3185   	fcall	_SPI_Read
  4561                           
  4562                           ;SD.c: 278:     SPI_Read();
  4563  0557  3185  2575  3185   	fcall	_SPI_Read
  4564                           
  4565                           ;SD.c: 280:     SPI_Read();
  4566  055A  3185  2575         	fcall	_SPI_Read
  4567  055C  0008               	return
  4568  055D                     __end_of_SD_CloseBlock:	
  4569                           
  4570                           	psect	text5
  4571  04AC                     __ptext5:	
  4572 ;; *************** function _fourCCeq *****************
  4573 ;; Defined at:
  4574 ;;		line 48 in file "main.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  a               1    wreg     PTR unsigned char 
  4577 ;;		 -> openFile@data(8), fmt.fmtHeader(8), openFile@fmt(28), openFile@riff(8), 
  4578 ;;  b               2    2[COMMON] PTR unsigned char 
  4579 ;;		 -> STR_8(5), STR_6(5), STR_4(5), STR_2(5), 
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;  a               1    8[COMMON] PTR unsigned char 
  4582 ;;		 -> openFile@data(8), fmt.fmtHeader(8), openFile@fmt(28), openFile@riff(8), 
  4583 ;;  i               1    9[COMMON] unsigned char 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      _Bool 
  4586 ;; Registers used:
  4587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4594 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4595 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4596 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4597 ;;Total ram usage:        8 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:    1
  4600 ;; This function calls:
  4601 ;;		Nothing
  4602 ;; This function is called by:
  4603 ;;		_openFile
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           
  4608                           ;psect for function _fourCCeq
  4609  04AC                     _fourCCeq:	
  4610                           
  4611                           ;incstack = 0
  4612                           ; Regs used in _fourCCeq: [wreg-fsr1h+status,2+status,0+pclath]
  4613                           ;fourCCeq@a stored from wreg
  4614  04AC  00F8               	movwf	fourCCeq@a
  4615                           
  4616                           ;main.c: 49:     for (char i=0; i<4; i++) {
  4617  04AD  01F9               	clrf	fourCCeq@i
  4618  04AE                     l1633:	
  4619                           
  4620                           ;main.c: 50:         if (a[i] != b[i]) return 0;
  4621  04AE  0873               	movf	fourCCeq@b+1,w
  4622  04AF  00F5               	movwf	??_fourCCeq+1
  4623  04B0  0872               	movf	fourCCeq@b,w
  4624  04B1  00F4               	movwf	??_fourCCeq
  4625  04B2  0879               	movf	fourCCeq@i,w
  4626  04B3  0774               	addwf	??_fourCCeq,w
  4627  04B4  0084               	movwf	4
  4628  04B5  0875               	movf	??_fourCCeq+1,w
  4629  04B6  1803               	skipnc
  4630  04B7  0A75               	incf	??_fourCCeq+1,w
  4631  04B8  0085               	movwf	5
  4632  04B9  0800               	movf	0,w	;code access
  4633  04BA  00F6               	movwf	??_fourCCeq+2
  4634  04BB  0879               	movf	fourCCeq@i,w
  4635  04BC  0778               	addwf	fourCCeq@a,w
  4636  04BD  00F7               	movwf	??_fourCCeq+3
  4637  04BE  0877               	movf	??_fourCCeq+3,w
  4638  04BF  0086               	movwf	6
  4639  04C0  0187               	clrf	7
  4640  04C1  0801               	movf	1,w
  4641  04C2  0676               	xorwf	??_fourCCeq+2,w
  4642  04C3  1903               	skipnz
  4643  04C4  2CC7               	goto	l1639
  4644  04C5  3000               	movlw	0
  4645  04C6  0008               	return
  4646  04C7                     l1639:	
  4647                           
  4648                           ;main.c: 51:     }
  4649  04C7  3001               	movlw	1
  4650  04C8  00F4               	movwf	??_fourCCeq
  4651  04C9  0874               	movf	??_fourCCeq,w
  4652  04CA  07F9               	addwf	fourCCeq@i,f
  4653  04CB  3004               	movlw	4
  4654  04CC  0279               	subwf	fourCCeq@i,w
  4655  04CD  1C03               	skipc
  4656  04CE  2CAE               	goto	l1633
  4657                           
  4658                           ;main.c: 52:     return 1;
  4659  04CF  3001               	movlw	1
  4660  04D0  0008               	return
  4661  04D1                     __end_of_fourCCeq:	
  4662                           
  4663                           	psect	text6
  4664  0566                     __ptext6:	
  4665 ;; *************** function _error *****************
  4666 ;; Defined at:
  4667 ;;		line 17 in file "./error.h"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  e               1    wreg     enum E12103
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;  e               1    3[COMMON] enum E12103
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  1    wreg      void 
  4674 ;; Registers used:
  4675 ;;		wreg
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4682 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4683 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4684 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4685 ;;Total ram usage:        2 bytes
  4686 ;; Hardware stack levels used:    1
  4687 ;; Hardware stack levels required when called:    1
  4688 ;; This function calls:
  4689 ;;		Nothing
  4690 ;; This function is called by:
  4691 ;;		_openFile
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           
  4696                           ;psect for function _error
  4697  0566                     _error:	
  4698                           
  4699                           ;incstack = 0
  4700                           ; Regs used in _error: [wreg]
  4701                           ;error@e stored from wreg
  4702  0566  00F3               	movwf	error@e
  4703                           
  4704                           ;./error.h: 19:     global_error = e;
  4705  0567  0873               	movf	error@e,w
  4706  0568  00F2               	movwf	??_error
  4707  0569  0872               	movf	??_error,w
  4708  056A  0020               	movlb	0	; select bank0
  4709  056B  00EA               	movwf	_global_error
  4710                           
  4711                           ;./error.h: 20:     __nop();
  4712  056C  0000               	nop
  4713  056D  0008               	return
  4714  056E                     __end_of_error:	
  4715                           
  4716                           	psect	text7
  4717  04D1                     __ptext7:	
  4718 ;; *************** function _SD_OpenStream *****************
  4719 ;; Defined at:
  4720 ;;		line 284 in file "SD.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  address         4    3[BANK0 ] long 
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;  a               4   11[BANK0 ] struct .
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  1    wreg      _Bool 
  4727 ;; Registers used:
  4728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4734 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4735 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4736 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4737 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4738 ;;Total ram usage:       12 bytes
  4739 ;; Hardware stack levels used:    1
  4740 ;; Hardware stack levels required when called:    3
  4741 ;; This function calls:
  4742 ;;		_SD_Check8bitResponse
  4743 ;;		_SD_Read8bitResponse
  4744 ;;		_SD_SendCommand
  4745 ;; This function is called by:
  4746 ;;		_openFile
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           
  4751                           ;psect for function _SD_OpenStream
  4752  04D1                     _SD_OpenStream:	
  4753                           
  4754                           ;SD.c: 288:     BlockAddress a = *((BlockAddress*)(&address));
  4755                           
  4756                           ;incstack = 0
  4757                           ; Regs used in _SD_OpenStream: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4758  04D1  0020               	movlb	0	; select bank0
  4759  04D2  0826               	movf	SD_OpenStream@address+3,w
  4760  04D3  00AE               	movwf	SD_OpenStream@a+3
  4761  04D4  0825               	movf	SD_OpenStream@address+2,w
  4762  04D5  00AD               	movwf	SD_OpenStream@a+2
  4763  04D6  0824               	movf	SD_OpenStream@address+1,w
  4764  04D7  00AC               	movwf	SD_OpenStream@a+1
  4765  04D8  0823               	movf	SD_OpenStream@address,w
  4766  04D9  00AB               	movwf	SD_OpenStream@a
  4767                           
  4768                           ;SD.c: 290:     SD_SendCommand(18, a.a3, a.a2, a.a1, a.a0);
  4769  04DA  082E               	movf	SD_OpenStream@a+3,w
  4770  04DB  00A7               	movwf	??_SD_OpenStream
  4771  04DC  0827               	movf	??_SD_OpenStream,w
  4772  04DD  00F3               	movwf	SD_SendCommand@ARG3
  4773  04DE  082D               	movf	SD_OpenStream@a+2,w
  4774  04DF  00A8               	movwf	??_SD_OpenStream+1
  4775  04E0  0828               	movf	??_SD_OpenStream+1,w
  4776  04E1  00F4               	movwf	SD_SendCommand@ARG2
  4777  04E2  082C               	movf	SD_OpenStream@a+1,w
  4778  04E3  00A9               	movwf	??_SD_OpenStream+2
  4779  04E4  0829               	movf	??_SD_OpenStream+2,w
  4780  04E5  00F5               	movwf	SD_SendCommand@ARG1
  4781  04E6  082B               	movf	SD_OpenStream@a,w
  4782  04E7  00AA               	movwf	??_SD_OpenStream+3
  4783  04E8  082A               	movf	??_SD_OpenStream+3,w
  4784  04E9  00F6               	movwf	SD_SendCommand@ARG0
  4785  04EA  3012               	movlw	18
  4786  04EB  3182  22AB  3184   	fcall	_SD_SendCommand
  4787                           
  4788                           ;SD.c: 293:     SD_Read8bitResponse();
  4789  04EE  3185  2544  3184   	fcall	_SD_Read8bitResponse
  4790                           
  4791                           ;SD.c: 296:     if(SD_Check8bitResponse(0x00) == 0) return 0;
  4792  04F1  3000               	movlw	0
  4793  04F2  3185  255D         	fcall	_SD_Check8bitResponse
  4794  04F4  0008               	return
  4795  04F5                     __end_of_SD_OpenStream:	
  4796                           
  4797                           	psect	text8
  4798  052C                     __ptext8:	
  4799 ;; *************** function _init *****************
  4800 ;; Defined at:
  4801 ;;		line 101 in file "main.c"
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;		None
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;		None
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  1    wreg      void 
  4808 ;; Registers used:
  4809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4819 ;;Total ram usage:        0 bytes
  4820 ;; Hardware stack levels used:    1
  4821 ;; Hardware stack levels required when called:    4
  4822 ;; This function calls:
  4823 ;;		_DAC_Init
  4824 ;;		_SD_Init
  4825 ;;		_SPI_Init
  4826 ;; This function is called by:
  4827 ;;		_main
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           
  4832                           ;psect for function _init
  4833  052C                     _init:	
  4834                           
  4835                           ;main.c: 103:     OSCCON = 0xF4;
  4836                           
  4837                           ;incstack = 0
  4838                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4839  052C  30F4               	movlw	244
  4840  052D  0021               	movlb	1	; select bank1
  4841  052E  009B               	movwf	27	;volatile
  4842  052F                     l259:	
  4843                           ;main.c: 104:     while(OSCSTATbits.HFIOFR == 0);
  4844                           
  4845  052F  1E1C               	btfss	28,4	;volatile
  4846  0530  2D2F               	goto	l259
  4847                           
  4848                           ;main.c: 106:     TRISB1 = 1;
  4849  0531  148D               	bsf	13,1	;volatile
  4850                           
  4851                           ;main.c: 107:     ANSB1 = 0;
  4852  0532  0023               	movlb	3	; select bank3
  4853  0533  108D               	bcf	13,1	;volatile
  4854                           
  4855                           ;main.c: 109:     TRISC0 = 0;
  4856  0534  0021               	movlb	1	; select bank1
  4857  0535  100E               	bcf	14,0	;volatile
  4858                           
  4859                           ;main.c: 110:     TRISC1 = 0;
  4860  0536  108E               	bcf	14,1	;volatile
  4861                           
  4862                           ;main.c: 111:     TRISB0 = 0;
  4863  0537  100D               	bcf	13,0	;volatile
  4864                           
  4865                           ;main.c: 112:     TRISC6 = 0;
  4866  0538  130E               	bcf	14,6	;volatile
  4867                           
  4868                           ;main.c: 114:     PORTCbits.RC6 = 1;
  4869  0539  0020               	movlb	0	; select bank0
  4870  053A  170E               	bsf	14,6	;volatile
  4871                           
  4872                           ;main.c: 117:     SPI_Init();
  4873  053B  3184  24F5  3185   	fcall	_SPI_Init
  4874                           
  4875                           ;main.c: 118:     SD_Init();
  4876  053E  3183  234A  3185   	fcall	_SD_Init
  4877                           
  4878                           ;main.c: 119:     DAC_Init();
  4879  0541  3185  257C         	fcall	_DAC_Init
  4880  0543  0008               	return
  4881  0544                     __end_of_init:	
  4882                           
  4883                           	psect	text9
  4884  04F5                     __ptext9:	
  4885 ;; *************** function _SPI_Init *****************
  4886 ;; Defined at:
  4887 ;;		line 7 in file "SPI.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;		None
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;		None
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  1    wreg      void 
  4894 ;; Registers used:
  4895 ;;		wreg, status,2
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4905 ;;Total ram usage:        0 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; Hardware stack levels required when called:    1
  4908 ;; This function calls:
  4909 ;;		Nothing
  4910 ;; This function is called by:
  4911 ;;		_init
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           
  4916                           ;psect for function _SPI_Init
  4917  04F5                     _SPI_Init:	
  4918                           
  4919                           ;SPI.c: 9:     TRISC2 = 0;
  4920                           
  4921                           ;incstack = 0
  4922                           ; Regs used in _SPI_Init: [wreg+status,2]
  4923  04F5  0021               	movlb	1	; select bank1
  4924  04F6  110E               	bcf	14,2	;volatile
  4925                           
  4926                           ;SPI.c: 10:     RC2PPS = 0x21;
  4927  04F7  3021               	movlw	33
  4928  04F8  003D               	movlb	29	; select bank29
  4929  04F9  00A2               	movwf	34	;volatile
  4930                           
  4931                           ;SPI.c: 11:     SSPCLKPPS = 0x12;
  4932  04FA  3012               	movlw	18
  4933  04FB  003C               	movlb	28	; select bank28
  4934  04FC  00BA               	movwf	58	;volatile
  4935                           
  4936                           ;SPI.c: 14:     TRISC3 = 1;
  4937  04FD  0021               	movlb	1	; select bank1
  4938  04FE  158E               	bsf	14,3	;volatile
  4939                           
  4940                           ;SPI.c: 15:     ANSC3 = 0;
  4941  04FF  0023               	movlb	3	; select bank3
  4942  0500  118E               	bcf	14,3	;volatile
  4943                           
  4944                           ;SPI.c: 16:     SSPDATPPS = 0x13;
  4945  0501  3013               	movlw	19
  4946  0502  003C               	movlb	28	; select bank28
  4947  0503  00BB               	movwf	59	;volatile
  4948                           
  4949                           ;SPI.c: 19:     TRISC4 = 0;
  4950  0504  0021               	movlb	1	; select bank1
  4951  0505  120E               	bcf	14,4	;volatile
  4952                           
  4953                           ;SPI.c: 20:     RC4PPS = 0x23;
  4954  0506  3023               	movlw	35
  4955  0507  003D               	movlb	29	; select bank29
  4956  0508  00A4               	movwf	36	;volatile
  4957                           
  4958                           ;SPI.c: 23:     TRISC7 = 0;
  4959  0509  0021               	movlb	1	; select bank1
  4960  050A  138E               	bcf	14,7	;volatile
  4961                           
  4962                           ;SPI.c: 26:     SSP1STAT = 0x80;
  4963  050B  3080               	movlw	128
  4964  050C  0024               	movlb	4	; select bank4
  4965  050D  0094               	movwf	20	;volatile
  4966                           
  4967                           ;SPI.c: 29:     SSP1CON1 = 0x30;
  4968  050E  3030               	movlw	48
  4969  050F  0095               	movwf	21	;volatile
  4970                           
  4971                           ;SPI.c: 32:     SSP1ADD = 0x00;
  4972  0510  0192               	clrf	18	;volatile
  4973  0511  0008               	return
  4974  0512                     __end_of_SPI_Init:	
  4975                           
  4976                           	psect	text10
  4977  034A                     __ptext10:	
  4978 ;; *************** function _SD_Init *****************
  4979 ;; Defined at:
  4980 ;;		line 11 in file "SD.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;		None
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  1    wreg      void 
  4987 ;; Registers used:
  4988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4996 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4997 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4998 ;;Total ram usage:        1 bytes
  4999 ;; Hardware stack levels used:    1
  5000 ;; Hardware stack levels required when called:    3
  5001 ;; This function calls:
  5002 ;;		_SD_Check40bitResponse
  5003 ;;		_SD_Check8bitResponse
  5004 ;;		_SD_Read40bitResponse
  5005 ;;		_SD_Read8bitResponse
  5006 ;;		_SD_SendCommand
  5007 ;;		_SPI_Write
  5008 ;; This function is called by:
  5009 ;;		_init
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           
  5014                           ;psect for function _SD_Init
  5015  034A                     _SD_Init:	
  5016                           
  5017                           ;SD.c: 14:     { PORTCbits.RC7 = 1; SSP1CON1bits.WCOL = 0; };
  5018                           
  5019                           ;incstack = 0
  5020                           ; Regs used in _SD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5021  034A  0020               	movlb	0	; select bank0
  5022  034B  178E               	bsf	14,7	;volatile
  5023  034C  0024               	movlb	4	; select bank4
  5024  034D  1395               	bcf	21,7	;volatile
  5025                           
  5026                           ;SD.c: 16:     SPI_Write(0xFF);
  5027  034E  30FF               	movlw	255
  5028  034F  3185  256E  3183   	fcall	_SPI_Write
  5029                           
  5030                           ;SD.c: 17:     SPI_Write(0xFF);
  5031  0352  30FF               	movlw	255
  5032  0353  3185  256E  3183   	fcall	_SPI_Write
  5033                           
  5034                           ;SD.c: 18:     SPI_Write(0xFF);
  5035  0356  30FF               	movlw	255
  5036  0357  3185  256E  3183   	fcall	_SPI_Write
  5037                           
  5038                           ;SD.c: 19:     SPI_Write(0xFF);
  5039  035A  30FF               	movlw	255
  5040  035B  3185  256E  3183   	fcall	_SPI_Write
  5041                           
  5042                           ;SD.c: 20:     SPI_Write(0xFF);
  5043  035E  30FF               	movlw	255
  5044  035F  3185  256E  3183   	fcall	_SPI_Write
  5045                           
  5046                           ;SD.c: 21:     SPI_Write(0xFF);
  5047  0362  30FF               	movlw	255
  5048  0363  3185  256E  3183   	fcall	_SPI_Write
  5049                           
  5050                           ;SD.c: 22:     SPI_Write(0xFF);
  5051  0366  30FF               	movlw	255
  5052  0367  3185  256E  3183   	fcall	_SPI_Write
  5053                           
  5054                           ;SD.c: 23:     SPI_Write(0xFF);
  5055  036A  30FF               	movlw	255
  5056  036B  3185  256E  3183   	fcall	_SPI_Write
  5057                           
  5058                           ;SD.c: 24:     SPI_Write(0xFF);
  5059  036E  30FF               	movlw	255
  5060  036F  3185  256E  3183   	fcall	_SPI_Write
  5061                           
  5062                           ;SD.c: 25:     SPI_Write(0xFF);
  5063  0372  30FF               	movlw	255
  5064  0373  3185  256E  3183   	fcall	_SPI_Write
  5065                           
  5066                           ;SD.c: 27:     { PORTCbits.RC7 = 0; SSP1CON1bits.WCOL = 0; };
  5067  0376  0020               	movlb	0	; select bank0
  5068  0377  138E               	bcf	14,7	;volatile
  5069  0378  0024               	movlb	4	; select bank4
  5070  0379  1395               	bcf	21,7	;volatile
  5071  037A                     l2079:	
  5072                           
  5073                           ;SD.c: 34:         SD_SendCommand(0, 0x00, 0x00, 0x00, 0x00);
  5074  037A  01F3               	clrf	SD_SendCommand@ARG3
  5075  037B  01F4               	clrf	SD_SendCommand@ARG2
  5076  037C  01F5               	clrf	SD_SendCommand@ARG1
  5077  037D  01F6               	clrf	SD_SendCommand@ARG0
  5078  037E  3000               	movlw	0
  5079  037F  3182  22AB  3183   	fcall	_SD_SendCommand
  5080                           
  5081                           ;SD.c: 35:         SD_Read8bitResponse();
  5082  0382  3185  2544  3183   	fcall	_SD_Read8bitResponse
  5083  0385  0000               	nop	;# 
  5084                           
  5085                           ;SD.c: 37:     } while (SD_Check8bitResponse(0x01) == 0);
  5086  0386  3001               	movlw	1
  5087  0387  3185  255D  3183   	fcall	_SD_Check8bitResponse
  5088  038A  3A00               	xorlw	0
  5089  038B  1903               	skipnz
  5090  038C  2B7A               	goto	l2079
  5091  038D                     l2085:	
  5092                           
  5093                           ;SD.c: 44:         SD_SendCommand(8, 0x00, 0x00, 0x01, 0xAA);
  5094  038D  01F3               	clrf	SD_SendCommand@ARG3
  5095  038E  01F4               	clrf	SD_SendCommand@ARG2
  5096  038F  01F5               	clrf	SD_SendCommand@ARG1
  5097  0390  0AF5               	incf	SD_SendCommand@ARG1,f
  5098  0391  30AA               	movlw	170
  5099  0392  00F8               	movwf	??_SD_Init
  5100  0393  0878               	movf	??_SD_Init,w
  5101  0394  00F6               	movwf	SD_SendCommand@ARG0
  5102  0395  3008               	movlw	8
  5103  0396  3182  22AB  3183   	fcall	_SD_SendCommand
  5104                           
  5105                           ;SD.c: 45:         SD_Read40bitResponse();
  5106  0399  3184  247F  3183   	fcall	_SD_Read40bitResponse
  5107  039C  0000               	nop	;# 
  5108                           
  5109                           ;SD.c: 47:     } while (SD_Check40bitResponse(0x01, 0x00, 0x00, 0x01, 0xAA) == 0);
  5110  039D  01F2               	clrf	SD_Check40bitResponse@Byte3
  5111  039E  01F3               	clrf	SD_Check40bitResponse@Byte2
  5112  039F  01F4               	clrf	SD_Check40bitResponse@Byte1
  5113  03A0  0AF4               	incf	SD_Check40bitResponse@Byte1,f
  5114  03A1  30AA               	movlw	170
  5115  03A2  00F8               	movwf	??_SD_Init
  5116  03A3  0878               	movf	??_SD_Init,w
  5117  03A4  00F5               	movwf	SD_Check40bitResponse@Byte0
  5118  03A5  3001               	movlw	1
  5119  03A6  3185  2512  3183   	fcall	_SD_Check40bitResponse
  5120  03A9  3A00               	xorlw	0
  5121  03AA  1903               	skipnz
  5122  03AB  2B8D               	goto	l2085
  5123  03AC                     l2091:	
  5124                           
  5125                           ;SD.c: 55:             SD_SendCommand(55, 0x00, 0x00, 0x00, 0x00);
  5126  03AC  01F3               	clrf	SD_SendCommand@ARG3
  5127  03AD  01F4               	clrf	SD_SendCommand@ARG2
  5128  03AE  01F5               	clrf	SD_SendCommand@ARG1
  5129  03AF  01F6               	clrf	SD_SendCommand@ARG0
  5130  03B0  3037               	movlw	55
  5131  03B1  3182  22AB  3183   	fcall	_SD_SendCommand
  5132                           
  5133                           ;SD.c: 56:             SD_Read8bitResponse();
  5134  03B4  3185  2544  3183   	fcall	_SD_Read8bitResponse
  5135  03B7  0000               	nop	;# 
  5136                           
  5137                           ;SD.c: 58:         } while (SD_Check8bitResponse(0x01) == 0);
  5138  03B8  3001               	movlw	1
  5139  03B9  3185  255D  3183   	fcall	_SD_Check8bitResponse
  5140  03BC  3A00               	xorlw	0
  5141  03BD  1903               	skipnz
  5142  03BE  2BAC               	goto	l2091
  5143                           
  5144                           ;SD.c: 65:         SD_SendCommand(41, 0x40, 0x00, 0x00, 0x00);
  5145  03BF  3040               	movlw	64
  5146  03C0  00F8               	movwf	??_SD_Init
  5147  03C1  0878               	movf	??_SD_Init,w
  5148  03C2  00F3               	movwf	SD_SendCommand@ARG3
  5149  03C3  01F4               	clrf	SD_SendCommand@ARG2
  5150  03C4  01F5               	clrf	SD_SendCommand@ARG1
  5151  03C5  01F6               	clrf	SD_SendCommand@ARG0
  5152  03C6  3029               	movlw	41
  5153  03C7  3182  22AB  3183   	fcall	_SD_SendCommand
  5154                           
  5155                           ;SD.c: 66:         SD_Read8bitResponse();
  5156  03CA  3185  2544  3183   	fcall	_SD_Read8bitResponse
  5157  03CD  0000               	nop	;# 
  5158                           
  5159                           ;SD.c: 68:     } while (SD_Check8bitResponse(0x00) == 0);
  5160  03CE  3000               	movlw	0
  5161  03CF  3185  255D  3183   	fcall	_SD_Check8bitResponse
  5162  03D2  3A00               	xorlw	0
  5163  03D3  1D03               	btfss	3,2
  5164  03D4  0008               	return
  5165  03D5  2BAC               	goto	l2091
  5166  03D6                     __end_of_SD_Init:	
  5167                           
  5168                           	psect	text11
  5169  02AB                     __ptext11:	
  5170 ;; *************** function _SD_SendCommand *****************
  5171 ;; Defined at:
  5172 ;;		line 77 in file "SD.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;  CMD_6bit        1    wreg     unsigned char 
  5175 ;;  ARG3            1    3[COMMON] unsigned char 
  5176 ;;  ARG2            1    4[COMMON] unsigned char 
  5177 ;;  ARG1            1    5[COMMON] unsigned char 
  5178 ;;  ARG0            1    6[COMMON] unsigned char 
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  CMD_6bit        1    0[BANK0 ] unsigned char 
  5181 ;;  Checksum        1    2[BANK0 ] unsigned char 
  5182 ;;  ByteToSend      1    1[BANK0 ] unsigned char 
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  1    wreg      void 
  5185 ;; Registers used:
  5186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5193 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5194 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5195 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5196 ;;Total ram usage:        8 bytes
  5197 ;; Hardware stack levels used:    1
  5198 ;; Hardware stack levels required when called:    2
  5199 ;; This function calls:
  5200 ;;		_SPI_Write
  5201 ;; This function is called by:
  5202 ;;		_SD_Init
  5203 ;;		_SD_OpenStream
  5204 ;;		_SD_OpenBlock
  5205 ;;		_SD_CloseStream
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           
  5210                           ;psect for function _SD_SendCommand
  5211  02AB                     _SD_SendCommand:	
  5212                           
  5213                           ;incstack = 0
  5214                           ; Regs used in _SD_SendCommand: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5215                           ;SD_SendCommand@CMD_6bit stored from wreg
  5216  02AB  0020               	movlb	0	; select bank0
  5217  02AC  00A0               	movwf	SD_SendCommand@CMD_6bit
  5218                           
  5219                           ;SD.c: 79:     char Checksum = 0x00;
  5220  02AD  01A2               	clrf	SD_SendCommand@Checksum
  5221                           
  5222                           ;SD.c: 82:     ByteToSend = (CMD_6bit & 0x3F) | 0x40;
  5223  02AE  0820               	movf	SD_SendCommand@CMD_6bit,w
  5224  02AF  393F               	andlw	63
  5225  02B0  3840               	iorlw	64
  5226  02B1  00F7               	movwf	??_SD_SendCommand
  5227  02B2  0877               	movf	??_SD_SendCommand,w
  5228  02B3  00A1               	movwf	SD_SendCommand@ByteToSend
  5229                           
  5230                           ;SD.c: 83:     SPI_Write(ByteToSend);
  5231  02B4  0821               	movf	SD_SendCommand@ByteToSend,w
  5232  02B5  3185  256E  3182   	fcall	_SPI_Write
  5233                           
  5234                           ;SD.c: 84:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5235  02B8  0020               	movlb	0	; select bank0
  5236  02B9  3522               	lslf	SD_SendCommand@Checksum,w
  5237  02BA  00F7               	movwf	??_SD_SendCommand
  5238  02BB  0877               	movf	??_SD_SendCommand,w
  5239  02BC  00A2               	movwf	SD_SendCommand@Checksum
  5240  02BD  0822               	movf	SD_SendCommand@Checksum,w
  5241  02BE  0621               	xorwf	SD_SendCommand@ByteToSend,w
  5242  02BF  00F7               	movwf	??_SD_SendCommand
  5243  02C0  0877               	movf	??_SD_SendCommand,w
  5244  02C1  00A2               	movwf	SD_SendCommand@Checksum
  5245  02C2  0822               	movf	SD_SendCommand@Checksum,w
  5246  02C3  3E5C               	addlw	low (_CRCTable| (0+32768))
  5247  02C4  0084               	movwf	4
  5248  02C5  3080               	movlw	high (_CRCTable| (0+32768))
  5249  02C6  1803               	skipnc
  5250  02C7  3E01               	addlw	1
  5251  02C8  0085               	movwf	5
  5252  02C9  0800               	movf	0,w	;code access
  5253  02CA  00F7               	movwf	??_SD_SendCommand
  5254  02CB  0877               	movf	??_SD_SendCommand,w
  5255  02CC  00A2               	movwf	SD_SendCommand@Checksum
  5256                           
  5257                           ;SD.c: 87:     ByteToSend = ARG3;
  5258  02CD  0873               	movf	SD_SendCommand@ARG3,w
  5259  02CE  00F7               	movwf	??_SD_SendCommand
  5260  02CF  0877               	movf	??_SD_SendCommand,w
  5261  02D0  00A1               	movwf	SD_SendCommand@ByteToSend
  5262                           
  5263                           ;SD.c: 88:     SPI_Write(ByteToSend);
  5264  02D1  0821               	movf	SD_SendCommand@ByteToSend,w
  5265  02D2  3185  256E  3182   	fcall	_SPI_Write
  5266                           
  5267                           ;SD.c: 89:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5268  02D5  0020               	movlb	0	; select bank0
  5269  02D6  3522               	lslf	SD_SendCommand@Checksum,w
  5270  02D7  00F7               	movwf	??_SD_SendCommand
  5271  02D8  0877               	movf	??_SD_SendCommand,w
  5272  02D9  00A2               	movwf	SD_SendCommand@Checksum
  5273  02DA  0822               	movf	SD_SendCommand@Checksum,w
  5274  02DB  0621               	xorwf	SD_SendCommand@ByteToSend,w
  5275  02DC  00F7               	movwf	??_SD_SendCommand
  5276  02DD  0877               	movf	??_SD_SendCommand,w
  5277  02DE  00A2               	movwf	SD_SendCommand@Checksum
  5278  02DF  0822               	movf	SD_SendCommand@Checksum,w
  5279  02E0  3E5C               	addlw	low (_CRCTable| (0+32768))
  5280  02E1  0084               	movwf	4
  5281  02E2  3080               	movlw	high (_CRCTable| (0+32768))
  5282  02E3  1803               	skipnc
  5283  02E4  3E01               	addlw	1
  5284  02E5  0085               	movwf	5
  5285  02E6  0800               	movf	0,w	;code access
  5286  02E7  00F7               	movwf	??_SD_SendCommand
  5287  02E8  0877               	movf	??_SD_SendCommand,w
  5288  02E9  00A2               	movwf	SD_SendCommand@Checksum
  5289                           
  5290                           ;SD.c: 91:     ByteToSend = ARG2;
  5291  02EA  0874               	movf	SD_SendCommand@ARG2,w
  5292  02EB  00F7               	movwf	??_SD_SendCommand
  5293  02EC  0877               	movf	??_SD_SendCommand,w
  5294  02ED  00A1               	movwf	SD_SendCommand@ByteToSend
  5295                           
  5296                           ;SD.c: 92:     SPI_Write(ByteToSend);
  5297  02EE  0821               	movf	SD_SendCommand@ByteToSend,w
  5298  02EF  3185  256E  3182   	fcall	_SPI_Write
  5299                           
  5300                           ;SD.c: 93:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5301  02F2  0020               	movlb	0	; select bank0
  5302  02F3  3522               	lslf	SD_SendCommand@Checksum,w
  5303  02F4  00F7               	movwf	??_SD_SendCommand
  5304  02F5  0877               	movf	??_SD_SendCommand,w
  5305  02F6  00A2               	movwf	SD_SendCommand@Checksum
  5306  02F7  0822               	movf	SD_SendCommand@Checksum,w
  5307  02F8  0621               	xorwf	SD_SendCommand@ByteToSend,w
  5308  02F9  00F7               	movwf	??_SD_SendCommand
  5309  02FA  0877               	movf	??_SD_SendCommand,w
  5310  02FB  00A2               	movwf	SD_SendCommand@Checksum
  5311  02FC  0822               	movf	SD_SendCommand@Checksum,w
  5312  02FD  3E5C               	addlw	low (_CRCTable| (0+32768))
  5313  02FE  0084               	movwf	4
  5314  02FF  3080               	movlw	high (_CRCTable| (0+32768))
  5315  0300  1803               	skipnc
  5316  0301  3E01               	addlw	1
  5317  0302  0085               	movwf	5
  5318  0303  0800               	movf	0,w	;code access
  5319  0304  00F7               	movwf	??_SD_SendCommand
  5320  0305  0877               	movf	??_SD_SendCommand,w
  5321  0306  00A2               	movwf	SD_SendCommand@Checksum
  5322                           
  5323                           ;SD.c: 95:     ByteToSend = ARG1;
  5324  0307  0875               	movf	SD_SendCommand@ARG1,w
  5325  0308  00F7               	movwf	??_SD_SendCommand
  5326  0309  0877               	movf	??_SD_SendCommand,w
  5327  030A  00A1               	movwf	SD_SendCommand@ByteToSend
  5328                           
  5329                           ;SD.c: 96:     SPI_Write(ByteToSend);
  5330  030B  0821               	movf	SD_SendCommand@ByteToSend,w
  5331  030C  3185  256E  3182   	fcall	_SPI_Write
  5332                           
  5333                           ;SD.c: 97:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5334  030F  0020               	movlb	0	; select bank0
  5335  0310  3522               	lslf	SD_SendCommand@Checksum,w
  5336  0311  00F7               	movwf	??_SD_SendCommand
  5337  0312  0877               	movf	??_SD_SendCommand,w
  5338  0313  00A2               	movwf	SD_SendCommand@Checksum
  5339  0314  0822               	movf	SD_SendCommand@Checksum,w
  5340  0315  0621               	xorwf	SD_SendCommand@ByteToSend,w
  5341  0316  00F7               	movwf	??_SD_SendCommand
  5342  0317  0877               	movf	??_SD_SendCommand,w
  5343  0318  00A2               	movwf	SD_SendCommand@Checksum
  5344  0319  0822               	movf	SD_SendCommand@Checksum,w
  5345  031A  3E5C               	addlw	low (_CRCTable| (0+32768))
  5346  031B  0084               	movwf	4
  5347  031C  3080               	movlw	high (_CRCTable| (0+32768))
  5348  031D  1803               	skipnc
  5349  031E  3E01               	addlw	1
  5350  031F  0085               	movwf	5
  5351  0320  0800               	movf	0,w	;code access
  5352  0321  00F7               	movwf	??_SD_SendCommand
  5353  0322  0877               	movf	??_SD_SendCommand,w
  5354  0323  00A2               	movwf	SD_SendCommand@Checksum
  5355                           
  5356                           ;SD.c: 99:     ByteToSend = ARG0;
  5357  0324  0876               	movf	SD_SendCommand@ARG0,w
  5358  0325  00F7               	movwf	??_SD_SendCommand
  5359  0326  0877               	movf	??_SD_SendCommand,w
  5360  0327  00A1               	movwf	SD_SendCommand@ByteToSend
  5361                           
  5362                           ;SD.c: 100:     SPI_Write(ByteToSend);
  5363  0328  0821               	movf	SD_SendCommand@ByteToSend,w
  5364  0329  3185  256E  3182   	fcall	_SPI_Write
  5365                           
  5366                           ;SD.c: 101:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum =
      +                           CRCTable[Checksum]; };
  5367  032C  0020               	movlb	0	; select bank0
  5368  032D  3522               	lslf	SD_SendCommand@Checksum,w
  5369  032E  00F7               	movwf	??_SD_SendCommand
  5370  032F  0877               	movf	??_SD_SendCommand,w
  5371  0330  00A2               	movwf	SD_SendCommand@Checksum
  5372  0331  0822               	movf	SD_SendCommand@Checksum,w
  5373  0332  0621               	xorwf	SD_SendCommand@ByteToSend,w
  5374  0333  00F7               	movwf	??_SD_SendCommand
  5375  0334  0877               	movf	??_SD_SendCommand,w
  5376  0335  00A2               	movwf	SD_SendCommand@Checksum
  5377  0336  0822               	movf	SD_SendCommand@Checksum,w
  5378  0337  3E5C               	addlw	low (_CRCTable| (0+32768))
  5379  0338  0084               	movwf	4
  5380  0339  3080               	movlw	high (_CRCTable| (0+32768))
  5381  033A  1803               	skipnc
  5382  033B  3E01               	addlw	1
  5383  033C  0085               	movwf	5
  5384  033D  0800               	movf	0,w	;code access
  5385  033E  00F7               	movwf	??_SD_SendCommand
  5386  033F  0877               	movf	??_SD_SendCommand,w
  5387  0340  00A2               	movwf	SD_SendCommand@Checksum
  5388                           
  5389                           ;SD.c: 104:     ByteToSend = (Checksum << 1) | 0x01;
  5390  0341  1403               	setc
  5391  0342  0D22               	rlf	SD_SendCommand@Checksum,w
  5392  0343  00F7               	movwf	??_SD_SendCommand
  5393  0344  0877               	movf	??_SD_SendCommand,w
  5394  0345  00A1               	movwf	SD_SendCommand@ByteToSend
  5395                           
  5396                           ;SD.c: 105:     SPI_Write(ByteToSend);
  5397  0346  0821               	movf	SD_SendCommand@ByteToSend,w
  5398  0347  3185  256E         	fcall	_SPI_Write
  5399  0349  0008               	return
  5400  034A                     __end_of_SD_SendCommand:	
  5401                           
  5402                           	psect	text12
  5403  056E                     __ptext12:	
  5404 ;; *************** function _SPI_Write *****************
  5405 ;; Defined at:
  5406 ;;		line 38 in file "SPI.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;  Data_8bit       1    wreg     unsigned char 
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;  Data_8bit       1    2[COMMON] unsigned char 
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  1    wreg      void 
  5413 ;; Registers used:
  5414 ;;		wreg
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5421 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5423 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5424 ;;Total ram usage:        1 bytes
  5425 ;; Hardware stack levels used:    1
  5426 ;; Hardware stack levels required when called:    1
  5427 ;; This function calls:
  5428 ;;		Nothing
  5429 ;; This function is called by:
  5430 ;;		_SD_Init
  5431 ;;		_SD_SendCommand
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           
  5436                           ;psect for function _SPI_Write
  5437  056E                     _SPI_Write:	
  5438                           
  5439                           ;incstack = 0
  5440                           ; Regs used in _SPI_Write: [wreg]
  5441                           ;SPI_Write@Data_8bit stored from wreg
  5442  056E  00F2               	movwf	SPI_Write@Data_8bit
  5443                           
  5444                           ;SPI.c: 39:     SSP1BUF = Data_8bit;
  5445  056F  0872               	movf	SPI_Write@Data_8bit,w
  5446  0570  0024               	movlb	4	; select bank4
  5447  0571  0091               	movwf	17	;volatile
  5448  0572                     l112:	
  5449                           ;SPI.c: 40:     while(SSP1STATbits.BF == 0);
  5450                           
  5451  0572  1814               	btfsc	20,0	;volatile
  5452  0573  0008               	return
  5453  0574  2D72               	goto	l112
  5454  0575                     __end_of_SPI_Write:	
  5455                           
  5456                           	psect	text13
  5457  0544                     __ptext13:	
  5458 ;; *************** function _SD_Read8bitResponse *****************
  5459 ;; Defined at:
  5460 ;;		line 112 in file "SD.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;		None
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;  readMessage     1    3[COMMON] unsigned char 
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  1    wreg      void 
  5467 ;; Registers used:
  5468 ;;		wreg, status,2, status,0, pclath, cstack
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5476 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5477 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5478 ;;Total ram usage:        2 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    2
  5481 ;; This function calls:
  5482 ;;		_SPI_Read
  5483 ;; This function is called by:
  5484 ;;		_SD_Init
  5485 ;;		_SD_OpenStream
  5486 ;;		_SD_OpenBlock
  5487 ;;		_SD_CloseStream
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           
  5492                           ;psect for function _SD_Read8bitResponse
  5493  0544                     _SD_Read8bitResponse:	
  5494  0544                     l1497:	
  5495                           ;incstack = 0
  5496                           ; Regs used in _SD_Read8bitResponse: [wreg+status,2+status,0+pclath+cstack]
  5497                           
  5498  0544  3185  2575  3185   	fcall	_SPI_Read
  5499  0547  00F2               	movwf	??_SD_Read8bitResponse
  5500  0548  0872               	movf	??_SD_Read8bitResponse,w
  5501  0549  00F3               	movwf	SD_Read8bitResponse@readMessage
  5502  054A  0A73               	incf	SD_Read8bitResponse@readMessage,w
  5503  054B  1903               	btfsc	3,2
  5504  054C  2D44               	goto	l1497
  5505                           
  5506                           ;SD.c: 121:     GLBL_Resp8 = readMessage;
  5507  054D  0873               	movf	SD_Read8bitResponse@readMessage,w
  5508  054E  00F2               	movwf	??_SD_Read8bitResponse
  5509  054F  0872               	movf	??_SD_Read8bitResponse,w
  5510  0550  00FB               	movwf	_GLBL_Resp8
  5511                           
  5512                           ;SD.c: 124:     SPI_Read();
  5513  0551  3185  2575         	fcall	_SPI_Read
  5514  0553  0008               	return
  5515  0554                     __end_of_SD_Read8bitResponse:	
  5516                           
  5517                           	psect	text14
  5518  047F                     __ptext14:	
  5519 ;; *************** function _SD_Read40bitResponse *****************
  5520 ;; Defined at:
  5521 ;;		line 141 in file "SD.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;		None
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;  readMessage     1    3[COMMON] unsigned char 
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  1    wreg      void 
  5528 ;; Registers used:
  5529 ;;		wreg, status,2, status,0, pclath, cstack
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5537 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5538 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5539 ;;Total ram usage:        2 bytes
  5540 ;; Hardware stack levels used:    1
  5541 ;; Hardware stack levels required when called:    2
  5542 ;; This function calls:
  5543 ;;		_SPI_Read
  5544 ;; This function is called by:
  5545 ;;		_SD_Init
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           
  5550                           ;psect for function _SD_Read40bitResponse
  5551  047F                     _SD_Read40bitResponse:	
  5552  047F                     l1519:	
  5553                           ;incstack = 0
  5554                           ; Regs used in _SD_Read40bitResponse: [wreg+status,2+status,0+pclath+cstack]
  5555                           
  5556  047F  3185  2575  3184   	fcall	_SPI_Read
  5557  0482  00F2               	movwf	??_SD_Read40bitResponse
  5558  0483  0872               	movf	??_SD_Read40bitResponse,w
  5559  0484  00F3               	movwf	SD_Read40bitResponse@readMessage
  5560  0485  0A73               	incf	SD_Read40bitResponse@readMessage,w
  5561  0486  1903               	btfsc	3,2
  5562  0487  2C7F               	goto	l1519
  5563                           
  5564                           ;SD.c: 150:     GLBL_Resp40[0] = readMessage;
  5565  0488  0873               	movf	SD_Read40bitResponse@readMessage,w
  5566  0489  00F2               	movwf	??_SD_Read40bitResponse
  5567  048A  0872               	movf	??_SD_Read40bitResponse,w
  5568  048B  0021               	movlb	1	; select bank1
  5569  048C  00CE               	movwf	_GLBL_Resp40^(0+128)
  5570                           
  5571                           ;SD.c: 151:     GLBL_Resp40[1] = SPI_Read();
  5572  048D  3185  2575  3184   	fcall	_SPI_Read
  5573  0490  00F2               	movwf	??_SD_Read40bitResponse
  5574  0491  0872               	movf	??_SD_Read40bitResponse,w
  5575  0492  0021               	movlb	1	; select bank1
  5576  0493  00CF               	movwf	(_GLBL_Resp40^(0+128)+1)
  5577                           
  5578                           ;SD.c: 152:     GLBL_Resp40[2] = SPI_Read();
  5579  0494  3185  2575  3184   	fcall	_SPI_Read
  5580  0497  00F2               	movwf	??_SD_Read40bitResponse
  5581  0498  0872               	movf	??_SD_Read40bitResponse,w
  5582  0499  0021               	movlb	1	; select bank1
  5583  049A  00D0               	movwf	(_GLBL_Resp40^(0+128)+2)
  5584                           
  5585                           ;SD.c: 153:     GLBL_Resp40[3] = SPI_Read();
  5586  049B  3185  2575  3184   	fcall	_SPI_Read
  5587  049E  00F2               	movwf	??_SD_Read40bitResponse
  5588  049F  0872               	movf	??_SD_Read40bitResponse,w
  5589  04A0  0021               	movlb	1	; select bank1
  5590  04A1  00D1               	movwf	(_GLBL_Resp40^(0+128)+3)
  5591                           
  5592                           ;SD.c: 154:     GLBL_Resp40[4] = SPI_Read();
  5593  04A2  3185  2575  3184   	fcall	_SPI_Read
  5594  04A5  00F2               	movwf	??_SD_Read40bitResponse
  5595  04A6  0872               	movf	??_SD_Read40bitResponse,w
  5596  04A7  0021               	movlb	1	; select bank1
  5597  04A8  00D2               	movwf	(_GLBL_Resp40^(0+128)+4)
  5598                           
  5599                           ;SD.c: 157:     SPI_Read();
  5600  04A9  3185  2575         	fcall	_SPI_Read
  5601  04AB  0008               	return
  5602  04AC                     __end_of_SD_Read40bitResponse:	
  5603                           
  5604                           	psect	text15
  5605  0575                     __ptext15:	
  5606 ;; *************** function _SPI_Read *****************
  5607 ;; Defined at:
  5608 ;;		line 46 in file "SPI.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;		None
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;		None
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  1    wreg      unsigned char 
  5615 ;; Registers used:
  5616 ;;		wreg
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5626 ;;Total ram usage:        0 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; Hardware stack levels required when called:    1
  5629 ;; This function calls:
  5630 ;;		Nothing
  5631 ;; This function is called by:
  5632 ;;		_SD_Read8bitResponse
  5633 ;;		_SD_Read40bitResponse
  5634 ;;		_SD_CloseBlock
  5635 ;;		_readBytes
  5636 ;;		_openFile
  5637 ;;		_main
  5638 ;;		_SD_CloseStream
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           
  5643                           ;psect for function _SPI_Read
  5644  0575                     _SPI_Read:	
  5645                           
  5646                           ;SPI.c: 47:     SSP1BUF = 0xFF;
  5647                           
  5648                           ;incstack = 0
  5649                           ; Regs used in _SPI_Read: [wreg]
  5650  0575  30FF               	movlw	255
  5651  0576  0024               	movlb	4	; select bank4
  5652  0577  0091               	movwf	17	;volatile
  5653  0578                     l118:	
  5654                           ;SPI.c: 49:     while(SSP1STATbits.BF == 0);
  5655                           
  5656  0578  1C14               	btfss	20,0	;volatile
  5657  0579  2D78               	goto	l118
  5658                           
  5659                           ;SPI.c: 50:     return SSP1BUF;
  5660  057A  0811               	movf	17,w	;volatile
  5661  057B  0008               	return
  5662  057C                     __end_of_SPI_Read:	
  5663                           
  5664                           	psect	text16
  5665  055D                     __ptext16:	
  5666 ;; *************** function _SD_Check8bitResponse *****************
  5667 ;; Defined at:
  5668 ;;		line 132 in file "SD.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  Byte            1    wreg     unsigned char 
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;  Byte            1    2[COMMON] unsigned char 
  5673 ;;  match           1    3[COMMON] _Bool 
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1    wreg      _Bool 
  5676 ;; Registers used:
  5677 ;;		wreg, status,2
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5684 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5687 ;;Total ram usage:        2 bytes
  5688 ;; Hardware stack levels used:    1
  5689 ;; Hardware stack levels required when called:    1
  5690 ;; This function calls:
  5691 ;;		Nothing
  5692 ;; This function is called by:
  5693 ;;		_SD_Init
  5694 ;;		_SD_OpenStream
  5695 ;;		_SD_OpenBlock
  5696 ;;		_SD_CloseStream
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           
  5701                           ;psect for function _SD_Check8bitResponse
  5702  055D                     _SD_Check8bitResponse:	
  5703                           
  5704                           ;incstack = 0
  5705                           ; Regs used in _SD_Check8bitResponse: [wreg+status,2]
  5706                           ;SD_Check8bitResponse@Byte stored from wreg
  5707  055D  00F2               	movwf	SD_Check8bitResponse@Byte
  5708                           
  5709                           ;SD.c: 133:     _Bool match = 1;
  5710  055E  01F3               	clrf	SD_Check8bitResponse@match
  5711  055F  0AF3               	incf	SD_Check8bitResponse@match,f
  5712                           
  5713                           ;SD.c: 134:     if (Byte != GLBL_Resp8) match = 0;
  5714  0560  0872               	movf	SD_Check8bitResponse@Byte,w
  5715  0561  067B               	xorwf	_GLBL_Resp8,w
  5716  0562  1D03               	btfss	3,2
  5717  0563  01F3               	clrf	SD_Check8bitResponse@match
  5718                           
  5719                           ;SD.c: 135:     return match;
  5720  0564  0873               	movf	SD_Check8bitResponse@match,w
  5721  0565  0008               	return
  5722  0566                     __end_of_SD_Check8bitResponse:	
  5723                           
  5724                           	psect	text17
  5725  0512                     __ptext17:	
  5726 ;; *************** function _SD_Check40bitResponse *****************
  5727 ;; Defined at:
  5728 ;;		line 166 in file "SD.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;  Byte4           1    wreg     unsigned char 
  5731 ;;  Byte3           1    2[COMMON] unsigned char 
  5732 ;;  Byte2           1    3[COMMON] unsigned char 
  5733 ;;  Byte1           1    4[COMMON] unsigned char 
  5734 ;;  Byte0           1    5[COMMON] unsigned char 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;  Byte4           1    6[COMMON] unsigned char 
  5737 ;;  match           1    7[COMMON] _Bool 
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  1    wreg      _Bool 
  5740 ;; Registers used:
  5741 ;;		wreg, status,2
  5742 ;; Tracked objects:
  5743 ;;		On entry : 0/0
  5744 ;;		On exit  : 0/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5747 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5748 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5750 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5751 ;;Total ram usage:        6 bytes
  5752 ;; Hardware stack levels used:    1
  5753 ;; Hardware stack levels required when called:    1
  5754 ;; This function calls:
  5755 ;;		Nothing
  5756 ;; This function is called by:
  5757 ;;		_SD_Init
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           
  5762                           ;psect for function _SD_Check40bitResponse
  5763  0512                     _SD_Check40bitResponse:	
  5764                           
  5765                           ;incstack = 0
  5766                           ; Regs used in _SD_Check40bitResponse: [wreg+status,2]
  5767                           ;SD_Check40bitResponse@Byte4 stored from wreg
  5768  0512  00F6               	movwf	SD_Check40bitResponse@Byte4
  5769                           
  5770                           ;SD.c: 167:     _Bool match = 1;
  5771  0513  01F7               	clrf	SD_Check40bitResponse@match
  5772  0514  0AF7               	incf	SD_Check40bitResponse@match,f
  5773                           
  5774                           ;SD.c: 168:     if (Byte4 != GLBL_Resp40[0]) match = 0;
  5775  0515  0021               	movlb	1	; select bank1
  5776  0516  084E               	movf	_GLBL_Resp40^(0+128),w
  5777  0517  0676               	xorwf	SD_Check40bitResponse@Byte4,w
  5778  0518  1D03               	btfss	3,2
  5779  0519  01F7               	clrf	SD_Check40bitResponse@match
  5780                           
  5781                           ;SD.c: 169:     if (Byte3 != GLBL_Resp40[1]) match = 0;
  5782  051A  084F               	movf	(_GLBL_Resp40^(0+128)+1),w
  5783  051B  0672               	xorwf	SD_Check40bitResponse@Byte3,w
  5784  051C  1D03               	btfss	3,2
  5785  051D  01F7               	clrf	SD_Check40bitResponse@match
  5786                           
  5787                           ;SD.c: 170:     if (Byte2 != GLBL_Resp40[2]) match = 0;
  5788  051E  0850               	movf	(_GLBL_Resp40^(0+128)+2),w
  5789  051F  0673               	xorwf	SD_Check40bitResponse@Byte2,w
  5790  0520  1D03               	btfss	3,2
  5791  0521  01F7               	clrf	SD_Check40bitResponse@match
  5792                           
  5793                           ;SD.c: 171:     if (Byte1 != GLBL_Resp40[3]) match = 0;
  5794  0522  0851               	movf	(_GLBL_Resp40^(0+128)+3),w
  5795  0523  0674               	xorwf	SD_Check40bitResponse@Byte1,w
  5796  0524  1D03               	btfss	3,2
  5797  0525  01F7               	clrf	SD_Check40bitResponse@match
  5798                           
  5799                           ;SD.c: 172:     if (Byte0 != GLBL_Resp40[4]) match = 0;
  5800  0526  0852               	movf	(_GLBL_Resp40^(0+128)+4),w
  5801  0527  0675               	xorwf	SD_Check40bitResponse@Byte0,w
  5802  0528  1D03               	btfss	3,2
  5803  0529  01F7               	clrf	SD_Check40bitResponse@match
  5804                           
  5805                           ;SD.c: 173:     return match;
  5806  052A  0877               	movf	SD_Check40bitResponse@match,w
  5807  052B  0008               	return
  5808  052C                     __end_of_SD_Check40bitResponse:	
  5809                           
  5810                           	psect	text18
  5811  057C                     __ptext18:	
  5812 ;; *************** function _DAC_Init *****************
  5813 ;; Defined at:
  5814 ;;		line 30 in file "DAC.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;		None
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;		None
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  1    wreg      void 
  5821 ;; Registers used:
  5822 ;;		wreg
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5832 ;;Total ram usage:        0 bytes
  5833 ;; Hardware stack levels used:    1
  5834 ;; Hardware stack levels required when called:    1
  5835 ;; This function calls:
  5836 ;;		Nothing
  5837 ;; This function is called by:
  5838 ;;		_init
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           
  5843                           ;psect for function _DAC_Init
  5844  057C                     _DAC_Init:	
  5845                           
  5846                           ;DAC.c: 31:     TRISA = 0xFB;
  5847                           
  5848                           ;incstack = 0
  5849                           ; Regs used in _DAC_Init: [wreg]
  5850  057C  30FB               	movlw	251
  5851  057D  0021               	movlb	1	; select bank1
  5852  057E  008C               	movwf	12	;volatile
  5853                           
  5854                           ;DAC.c: 32:     DAC1CON0 = 0xE0;
  5855  057F  30E0               	movlw	224
  5856  0580  002B               	movlb	11	; select bank11
  5857  0581  008E               	movwf	14	;volatile
  5858  0582  0008               	return
  5859  0583                     __end_of_DAC_Init:	
  5860                           
  5861                           	psect	intentry
  5862  0004                     __pintentry:	
  5863 ;; *************** function _isr *****************
  5864 ;; Defined at:
  5865 ;;		line 122 in file "main.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;		None
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;  level           2    0[COMMON] short 
  5870 ;; Return value:  Size  Location     Type
  5871 ;;                  1    wreg      void 
  5872 ;; Registers used:
  5873 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5874 ;; Tracked objects:
  5875 ;;		On entry : 0/0
  5876 ;;		On exit  : 0/0
  5877 ;;		Unchanged: 0/0
  5878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5880 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5882 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5883 ;;Total ram usage:        2 bytes
  5884 ;; Hardware stack levels used:    1
  5885 ;; This function calls:
  5886 ;;		Nothing
  5887 ;; This function is called by:
  5888 ;;		Interrupt level 1
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892  0004                     _isr:	
  5893                           
  5894                           ;incstack = 0
  5895  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5896                           
  5897                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  5898  0005  3180               	pagesel	$
  5899                           
  5900                           ;main.c: 123:     PIR1bits.TMR2IF = 0;
  5901  0006  0020               	movlb	0	; select bank0
  5902  0007  1091               	bcf	17,1	;volatile
  5903                           
  5904                           ;main.c: 124:     PORTCbits.RC0 = 1;
  5905  0008  140E               	bsf	14,0	;volatile
  5906                           
  5907                           ;main.c: 126:     short level = buffer[buffer_read_index++];
  5908  0009  3563               	lslf	_buffer_read_index,w
  5909  000A  3EA0               	addlw	(low (_buffer| 0))& (0+255)
  5910  000B  0086               	movwf	6
  5911  000C  0187               	clrf	7
  5912  000D  3F40               	moviw [0]fsr1
  5913  000E  00F0               	movwf	isr@level
  5914  000F  3F41               	moviw [1]fsr1
  5915  0010  00F1               	movwf	isr@level+1
  5916  0011  3001               	movlw	1
  5917  0012  07E3               	addwf	_buffer_read_index,f
  5918  0013  3000               	movlw	0
  5919  0014  3DE4               	addwfc	_buffer_read_index+1,f
  5920                           
  5921                           ;main.c: 127:     DAC1REFH = (level & 0xff00) >> 8;
  5922  0015  0871               	movf	isr@level+1,w
  5923  0016  002B               	movlb	11	; select bank11
  5924  0017  0090               	movwf	16	;volatile
  5925                           
  5926                           ;main.c: 128:     DAC1REFL = (level & 0x00C0) << 8;
  5927  0018  018F               	clrf	15	;volatile
  5928                           
  5929                           ;main.c: 129:     DAC1LD = 1;
  5930  0019  140D               	bsf	13,0	;volatile
  5931                           
  5932                           ;main.c: 131:     if (buffer_read_index >= 16) buffer_read_index = 0;
  5933  001A  3000               	movlw	0
  5934  001B  0020               	movlb	0	; select bank0
  5935  001C  0264               	subwf	_buffer_read_index+1,w
  5936  001D  3010               	movlw	16
  5937  001E  1903               	skipnz
  5938  001F  0263               	subwf	_buffer_read_index,w
  5939  0020  1C03               	skipc
  5940  0021  2824               	goto	i1l1825
  5941  0022  01E3               	clrf	_buffer_read_index
  5942  0023  01E4               	clrf	_buffer_read_index+1
  5943  0024                     i1l1825:	
  5944                           
  5945                           ;main.c: 132:     PORTCbits.RC0 = 0;
  5946  0024  100E               	bcf	14,0	;volatile
  5947  0025  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5948  0026  0009               	retfie
  5949  0027                     __end_of_isr:	
  5950  007E                     btemp	set	126	;btemp
  5951  007E                     int$flags	set	126
  5952  007E                     wtemp0	set	126


Data Sizes:
    Strings     20
    Constant    256
    Data        11
    BSS         56
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     65      79
    BANK1            80      4      55
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    readBytes@dest	PTR unsigned char  size(1) Largest target is 28
		 -> openFile@data(BANK0[8]), openFile@fmt(BANK0[28]), openFile@riff(BANK0[8]), 

    fourCCeq@b	PTR unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), STR_6(CODE[5]), STR_4(CODE[5]), STR_2(CODE[5]), 

    fourCCeq@a	PTR unsigned char  size(1) Largest target is 28
		 -> openFile@data(BANK0[8]), fmt.fmtHeader(BANK0[8]), openFile@fmt(BANK0[28]), openFile@riff(BANK0[8]), 


Critical Paths under _main in COMMON

    _openFile->_fourCCeq
    _SD_OpenStream->_SD_SendCommand
    _init->_SD_Init
    _SD_Init->_SD_Check40bitResponse
    _SD_Init->_SD_SendCommand
    _SD_SendCommand->_SPI_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_openFile
    _openFile->_SD_OpenStream
    _SD_OpenStream->_SD_SendCommand
    _SD_Init->_SD_SendCommand

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9894
                                              0 BANK1      4     4      0
                           _SPI_Read
                               _init
                           _openFile
                         _timer_Init
 ---------------------------------------------------------------------------------
 (1) _timer_Init                                           4     0      4      98
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _openFile                                            50    46      4    5573
                                             15 BANK0     50    46      4
                      _SD_OpenStream
                           _SPI_Read
                              _error
                           _fourCCeq
                          _readBytes
 ---------------------------------------------------------------------------------
 (2) _readBytes                                            7     5      2     417
                                              2 COMMON     7     5      2
                      _SD_CloseBlock
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SD_CloseBlock                                        0     0      0       0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (2) _fourCCeq                                             8     6      2     570
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _error                                                2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SD_OpenStream                                       12     8      4    3961
                                              3 BANK0     12     8      4
               _SD_Check8bitResponse
                _SD_Read8bitResponse
                     _SD_SendCommand
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    4223
                           _DAC_Init
                            _SD_Init
                           _SPI_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SD_Init                                              1     1      0    4223
                                              8 COMMON     1     1      0
              _SD_Check40bitResponse
               _SD_Check8bitResponse
               _SD_Read40bitResponse
                _SD_Read8bitResponse
                     _SD_SendCommand
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SD_SendCommand                                       8     4      4    3612
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (4) _SPI_Write                                            1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SD_Read8bitResponse                                  2     2      0      46
                                              2 COMMON     2     2      0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SD_Read40bitResponse                                 2     2      0      46
                                              2 COMMON     2     2      0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SPI_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SD_Check8bitResponse                                 2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _SD_Check40bitResponse                                6     2      4     442
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _DAC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Read
   _init
     _DAC_Init
     _SD_Init
       _SD_Check40bitResponse
       _SD_Check8bitResponse
       _SD_Read40bitResponse
         _SPI_Read
       _SD_Read8bitResponse
         _SPI_Read
       _SD_SendCommand
         _SPI_Write
       _SPI_Write
     _SPI_Init
   _openFile
     _SD_OpenStream
       _SD_Check8bitResponse
       _SD_Read8bitResponse
         _SPI_Read
       _SD_SendCommand
         _SPI_Write
     _SPI_Read
     _error
     _fourCCeq
     _readBytes
       _SD_CloseBlock
         _SPI_Read
       _SPI_Read
   _timer_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BIGRAM             3F0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITCOMMON            E      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
COMMON               E      A       C       3       85.7%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
STACK                0      0       0       4        0.0%
BANK0               50     41      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK0            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      4      37       8       68.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
ABS                  0      0      92      13        0.0%
BITBANK4            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK5            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK6            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK7            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK8            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK9            50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9               50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK10           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITBANK11           50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
DATA                 0      0      92      30        0.0%
BITBANK12           30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12              30      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK13           50      0       0      33        0.0%
BANK13              50      0       0      34        0.0%
BITBANK14           50      0       0      35        0.0%
BANK14              50      0       0      36        0.0%
BITBANK15           50      0       0      37        0.0%
BANK15              50      0       0      38        0.0%
BITBANK16           50      0       0      39        0.0%
BANK16              50      0       0      40        0.0%
BITBANK17           50      0       0      41        0.0%
BANK17              50      0       0      42        0.0%
BITBANK18           50      0       0      43        0.0%
BANK18              50      0       0      44        0.0%
BITBANK19           50      0       0      45        0.0%
BANK19              50      0       0      46        0.0%
BITBANK20           50      0       0      47        0.0%
BANK20              50      0       0      48        0.0%
BITBANK21           50      0       0      49        0.0%
BANK21              50      0       0      50        0.0%
BITBANK22           50      0       0      51        0.0%
BANK22              50      0       0      52        0.0%
BITBANK23           50      0       0      53        0.0%
BANK23              50      0       0      54        0.0%
BITBANK24           50      0       0      55        0.0%
BANK24              50      0       0      56        0.0%
BITBANK25           20      0       0      57        0.0%
BANK25              20      0       0      58        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Apr 04 22:09:29 2019

                            l112 0572                              l118 0578                              l138 043B  
                            l280 02A8                              l259 052F                              l278 025D  
                            u535 0465                              u545 0449                              u915 024B  
                            u925 0266                              _isr 0004                              wreg 0009  
                 ?_SD_OpenStream 0023           ??_SD_Check8bitResponse 0072                  ?_SD_SendCommand 0073  
           SD_OpenStream@address 0023                             l2123 017A                             l2133 0199  
                           l2151 01D2                             l2143 01BF                             l2127 0182  
                           l2161 01FA                             l2091 03AC                             l2147 01C8  
                           l2139 01B0                             l2235 02A3                             l2085 038D  
                           l2237 0239                             l1519 047F                             l2079 037A  
                           l1633 04AE                             l2195 020C                             l2381 0436  
                           l1639 04C7                             l1663 047A                             l2391 0431  
                           l2383 041D                             l1671 03DD                             l1497 0544  
                           l1665 043F                             l2385 0422                             l2387 0427  
                           l2379 040C                             l1691 03F7                             l2389 042C  
                           l1693 03FF                             l1685 03EF                             l1679 03E7  
                           l1699 0407                             ?_isr 0070                             STR_1 0599  
                           STR_2 0599                             STR_3 0594                             STR_4 0594  
                           STR_5 015C                             STR_6 015C                             STR_7 059E  
                           STR_8 059E                             _T2PR 0494                             _main 0209  
                           _init 052C                  __end_of_SD_Init 03D6                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
               __end_of_DAC_Init 0583                             start 0027    __size_of_SD_Read40bitResponse 002D  
                ??_SD_CloseBlock 0072     __size_of_SD_Read8bitResponse 0010                 __end_of_CRCTable 015C  
                          ??_isr 0070                    __CFG_PLLEN$ON 0000                            ?_main 0070  
                          ?_init 0070                    __CFG_WDTE$OFF 0000                            _ANSB1 0C69  
                          _ANSC3 0C73                            _T2CON 0495                            _TRISA 008C  
                          _error 0566                            _sdata 0065                            _state 007A  
               __end_of_SPI_Init 0512                 __end_of_SPI_Read 057C                            status 0003  
                          wtemp0 007E               __size_of_SPI_Write 0007                  __initialization 0029  
                   __end_of_main 02AB                     __end_of_init 0544               _buffer_write_index 006B  
                         ??_main 00D3                           ??_init 0079         SD_Check8bitResponse@Byte 0072  
                ??_SD_OpenStream 0027                           _DAC1LD 2C68                           ?_error 0070  
                      ??_SD_Init 0078                           _RC2PPS 0EA2                           _RC4PPS 0EA4  
                         i1l1825 0024                           _OSCCON 009B                           _TRISB0 0468  
                         _TRISB1 0469                           _TRISC0 0470                           _TRISC1 0471  
                         _TRISC2 0472                           _TRISC3 0473                           _TRISC4 0474  
                         _TRISC6 0476                           _TRISC7 0477                 __end_of_fourCCeq 04D1  
                         _buffer 00A0         SD_SendCommand@ByteToSend 0021                 __end_of_openFile 0209  
              __end_of_SPI_Write 0575                           error@e 0073                     __pdataCOMMON 007A  
                      ?_DAC_Init 0070          __end_of__initialization 0058   __size_of_SD_Check40bitResponse 001A  
  __end_of_SD_Check40bitResponse 052C                   __pcstackCOMMON 0070                     __pidataBANK0 05A3  
                   __pidataBANK1 058F                    __end_of_error 056E                        ?_SPI_Init 0070  
                      ?_SPI_Read 0070                 ??_SD_SendCommand 0077                       ??_DAC_Init 0072  
            _SD_Read8bitResponse 0544                          ??_error 0072                       __pbssBANK0 0061  
                     __pbssBANK1 00A0               __size_of_readBytes 0043                       __pmaintext 0209  
           ?_SD_Read8bitResponse 0070                       _blockIndex 0061                      openFile@fmt 0045  
                     __pintentry 0004                       ??_SPI_Init 0072                       ??_SPI_Read 0072  
   __end_of_SD_Read40bitResponse 04AC                          _SSP1ADD 0212                          _SSP1BUF 0211  
                        _SD_Init 034A    __size_of_SD_Check8bitResponse 0009                        ?_fourCCeq 0072  
                   readBytes@len 0072                        ?_openFile 002F            ??_SD_Read8bitResponse 0072  
          __end_of_SD_CloseBlock 055D                          _address 00C0                          __ptext1 03D6  
                        __ptext2 0161                          __ptext3 043C                          __ptext4 0554  
                        __ptext5 04AC                          __ptext6 0566                          __ptext7 04D1  
                        __ptext8 052C                          __ptext9 04F5                   SD_OpenStream@a 002B  
              __end_of_readBytes 047F                     __size_of_isr 0023                          clrloop0 058A  
           end_of_initialization 0058                       ??_fourCCeq 0074       SD_Check40bitResponse@Byte0 0075  
     SD_Check40bitResponse@Byte1 0074       SD_Check40bitResponse@Byte2 0073       SD_Check40bitResponse@Byte3 0072  
     SD_Check40bitResponse@Byte4 0076                          init_ram 0583                          initloop 0584  
     SD_Check40bitResponse@match 0077                       ??_openFile 0033                       _timer_Init 03D6  
                      _PORTCbits 000E                        _SSPDATPPS 0E3B                        _SSPCLKPPS 0E3A  
               __CFG_FOSC$INTOSC 0000            __end_of_SD_OpenStream 04F5                        _SPI_Write 056E  
              __size_of_DAC_Init 0007  SD_Read40bitResponse@readMessage 0073             _SD_Read40bitResponse 047F  
                   _global_error 006A                    __pidataCOMMON 05A7                __size_of_SPI_Init 001D  
              __size_of_SPI_Read 0007              start_initialization 0029               SPI_Write@Data_8bit 0072  
                    __end_of_isr 0027                       ?_SPI_Write 0070            ?_SD_Read40bitResponse 0070  
                  _samplePending 0069                       readBytes@i 0077            _SD_Check40bitResponse 0512  
                    __pdataBANK0 006B                      __pdataBANK1 00CE                      ?_timer_Init 0072  
                      ___latbits 0003                    __pcstackBANK0 0020                    __pcstackBANK1 00D3  
                       ?_SD_Init 0070                __size_of_fourCCeq 0025                __size_of_openFile 00A8  
   __end_of_SD_Check8bitResponse 0566                     openFile@data 003D                     openFile@riff 0034  
                       _DAC1CON0 058E                         _DAC1REFH 0590                         _DAC1REFL 058F  
                      _isPlaying 006D                      _bitsPerSamp 00CC                      _GLBL_Resp40 00CE  
                       _DAC_Init 057C                      ??_SPI_Write 0072                        _readBytes 043C  
                 __size_of_error 0008                         _T2CLKCON 0497                         _CRCTable 005C  
        __size_of_SD_SendCommand 009F              __size_of_timer_Init 0066           ??_SD_Read40bitResponse 0072  
    __end_of_SD_Read8bitResponse 0554                        clear_ram0 0589                         _PIE1bits 0091  
         SD_SendCommand@CMD_6bit 0020                         _PIR1bits 0011           ?_SD_Check40bitResponse 0072  
                       _SSP1CON1 0215                         _SSP1STAT 0214                         _SPI_Init 04F5  
                       _SPI_Read 0575                       ?_readBytes 0072           __size_of_SD_CloseBlock 0009  
               __size_of_SD_Init 008C                        fourCCeq@a 0078                        fourCCeq@b 0072  
                      fourCCeq@i 0079                    readBytes@dest 0076           SD_SendCommand@Checksum 0022  
                    _readMessage 006E                         _channels 0067                        openFile@a 002F  
                       __ptext10 034A                         __ptext11 02AB                         __ptext12 056E  
                       __ptext13 0544                         __ptext14 047F                         __ptext15 0575  
                       __ptext16 055D                         __ptext17 0512                         __ptext18 057C  
                   _SSP1CON1bits 0215                         _filesize 00C4             _SD_Check8bitResponse 055D  
                       _fourCCeq 04AC                       _GLBL_Resp8 007B                    __size_of_main 00A2  
                  __size_of_init 0018               SD_SendCommand@ARG0 0076               SD_SendCommand@ARG1 0075  
             SD_SendCommand@ARG2 0074               SD_SendCommand@ARG3 0073                         _sampRate 00C8  
                       _openFile 0161           __size_of_SD_OpenStream 0024                         int$flags 007E  
                  _SD_CloseBlock 0554                     ??_timer_Init 0076                     _SSP1STATbits 0214  
                    _OSCSTATbits 009C                 openFile@response 003C   SD_Read8bitResponse@readMessage 0073  
                     _INTCONbits 000B                         isr@level 0070                      ??_readBytes 0074  
          ?_SD_Check8bitResponse 0070                         intlevel1 0000                   _SD_SendCommand 02AB  
      SD_Check8bitResponse@match 0073               __end_of_timer_Init 043C                   timer_Init@rate 0072  
                 ?_SD_CloseBlock 0070                _buffer_read_index 0063                    __pstringtext1 005C  
                  __pstringtext2 0594                    __pstringtext3 0599                    __pstringtext4 059E  
                  __pstringtext5 0000                    _SD_OpenStream 04D1           __end_of_SD_SendCommand 034A  
        ??_SD_Check40bitResponse 0076  
