

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Apr 04 16:10:36 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1778
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	dabs	1,0xCA0,32
    43                           	dabs	1,0xC20,80
    44                           	dabs	1,0xBA0,80
    45                           	dabs	1,0xB30,64
    46                           	dabs	1,0x26F0,0,_buffer
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.05
    50                           ; Generated 20/12/2018 GMT
    51                           ; 
    52                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F1778 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  0111                     	;# 
   139  0112                     	;# 
   140  0113                     	;# 
   141  0114                     	;# 
   142  0115                     	;# 
   143  0116                     	;# 
   144  0117                     	;# 
   145  0118                     	;# 
   146  0119                     	;# 
   147  011A                     	;# 
   148  011B                     	;# 
   149  011C                     	;# 
   150  011D                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  018E                     	;# 
   154  0191                     	;# 
   155  0191                     	;# 
   156  0192                     	;# 
   157  0193                     	;# 
   158  0193                     	;# 
   159  0194                     	;# 
   160  0195                     	;# 
   161  0196                     	;# 
   162  0197                     	;# 
   163  0199                     	;# 
   164  0199                     	;# 
   165  0199                     	;# 
   166  019A                     	;# 
   167  019A                     	;# 
   168  019A                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019B                     	;# 
   173  019B                     	;# 
   174  019C                     	;# 
   175  019C                     	;# 
   176  019C                     	;# 
   177  019D                     	;# 
   178  019D                     	;# 
   179  019D                     	;# 
   180  019E                     	;# 
   181  019E                     	;# 
   182  019E                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  019F                     	;# 
   186  019F                     	;# 
   187  019F                     	;# 
   188  020C                     	;# 
   189  020D                     	;# 
   190  020E                     	;# 
   191  0210                     	;# 
   192  0211                     	;# 
   193  0211                     	;# 
   194  0212                     	;# 
   195  0212                     	;# 
   196  0213                     	;# 
   197  0213                     	;# 
   198  0214                     	;# 
   199  0214                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0215                     	;# 
   204  0216                     	;# 
   205  0216                     	;# 
   206  0217                     	;# 
   207  0217                     	;# 
   208  021B                     	;# 
   209  021C                     	;# 
   210  021D                     	;# 
   211  021E                     	;# 
   212  021F                     	;# 
   213  028C                     	;# 
   214  028D                     	;# 
   215  028E                     	;# 
   216  0291                     	;# 
   217  0291                     	;# 
   218  0292                     	;# 
   219  0293                     	;# 
   220  0294                     	;# 
   221  0295                     	;# 
   222  0295                     	;# 
   223  0296                     	;# 
   224  0297                     	;# 
   225  0298                     	;# 
   226  0299                     	;# 
   227  0299                     	;# 
   228  029A                     	;# 
   229  029B                     	;# 
   230  029C                     	;# 
   231  029E                     	;# 
   232  029F                     	;# 
   233  030C                     	;# 
   234  030D                     	;# 
   235  030E                     	;# 
   236  0315                     	;# 
   237  0316                     	;# 
   238  0317                     	;# 
   239  0318                     	;# 
   240  0319                     	;# 
   241  031B                     	;# 
   242  031C                     	;# 
   243  031D                     	;# 
   244  031E                     	;# 
   245  031F                     	;# 
   246  038C                     	;# 
   247  038D                     	;# 
   248  038E                     	;# 
   249  0390                     	;# 
   250  0391                     	;# 
   251  0392                     	;# 
   252  0393                     	;# 
   253  0394                     	;# 
   254  0395                     	;# 
   255  0396                     	;# 
   256  0397                     	;# 
   257  0398                     	;# 
   258  0399                     	;# 
   259  039D                     	;# 
   260  039E                     	;# 
   261  039F                     	;# 
   262  040D                     	;# 
   263  040F                     	;# 
   264  040F                     	;# 
   265  0410                     	;# 
   266  0411                     	;# 
   267  0412                     	;# 
   268  0413                     	;# 
   269  0413                     	;# 
   270  0414                     	;# 
   271  0414                     	;# 
   272  0415                     	;# 
   273  0416                     	;# 
   274  0417                     	;# 
   275  0418                     	;# 
   276  041A                     	;# 
   277  041A                     	;# 
   278  041B                     	;# 
   279  041B                     	;# 
   280  041C                     	;# 
   281  041D                     	;# 
   282  041E                     	;# 
   283  041F                     	;# 
   284  048E                     	;# 
   285  048E                     	;# 
   286  048F                     	;# 
   287  0490                     	;# 
   288  0491                     	;# 
   289  0492                     	;# 
   290  0493                     	;# 
   291  0493                     	;# 
   292  0494                     	;# 
   293  0494                     	;# 
   294  0495                     	;# 
   295  0496                     	;# 
   296  0497                     	;# 
   297  0498                     	;# 
   298  049A                     	;# 
   299  049A                     	;# 
   300  049B                     	;# 
   301  049B                     	;# 
   302  049C                     	;# 
   303  049D                     	;# 
   304  049E                     	;# 
   305  049F                     	;# 
   306  050F                     	;# 
   307  0510                     	;# 
   308  0511                     	;# 
   309  0512                     	;# 
   310  0513                     	;# 
   311  0514                     	;# 
   312  0515                     	;# 
   313  0516                     	;# 
   314  0517                     	;# 
   315  0518                     	;# 
   316  0519                     	;# 
   317  051A                     	;# 
   318  058D                     	;# 
   319  058E                     	;# 
   320  058F                     	;# 
   321  058F                     	;# 
   322  058F                     	;# 
   323  0590                     	;# 
   324  0590                     	;# 
   325  0591                     	;# 
   326  0592                     	;# 
   327  0592                     	;# 
   328  0592                     	;# 
   329  0593                     	;# 
   330  0593                     	;# 
   331  0594                     	;# 
   332  0595                     	;# 
   333  0595                     	;# 
   334  0596                     	;# 
   335  0597                     	;# 
   336  0597                     	;# 
   337  0598                     	;# 
   338  0599                     	;# 
   339  0599                     	;# 
   340  0599                     	;# 
   341  059A                     	;# 
   342  059A                     	;# 
   343  059E                     	;# 
   344  059F                     	;# 
   345  059F                     	;# 
   346  0614                     	;# 
   347  0614                     	;# 
   348  0615                     	;# 
   349  0616                     	;# 
   350  0617                     	;# 
   351  0617                     	;# 
   352  0618                     	;# 
   353  0619                     	;# 
   354  061A                     	;# 
   355  061A                     	;# 
   356  061B                     	;# 
   357  061C                     	;# 
   358  068D                     	;# 
   359  068E                     	;# 
   360  068F                     	;# 
   361  0690                     	;# 
   362  0691                     	;# 
   363  0692                     	;# 
   364  0693                     	;# 
   365  0694                     	;# 
   366  0695                     	;# 
   367  0696                     	;# 
   368  0697                     	;# 
   369  0698                     	;# 
   370  0699                     	;# 
   371  069A                     	;# 
   372  069B                     	;# 
   373  069C                     	;# 
   374  069D                     	;# 
   375  069E                     	;# 
   376  069F                     	;# 
   377  070D                     	;# 
   378  070E                     	;# 
   379  070F                     	;# 
   380  0710                     	;# 
   381  0711                     	;# 
   382  0712                     	;# 
   383  0713                     	;# 
   384  0714                     	;# 
   385  0715                     	;# 
   386  0716                     	;# 
   387  0717                     	;# 
   388  0718                     	;# 
   389  0719                     	;# 
   390  071A                     	;# 
   391  071B                     	;# 
   392  071C                     	;# 
   393  071D                     	;# 
   394  071E                     	;# 
   395  071F                     	;# 
   396  078E                     	;# 
   397  078F                     	;# 
   398  0790                     	;# 
   399  0791                     	;# 
   400  0792                     	;# 
   401  0793                     	;# 
   402  0794                     	;# 
   403  0795                     	;# 
   404  0796                     	;# 
   405  0797                     	;# 
   406  0798                     	;# 
   407  0799                     	;# 
   408  079A                     	;# 
   409  079B                     	;# 
   410  079C                     	;# 
   411  079D                     	;# 
   412  079E                     	;# 
   413  079F                     	;# 
   414  080D                     	;# 
   415  080E                     	;# 
   416  080F                     	;# 
   417  0810                     	;# 
   418  0811                     	;# 
   419  0812                     	;# 
   420  0813                     	;# 
   421  0814                     	;# 
   422  0815                     	;# 
   423  0816                     	;# 
   424  0817                     	;# 
   425  0818                     	;# 
   426  0819                     	;# 
   427  081A                     	;# 
   428  081B                     	;# 
   429  081C                     	;# 
   430  081D                     	;# 
   431  081E                     	;# 
   432  081F                     	;# 
   433  090C                     	;# 
   434  090D                     	;# 
   435  090E                     	;# 
   436  090F                     	;# 
   437  0910                     	;# 
   438  0911                     	;# 
   439  0912                     	;# 
   440  0913                     	;# 
   441  0914                     	;# 
   442  0915                     	;# 
   443  0916                     	;# 
   444  0917                     	;# 
   445  0D8E                     	;# 
   446  0D8F                     	;# 
   447  0D90                     	;# 
   448  0D91                     	;# 
   449  0D91                     	;# 
   450  0D92                     	;# 
   451  0D93                     	;# 
   452  0D93                     	;# 
   453  0D94                     	;# 
   454  0D95                     	;# 
   455  0D95                     	;# 
   456  0D96                     	;# 
   457  0D97                     	;# 
   458  0D97                     	;# 
   459  0D98                     	;# 
   460  0D99                     	;# 
   461  0D99                     	;# 
   462  0D9A                     	;# 
   463  0D9B                     	;# 
   464  0D9C                     	;# 
   465  0D9C                     	;# 
   466  0D9D                     	;# 
   467  0D9D                     	;# 
   468  0D9E                     	;# 
   469  0D9F                     	;# 
   470  0DA0                     	;# 
   471  0DA1                     	;# 
   472  0DA1                     	;# 
   473  0DA2                     	;# 
   474  0DA3                     	;# 
   475  0DA3                     	;# 
   476  0DA4                     	;# 
   477  0DA5                     	;# 
   478  0DA5                     	;# 
   479  0DA6                     	;# 
   480  0DA7                     	;# 
   481  0DA7                     	;# 
   482  0DA8                     	;# 
   483  0DA9                     	;# 
   484  0DA9                     	;# 
   485  0DAA                     	;# 
   486  0DAB                     	;# 
   487  0DAC                     	;# 
   488  0DAC                     	;# 
   489  0DAD                     	;# 
   490  0DAD                     	;# 
   491  0DAE                     	;# 
   492  0DAF                     	;# 
   493  0DB0                     	;# 
   494  0DB1                     	;# 
   495  0DB1                     	;# 
   496  0DB2                     	;# 
   497  0DB3                     	;# 
   498  0DB3                     	;# 
   499  0DB4                     	;# 
   500  0DB5                     	;# 
   501  0DB5                     	;# 
   502  0DB6                     	;# 
   503  0DB7                     	;# 
   504  0DB7                     	;# 
   505  0DB8                     	;# 
   506  0DB9                     	;# 
   507  0DB9                     	;# 
   508  0DBA                     	;# 
   509  0DBB                     	;# 
   510  0DBC                     	;# 
   511  0DBC                     	;# 
   512  0DBD                     	;# 
   513  0DBD                     	;# 
   514  0DBE                     	;# 
   515  0DBF                     	;# 
   516  0DC0                     	;# 
   517  0E0C                     	;# 
   518  0E0D                     	;# 
   519  0E0E                     	;# 
   520  0E0F                     	;# 
   521  0E10                     	;# 
   522  0E11                     	;# 
   523  0E12                     	;# 
   524  0E13                     	;# 
   525  0E14                     	;# 
   526  0E15                     	;# 
   527  0E15                     	;# 
   528  0E15                     	;# 
   529  0E16                     	;# 
   530  0E16                     	;# 
   531  0E16                     	;# 
   532  0E17                     	;# 
   533  0E17                     	;# 
   534  0E17                     	;# 
   535  0E18                     	;# 
   536  0E18                     	;# 
   537  0E18                     	;# 
   538  0E19                     	;# 
   539  0E1A                     	;# 
   540  0E1B                     	;# 
   541  0E1D                     	;# 
   542  0E1E                     	;# 
   543  0E1F                     	;# 
   544  0E21                     	;# 
   545  0E22                     	;# 
   546  0E23                     	;# 
   547  0E24                     	;# 
   548  0E25                     	;# 
   549  0E26                     	;# 
   550  0E27                     	;# 
   551  0E28                     	;# 
   552  0E29                     	;# 
   553  0E2D                     	;# 
   554  0E2E                     	;# 
   555  0E2F                     	;# 
   556  0E30                     	;# 
   557  0E31                     	;# 
   558  0E32                     	;# 
   559  0E35                     	;# 
   560  0E36                     	;# 
   561  0E37                     	;# 
   562  0E38                     	;# 
   563  0E39                     	;# 
   564  0E3A                     	;# 
   565  0E3B                     	;# 
   566  0E3C                     	;# 
   567  0E3D                     	;# 
   568  0E3E                     	;# 
   569  0E90                     	;# 
   570  0E91                     	;# 
   571  0E92                     	;# 
   572  0E93                     	;# 
   573  0E94                     	;# 
   574  0E95                     	;# 
   575  0E96                     	;# 
   576  0E97                     	;# 
   577  0E98                     	;# 
   578  0E99                     	;# 
   579  0E9A                     	;# 
   580  0E9B                     	;# 
   581  0E9C                     	;# 
   582  0E9D                     	;# 
   583  0E9E                     	;# 
   584  0E9F                     	;# 
   585  0EA0                     	;# 
   586  0EA1                     	;# 
   587  0EA2                     	;# 
   588  0EA3                     	;# 
   589  0EA4                     	;# 
   590  0EA5                     	;# 
   591  0EA6                     	;# 
   592  0EA7                     	;# 
   593  0F0F                     	;# 
   594  0F10                     	;# 
   595  0F11                     	;# 
   596  0F12                     	;# 
   597  0F13                     	;# 
   598  0F14                     	;# 
   599  0F15                     	;# 
   600  0F16                     	;# 
   601  0F17                     	;# 
   602  0F18                     	;# 
   603  0F19                     	;# 
   604  0F1A                     	;# 
   605  0F1B                     	;# 
   606  0F1C                     	;# 
   607  0F1D                     	;# 
   608  0F1E                     	;# 
   609  0F1F                     	;# 
   610  0F20                     	;# 
   611  0F21                     	;# 
   612  0F22                     	;# 
   613  0F23                     	;# 
   614  0F24                     	;# 
   615  0F25                     	;# 
   616  0F26                     	;# 
   617  0F27                     	;# 
   618  0F28                     	;# 
   619  0F29                     	;# 
   620  0F2A                     	;# 
   621  0F2B                     	;# 
   622  0F2C                     	;# 
   623  0F2D                     	;# 
   624  0F2E                     	;# 
   625  0F2F                     	;# 
   626  0F30                     	;# 
   627  0F31                     	;# 
   628  0F32                     	;# 
   629  0F33                     	;# 
   630  0F34                     	;# 
   631  0F35                     	;# 
   632  0F36                     	;# 
   633  0F37                     	;# 
   634  0FE4                     	;# 
   635  0FE5                     	;# 
   636  0FE6                     	;# 
   637  0FE7                     	;# 
   638  0FE8                     	;# 
   639  0FE9                     	;# 
   640  0FEA                     	;# 
   641  0FEB                     	;# 
   642  0FED                     	;# 
   643  0FEE                     	;# 
   644  0FEF                     	;# 
   645  0000                     	;# 
   646  0001                     	;# 
   647  0002                     	;# 
   648  0003                     	;# 
   649  0004                     	;# 
   650  0005                     	;# 
   651  0006                     	;# 
   652  0007                     	;# 
   653  0008                     	;# 
   654  0009                     	;# 
   655  000A                     	;# 
   656  000B                     	;# 
   657  000C                     	;# 
   658  000D                     	;# 
   659  000E                     	;# 
   660  0010                     	;# 
   661  0011                     	;# 
   662  0012                     	;# 
   663  0013                     	;# 
   664  0014                     	;# 
   665  0015                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0018                     	;# 
   670  0019                     	;# 
   671  001A                     	;# 
   672  001B                     	;# 
   673  001C                     	;# 
   674  001C                     	;# 
   675  001D                     	;# 
   676  001E                     	;# 
   677  001F                     	;# 
   678  008C                     	;# 
   679  008D                     	;# 
   680  008E                     	;# 
   681  0090                     	;# 
   682  0091                     	;# 
   683  0092                     	;# 
   684  0093                     	;# 
   685  0094                     	;# 
   686  0095                     	;# 
   687  0096                     	;# 
   688  0097                     	;# 
   689  0098                     	;# 
   690  0099                     	;# 
   691  009A                     	;# 
   692  009B                     	;# 
   693  009C                     	;# 
   694  009D                     	;# 
   695  009E                     	;# 
   696  009F                     	;# 
   697  010C                     	;# 
   698  010D                     	;# 
   699  010E                     	;# 
   700  0111                     	;# 
   701  0112                     	;# 
   702  0113                     	;# 
   703  0114                     	;# 
   704  0115                     	;# 
   705  0116                     	;# 
   706  0117                     	;# 
   707  0118                     	;# 
   708  0119                     	;# 
   709  011A                     	;# 
   710  011B                     	;# 
   711  011C                     	;# 
   712  011D                     	;# 
   713  018C                     	;# 
   714  018D                     	;# 
   715  018E                     	;# 
   716  0191                     	;# 
   717  0191                     	;# 
   718  0192                     	;# 
   719  0193                     	;# 
   720  0193                     	;# 
   721  0194                     	;# 
   722  0195                     	;# 
   723  0196                     	;# 
   724  0197                     	;# 
   725  0199                     	;# 
   726  0199                     	;# 
   727  0199                     	;# 
   728  019A                     	;# 
   729  019A                     	;# 
   730  019A                     	;# 
   731  019B                     	;# 
   732  019B                     	;# 
   733  019B                     	;# 
   734  019B                     	;# 
   735  019B                     	;# 
   736  019C                     	;# 
   737  019C                     	;# 
   738  019C                     	;# 
   739  019D                     	;# 
   740  019D                     	;# 
   741  019D                     	;# 
   742  019E                     	;# 
   743  019E                     	;# 
   744  019E                     	;# 
   745  019F                     	;# 
   746  019F                     	;# 
   747  019F                     	;# 
   748  019F                     	;# 
   749  019F                     	;# 
   750  020C                     	;# 
   751  020D                     	;# 
   752  020E                     	;# 
   753  0210                     	;# 
   754  0211                     	;# 
   755  0211                     	;# 
   756  0212                     	;# 
   757  0212                     	;# 
   758  0213                     	;# 
   759  0213                     	;# 
   760  0214                     	;# 
   761  0214                     	;# 
   762  0215                     	;# 
   763  0215                     	;# 
   764  0215                     	;# 
   765  0215                     	;# 
   766  0216                     	;# 
   767  0216                     	;# 
   768  0217                     	;# 
   769  0217                     	;# 
   770  021B                     	;# 
   771  021C                     	;# 
   772  021D                     	;# 
   773  021E                     	;# 
   774  021F                     	;# 
   775  028C                     	;# 
   776  028D                     	;# 
   777  028E                     	;# 
   778  0291                     	;# 
   779  0291                     	;# 
   780  0292                     	;# 
   781  0293                     	;# 
   782  0294                     	;# 
   783  0295                     	;# 
   784  0295                     	;# 
   785  0296                     	;# 
   786  0297                     	;# 
   787  0298                     	;# 
   788  0299                     	;# 
   789  0299                     	;# 
   790  029A                     	;# 
   791  029B                     	;# 
   792  029C                     	;# 
   793  029E                     	;# 
   794  029F                     	;# 
   795  030C                     	;# 
   796  030D                     	;# 
   797  030E                     	;# 
   798  0315                     	;# 
   799  0316                     	;# 
   800  0317                     	;# 
   801  0318                     	;# 
   802  0319                     	;# 
   803  031B                     	;# 
   804  031C                     	;# 
   805  031D                     	;# 
   806  031E                     	;# 
   807  031F                     	;# 
   808  038C                     	;# 
   809  038D                     	;# 
   810  038E                     	;# 
   811  0390                     	;# 
   812  0391                     	;# 
   813  0392                     	;# 
   814  0393                     	;# 
   815  0394                     	;# 
   816  0395                     	;# 
   817  0396                     	;# 
   818  0397                     	;# 
   819  0398                     	;# 
   820  0399                     	;# 
   821  039D                     	;# 
   822  039E                     	;# 
   823  039F                     	;# 
   824  040D                     	;# 
   825  040F                     	;# 
   826  040F                     	;# 
   827  0410                     	;# 
   828  0411                     	;# 
   829  0412                     	;# 
   830  0413                     	;# 
   831  0413                     	;# 
   832  0414                     	;# 
   833  0414                     	;# 
   834  0415                     	;# 
   835  0416                     	;# 
   836  0417                     	;# 
   837  0418                     	;# 
   838  041A                     	;# 
   839  041A                     	;# 
   840  041B                     	;# 
   841  041B                     	;# 
   842  041C                     	;# 
   843  041D                     	;# 
   844  041E                     	;# 
   845  041F                     	;# 
   846  048E                     	;# 
   847  048E                     	;# 
   848  048F                     	;# 
   849  0490                     	;# 
   850  0491                     	;# 
   851  0492                     	;# 
   852  0493                     	;# 
   853  0493                     	;# 
   854  0494                     	;# 
   855  0494                     	;# 
   856  0495                     	;# 
   857  0496                     	;# 
   858  0497                     	;# 
   859  0498                     	;# 
   860  049A                     	;# 
   861  049A                     	;# 
   862  049B                     	;# 
   863  049B                     	;# 
   864  049C                     	;# 
   865  049D                     	;# 
   866  049E                     	;# 
   867  049F                     	;# 
   868  050F                     	;# 
   869  0510                     	;# 
   870  0511                     	;# 
   871  0512                     	;# 
   872  0513                     	;# 
   873  0514                     	;# 
   874  0515                     	;# 
   875  0516                     	;# 
   876  0517                     	;# 
   877  0518                     	;# 
   878  0519                     	;# 
   879  051A                     	;# 
   880  058D                     	;# 
   881  058E                     	;# 
   882  058F                     	;# 
   883  058F                     	;# 
   884  058F                     	;# 
   885  0590                     	;# 
   886  0590                     	;# 
   887  0591                     	;# 
   888  0592                     	;# 
   889  0592                     	;# 
   890  0592                     	;# 
   891  0593                     	;# 
   892  0593                     	;# 
   893  0594                     	;# 
   894  0595                     	;# 
   895  0595                     	;# 
   896  0596                     	;# 
   897  0597                     	;# 
   898  0597                     	;# 
   899  0598                     	;# 
   900  0599                     	;# 
   901  0599                     	;# 
   902  0599                     	;# 
   903  059A                     	;# 
   904  059A                     	;# 
   905  059E                     	;# 
   906  059F                     	;# 
   907  059F                     	;# 
   908  0614                     	;# 
   909  0614                     	;# 
   910  0615                     	;# 
   911  0616                     	;# 
   912  0617                     	;# 
   913  0617                     	;# 
   914  0618                     	;# 
   915  0619                     	;# 
   916  061A                     	;# 
   917  061A                     	;# 
   918  061B                     	;# 
   919  061C                     	;# 
   920  068D                     	;# 
   921  068E                     	;# 
   922  068F                     	;# 
   923  0690                     	;# 
   924  0691                     	;# 
   925  0692                     	;# 
   926  0693                     	;# 
   927  0694                     	;# 
   928  0695                     	;# 
   929  0696                     	;# 
   930  0697                     	;# 
   931  0698                     	;# 
   932  0699                     	;# 
   933  069A                     	;# 
   934  069B                     	;# 
   935  069C                     	;# 
   936  069D                     	;# 
   937  069E                     	;# 
   938  069F                     	;# 
   939  070D                     	;# 
   940  070E                     	;# 
   941  070F                     	;# 
   942  0710                     	;# 
   943  0711                     	;# 
   944  0712                     	;# 
   945  0713                     	;# 
   946  0714                     	;# 
   947  0715                     	;# 
   948  0716                     	;# 
   949  0717                     	;# 
   950  0718                     	;# 
   951  0719                     	;# 
   952  071A                     	;# 
   953  071B                     	;# 
   954  071C                     	;# 
   955  071D                     	;# 
   956  071E                     	;# 
   957  071F                     	;# 
   958  078E                     	;# 
   959  078F                     	;# 
   960  0790                     	;# 
   961  0791                     	;# 
   962  0792                     	;# 
   963  0793                     	;# 
   964  0794                     	;# 
   965  0795                     	;# 
   966  0796                     	;# 
   967  0797                     	;# 
   968  0798                     	;# 
   969  0799                     	;# 
   970  079A                     	;# 
   971  079B                     	;# 
   972  079C                     	;# 
   973  079D                     	;# 
   974  079E                     	;# 
   975  079F                     	;# 
   976  080D                     	;# 
   977  080E                     	;# 
   978  080F                     	;# 
   979  0810                     	;# 
   980  0811                     	;# 
   981  0812                     	;# 
   982  0813                     	;# 
   983  0814                     	;# 
   984  0815                     	;# 
   985  0816                     	;# 
   986  0817                     	;# 
   987  0818                     	;# 
   988  0819                     	;# 
   989  081A                     	;# 
   990  081B                     	;# 
   991  081C                     	;# 
   992  081D                     	;# 
   993  081E                     	;# 
   994  081F                     	;# 
   995  090C                     	;# 
   996  090D                     	;# 
   997  090E                     	;# 
   998  090F                     	;# 
   999  0910                     	;# 
  1000  0911                     	;# 
  1001  0912                     	;# 
  1002  0913                     	;# 
  1003  0914                     	;# 
  1004  0915                     	;# 
  1005  0916                     	;# 
  1006  0917                     	;# 
  1007  0D8E                     	;# 
  1008  0D8F                     	;# 
  1009  0D90                     	;# 
  1010  0D91                     	;# 
  1011  0D91                     	;# 
  1012  0D92                     	;# 
  1013  0D93                     	;# 
  1014  0D93                     	;# 
  1015  0D94                     	;# 
  1016  0D95                     	;# 
  1017  0D95                     	;# 
  1018  0D96                     	;# 
  1019  0D97                     	;# 
  1020  0D97                     	;# 
  1021  0D98                     	;# 
  1022  0D99                     	;# 
  1023  0D99                     	;# 
  1024  0D9A                     	;# 
  1025  0D9B                     	;# 
  1026  0D9C                     	;# 
  1027  0D9C                     	;# 
  1028  0D9D                     	;# 
  1029  0D9D                     	;# 
  1030  0D9E                     	;# 
  1031  0D9F                     	;# 
  1032  0DA0                     	;# 
  1033  0DA1                     	;# 
  1034  0DA1                     	;# 
  1035  0DA2                     	;# 
  1036  0DA3                     	;# 
  1037  0DA3                     	;# 
  1038  0DA4                     	;# 
  1039  0DA5                     	;# 
  1040  0DA5                     	;# 
  1041  0DA6                     	;# 
  1042  0DA7                     	;# 
  1043  0DA7                     	;# 
  1044  0DA8                     	;# 
  1045  0DA9                     	;# 
  1046  0DA9                     	;# 
  1047  0DAA                     	;# 
  1048  0DAB                     	;# 
  1049  0DAC                     	;# 
  1050  0DAC                     	;# 
  1051  0DAD                     	;# 
  1052  0DAD                     	;# 
  1053  0DAE                     	;# 
  1054  0DAF                     	;# 
  1055  0DB0                     	;# 
  1056  0DB1                     	;# 
  1057  0DB1                     	;# 
  1058  0DB2                     	;# 
  1059  0DB3                     	;# 
  1060  0DB3                     	;# 
  1061  0DB4                     	;# 
  1062  0DB5                     	;# 
  1063  0DB5                     	;# 
  1064  0DB6                     	;# 
  1065  0DB7                     	;# 
  1066  0DB7                     	;# 
  1067  0DB8                     	;# 
  1068  0DB9                     	;# 
  1069  0DB9                     	;# 
  1070  0DBA                     	;# 
  1071  0DBB                     	;# 
  1072  0DBC                     	;# 
  1073  0DBC                     	;# 
  1074  0DBD                     	;# 
  1075  0DBD                     	;# 
  1076  0DBE                     	;# 
  1077  0DBF                     	;# 
  1078  0DC0                     	;# 
  1079  0E0C                     	;# 
  1080  0E0D                     	;# 
  1081  0E0E                     	;# 
  1082  0E0F                     	;# 
  1083  0E10                     	;# 
  1084  0E11                     	;# 
  1085  0E12                     	;# 
  1086  0E13                     	;# 
  1087  0E14                     	;# 
  1088  0E15                     	;# 
  1089  0E15                     	;# 
  1090  0E15                     	;# 
  1091  0E16                     	;# 
  1092  0E16                     	;# 
  1093  0E16                     	;# 
  1094  0E17                     	;# 
  1095  0E17                     	;# 
  1096  0E17                     	;# 
  1097  0E18                     	;# 
  1098  0E18                     	;# 
  1099  0E18                     	;# 
  1100  0E19                     	;# 
  1101  0E1A                     	;# 
  1102  0E1B                     	;# 
  1103  0E1D                     	;# 
  1104  0E1E                     	;# 
  1105  0E1F                     	;# 
  1106  0E21                     	;# 
  1107  0E22                     	;# 
  1108  0E23                     	;# 
  1109  0E24                     	;# 
  1110  0E25                     	;# 
  1111  0E26                     	;# 
  1112  0E27                     	;# 
  1113  0E28                     	;# 
  1114  0E29                     	;# 
  1115  0E2D                     	;# 
  1116  0E2E                     	;# 
  1117  0E2F                     	;# 
  1118  0E30                     	;# 
  1119  0E31                     	;# 
  1120  0E32                     	;# 
  1121  0E35                     	;# 
  1122  0E36                     	;# 
  1123  0E37                     	;# 
  1124  0E38                     	;# 
  1125  0E39                     	;# 
  1126  0E3A                     	;# 
  1127  0E3B                     	;# 
  1128  0E3C                     	;# 
  1129  0E3D                     	;# 
  1130  0E3E                     	;# 
  1131  0E90                     	;# 
  1132  0E91                     	;# 
  1133  0E92                     	;# 
  1134  0E93                     	;# 
  1135  0E94                     	;# 
  1136  0E95                     	;# 
  1137  0E96                     	;# 
  1138  0E97                     	;# 
  1139  0E98                     	;# 
  1140  0E99                     	;# 
  1141  0E9A                     	;# 
  1142  0E9B                     	;# 
  1143  0E9C                     	;# 
  1144  0E9D                     	;# 
  1145  0E9E                     	;# 
  1146  0E9F                     	;# 
  1147  0EA0                     	;# 
  1148  0EA1                     	;# 
  1149  0EA2                     	;# 
  1150  0EA3                     	;# 
  1151  0EA4                     	;# 
  1152  0EA5                     	;# 
  1153  0EA6                     	;# 
  1154  0EA7                     	;# 
  1155  0F0F                     	;# 
  1156  0F10                     	;# 
  1157  0F11                     	;# 
  1158  0F12                     	;# 
  1159  0F13                     	;# 
  1160  0F14                     	;# 
  1161  0F15                     	;# 
  1162  0F16                     	;# 
  1163  0F17                     	;# 
  1164  0F18                     	;# 
  1165  0F19                     	;# 
  1166  0F1A                     	;# 
  1167  0F1B                     	;# 
  1168  0F1C                     	;# 
  1169  0F1D                     	;# 
  1170  0F1E                     	;# 
  1171  0F1F                     	;# 
  1172  0F20                     	;# 
  1173  0F21                     	;# 
  1174  0F22                     	;# 
  1175  0F23                     	;# 
  1176  0F24                     	;# 
  1177  0F25                     	;# 
  1178  0F26                     	;# 
  1179  0F27                     	;# 
  1180  0F28                     	;# 
  1181  0F29                     	;# 
  1182  0F2A                     	;# 
  1183  0F2B                     	;# 
  1184  0F2C                     	;# 
  1185  0F2D                     	;# 
  1186  0F2E                     	;# 
  1187  0F2F                     	;# 
  1188  0F30                     	;# 
  1189  0F31                     	;# 
  1190  0F32                     	;# 
  1191  0F33                     	;# 
  1192  0F34                     	;# 
  1193  0F35                     	;# 
  1194  0F36                     	;# 
  1195  0F37                     	;# 
  1196  0FE4                     	;# 
  1197  0FE5                     	;# 
  1198  0FE6                     	;# 
  1199  0FE7                     	;# 
  1200  0FE8                     	;# 
  1201  0FE9                     	;# 
  1202  0FEA                     	;# 
  1203  0FEB                     	;# 
  1204  0FED                     	;# 
  1205  0FEE                     	;# 
  1206  0FEF                     	;# 
  1207  0000                     	;# 
  1208  0001                     	;# 
  1209  0002                     	;# 
  1210  0003                     	;# 
  1211  0004                     	;# 
  1212  0005                     	;# 
  1213  0006                     	;# 
  1214  0007                     	;# 
  1215  0008                     	;# 
  1216  0009                     	;# 
  1217  000A                     	;# 
  1218  000B                     	;# 
  1219  000C                     	;# 
  1220  000D                     	;# 
  1221  000E                     	;# 
  1222  0010                     	;# 
  1223  0011                     	;# 
  1224  0012                     	;# 
  1225  0013                     	;# 
  1226  0014                     	;# 
  1227  0015                     	;# 
  1228  0016                     	;# 
  1229  0017                     	;# 
  1230  0018                     	;# 
  1231  0018                     	;# 
  1232  0019                     	;# 
  1233  001A                     	;# 
  1234  001B                     	;# 
  1235  001C                     	;# 
  1236  001C                     	;# 
  1237  001D                     	;# 
  1238  001E                     	;# 
  1239  001F                     	;# 
  1240  008C                     	;# 
  1241  008D                     	;# 
  1242  008E                     	;# 
  1243  0090                     	;# 
  1244  0091                     	;# 
  1245  0092                     	;# 
  1246  0093                     	;# 
  1247  0094                     	;# 
  1248  0095                     	;# 
  1249  0096                     	;# 
  1250  0097                     	;# 
  1251  0098                     	;# 
  1252  0099                     	;# 
  1253  009A                     	;# 
  1254  009B                     	;# 
  1255  009C                     	;# 
  1256  009D                     	;# 
  1257  009E                     	;# 
  1258  009F                     	;# 
  1259  010C                     	;# 
  1260  010D                     	;# 
  1261  010E                     	;# 
  1262  0111                     	;# 
  1263  0112                     	;# 
  1264  0113                     	;# 
  1265  0114                     	;# 
  1266  0115                     	;# 
  1267  0116                     	;# 
  1268  0117                     	;# 
  1269  0118                     	;# 
  1270  0119                     	;# 
  1271  011A                     	;# 
  1272  011B                     	;# 
  1273  011C                     	;# 
  1274  011D                     	;# 
  1275  018C                     	;# 
  1276  018D                     	;# 
  1277  018E                     	;# 
  1278  0191                     	;# 
  1279  0191                     	;# 
  1280  0192                     	;# 
  1281  0193                     	;# 
  1282  0193                     	;# 
  1283  0194                     	;# 
  1284  0195                     	;# 
  1285  0196                     	;# 
  1286  0197                     	;# 
  1287  0199                     	;# 
  1288  0199                     	;# 
  1289  0199                     	;# 
  1290  019A                     	;# 
  1291  019A                     	;# 
  1292  019A                     	;# 
  1293  019B                     	;# 
  1294  019B                     	;# 
  1295  019B                     	;# 
  1296  019B                     	;# 
  1297  019B                     	;# 
  1298  019C                     	;# 
  1299  019C                     	;# 
  1300  019C                     	;# 
  1301  019D                     	;# 
  1302  019D                     	;# 
  1303  019D                     	;# 
  1304  019E                     	;# 
  1305  019E                     	;# 
  1306  019E                     	;# 
  1307  019F                     	;# 
  1308  019F                     	;# 
  1309  019F                     	;# 
  1310  019F                     	;# 
  1311  019F                     	;# 
  1312  020C                     	;# 
  1313  020D                     	;# 
  1314  020E                     	;# 
  1315  0210                     	;# 
  1316  0211                     	;# 
  1317  0211                     	;# 
  1318  0212                     	;# 
  1319  0212                     	;# 
  1320  0213                     	;# 
  1321  0213                     	;# 
  1322  0214                     	;# 
  1323  0214                     	;# 
  1324  0215                     	;# 
  1325  0215                     	;# 
  1326  0215                     	;# 
  1327  0215                     	;# 
  1328  0216                     	;# 
  1329  0216                     	;# 
  1330  0217                     	;# 
  1331  0217                     	;# 
  1332  021B                     	;# 
  1333  021C                     	;# 
  1334  021D                     	;# 
  1335  021E                     	;# 
  1336  021F                     	;# 
  1337  028C                     	;# 
  1338  028D                     	;# 
  1339  028E                     	;# 
  1340  0291                     	;# 
  1341  0291                     	;# 
  1342  0292                     	;# 
  1343  0293                     	;# 
  1344  0294                     	;# 
  1345  0295                     	;# 
  1346  0295                     	;# 
  1347  0296                     	;# 
  1348  0297                     	;# 
  1349  0298                     	;# 
  1350  0299                     	;# 
  1351  0299                     	;# 
  1352  029A                     	;# 
  1353  029B                     	;# 
  1354  029C                     	;# 
  1355  029E                     	;# 
  1356  029F                     	;# 
  1357  030C                     	;# 
  1358  030D                     	;# 
  1359  030E                     	;# 
  1360  0315                     	;# 
  1361  0316                     	;# 
  1362  0317                     	;# 
  1363  0318                     	;# 
  1364  0319                     	;# 
  1365  031B                     	;# 
  1366  031C                     	;# 
  1367  031D                     	;# 
  1368  031E                     	;# 
  1369  031F                     	;# 
  1370  038C                     	;# 
  1371  038D                     	;# 
  1372  038E                     	;# 
  1373  0390                     	;# 
  1374  0391                     	;# 
  1375  0392                     	;# 
  1376  0393                     	;# 
  1377  0394                     	;# 
  1378  0395                     	;# 
  1379  0396                     	;# 
  1380  0397                     	;# 
  1381  0398                     	;# 
  1382  0399                     	;# 
  1383  039D                     	;# 
  1384  039E                     	;# 
  1385  039F                     	;# 
  1386  040D                     	;# 
  1387  040F                     	;# 
  1388  040F                     	;# 
  1389  0410                     	;# 
  1390  0411                     	;# 
  1391  0412                     	;# 
  1392  0413                     	;# 
  1393  0413                     	;# 
  1394  0414                     	;# 
  1395  0414                     	;# 
  1396  0415                     	;# 
  1397  0416                     	;# 
  1398  0417                     	;# 
  1399  0418                     	;# 
  1400  041A                     	;# 
  1401  041A                     	;# 
  1402  041B                     	;# 
  1403  041B                     	;# 
  1404  041C                     	;# 
  1405  041D                     	;# 
  1406  041E                     	;# 
  1407  041F                     	;# 
  1408  048E                     	;# 
  1409  048E                     	;# 
  1410  048F                     	;# 
  1411  0490                     	;# 
  1412  0491                     	;# 
  1413  0492                     	;# 
  1414  0493                     	;# 
  1415  0493                     	;# 
  1416  0494                     	;# 
  1417  0494                     	;# 
  1418  0495                     	;# 
  1419  0496                     	;# 
  1420  0497                     	;# 
  1421  0498                     	;# 
  1422  049A                     	;# 
  1423  049A                     	;# 
  1424  049B                     	;# 
  1425  049B                     	;# 
  1426  049C                     	;# 
  1427  049D                     	;# 
  1428  049E                     	;# 
  1429  049F                     	;# 
  1430  050F                     	;# 
  1431  0510                     	;# 
  1432  0511                     	;# 
  1433  0512                     	;# 
  1434  0513                     	;# 
  1435  0514                     	;# 
  1436  0515                     	;# 
  1437  0516                     	;# 
  1438  0517                     	;# 
  1439  0518                     	;# 
  1440  0519                     	;# 
  1441  051A                     	;# 
  1442  058D                     	;# 
  1443  058E                     	;# 
  1444  058F                     	;# 
  1445  058F                     	;# 
  1446  058F                     	;# 
  1447  0590                     	;# 
  1448  0590                     	;# 
  1449  0591                     	;# 
  1450  0592                     	;# 
  1451  0592                     	;# 
  1452  0592                     	;# 
  1453  0593                     	;# 
  1454  0593                     	;# 
  1455  0594                     	;# 
  1456  0595                     	;# 
  1457  0595                     	;# 
  1458  0596                     	;# 
  1459  0597                     	;# 
  1460  0597                     	;# 
  1461  0598                     	;# 
  1462  0599                     	;# 
  1463  0599                     	;# 
  1464  0599                     	;# 
  1465  059A                     	;# 
  1466  059A                     	;# 
  1467  059E                     	;# 
  1468  059F                     	;# 
  1469  059F                     	;# 
  1470  0614                     	;# 
  1471  0614                     	;# 
  1472  0615                     	;# 
  1473  0616                     	;# 
  1474  0617                     	;# 
  1475  0617                     	;# 
  1476  0618                     	;# 
  1477  0619                     	;# 
  1478  061A                     	;# 
  1479  061A                     	;# 
  1480  061B                     	;# 
  1481  061C                     	;# 
  1482  068D                     	;# 
  1483  068E                     	;# 
  1484  068F                     	;# 
  1485  0690                     	;# 
  1486  0691                     	;# 
  1487  0692                     	;# 
  1488  0693                     	;# 
  1489  0694                     	;# 
  1490  0695                     	;# 
  1491  0696                     	;# 
  1492  0697                     	;# 
  1493  0698                     	;# 
  1494  0699                     	;# 
  1495  069A                     	;# 
  1496  069B                     	;# 
  1497  069C                     	;# 
  1498  069D                     	;# 
  1499  069E                     	;# 
  1500  069F                     	;# 
  1501  070D                     	;# 
  1502  070E                     	;# 
  1503  070F                     	;# 
  1504  0710                     	;# 
  1505  0711                     	;# 
  1506  0712                     	;# 
  1507  0713                     	;# 
  1508  0714                     	;# 
  1509  0715                     	;# 
  1510  0716                     	;# 
  1511  0717                     	;# 
  1512  0718                     	;# 
  1513  0719                     	;# 
  1514  071A                     	;# 
  1515  071B                     	;# 
  1516  071C                     	;# 
  1517  071D                     	;# 
  1518  071E                     	;# 
  1519  071F                     	;# 
  1520  078E                     	;# 
  1521  078F                     	;# 
  1522  0790                     	;# 
  1523  0791                     	;# 
  1524  0792                     	;# 
  1525  0793                     	;# 
  1526  0794                     	;# 
  1527  0795                     	;# 
  1528  0796                     	;# 
  1529  0797                     	;# 
  1530  0798                     	;# 
  1531  0799                     	;# 
  1532  079A                     	;# 
  1533  079B                     	;# 
  1534  079C                     	;# 
  1535  079D                     	;# 
  1536  079E                     	;# 
  1537  079F                     	;# 
  1538  080D                     	;# 
  1539  080E                     	;# 
  1540  080F                     	;# 
  1541  0810                     	;# 
  1542  0811                     	;# 
  1543  0812                     	;# 
  1544  0813                     	;# 
  1545  0814                     	;# 
  1546  0815                     	;# 
  1547  0816                     	;# 
  1548  0817                     	;# 
  1549  0818                     	;# 
  1550  0819                     	;# 
  1551  081A                     	;# 
  1552  081B                     	;# 
  1553  081C                     	;# 
  1554  081D                     	;# 
  1555  081E                     	;# 
  1556  081F                     	;# 
  1557  090C                     	;# 
  1558  090D                     	;# 
  1559  090E                     	;# 
  1560  090F                     	;# 
  1561  0910                     	;# 
  1562  0911                     	;# 
  1563  0912                     	;# 
  1564  0913                     	;# 
  1565  0914                     	;# 
  1566  0915                     	;# 
  1567  0916                     	;# 
  1568  0917                     	;# 
  1569  0D8E                     	;# 
  1570  0D8F                     	;# 
  1571  0D90                     	;# 
  1572  0D91                     	;# 
  1573  0D91                     	;# 
  1574  0D92                     	;# 
  1575  0D93                     	;# 
  1576  0D93                     	;# 
  1577  0D94                     	;# 
  1578  0D95                     	;# 
  1579  0D95                     	;# 
  1580  0D96                     	;# 
  1581  0D97                     	;# 
  1582  0D97                     	;# 
  1583  0D98                     	;# 
  1584  0D99                     	;# 
  1585  0D99                     	;# 
  1586  0D9A                     	;# 
  1587  0D9B                     	;# 
  1588  0D9C                     	;# 
  1589  0D9C                     	;# 
  1590  0D9D                     	;# 
  1591  0D9D                     	;# 
  1592  0D9E                     	;# 
  1593  0D9F                     	;# 
  1594  0DA0                     	;# 
  1595  0DA1                     	;# 
  1596  0DA1                     	;# 
  1597  0DA2                     	;# 
  1598  0DA3                     	;# 
  1599  0DA3                     	;# 
  1600  0DA4                     	;# 
  1601  0DA5                     	;# 
  1602  0DA5                     	;# 
  1603  0DA6                     	;# 
  1604  0DA7                     	;# 
  1605  0DA7                     	;# 
  1606  0DA8                     	;# 
  1607  0DA9                     	;# 
  1608  0DA9                     	;# 
  1609  0DAA                     	;# 
  1610  0DAB                     	;# 
  1611  0DAC                     	;# 
  1612  0DAC                     	;# 
  1613  0DAD                     	;# 
  1614  0DAD                     	;# 
  1615  0DAE                     	;# 
  1616  0DAF                     	;# 
  1617  0DB0                     	;# 
  1618  0DB1                     	;# 
  1619  0DB1                     	;# 
  1620  0DB2                     	;# 
  1621  0DB3                     	;# 
  1622  0DB3                     	;# 
  1623  0DB4                     	;# 
  1624  0DB5                     	;# 
  1625  0DB5                     	;# 
  1626  0DB6                     	;# 
  1627  0DB7                     	;# 
  1628  0DB7                     	;# 
  1629  0DB8                     	;# 
  1630  0DB9                     	;# 
  1631  0DB9                     	;# 
  1632  0DBA                     	;# 
  1633  0DBB                     	;# 
  1634  0DBC                     	;# 
  1635  0DBC                     	;# 
  1636  0DBD                     	;# 
  1637  0DBD                     	;# 
  1638  0DBE                     	;# 
  1639  0DBF                     	;# 
  1640  0DC0                     	;# 
  1641  0E0C                     	;# 
  1642  0E0D                     	;# 
  1643  0E0E                     	;# 
  1644  0E0F                     	;# 
  1645  0E10                     	;# 
  1646  0E11                     	;# 
  1647  0E12                     	;# 
  1648  0E13                     	;# 
  1649  0E14                     	;# 
  1650  0E15                     	;# 
  1651  0E15                     	;# 
  1652  0E15                     	;# 
  1653  0E16                     	;# 
  1654  0E16                     	;# 
  1655  0E16                     	;# 
  1656  0E17                     	;# 
  1657  0E17                     	;# 
  1658  0E17                     	;# 
  1659  0E18                     	;# 
  1660  0E18                     	;# 
  1661  0E18                     	;# 
  1662  0E19                     	;# 
  1663  0E1A                     	;# 
  1664  0E1B                     	;# 
  1665  0E1D                     	;# 
  1666  0E1E                     	;# 
  1667  0E1F                     	;# 
  1668  0E21                     	;# 
  1669  0E22                     	;# 
  1670  0E23                     	;# 
  1671  0E24                     	;# 
  1672  0E25                     	;# 
  1673  0E26                     	;# 
  1674  0E27                     	;# 
  1675  0E28                     	;# 
  1676  0E29                     	;# 
  1677  0E2D                     	;# 
  1678  0E2E                     	;# 
  1679  0E2F                     	;# 
  1680  0E30                     	;# 
  1681  0E31                     	;# 
  1682  0E32                     	;# 
  1683  0E35                     	;# 
  1684  0E36                     	;# 
  1685  0E37                     	;# 
  1686  0E38                     	;# 
  1687  0E39                     	;# 
  1688  0E3A                     	;# 
  1689  0E3B                     	;# 
  1690  0E3C                     	;# 
  1691  0E3D                     	;# 
  1692  0E3E                     	;# 
  1693  0E90                     	;# 
  1694  0E91                     	;# 
  1695  0E92                     	;# 
  1696  0E93                     	;# 
  1697  0E94                     	;# 
  1698  0E95                     	;# 
  1699  0E96                     	;# 
  1700  0E97                     	;# 
  1701  0E98                     	;# 
  1702  0E99                     	;# 
  1703  0E9A                     	;# 
  1704  0E9B                     	;# 
  1705  0E9C                     	;# 
  1706  0E9D                     	;# 
  1707  0E9E                     	;# 
  1708  0E9F                     	;# 
  1709  0EA0                     	;# 
  1710  0EA1                     	;# 
  1711  0EA2                     	;# 
  1712  0EA3                     	;# 
  1713  0EA4                     	;# 
  1714  0EA5                     	;# 
  1715  0EA6                     	;# 
  1716  0EA7                     	;# 
  1717  0F0F                     	;# 
  1718  0F10                     	;# 
  1719  0F11                     	;# 
  1720  0F12                     	;# 
  1721  0F13                     	;# 
  1722  0F14                     	;# 
  1723  0F15                     	;# 
  1724  0F16                     	;# 
  1725  0F17                     	;# 
  1726  0F18                     	;# 
  1727  0F19                     	;# 
  1728  0F1A                     	;# 
  1729  0F1B                     	;# 
  1730  0F1C                     	;# 
  1731  0F1D                     	;# 
  1732  0F1E                     	;# 
  1733  0F1F                     	;# 
  1734  0F20                     	;# 
  1735  0F21                     	;# 
  1736  0F22                     	;# 
  1737  0F23                     	;# 
  1738  0F24                     	;# 
  1739  0F25                     	;# 
  1740  0F26                     	;# 
  1741  0F27                     	;# 
  1742  0F28                     	;# 
  1743  0F29                     	;# 
  1744  0F2A                     	;# 
  1745  0F2B                     	;# 
  1746  0F2C                     	;# 
  1747  0F2D                     	;# 
  1748  0F2E                     	;# 
  1749  0F2F                     	;# 
  1750  0F30                     	;# 
  1751  0F31                     	;# 
  1752  0F32                     	;# 
  1753  0F33                     	;# 
  1754  0F34                     	;# 
  1755  0F35                     	;# 
  1756  0F36                     	;# 
  1757  0F37                     	;# 
  1758  0FE4                     	;# 
  1759  0FE5                     	;# 
  1760  0FE6                     	;# 
  1761  0FE7                     	;# 
  1762  0FE8                     	;# 
  1763  0FE9                     	;# 
  1764  0FEA                     	;# 
  1765  0FEB                     	;# 
  1766  0FED                     	;# 
  1767  0FEE                     	;# 
  1768  0FEF                     	;# 
  1769  0000                     	;# 
  1770  0001                     	;# 
  1771  0002                     	;# 
  1772  0003                     	;# 
  1773  0004                     	;# 
  1774  0005                     	;# 
  1775  0006                     	;# 
  1776  0007                     	;# 
  1777  0008                     	;# 
  1778  0009                     	;# 
  1779  000A                     	;# 
  1780  000B                     	;# 
  1781  000C                     	;# 
  1782  000D                     	;# 
  1783  000E                     	;# 
  1784  0010                     	;# 
  1785  0011                     	;# 
  1786  0012                     	;# 
  1787  0013                     	;# 
  1788  0014                     	;# 
  1789  0015                     	;# 
  1790  0016                     	;# 
  1791  0017                     	;# 
  1792  0018                     	;# 
  1793  0018                     	;# 
  1794  0019                     	;# 
  1795  001A                     	;# 
  1796  001B                     	;# 
  1797  001C                     	;# 
  1798  001C                     	;# 
  1799  001D                     	;# 
  1800  001E                     	;# 
  1801  001F                     	;# 
  1802  008C                     	;# 
  1803  008D                     	;# 
  1804  008E                     	;# 
  1805  0090                     	;# 
  1806  0091                     	;# 
  1807  0092                     	;# 
  1808  0093                     	;# 
  1809  0094                     	;# 
  1810  0095                     	;# 
  1811  0096                     	;# 
  1812  0097                     	;# 
  1813  0098                     	;# 
  1814  0099                     	;# 
  1815  009A                     	;# 
  1816  009B                     	;# 
  1817  009C                     	;# 
  1818  009D                     	;# 
  1819  009E                     	;# 
  1820  009F                     	;# 
  1821  010C                     	;# 
  1822  010D                     	;# 
  1823  010E                     	;# 
  1824  0111                     	;# 
  1825  0112                     	;# 
  1826  0113                     	;# 
  1827  0114                     	;# 
  1828  0115                     	;# 
  1829  0116                     	;# 
  1830  0117                     	;# 
  1831  0118                     	;# 
  1832  0119                     	;# 
  1833  011A                     	;# 
  1834  011B                     	;# 
  1835  011C                     	;# 
  1836  011D                     	;# 
  1837  018C                     	;# 
  1838  018D                     	;# 
  1839  018E                     	;# 
  1840  0191                     	;# 
  1841  0191                     	;# 
  1842  0192                     	;# 
  1843  0193                     	;# 
  1844  0193                     	;# 
  1845  0194                     	;# 
  1846  0195                     	;# 
  1847  0196                     	;# 
  1848  0197                     	;# 
  1849  0199                     	;# 
  1850  0199                     	;# 
  1851  0199                     	;# 
  1852  019A                     	;# 
  1853  019A                     	;# 
  1854  019A                     	;# 
  1855  019B                     	;# 
  1856  019B                     	;# 
  1857  019B                     	;# 
  1858  019B                     	;# 
  1859  019B                     	;# 
  1860  019C                     	;# 
  1861  019C                     	;# 
  1862  019C                     	;# 
  1863  019D                     	;# 
  1864  019D                     	;# 
  1865  019D                     	;# 
  1866  019E                     	;# 
  1867  019E                     	;# 
  1868  019E                     	;# 
  1869  019F                     	;# 
  1870  019F                     	;# 
  1871  019F                     	;# 
  1872  019F                     	;# 
  1873  019F                     	;# 
  1874  020C                     	;# 
  1875  020D                     	;# 
  1876  020E                     	;# 
  1877  0210                     	;# 
  1878  0211                     	;# 
  1879  0211                     	;# 
  1880  0212                     	;# 
  1881  0212                     	;# 
  1882  0213                     	;# 
  1883  0213                     	;# 
  1884  0214                     	;# 
  1885  0214                     	;# 
  1886  0215                     	;# 
  1887  0215                     	;# 
  1888  0215                     	;# 
  1889  0215                     	;# 
  1890  0216                     	;# 
  1891  0216                     	;# 
  1892  0217                     	;# 
  1893  0217                     	;# 
  1894  021B                     	;# 
  1895  021C                     	;# 
  1896  021D                     	;# 
  1897  021E                     	;# 
  1898  021F                     	;# 
  1899  028C                     	;# 
  1900  028D                     	;# 
  1901  028E                     	;# 
  1902  0291                     	;# 
  1903  0291                     	;# 
  1904  0292                     	;# 
  1905  0293                     	;# 
  1906  0294                     	;# 
  1907  0295                     	;# 
  1908  0295                     	;# 
  1909  0296                     	;# 
  1910  0297                     	;# 
  1911  0298                     	;# 
  1912  0299                     	;# 
  1913  0299                     	;# 
  1914  029A                     	;# 
  1915  029B                     	;# 
  1916  029C                     	;# 
  1917  029E                     	;# 
  1918  029F                     	;# 
  1919  030C                     	;# 
  1920  030D                     	;# 
  1921  030E                     	;# 
  1922  0315                     	;# 
  1923  0316                     	;# 
  1924  0317                     	;# 
  1925  0318                     	;# 
  1926  0319                     	;# 
  1927  031B                     	;# 
  1928  031C                     	;# 
  1929  031D                     	;# 
  1930  031E                     	;# 
  1931  031F                     	;# 
  1932  038C                     	;# 
  1933  038D                     	;# 
  1934  038E                     	;# 
  1935  0390                     	;# 
  1936  0391                     	;# 
  1937  0392                     	;# 
  1938  0393                     	;# 
  1939  0394                     	;# 
  1940  0395                     	;# 
  1941  0396                     	;# 
  1942  0397                     	;# 
  1943  0398                     	;# 
  1944  0399                     	;# 
  1945  039D                     	;# 
  1946  039E                     	;# 
  1947  039F                     	;# 
  1948  040D                     	;# 
  1949  040F                     	;# 
  1950  040F                     	;# 
  1951  0410                     	;# 
  1952  0411                     	;# 
  1953  0412                     	;# 
  1954  0413                     	;# 
  1955  0413                     	;# 
  1956  0414                     	;# 
  1957  0414                     	;# 
  1958  0415                     	;# 
  1959  0416                     	;# 
  1960  0417                     	;# 
  1961  0418                     	;# 
  1962  041A                     	;# 
  1963  041A                     	;# 
  1964  041B                     	;# 
  1965  041B                     	;# 
  1966  041C                     	;# 
  1967  041D                     	;# 
  1968  041E                     	;# 
  1969  041F                     	;# 
  1970  048E                     	;# 
  1971  048E                     	;# 
  1972  048F                     	;# 
  1973  0490                     	;# 
  1974  0491                     	;# 
  1975  0492                     	;# 
  1976  0493                     	;# 
  1977  0493                     	;# 
  1978  0494                     	;# 
  1979  0494                     	;# 
  1980  0495                     	;# 
  1981  0496                     	;# 
  1982  0497                     	;# 
  1983  0498                     	;# 
  1984  049A                     	;# 
  1985  049A                     	;# 
  1986  049B                     	;# 
  1987  049B                     	;# 
  1988  049C                     	;# 
  1989  049D                     	;# 
  1990  049E                     	;# 
  1991  049F                     	;# 
  1992  050F                     	;# 
  1993  0510                     	;# 
  1994  0511                     	;# 
  1995  0512                     	;# 
  1996  0513                     	;# 
  1997  0514                     	;# 
  1998  0515                     	;# 
  1999  0516                     	;# 
  2000  0517                     	;# 
  2001  0518                     	;# 
  2002  0519                     	;# 
  2003  051A                     	;# 
  2004  058D                     	;# 
  2005  058E                     	;# 
  2006  058F                     	;# 
  2007  058F                     	;# 
  2008  058F                     	;# 
  2009  0590                     	;# 
  2010  0590                     	;# 
  2011  0591                     	;# 
  2012  0592                     	;# 
  2013  0592                     	;# 
  2014  0592                     	;# 
  2015  0593                     	;# 
  2016  0593                     	;# 
  2017  0594                     	;# 
  2018  0595                     	;# 
  2019  0595                     	;# 
  2020  0596                     	;# 
  2021  0597                     	;# 
  2022  0597                     	;# 
  2023  0598                     	;# 
  2024  0599                     	;# 
  2025  0599                     	;# 
  2026  0599                     	;# 
  2027  059A                     	;# 
  2028  059A                     	;# 
  2029  059E                     	;# 
  2030  059F                     	;# 
  2031  059F                     	;# 
  2032  0614                     	;# 
  2033  0614                     	;# 
  2034  0615                     	;# 
  2035  0616                     	;# 
  2036  0617                     	;# 
  2037  0617                     	;# 
  2038  0618                     	;# 
  2039  0619                     	;# 
  2040  061A                     	;# 
  2041  061A                     	;# 
  2042  061B                     	;# 
  2043  061C                     	;# 
  2044  068D                     	;# 
  2045  068E                     	;# 
  2046  068F                     	;# 
  2047  0690                     	;# 
  2048  0691                     	;# 
  2049  0692                     	;# 
  2050  0693                     	;# 
  2051  0694                     	;# 
  2052  0695                     	;# 
  2053  0696                     	;# 
  2054  0697                     	;# 
  2055  0698                     	;# 
  2056  0699                     	;# 
  2057  069A                     	;# 
  2058  069B                     	;# 
  2059  069C                     	;# 
  2060  069D                     	;# 
  2061  069E                     	;# 
  2062  069F                     	;# 
  2063  070D                     	;# 
  2064  070E                     	;# 
  2065  070F                     	;# 
  2066  0710                     	;# 
  2067  0711                     	;# 
  2068  0712                     	;# 
  2069  0713                     	;# 
  2070  0714                     	;# 
  2071  0715                     	;# 
  2072  0716                     	;# 
  2073  0717                     	;# 
  2074  0718                     	;# 
  2075  0719                     	;# 
  2076  071A                     	;# 
  2077  071B                     	;# 
  2078  071C                     	;# 
  2079  071D                     	;# 
  2080  071E                     	;# 
  2081  071F                     	;# 
  2082  078E                     	;# 
  2083  078F                     	;# 
  2084  0790                     	;# 
  2085  0791                     	;# 
  2086  0792                     	;# 
  2087  0793                     	;# 
  2088  0794                     	;# 
  2089  0795                     	;# 
  2090  0796                     	;# 
  2091  0797                     	;# 
  2092  0798                     	;# 
  2093  0799                     	;# 
  2094  079A                     	;# 
  2095  079B                     	;# 
  2096  079C                     	;# 
  2097  079D                     	;# 
  2098  079E                     	;# 
  2099  079F                     	;# 
  2100  080D                     	;# 
  2101  080E                     	;# 
  2102  080F                     	;# 
  2103  0810                     	;# 
  2104  0811                     	;# 
  2105  0812                     	;# 
  2106  0813                     	;# 
  2107  0814                     	;# 
  2108  0815                     	;# 
  2109  0816                     	;# 
  2110  0817                     	;# 
  2111  0818                     	;# 
  2112  0819                     	;# 
  2113  081A                     	;# 
  2114  081B                     	;# 
  2115  081C                     	;# 
  2116  081D                     	;# 
  2117  081E                     	;# 
  2118  081F                     	;# 
  2119  090C                     	;# 
  2120  090D                     	;# 
  2121  090E                     	;# 
  2122  090F                     	;# 
  2123  0910                     	;# 
  2124  0911                     	;# 
  2125  0912                     	;# 
  2126  0913                     	;# 
  2127  0914                     	;# 
  2128  0915                     	;# 
  2129  0916                     	;# 
  2130  0917                     	;# 
  2131  0D8E                     	;# 
  2132  0D8F                     	;# 
  2133  0D90                     	;# 
  2134  0D91                     	;# 
  2135  0D91                     	;# 
  2136  0D92                     	;# 
  2137  0D93                     	;# 
  2138  0D93                     	;# 
  2139  0D94                     	;# 
  2140  0D95                     	;# 
  2141  0D95                     	;# 
  2142  0D96                     	;# 
  2143  0D97                     	;# 
  2144  0D97                     	;# 
  2145  0D98                     	;# 
  2146  0D99                     	;# 
  2147  0D99                     	;# 
  2148  0D9A                     	;# 
  2149  0D9B                     	;# 
  2150  0D9C                     	;# 
  2151  0D9C                     	;# 
  2152  0D9D                     	;# 
  2153  0D9D                     	;# 
  2154  0D9E                     	;# 
  2155  0D9F                     	;# 
  2156  0DA0                     	;# 
  2157  0DA1                     	;# 
  2158  0DA1                     	;# 
  2159  0DA2                     	;# 
  2160  0DA3                     	;# 
  2161  0DA3                     	;# 
  2162  0DA4                     	;# 
  2163  0DA5                     	;# 
  2164  0DA5                     	;# 
  2165  0DA6                     	;# 
  2166  0DA7                     	;# 
  2167  0DA7                     	;# 
  2168  0DA8                     	;# 
  2169  0DA9                     	;# 
  2170  0DA9                     	;# 
  2171  0DAA                     	;# 
  2172  0DAB                     	;# 
  2173  0DAC                     	;# 
  2174  0DAC                     	;# 
  2175  0DAD                     	;# 
  2176  0DAD                     	;# 
  2177  0DAE                     	;# 
  2178  0DAF                     	;# 
  2179  0DB0                     	;# 
  2180  0DB1                     	;# 
  2181  0DB1                     	;# 
  2182  0DB2                     	;# 
  2183  0DB3                     	;# 
  2184  0DB3                     	;# 
  2185  0DB4                     	;# 
  2186  0DB5                     	;# 
  2187  0DB5                     	;# 
  2188  0DB6                     	;# 
  2189  0DB7                     	;# 
  2190  0DB7                     	;# 
  2191  0DB8                     	;# 
  2192  0DB9                     	;# 
  2193  0DB9                     	;# 
  2194  0DBA                     	;# 
  2195  0DBB                     	;# 
  2196  0DBC                     	;# 
  2197  0DBC                     	;# 
  2198  0DBD                     	;# 
  2199  0DBD                     	;# 
  2200  0DBE                     	;# 
  2201  0DBF                     	;# 
  2202  0DC0                     	;# 
  2203  0E0C                     	;# 
  2204  0E0D                     	;# 
  2205  0E0E                     	;# 
  2206  0E0F                     	;# 
  2207  0E10                     	;# 
  2208  0E11                     	;# 
  2209  0E12                     	;# 
  2210  0E13                     	;# 
  2211  0E14                     	;# 
  2212  0E15                     	;# 
  2213  0E15                     	;# 
  2214  0E15                     	;# 
  2215  0E16                     	;# 
  2216  0E16                     	;# 
  2217  0E16                     	;# 
  2218  0E17                     	;# 
  2219  0E17                     	;# 
  2220  0E17                     	;# 
  2221  0E18                     	;# 
  2222  0E18                     	;# 
  2223  0E18                     	;# 
  2224  0E19                     	;# 
  2225  0E1A                     	;# 
  2226  0E1B                     	;# 
  2227  0E1D                     	;# 
  2228  0E1E                     	;# 
  2229  0E1F                     	;# 
  2230  0E21                     	;# 
  2231  0E22                     	;# 
  2232  0E23                     	;# 
  2233  0E24                     	;# 
  2234  0E25                     	;# 
  2235  0E26                     	;# 
  2236  0E27                     	;# 
  2237  0E28                     	;# 
  2238  0E29                     	;# 
  2239  0E2D                     	;# 
  2240  0E2E                     	;# 
  2241  0E2F                     	;# 
  2242  0E30                     	;# 
  2243  0E31                     	;# 
  2244  0E32                     	;# 
  2245  0E35                     	;# 
  2246  0E36                     	;# 
  2247  0E37                     	;# 
  2248  0E38                     	;# 
  2249  0E39                     	;# 
  2250  0E3A                     	;# 
  2251  0E3B                     	;# 
  2252  0E3C                     	;# 
  2253  0E3D                     	;# 
  2254  0E3E                     	;# 
  2255  0E90                     	;# 
  2256  0E91                     	;# 
  2257  0E92                     	;# 
  2258  0E93                     	;# 
  2259  0E94                     	;# 
  2260  0E95                     	;# 
  2261  0E96                     	;# 
  2262  0E97                     	;# 
  2263  0E98                     	;# 
  2264  0E99                     	;# 
  2265  0E9A                     	;# 
  2266  0E9B                     	;# 
  2267  0E9C                     	;# 
  2268  0E9D                     	;# 
  2269  0E9E                     	;# 
  2270  0E9F                     	;# 
  2271  0EA0                     	;# 
  2272  0EA1                     	;# 
  2273  0EA2                     	;# 
  2274  0EA3                     	;# 
  2275  0EA4                     	;# 
  2276  0EA5                     	;# 
  2277  0EA6                     	;# 
  2278  0EA7                     	;# 
  2279  0F0F                     	;# 
  2280  0F10                     	;# 
  2281  0F11                     	;# 
  2282  0F12                     	;# 
  2283  0F13                     	;# 
  2284  0F14                     	;# 
  2285  0F15                     	;# 
  2286  0F16                     	;# 
  2287  0F17                     	;# 
  2288  0F18                     	;# 
  2289  0F19                     	;# 
  2290  0F1A                     	;# 
  2291  0F1B                     	;# 
  2292  0F1C                     	;# 
  2293  0F1D                     	;# 
  2294  0F1E                     	;# 
  2295  0F1F                     	;# 
  2296  0F20                     	;# 
  2297  0F21                     	;# 
  2298  0F22                     	;# 
  2299  0F23                     	;# 
  2300  0F24                     	;# 
  2301  0F25                     	;# 
  2302  0F26                     	;# 
  2303  0F27                     	;# 
  2304  0F28                     	;# 
  2305  0F29                     	;# 
  2306  0F2A                     	;# 
  2307  0F2B                     	;# 
  2308  0F2C                     	;# 
  2309  0F2D                     	;# 
  2310  0F2E                     	;# 
  2311  0F2F                     	;# 
  2312  0F30                     	;# 
  2313  0F31                     	;# 
  2314  0F32                     	;# 
  2315  0F33                     	;# 
  2316  0F34                     	;# 
  2317  0F35                     	;# 
  2318  0F36                     	;# 
  2319  0F37                     	;# 
  2320  0FE4                     	;# 
  2321  0FE5                     	;# 
  2322  0FE6                     	;# 
  2323  0FE7                     	;# 
  2324  0FE8                     	;# 
  2325  0FE9                     	;# 
  2326  0FEA                     	;# 
  2327  0FEB                     	;# 
  2328  0FED                     	;# 
  2329  0FEE                     	;# 
  2330  0FEF                     	;# 
  2331  0000                     	;# 
  2332  0001                     	;# 
  2333  0002                     	;# 
  2334  0003                     	;# 
  2335  0004                     	;# 
  2336  0005                     	;# 
  2337  0006                     	;# 
  2338  0007                     	;# 
  2339  0008                     	;# 
  2340  0009                     	;# 
  2341  000A                     	;# 
  2342  000B                     	;# 
  2343  000C                     	;# 
  2344  000D                     	;# 
  2345  000E                     	;# 
  2346  0010                     	;# 
  2347  0011                     	;# 
  2348  0012                     	;# 
  2349  0013                     	;# 
  2350  0014                     	;# 
  2351  0015                     	;# 
  2352  0016                     	;# 
  2353  0017                     	;# 
  2354  0018                     	;# 
  2355  0018                     	;# 
  2356  0019                     	;# 
  2357  001A                     	;# 
  2358  001B                     	;# 
  2359  001C                     	;# 
  2360  001C                     	;# 
  2361  001D                     	;# 
  2362  001E                     	;# 
  2363  001F                     	;# 
  2364  008C                     	;# 
  2365  008D                     	;# 
  2366  008E                     	;# 
  2367  0090                     	;# 
  2368  0091                     	;# 
  2369  0092                     	;# 
  2370  0093                     	;# 
  2371  0094                     	;# 
  2372  0095                     	;# 
  2373  0096                     	;# 
  2374  0097                     	;# 
  2375  0098                     	;# 
  2376  0099                     	;# 
  2377  009A                     	;# 
  2378  009B                     	;# 
  2379  009C                     	;# 
  2380  009D                     	;# 
  2381  009E                     	;# 
  2382  009F                     	;# 
  2383  010C                     	;# 
  2384  010D                     	;# 
  2385  010E                     	;# 
  2386  0111                     	;# 
  2387  0112                     	;# 
  2388  0113                     	;# 
  2389  0114                     	;# 
  2390  0115                     	;# 
  2391  0116                     	;# 
  2392  0117                     	;# 
  2393  0118                     	;# 
  2394  0119                     	;# 
  2395  011A                     	;# 
  2396  011B                     	;# 
  2397  011C                     	;# 
  2398  011D                     	;# 
  2399  018C                     	;# 
  2400  018D                     	;# 
  2401  018E                     	;# 
  2402  0191                     	;# 
  2403  0191                     	;# 
  2404  0192                     	;# 
  2405  0193                     	;# 
  2406  0193                     	;# 
  2407  0194                     	;# 
  2408  0195                     	;# 
  2409  0196                     	;# 
  2410  0197                     	;# 
  2411  0199                     	;# 
  2412  0199                     	;# 
  2413  0199                     	;# 
  2414  019A                     	;# 
  2415  019A                     	;# 
  2416  019A                     	;# 
  2417  019B                     	;# 
  2418  019B                     	;# 
  2419  019B                     	;# 
  2420  019B                     	;# 
  2421  019B                     	;# 
  2422  019C                     	;# 
  2423  019C                     	;# 
  2424  019C                     	;# 
  2425  019D                     	;# 
  2426  019D                     	;# 
  2427  019D                     	;# 
  2428  019E                     	;# 
  2429  019E                     	;# 
  2430  019E                     	;# 
  2431  019F                     	;# 
  2432  019F                     	;# 
  2433  019F                     	;# 
  2434  019F                     	;# 
  2435  019F                     	;# 
  2436  020C                     	;# 
  2437  020D                     	;# 
  2438  020E                     	;# 
  2439  0210                     	;# 
  2440  0211                     	;# 
  2441  0211                     	;# 
  2442  0212                     	;# 
  2443  0212                     	;# 
  2444  0213                     	;# 
  2445  0213                     	;# 
  2446  0214                     	;# 
  2447  0214                     	;# 
  2448  0215                     	;# 
  2449  0215                     	;# 
  2450  0215                     	;# 
  2451  0215                     	;# 
  2452  0216                     	;# 
  2453  0216                     	;# 
  2454  0217                     	;# 
  2455  0217                     	;# 
  2456  021B                     	;# 
  2457  021C                     	;# 
  2458  021D                     	;# 
  2459  021E                     	;# 
  2460  021F                     	;# 
  2461  028C                     	;# 
  2462  028D                     	;# 
  2463  028E                     	;# 
  2464  0291                     	;# 
  2465  0291                     	;# 
  2466  0292                     	;# 
  2467  0293                     	;# 
  2468  0294                     	;# 
  2469  0295                     	;# 
  2470  0295                     	;# 
  2471  0296                     	;# 
  2472  0297                     	;# 
  2473  0298                     	;# 
  2474  0299                     	;# 
  2475  0299                     	;# 
  2476  029A                     	;# 
  2477  029B                     	;# 
  2478  029C                     	;# 
  2479  029E                     	;# 
  2480  029F                     	;# 
  2481  030C                     	;# 
  2482  030D                     	;# 
  2483  030E                     	;# 
  2484  0315                     	;# 
  2485  0316                     	;# 
  2486  0317                     	;# 
  2487  0318                     	;# 
  2488  0319                     	;# 
  2489  031B                     	;# 
  2490  031C                     	;# 
  2491  031D                     	;# 
  2492  031E                     	;# 
  2493  031F                     	;# 
  2494  038C                     	;# 
  2495  038D                     	;# 
  2496  038E                     	;# 
  2497  0390                     	;# 
  2498  0391                     	;# 
  2499  0392                     	;# 
  2500  0393                     	;# 
  2501  0394                     	;# 
  2502  0395                     	;# 
  2503  0396                     	;# 
  2504  0397                     	;# 
  2505  0398                     	;# 
  2506  0399                     	;# 
  2507  039D                     	;# 
  2508  039E                     	;# 
  2509  039F                     	;# 
  2510  040D                     	;# 
  2511  040F                     	;# 
  2512  040F                     	;# 
  2513  0410                     	;# 
  2514  0411                     	;# 
  2515  0412                     	;# 
  2516  0413                     	;# 
  2517  0413                     	;# 
  2518  0414                     	;# 
  2519  0414                     	;# 
  2520  0415                     	;# 
  2521  0416                     	;# 
  2522  0417                     	;# 
  2523  0418                     	;# 
  2524  041A                     	;# 
  2525  041A                     	;# 
  2526  041B                     	;# 
  2527  041B                     	;# 
  2528  041C                     	;# 
  2529  041D                     	;# 
  2530  041E                     	;# 
  2531  041F                     	;# 
  2532  048E                     	;# 
  2533  048E                     	;# 
  2534  048F                     	;# 
  2535  0490                     	;# 
  2536  0491                     	;# 
  2537  0492                     	;# 
  2538  0493                     	;# 
  2539  0493                     	;# 
  2540  0494                     	;# 
  2541  0494                     	;# 
  2542  0495                     	;# 
  2543  0496                     	;# 
  2544  0497                     	;# 
  2545  0498                     	;# 
  2546  049A                     	;# 
  2547  049A                     	;# 
  2548  049B                     	;# 
  2549  049B                     	;# 
  2550  049C                     	;# 
  2551  049D                     	;# 
  2552  049E                     	;# 
  2553  049F                     	;# 
  2554  050F                     	;# 
  2555  0510                     	;# 
  2556  0511                     	;# 
  2557  0512                     	;# 
  2558  0513                     	;# 
  2559  0514                     	;# 
  2560  0515                     	;# 
  2561  0516                     	;# 
  2562  0517                     	;# 
  2563  0518                     	;# 
  2564  0519                     	;# 
  2565  051A                     	;# 
  2566  058D                     	;# 
  2567  058E                     	;# 
  2568  058F                     	;# 
  2569  058F                     	;# 
  2570  058F                     	;# 
  2571  0590                     	;# 
  2572  0590                     	;# 
  2573  0591                     	;# 
  2574  0592                     	;# 
  2575  0592                     	;# 
  2576  0592                     	;# 
  2577  0593                     	;# 
  2578  0593                     	;# 
  2579  0594                     	;# 
  2580  0595                     	;# 
  2581  0595                     	;# 
  2582  0596                     	;# 
  2583  0597                     	;# 
  2584  0597                     	;# 
  2585  0598                     	;# 
  2586  0599                     	;# 
  2587  0599                     	;# 
  2588  0599                     	;# 
  2589  059A                     	;# 
  2590  059A                     	;# 
  2591  059E                     	;# 
  2592  059F                     	;# 
  2593  059F                     	;# 
  2594  0614                     	;# 
  2595  0614                     	;# 
  2596  0615                     	;# 
  2597  0616                     	;# 
  2598  0617                     	;# 
  2599  0617                     	;# 
  2600  0618                     	;# 
  2601  0619                     	;# 
  2602  061A                     	;# 
  2603  061A                     	;# 
  2604  061B                     	;# 
  2605  061C                     	;# 
  2606  068D                     	;# 
  2607  068E                     	;# 
  2608  068F                     	;# 
  2609  0690                     	;# 
  2610  0691                     	;# 
  2611  0692                     	;# 
  2612  0693                     	;# 
  2613  0694                     	;# 
  2614  0695                     	;# 
  2615  0696                     	;# 
  2616  0697                     	;# 
  2617  0698                     	;# 
  2618  0699                     	;# 
  2619  069A                     	;# 
  2620  069B                     	;# 
  2621  069C                     	;# 
  2622  069D                     	;# 
  2623  069E                     	;# 
  2624  069F                     	;# 
  2625  070D                     	;# 
  2626  070E                     	;# 
  2627  070F                     	;# 
  2628  0710                     	;# 
  2629  0711                     	;# 
  2630  0712                     	;# 
  2631  0713                     	;# 
  2632  0714                     	;# 
  2633  0715                     	;# 
  2634  0716                     	;# 
  2635  0717                     	;# 
  2636  0718                     	;# 
  2637  0719                     	;# 
  2638  071A                     	;# 
  2639  071B                     	;# 
  2640  071C                     	;# 
  2641  071D                     	;# 
  2642  071E                     	;# 
  2643  071F                     	;# 
  2644  078E                     	;# 
  2645  078F                     	;# 
  2646  0790                     	;# 
  2647  0791                     	;# 
  2648  0792                     	;# 
  2649  0793                     	;# 
  2650  0794                     	;# 
  2651  0795                     	;# 
  2652  0796                     	;# 
  2653  0797                     	;# 
  2654  0798                     	;# 
  2655  0799                     	;# 
  2656  079A                     	;# 
  2657  079B                     	;# 
  2658  079C                     	;# 
  2659  079D                     	;# 
  2660  079E                     	;# 
  2661  079F                     	;# 
  2662  080D                     	;# 
  2663  080E                     	;# 
  2664  080F                     	;# 
  2665  0810                     	;# 
  2666  0811                     	;# 
  2667  0812                     	;# 
  2668  0813                     	;# 
  2669  0814                     	;# 
  2670  0815                     	;# 
  2671  0816                     	;# 
  2672  0817                     	;# 
  2673  0818                     	;# 
  2674  0819                     	;# 
  2675  081A                     	;# 
  2676  081B                     	;# 
  2677  081C                     	;# 
  2678  081D                     	;# 
  2679  081E                     	;# 
  2680  081F                     	;# 
  2681  090C                     	;# 
  2682  090D                     	;# 
  2683  090E                     	;# 
  2684  090F                     	;# 
  2685  0910                     	;# 
  2686  0911                     	;# 
  2687  0912                     	;# 
  2688  0913                     	;# 
  2689  0914                     	;# 
  2690  0915                     	;# 
  2691  0916                     	;# 
  2692  0917                     	;# 
  2693  0D8E                     	;# 
  2694  0D8F                     	;# 
  2695  0D90                     	;# 
  2696  0D91                     	;# 
  2697  0D91                     	;# 
  2698  0D92                     	;# 
  2699  0D93                     	;# 
  2700  0D93                     	;# 
  2701  0D94                     	;# 
  2702  0D95                     	;# 
  2703  0D95                     	;# 
  2704  0D96                     	;# 
  2705  0D97                     	;# 
  2706  0D97                     	;# 
  2707  0D98                     	;# 
  2708  0D99                     	;# 
  2709  0D99                     	;# 
  2710  0D9A                     	;# 
  2711  0D9B                     	;# 
  2712  0D9C                     	;# 
  2713  0D9C                     	;# 
  2714  0D9D                     	;# 
  2715  0D9D                     	;# 
  2716  0D9E                     	;# 
  2717  0D9F                     	;# 
  2718  0DA0                     	;# 
  2719  0DA1                     	;# 
  2720  0DA1                     	;# 
  2721  0DA2                     	;# 
  2722  0DA3                     	;# 
  2723  0DA3                     	;# 
  2724  0DA4                     	;# 
  2725  0DA5                     	;# 
  2726  0DA5                     	;# 
  2727  0DA6                     	;# 
  2728  0DA7                     	;# 
  2729  0DA7                     	;# 
  2730  0DA8                     	;# 
  2731  0DA9                     	;# 
  2732  0DA9                     	;# 
  2733  0DAA                     	;# 
  2734  0DAB                     	;# 
  2735  0DAC                     	;# 
  2736  0DAC                     	;# 
  2737  0DAD                     	;# 
  2738  0DAD                     	;# 
  2739  0DAE                     	;# 
  2740  0DAF                     	;# 
  2741  0DB0                     	;# 
  2742  0DB1                     	;# 
  2743  0DB1                     	;# 
  2744  0DB2                     	;# 
  2745  0DB3                     	;# 
  2746  0DB3                     	;# 
  2747  0DB4                     	;# 
  2748  0DB5                     	;# 
  2749  0DB5                     	;# 
  2750  0DB6                     	;# 
  2751  0DB7                     	;# 
  2752  0DB7                     	;# 
  2753  0DB8                     	;# 
  2754  0DB9                     	;# 
  2755  0DB9                     	;# 
  2756  0DBA                     	;# 
  2757  0DBB                     	;# 
  2758  0DBC                     	;# 
  2759  0DBC                     	;# 
  2760  0DBD                     	;# 
  2761  0DBD                     	;# 
  2762  0DBE                     	;# 
  2763  0DBF                     	;# 
  2764  0DC0                     	;# 
  2765  0E0C                     	;# 
  2766  0E0D                     	;# 
  2767  0E0E                     	;# 
  2768  0E0F                     	;# 
  2769  0E10                     	;# 
  2770  0E11                     	;# 
  2771  0E12                     	;# 
  2772  0E13                     	;# 
  2773  0E14                     	;# 
  2774  0E15                     	;# 
  2775  0E15                     	;# 
  2776  0E15                     	;# 
  2777  0E16                     	;# 
  2778  0E16                     	;# 
  2779  0E16                     	;# 
  2780  0E17                     	;# 
  2781  0E17                     	;# 
  2782  0E17                     	;# 
  2783  0E18                     	;# 
  2784  0E18                     	;# 
  2785  0E18                     	;# 
  2786  0E19                     	;# 
  2787  0E1A                     	;# 
  2788  0E1B                     	;# 
  2789  0E1D                     	;# 
  2790  0E1E                     	;# 
  2791  0E1F                     	;# 
  2792  0E21                     	;# 
  2793  0E22                     	;# 
  2794  0E23                     	;# 
  2795  0E24                     	;# 
  2796  0E25                     	;# 
  2797  0E26                     	;# 
  2798  0E27                     	;# 
  2799  0E28                     	;# 
  2800  0E29                     	;# 
  2801  0E2D                     	;# 
  2802  0E2E                     	;# 
  2803  0E2F                     	;# 
  2804  0E30                     	;# 
  2805  0E31                     	;# 
  2806  0E32                     	;# 
  2807  0E35                     	;# 
  2808  0E36                     	;# 
  2809  0E37                     	;# 
  2810  0E38                     	;# 
  2811  0E39                     	;# 
  2812  0E3A                     	;# 
  2813  0E3B                     	;# 
  2814  0E3C                     	;# 
  2815  0E3D                     	;# 
  2816  0E3E                     	;# 
  2817  0E90                     	;# 
  2818  0E91                     	;# 
  2819  0E92                     	;# 
  2820  0E93                     	;# 
  2821  0E94                     	;# 
  2822  0E95                     	;# 
  2823  0E96                     	;# 
  2824  0E97                     	;# 
  2825  0E98                     	;# 
  2826  0E99                     	;# 
  2827  0E9A                     	;# 
  2828  0E9B                     	;# 
  2829  0E9C                     	;# 
  2830  0E9D                     	;# 
  2831  0E9E                     	;# 
  2832  0E9F                     	;# 
  2833  0EA0                     	;# 
  2834  0EA1                     	;# 
  2835  0EA2                     	;# 
  2836  0EA3                     	;# 
  2837  0EA4                     	;# 
  2838  0EA5                     	;# 
  2839  0EA6                     	;# 
  2840  0EA7                     	;# 
  2841  0F0F                     	;# 
  2842  0F10                     	;# 
  2843  0F11                     	;# 
  2844  0F12                     	;# 
  2845  0F13                     	;# 
  2846  0F14                     	;# 
  2847  0F15                     	;# 
  2848  0F16                     	;# 
  2849  0F17                     	;# 
  2850  0F18                     	;# 
  2851  0F19                     	;# 
  2852  0F1A                     	;# 
  2853  0F1B                     	;# 
  2854  0F1C                     	;# 
  2855  0F1D                     	;# 
  2856  0F1E                     	;# 
  2857  0F1F                     	;# 
  2858  0F20                     	;# 
  2859  0F21                     	;# 
  2860  0F22                     	;# 
  2861  0F23                     	;# 
  2862  0F24                     	;# 
  2863  0F25                     	;# 
  2864  0F26                     	;# 
  2865  0F27                     	;# 
  2866  0F28                     	;# 
  2867  0F29                     	;# 
  2868  0F2A                     	;# 
  2869  0F2B                     	;# 
  2870  0F2C                     	;# 
  2871  0F2D                     	;# 
  2872  0F2E                     	;# 
  2873  0F2F                     	;# 
  2874  0F30                     	;# 
  2875  0F31                     	;# 
  2876  0F32                     	;# 
  2877  0F33                     	;# 
  2878  0F34                     	;# 
  2879  0F35                     	;# 
  2880  0F36                     	;# 
  2881  0F37                     	;# 
  2882  0FE4                     	;# 
  2883  0FE5                     	;# 
  2884  0FE6                     	;# 
  2885  0FE7                     	;# 
  2886  0FE8                     	;# 
  2887  0FE9                     	;# 
  2888  0FEA                     	;# 
  2889  0FEB                     	;# 
  2890  0FED                     	;# 
  2891  0FEE                     	;# 
  2892  0FEF                     	;_buffer
  2893                           
  2894                           	psect	idataCOMMON
  2895  0637                     __pidataCOMMON:	
  2896                           
  2897                           ;initializer for _buffer_write_index
  2898  0637  3401               	retlw	1
  2899  0638  3400               	retlw	0
  2900                           
  2901                           ;initializer for _GLBL_Resp8
  2902  0639  34FF               	retlw	255
  2903                           
  2904                           	psect	idataBANK0
  2905  063A                     __pidataBANK0:	
  2906                           
  2907                           ;initializer for _isPlaying
  2908  063A  3401               	retlw	1
  2909                           
  2910                           ;initializer for _state
  2911  063B  3403               	retlw	3
  2912                           
  2913                           ;initializer for _readMessage
  2914  063C  34FF               	retlw	255
  2915                           
  2916                           	psect	idataBANK1
  2917  0623                     __pidataBANK1:	
  2918                           
  2919                           ;initializer for _GLBL_Resp40
  2920  0623  34FF               	retlw	255
  2921  0624  34FF               	retlw	255
  2922  0625  34FF               	retlw	255
  2923  0626  34FF               	retlw	255
  2924  0627  34FF               	retlw	255
  2925                           
  2926                           	psect	stringtext1
  2927  0078                     __pstringtext1:	
  2928  0078                     _CRCTable:	
  2929  0078  3400               	retlw	0
  2930  0079  3409               	retlw	9
  2931  007A  3412               	retlw	18
  2932  007B  341B               	retlw	27
  2933  007C  3424               	retlw	36
  2934  007D  342D               	retlw	45
  2935  007E  3436               	retlw	54
  2936  007F  343F               	retlw	63
  2937  0080  3448               	retlw	72
  2938  0081  3441               	retlw	65
  2939  0082  345A               	retlw	90
  2940  0083  3453               	retlw	83
  2941  0084  346C               	retlw	108
  2942  0085  3465               	retlw	101
  2943  0086  347E               	retlw	126
  2944  0087  3477               	retlw	119
  2945  0088  3419               	retlw	25
  2946  0089  3410               	retlw	16
  2947  008A  340B               	retlw	11
  2948  008B  3402               	retlw	2
  2949  008C  343D               	retlw	61
  2950  008D  3434               	retlw	52
  2951  008E  342F               	retlw	47
  2952  008F  3426               	retlw	38
  2953  0090  3451               	retlw	81
  2954  0091  3458               	retlw	88
  2955  0092  3443               	retlw	67
  2956  0093  344A               	retlw	74
  2957  0094  3475               	retlw	117
  2958  0095  347C               	retlw	124
  2959  0096  3467               	retlw	103
  2960  0097  346E               	retlw	110
  2961  0098  3432               	retlw	50
  2962  0099  343B               	retlw	59
  2963  009A  3420               	retlw	32
  2964  009B  3429               	retlw	41
  2965  009C  3416               	retlw	22
  2966  009D  341F               	retlw	31
  2967  009E  3404               	retlw	4
  2968  009F  340D               	retlw	13
  2969  00A0  347A               	retlw	122
  2970  00A1  3473               	retlw	115
  2971  00A2  3468               	retlw	104
  2972  00A3  3461               	retlw	97
  2973  00A4  345E               	retlw	94
  2974  00A5  3457               	retlw	87
  2975  00A6  344C               	retlw	76
  2976  00A7  3445               	retlw	69
  2977  00A8  342B               	retlw	43
  2978  00A9  3422               	retlw	34
  2979  00AA  3439               	retlw	57
  2980  00AB  3430               	retlw	48
  2981  00AC  340F               	retlw	15
  2982  00AD  3406               	retlw	6
  2983  00AE  341D               	retlw	29
  2984  00AF  3414               	retlw	20
  2985  00B0  3463               	retlw	99
  2986  00B1  346A               	retlw	106
  2987  00B2  3471               	retlw	113
  2988  00B3  3478               	retlw	120
  2989  00B4  3447               	retlw	71
  2990  00B5  344E               	retlw	78
  2991  00B6  3455               	retlw	85
  2992  00B7  345C               	retlw	92
  2993  00B8  3464               	retlw	100
  2994  00B9  346D               	retlw	109
  2995  00BA  3476               	retlw	118
  2996  00BB  347F               	retlw	127
  2997  00BC  3440               	retlw	64
  2998  00BD  3449               	retlw	73
  2999  00BE  3452               	retlw	82
  3000  00BF  345B               	retlw	91
  3001  00C0  342C               	retlw	44
  3002  00C1  3425               	retlw	37
  3003  00C2  343E               	retlw	62
  3004  00C3  3437               	retlw	55
  3005  00C4  3408               	retlw	8
  3006  00C5  3401               	retlw	1
  3007  00C6  341A               	retlw	26
  3008  00C7  3413               	retlw	19
  3009  00C8  347D               	retlw	125
  3010  00C9  3474               	retlw	116
  3011  00CA  346F               	retlw	111
  3012  00CB  3466               	retlw	102
  3013  00CC  3459               	retlw	89
  3014  00CD  3450               	retlw	80
  3015  00CE  344B               	retlw	75
  3016  00CF  3442               	retlw	66
  3017  00D0  3435               	retlw	53
  3018  00D1  343C               	retlw	60
  3019  00D2  3427               	retlw	39
  3020  00D3  342E               	retlw	46
  3021  00D4  3411               	retlw	17
  3022  00D5  3418               	retlw	24
  3023  00D6  3403               	retlw	3
  3024  00D7  340A               	retlw	10
  3025  00D8  3456               	retlw	86
  3026  00D9  345F               	retlw	95
  3027  00DA  3444               	retlw	68
  3028  00DB  344D               	retlw	77
  3029  00DC  3472               	retlw	114
  3030  00DD  347B               	retlw	123
  3031  00DE  3460               	retlw	96
  3032  00DF  3469               	retlw	105
  3033  00E0  341E               	retlw	30
  3034  00E1  3417               	retlw	23
  3035  00E2  340C               	retlw	12
  3036  00E3  3405               	retlw	5
  3037  00E4  343A               	retlw	58
  3038  00E5  3433               	retlw	51
  3039  00E6  3428               	retlw	40
  3040  00E7  3421               	retlw	33
  3041  00E8  344F               	retlw	79
  3042  00E9  3446               	retlw	70
  3043  00EA  345D               	retlw	93
  3044  00EB  3454               	retlw	84
  3045  00EC  346B               	retlw	107
  3046  00ED  3462               	retlw	98
  3047  00EE  3479               	retlw	121
  3048  00EF  3470               	retlw	112
  3049  00F0  3407               	retlw	7
  3050  00F1  340E               	retlw	14
  3051  00F2  3415               	retlw	21
  3052  00F3  341C               	retlw	28
  3053  00F4  3423               	retlw	35
  3054  00F5  342A               	retlw	42
  3055  00F6  3431               	retlw	49
  3056  00F7  3438               	retlw	56
  3057  00F8  3441               	retlw	65
  3058  00F9  3448               	retlw	72
  3059  00FA  3453               	retlw	83
  3060  00FB  345A               	retlw	90
  3061  00FC  3465               	retlw	101
  3062  00FD  346C               	retlw	108
  3063  00FE  3477               	retlw	119
  3064  00FF  347E               	retlw	126
  3065  0100  3409               	retlw	9
  3066  0101  3400               	retlw	0
  3067  0102  341B               	retlw	27
  3068  0103  3412               	retlw	18
  3069  0104  342D               	retlw	45
  3070  0105  3424               	retlw	36
  3071  0106  343F               	retlw	63
  3072  0107  3436               	retlw	54
  3073  0108  3458               	retlw	88
  3074  0109  3451               	retlw	81
  3075  010A  344A               	retlw	74
  3076  010B  3443               	retlw	67
  3077  010C  347C               	retlw	124
  3078  010D  3475               	retlw	117
  3079  010E  346E               	retlw	110
  3080  010F  3467               	retlw	103
  3081  0110  3410               	retlw	16
  3082  0111  3419               	retlw	25
  3083  0112  3402               	retlw	2
  3084  0113  340B               	retlw	11
  3085  0114  3434               	retlw	52
  3086  0115  343D               	retlw	61
  3087  0116  3426               	retlw	38
  3088  0117  342F               	retlw	47
  3089  0118  3473               	retlw	115
  3090  0119  347A               	retlw	122
  3091  011A  3461               	retlw	97
  3092  011B  3468               	retlw	104
  3093  011C  3457               	retlw	87
  3094  011D  345E               	retlw	94
  3095  011E  3445               	retlw	69
  3096  011F  344C               	retlw	76
  3097  0120  343B               	retlw	59
  3098  0121  3432               	retlw	50
  3099  0122  3429               	retlw	41
  3100  0123  3420               	retlw	32
  3101  0124  341F               	retlw	31
  3102  0125  3416               	retlw	22
  3103  0126  340D               	retlw	13
  3104  0127  3404               	retlw	4
  3105  0128  346A               	retlw	106
  3106  0129  3463               	retlw	99
  3107  012A  3478               	retlw	120
  3108  012B  3471               	retlw	113
  3109  012C  344E               	retlw	78
  3110  012D  3447               	retlw	71
  3111  012E  345C               	retlw	92
  3112  012F  3455               	retlw	85
  3113  0130  3422               	retlw	34
  3114  0131  342B               	retlw	43
  3115  0132  3430               	retlw	48
  3116  0133  3439               	retlw	57
  3117  0134  3406               	retlw	6
  3118  0135  340F               	retlw	15
  3119  0136  3414               	retlw	20
  3120  0137  341D               	retlw	29
  3121  0138  3425               	retlw	37
  3122  0139  342C               	retlw	44
  3123  013A  3437               	retlw	55
  3124  013B  343E               	retlw	62
  3125  013C  3401               	retlw	1
  3126  013D  3408               	retlw	8
  3127  013E  3413               	retlw	19
  3128  013F  341A               	retlw	26
  3129  0140  346D               	retlw	109
  3130  0141  3464               	retlw	100
  3131  0142  347F               	retlw	127
  3132  0143  3476               	retlw	118
  3133  0144  3449               	retlw	73
  3134  0145  3440               	retlw	64
  3135  0146  345B               	retlw	91
  3136  0147  3452               	retlw	82
  3137  0148  343C               	retlw	60
  3138  0149  3435               	retlw	53
  3139  014A  342E               	retlw	46
  3140  014B  3427               	retlw	39
  3141  014C  3418               	retlw	24
  3142  014D  3411               	retlw	17
  3143  014E  340A               	retlw	10
  3144  014F  3403               	retlw	3
  3145  0150  3474               	retlw	116
  3146  0151  347D               	retlw	125
  3147  0152  3466               	retlw	102
  3148  0153  346F               	retlw	111
  3149  0154  3450               	retlw	80
  3150  0155  3459               	retlw	89
  3151  0156  3442               	retlw	66
  3152  0157  344B               	retlw	75
  3153  0158  3417               	retlw	23
  3154  0159  341E               	retlw	30
  3155  015A  3405               	retlw	5
  3156  015B  340C               	retlw	12
  3157  015C  3433               	retlw	51
  3158  015D  343A               	retlw	58
  3159  015E  3421               	retlw	33
  3160  015F  3428               	retlw	40
  3161  0160  345F               	retlw	95
  3162  0161  3456               	retlw	86
  3163  0162  344D               	retlw	77
  3164  0163  3444               	retlw	68
  3165  0164  347B               	retlw	123
  3166  0165  3472               	retlw	114
  3167  0166  3469               	retlw	105
  3168  0167  3460               	retlw	96
  3169  0168  340E               	retlw	14
  3170  0169  3407               	retlw	7
  3171  016A  341C               	retlw	28
  3172  016B  3415               	retlw	21
  3173  016C  342A               	retlw	42
  3174  016D  3423               	retlw	35
  3175  016E  3438               	retlw	56
  3176  016F  3431               	retlw	49
  3177  0170  3446               	retlw	70
  3178  0171  344F               	retlw	79
  3179  0172  3454               	retlw	84
  3180  0173  345D               	retlw	93
  3181  0174  3462               	retlw	98
  3182  0175  346B               	retlw	107
  3183  0176  3470               	retlw	112
  3184  0177  3479               	retlw	121
  3185  0178                     __end_of_CRCTable:	
  3186  000D                     _PORTBbits	set	13
  3187  000B                     _INTCONbits	set	11
  3188  0011                     _PIR1bits	set	17
  3189  000E                     _PORTCbits	set	14
  3190  008C                     _TRISA	set	140
  3191  009C                     _OSCSTATbits	set	156
  3192  009B                     _OSCCON	set	155
  3193  0091                     _PIE1bits	set	145
  3194  0468                     _TRISB0	set	1128
  3195  0471                     _TRISC1	set	1137
  3196  0470                     _TRISC0	set	1136
  3197  0469                     _TRISB1	set	1129
  3198  0477                     _TRISC7	set	1143
  3199  0474                     _TRISC4	set	1140
  3200  0473                     _TRISC3	set	1139
  3201  0472                     _TRISC2	set	1138
  3202  0C69                     _ANSB1	set	3177
  3203  0C73                     _ANSC3	set	3187
  3204  0214                     _SSP1STATbits	set	532
  3205  0211                     _SSP1BUF	set	529
  3206  0212                     _SSP1ADD	set	530
  3207  0215                     _SSP1CON1	set	533
  3208  0214                     _SSP1STAT	set	532
  3209  0215                     _SSP1CON1bits	set	533
  3210  0495                     _T2CON	set	1173
  3211  0497                     _T2CLKCON	set	1175
  3212  0494                     _T2PR	set	1172
  3213  058E                     _DAC1CON0	set	1422
  3214  058F                     _DAC1REFL	set	1423
  3215  0590                     _DAC1REFH	set	1424
  3216  2C68                     _DAC1LD	set	11368
  3217  0E3B                     _SSPDATPPS	set	3643
  3218  0E3A                     _SSPCLKPPS	set	3642
  3219  0EA4                     _RC4PPS	set	3748
  3220  0EA2                     _RC2PPS	set	3746
  3221  0178                     STR_5:	
  3222  0178  3466               	retlw	102	;'f'
  3223  0179  346D               	retlw	109	;'m'
  3224  017A  3474               	retlw	116	;'t'
  3225  017B  3420               	retlw	32	;' '
  3226  017C  3400               	retlw	0
  3227                           
  3228                           	psect	stringtext2
  3229  0628                     __pstringtext2:	
  3230  0628                     STR_3:	
  3231  0628  3457               	retlw	87	;'W'
  3232  0629  3441               	retlw	65	;'A'
  3233  062A  3456               	retlw	86	;'V'
  3234  062B  3445               	retlw	69	;'E'
  3235  062C  3400               	retlw	0
  3236                           
  3237                           	psect	stringtext3
  3238  062D                     __pstringtext3:	
  3239  062D                     STR_1:	
  3240  062D  3452               	retlw	82	;'R'
  3241  062E  3449               	retlw	73	;'I'
  3242  062F  3446               	retlw	70	;'F'
  3243  0630  3446               	retlw	70	;'F'
  3244  0631  3400               	retlw	0
  3245                           
  3246                           	psect	stringtext4
  3247  0632                     __pstringtext4:	
  3248  0632                     STR_7:	
  3249  0632  3464               	retlw	100	;'d'
  3250  0633  3461               	retlw	97	;'a'
  3251  0634  3474               	retlw	116	;'t'
  3252  0635  3461               	retlw	97	;'a'
  3253  0636  3400               	retlw	0
  3254                           
  3255                           	psect	stringtext5
  3256  0000                     __pstringtext5:	
  3257  0178                     
  3258                           ; #config settings
  3259  0000                     
  3260                           	psect	cinit
  3261  0035                     start_initialization:	
  3262  0035                     __initialization:		;BIGRAM_1
  3263                           
  3264                           ; Initialize objects allocated to COMMON
  3265  0035  3186  2637  3180   	fcall	__pidataCOMMON	;fetch initializer
  3266  0038  00F9               	movwf	__pdataCOMMON& (0+127)
  3267  0039  3186  2638  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  3268  003C  00FA               	movwf	(__pdataCOMMON+1)& (0+127)
  3269  003D  3186  2639  3180   	fcall	__pidataCOMMON+2	;fetch initializer
  3270  0040  00FB               	movwf	(__pdataCOMMON+2)& (0+127)
  3271                           
  3272                           ; Initialize objects allocated to BANK0
  3273  0041  3186  263A  3180   	fcall	__pidataBANK0	;fetch initializer
  3274  0044  00E7               	movwf	__pdataBANK0& (0+127)
  3275  0045  3186  263B  3180   	fcall	__pidataBANK0+1	;fetch initializer
  3276  0048  00E8               	movwf	(__pdataBANK0+1)& (0+127)
  3277  0049  3186  263C  3180   	fcall	__pidataBANK0+2	;fetch initializer
  3278  004C  00E9               	movwf	(__pdataBANK0+2)& (0+127)
  3279                           
  3280                           ; Initialize objects allocated to BANK1
  3281  004D  3023               	movlw	low __pidataBANK1
  3282  004E  0084               	movwf	4
  3283  004F  3086               	movlw	(high __pidataBANK1)| (0+128)
  3284  0050  0085               	movwf	5
  3285  0051  0021               	movlb	1	; select bank1
  3286  0052  0012               	moviw fsr0++
  3287  0053  00BD               	movwf	__pdataBANK1& (0+127)
  3288  0054  0012               	moviw fsr0++
  3289  0055  00BE               	movwf	(__pdataBANK1+1)& (0+127)
  3290  0056  0012               	moviw fsr0++
  3291  0057  00BF               	movwf	(__pdataBANK1+2)& (0+127)
  3292  0058  0012               	moviw fsr0++
  3293  0059  00C0               	movwf	(__pdataBANK1+3)& (0+127)
  3294  005A  0012               	moviw fsr0++
  3295  005B  00C1               	movwf	(__pdataBANK1+4)& (0+127)
  3296                           
  3297                           ; Clear objects allocated to BIGRAM_1
  3298  005C  30F0               	movlw	low (0+9968)
  3299  005D  0084               	movwf	4
  3300  005E  3026               	movlw	high (0+9968)
  3301  005F  0085               	movwf	5
  3302  0060  3000               	movlw	0
  3303  0061  00FE               	movwf	btemp
  3304  0062  3001               	movlw	1
  3305  0063  00FF               	movwf	btemp+1
  3306  0064  3185  25E6  3180   	fcall	clear_ram0
  3307                           
  3308                           ; Clear objects allocated to COMMON
  3309  0067  01F6               	clrf	__pbssCOMMON& (0+127)
  3310  0068  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  3311  0069  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  3312                           
  3313                           ; Clear objects allocated to BANK1
  3314  006A  30A0               	movlw	low __pbssBANK1
  3315  006B  0084               	movwf	4
  3316  006C  3000               	movlw	high __pbssBANK1
  3317  006D  0085               	movwf	5
  3318  006E  3015               	movlw	21
  3319  006F  00FE               	movwf	btemp
  3320  0070  3000               	movlw	0
  3321  0071  00FF               	movwf	btemp+1
  3322  0072  3185  25E6         	fcall	clear_ram0
  3323  0074                     end_of_initialization:	
  3324                           ;End of C runtime variable initialization code
  3325                           
  3326  0074                     __end_of__initialization:	
  3327  0074  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3328  0075  0020               	movlb	0
  3329  0076  3181  297D         	ljmp	_main	;jump to C main() function
  3330                           
  3331                           	psect	bssCOMMON
  3332  0076                     __pbssCOMMON:	
  3333  0076                     _buffer_read_index:	
  3334  0076                     	ds	2
  3335  0078                     _global_error:	
  3336  0078                     	ds	1
  3337                           
  3338                           	psect	dataCOMMON
  3339  0079                     __pdataCOMMON:	
  3340  0079                     _buffer_write_index:	
  3341  0079                     	ds	2
  3342  007B                     _GLBL_Resp8:	
  3343  007B                     	ds	1
  3344                           
  3345                           	psect	dataBANK0
  3346  0067                     __pdataBANK0:	
  3347  0067                     _isPlaying:	
  3348  0067                     	ds	1
  3349  0068                     _state:	
  3350  0068                     	ds	1
  3351  0069                     _readMessage:	
  3352  0069                     	ds	1
  3353                           
  3354                           	psect	bssBANK1
  3355  00A0                     __pbssBANK1:	
  3356  00A0                     _address:	
  3357  00A0                     	ds	4
  3358  00A4                     _filesize:	
  3359  00A4                     	ds	4
  3360  00A8                     _sampRate:	
  3361  00A8                     	ds	4
  3362  00AC                     _blockIndex:	
  3363  00AC                     	ds	2
  3364  00AE                     _sdata:	
  3365  00AE                     	ds	2
  3366  00B0                     _bitsPerSamp:	
  3367  00B0                     	ds	2
  3368  00B2                     _channels:	
  3369  00B2                     	ds	2
  3370  00B4                     _samplePending:	
  3371  00B4                     	ds	1
  3372                           
  3373                           	psect	dataBANK1
  3374  00BD                     __pdataBANK1:	
  3375  00BD                     _GLBL_Resp40:	
  3376  00BD                     	ds	5
  3377                           
  3378                           	psect	clrtext
  3379  05E6                     clear_ram0:	
  3380                           ;	Called with FSR0 containing the base address, and
  3381                           ;	btemp/btemp+1 has the size to clear
  3382                           
  3383  05E6  0064               	clrwdt	;clear the watchdog before getting into this loop
  3384  05E7                     clrloop0:	
  3385  05E7  0180               	clrf	0	;clear RAM location pointed to by FSR
  3386  05E8  3101               	addfsr 0,1
  3387  05E9  3001               	movlw	1
  3388  05EA  02FE               	subwf	126,f
  3389  05EB  3000               	movlw	0
  3390  05EC  3BFF               	subwfb	127,f
  3391  05ED  087F               	movf	127,w
  3392  05EE  047E               	iorwf	126,w
  3393  05EF  1903               	btfsc	3,2
  3394  05F0  3400               	retlw	0	;all done for this memory range, return
  3395  05F1  2DE7               	goto	clrloop0	;have we reached the end yet?
  3396                           
  3397                           	psect	cstackBANK1
  3398  00B5                     __pcstackBANK1:	
  3399  00B5                     ??_main:	
  3400                           
  3401                           ; 1 bytes @ 0x0
  3402  00B5                     	ds	8
  3403                           
  3404                           	psect	cstackCOMMON
  3405  0070                     __pcstackCOMMON:	
  3406  0070                     ?_SPI_Write:	
  3407  0070                     ?_SD_Read8bitResponse:	
  3408                           ; 1 bytes @ 0x0
  3409                           
  3410  0070                     ?_SD_Check8bitResponse:	
  3411                           ; 1 bytes @ 0x0
  3412                           
  3413  0070                     ?_SD_Read40bitResponse:	
  3414                           ; 1 bytes @ 0x0
  3415                           
  3416  0070                     ?_SPI_Read:	
  3417                           ; 1 bytes @ 0x0
  3418                           
  3419  0070                     ?_DAC_Init:	
  3420                           ; 1 bytes @ 0x0
  3421                           
  3422  0070                     ?_SD_Init:	
  3423                           ; 1 bytes @ 0x0
  3424                           
  3425  0070                     ?_SD_CloseBlock:	
  3426                           ; 1 bytes @ 0x0
  3427                           
  3428  0070                     ?_SPI_Init:	
  3429                           ; 1 bytes @ 0x0
  3430                           
  3431  0070                     ?_error:	
  3432                           ; 1 bytes @ 0x0
  3433                           
  3434  0070                     ?_init:	
  3435                           ; 1 bytes @ 0x0
  3436                           
  3437  0070                     ?_isr:	
  3438                           ; 1 bytes @ 0x0
  3439                           
  3440  0070                     ??_isr:	
  3441                           ; 1 bytes @ 0x0
  3442                           
  3443  0070                     ?_main:	
  3444                           ; 1 bytes @ 0x0
  3445                           
  3446                           
  3447                           ; 1 bytes @ 0x0
  3448  0070                     	ds	4
  3449  0074                     isr@level:	
  3450                           
  3451                           ; 2 bytes @ 0x4
  3452  0074                     	ds	2
  3453                           
  3454                           	psect	cstackBANK0
  3455  0020                     __pcstackBANK0:	
  3456  0020                     ??_SPI_Write:	
  3457  0020                     ??_SD_Read8bitResponse:	
  3458                           ; 1 bytes @ 0x0
  3459                           
  3460  0020                     ??_SD_Check8bitResponse:	
  3461                           ; 1 bytes @ 0x0
  3462                           
  3463  0020                     ??_SD_Read40bitResponse:	
  3464                           ; 1 bytes @ 0x0
  3465                           
  3466  0020                     ?_SD_Check40bitResponse:	
  3467                           ; 1 bytes @ 0x0
  3468                           
  3469  0020                     ??_SPI_Read:	
  3470                           ; 1 bytes @ 0x0
  3471                           
  3472  0020                     ??_DAC_Init:	
  3473                           ; 1 bytes @ 0x0
  3474                           
  3475  0020                     ??_SD_CloseBlock:	
  3476                           ; 1 bytes @ 0x0
  3477                           
  3478  0020                     ??_SPI_Init:	
  3479                           ; 1 bytes @ 0x0
  3480                           
  3481  0020                     ??_error:	
  3482                           ; 1 bytes @ 0x0
  3483                           
  3484  0020                     ?_fourCCeq:	
  3485                           ; 1 bytes @ 0x0
  3486                           
  3487  0020                     ?_readBytes:	
  3488                           ; 1 bytes @ 0x0
  3489                           
  3490  0020                     ?_timer_Init:	
  3491                           ; 1 bytes @ 0x0
  3492                           
  3493  0020                     SD_Check8bitResponse@Byte:	
  3494                           ; 2 bytes @ 0x0
  3495                           
  3496  0020                     SD_Check40bitResponse@Byte3:	
  3497                           ; 1 bytes @ 0x0
  3498                           
  3499  0020                     SPI_Write@Data_8bit:	
  3500                           ; 1 bytes @ 0x0
  3501                           
  3502  0020                     fourCCeq@b:	
  3503                           ; 1 bytes @ 0x0
  3504                           
  3505  0020                     readBytes@len:	
  3506                           ; 2 bytes @ 0x0
  3507                           
  3508  0020                     timer_Init@rate:	
  3509                           ; 2 bytes @ 0x0
  3510                           
  3511                           
  3512                           ; 4 bytes @ 0x0
  3513  0020                     	ds	1
  3514  0021                     ?_SD_SendCommand:	
  3515  0021                     SD_SendCommand@ARG3:	
  3516                           ; 1 bytes @ 0x1
  3517                           
  3518  0021                     SD_Read8bitResponse@readMessage:	
  3519                           ; 1 bytes @ 0x1
  3520                           
  3521  0021                     SD_Check8bitResponse@match:	
  3522                           ; 1 bytes @ 0x1
  3523                           
  3524  0021                     SD_Read40bitResponse@readMessage:	
  3525                           ; 1 bytes @ 0x1
  3526                           
  3527  0021                     SD_Check40bitResponse@Byte2:	
  3528                           ; 1 bytes @ 0x1
  3529                           
  3530  0021                     error@e:	
  3531                           ; 1 bytes @ 0x1
  3532                           
  3533                           
  3534                           ; 1 bytes @ 0x1
  3535  0021                     	ds	1
  3536  0022                     ??_fourCCeq:	
  3537  0022                     ??_readBytes:	
  3538                           ; 1 bytes @ 0x2
  3539                           
  3540  0022                     SD_SendCommand@ARG2:	
  3541                           ; 1 bytes @ 0x2
  3542                           
  3543  0022                     SD_Check40bitResponse@Byte1:	
  3544                           ; 1 bytes @ 0x2
  3545                           
  3546                           
  3547                           ; 1 bytes @ 0x2
  3548  0022                     	ds	1
  3549  0023                     SD_SendCommand@ARG1:	
  3550  0023                     SD_Check40bitResponse@Byte0:	
  3551                           ; 1 bytes @ 0x3
  3552                           
  3553                           
  3554                           ; 1 bytes @ 0x3
  3555  0023                     	ds	1
  3556  0024                     ??_SD_Check40bitResponse:	
  3557  0024                     ??_timer_Init:	
  3558                           ; 1 bytes @ 0x4
  3559                           
  3560  0024                     SD_SendCommand@ARG0:	
  3561                           ; 1 bytes @ 0x4
  3562                           
  3563  0024                     SD_Check40bitResponse@Byte4:	
  3564                           ; 1 bytes @ 0x4
  3565                           
  3566  0024                     readBytes@dest:	
  3567                           ; 1 bytes @ 0x4
  3568                           
  3569                           
  3570                           ; 1 bytes @ 0x4
  3571  0024                     	ds	1
  3572  0025                     ??_SD_SendCommand:	
  3573  0025                     SD_Check40bitResponse@match:	
  3574                           ; 1 bytes @ 0x5
  3575                           
  3576  0025                     readBytes@i:	
  3577                           ; 1 bytes @ 0x5
  3578                           
  3579                           
  3580                           ; 2 bytes @ 0x5
  3581  0025                     	ds	1
  3582  0026                     SD_SendCommand@CMD_6bit:	
  3583  0026                     fourCCeq@a:	
  3584                           ; 1 bytes @ 0x6
  3585                           
  3586                           
  3587                           ; 1 bytes @ 0x6
  3588  0026                     	ds	1
  3589  0027                     SD_SendCommand@ByteToSend:	
  3590  0027                     fourCCeq@i:	
  3591                           ; 1 bytes @ 0x7
  3592                           
  3593                           
  3594                           ; 1 bytes @ 0x7
  3595  0027                     	ds	1
  3596  0028                     SD_SendCommand@Checksum:	
  3597                           
  3598                           ; 1 bytes @ 0x8
  3599  0028                     	ds	1
  3600  0029                     ??_SD_Init:	
  3601  0029                     ?_SD_OpenBlock:	
  3602                           ; 1 bytes @ 0x9
  3603                           
  3604  0029                     SD_OpenBlock@address:	
  3605                           ; 1 bytes @ 0x9
  3606                           
  3607                           
  3608                           ; 4 bytes @ 0x9
  3609  0029                     	ds	1
  3610  002A                     ??_init:	
  3611                           
  3612                           ; 1 bytes @ 0xA
  3613  002A                     	ds	3
  3614  002D                     ??_SD_OpenBlock:	
  3615                           
  3616                           ; 1 bytes @ 0xD
  3617  002D                     	ds	4
  3618  0031                     SD_OpenBlock@a:	
  3619                           
  3620                           ; 4 bytes @ 0x11
  3621  0031                     	ds	4
  3622  0035                     ?_openFile:	
  3623  0035                     openFile@a:	
  3624                           ; 1 bytes @ 0x15
  3625                           
  3626                           
  3627                           ; 4 bytes @ 0x15
  3628  0035                     	ds	4
  3629  0039                     ??_openFile:	
  3630                           
  3631                           ; 1 bytes @ 0x19
  3632  0039                     	ds	1
  3633  003A                     openFile@riff:	
  3634                           
  3635                           ; 8 bytes @ 0x1A
  3636  003A                     	ds	8
  3637  0042                     openFile@response:	
  3638                           
  3639                           ; 1 bytes @ 0x22
  3640  0042                     	ds	1
  3641  0043                     openFile@data:	
  3642                           
  3643                           ; 8 bytes @ 0x23
  3644  0043                     	ds	8
  3645  004B                     openFile@fmt:	
  3646                           
  3647                           ; 28 bytes @ 0x2B
  3648  004B                     	ds	28
  3649                           
  3650                           	psect	maintext
  3651  017D                     __pmaintext:	
  3652 ;;
  3653 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  3654 ;;
  3655 ;; *************** function _main *****************
  3656 ;; Defined at:
  3657 ;;		line 134 in file "main.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;		None
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;		None
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  1    wreg      void 
  3664 ;; Registers used:
  3665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3666 ;; Tracked objects:
  3667 ;;		On entry : B1F/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3673 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3674 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3675 ;;Total ram usage:        8 bytes
  3676 ;; Hardware stack levels required when called:    5
  3677 ;; This function calls:
  3678 ;;		_SD_CloseBlock
  3679 ;;		_SD_OpenBlock
  3680 ;;		_SPI_Read
  3681 ;;		_error
  3682 ;;		_init
  3683 ;;		_openFile
  3684 ;;		_timer_Init
  3685 ;; This function is called by:
  3686 ;;		Startup code after reset
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           
  3691                           ;psect for function _main
  3692  017D                     _main:	
  3693                           
  3694                           ;main.c: 135:     init();
  3695                           
  3696                           ;incstack = 0
  3697                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3698  017D  3185  25C0  3181   	fcall	_init
  3699                           
  3700                           ;main.c: 139:         address = 0;
  3701  0180  3000               	movlw	0
  3702  0181  0021               	movlb	1	; select bank1
  3703  0182  00A3               	movwf	(_address+3)^(0+128)
  3704  0183  3000               	movlw	0
  3705  0184  00A2               	movwf	(_address+2)^(0+128)
  3706  0185  3000               	movlw	0
  3707  0186  00A1               	movwf	(_address+1)^(0+128)
  3708  0187  3000               	movlw	0
  3709  0188  00A0               	movwf	_address^(0+128)
  3710                           
  3711                           ;main.c: 141:         openFile(address);
  3712  0189  0823               	movf	(_address+3)^(0+128),w
  3713  018A  0020               	movlb	0	; select bank0
  3714  018B  00B8               	movwf	openFile@a+3
  3715  018C  0021               	movlb	1	; select bank1
  3716  018D  0822               	movf	(_address+2)^(0+128),w
  3717  018E  0020               	movlb	0	; select bank0
  3718  018F  00B7               	movwf	openFile@a+2
  3719  0190  0021               	movlb	1	; select bank1
  3720  0191  0821               	movf	(_address+1)^(0+128),w
  3721  0192  0020               	movlb	0	; select bank0
  3722  0193  00B6               	movwf	openFile@a+1
  3723  0194  0021               	movlb	1	; select bank1
  3724  0195  0820               	movf	_address^(0+128),w
  3725  0196  0020               	movlb	0	; select bank0
  3726  0197  00B5               	movwf	openFile@a
  3727  0198  3182  2272  3181   	fcall	_openFile
  3728                           
  3729                           ;main.c: 142:         if(channels != 2) samplePending = 0;
  3730  019B  3002               	movlw	2
  3731  019C  0021               	movlb	1	; select bank1
  3732  019D  0632               	xorwf	_channels^(0+128),w
  3733  019E  0433               	iorwf	(_channels+1)^(0+128),w
  3734  019F  1D03               	btfss	3,2
  3735  01A0  01B4               	clrf	_samplePending^(0+128)
  3736                           
  3737                           ;main.c: 143:         timer_Init(sampRate);
  3738  01A1  082B               	movf	(_sampRate+3)^(0+128),w
  3739  01A2  0020               	movlb	0	; select bank0
  3740  01A3  00A3               	movwf	timer_Init@rate+3
  3741  01A4  0021               	movlb	1	; select bank1
  3742  01A5  082A               	movf	(_sampRate+2)^(0+128),w
  3743  01A6  0020               	movlb	0	; select bank0
  3744  01A7  00A2               	movwf	timer_Init@rate+2
  3745  01A8  0021               	movlb	1	; select bank1
  3746  01A9  0829               	movf	(_sampRate+1)^(0+128),w
  3747  01AA  0020               	movlb	0	; select bank0
  3748  01AB  00A1               	movwf	timer_Init@rate+1
  3749  01AC  0021               	movlb	1	; select bank1
  3750  01AD  0828               	movf	_sampRate^(0+128),w
  3751  01AE  0020               	movlb	0	; select bank0
  3752  01AF  00A0               	movwf	timer_Init@rate
  3753  01B0  3184  2454  3181   	fcall	_timer_Init
  3754  01B3                     l2446:	
  3755                           
  3756                           ;main.c: 147:             if (state == CLOSED && isPlaying) {
  3757  01B3  3003               	movlw	3
  3758  01B4  0020               	movlb	0	; select bank0
  3759  01B5  0668               	xorwf	_state,w
  3760  01B6  1D03               	btfss	3,2
  3761  01B7  29D9               	goto	l2458
  3762                           
  3763                           ;main.c: 148:                 PORTBbits.RB0 = 1;
  3764  01B8  140D               	bsf	13,0	;volatile
  3765                           
  3766                           ;main.c: 149:                 SD_OpenBlock(address);
  3767  01B9  0021               	movlb	1	; select bank1
  3768  01BA  0823               	movf	(_address+3)^(0+128),w
  3769  01BB  0020               	movlb	0	; select bank0
  3770  01BC  00AC               	movwf	SD_OpenBlock@address+3
  3771  01BD  0021               	movlb	1	; select bank1
  3772  01BE  0822               	movf	(_address+2)^(0+128),w
  3773  01BF  0020               	movlb	0	; select bank0
  3774  01C0  00AB               	movwf	SD_OpenBlock@address+2
  3775  01C1  0021               	movlb	1	; select bank1
  3776  01C2  0821               	movf	(_address+1)^(0+128),w
  3777  01C3  0020               	movlb	0	; select bank0
  3778  01C4  00AA               	movwf	SD_OpenBlock@address+1
  3779  01C5  0021               	movlb	1	; select bank1
  3780  01C6  0820               	movf	_address^(0+128),w
  3781  01C7  0020               	movlb	0	; select bank0
  3782  01C8  00A9               	movwf	SD_OpenBlock@address
  3783  01C9  3185  255B  3181   	fcall	_SD_OpenBlock
  3784                           
  3785                           ;main.c: 150:                 state = OPENING;
  3786  01CC  3002               	movlw	2
  3787  01CD  0021               	movlb	1	; select bank1
  3788  01CE  00B5               	movwf	??_main^(0+128)
  3789  01CF  0835               	movf	??_main^(0+128),w
  3790  01D0  0020               	movlb	0	; select bank0
  3791  01D1  00E8               	movwf	_state
  3792                           
  3793                           ;main.c: 151:                 readMessage = 0xFF;
  3794  01D2  30FF               	movlw	255
  3795  01D3  0021               	movlb	1	; select bank1
  3796  01D4  00B5               	movwf	??_main^(0+128)
  3797  01D5  0835               	movf	??_main^(0+128),w
  3798  01D6  0020               	movlb	0	; select bank0
  3799  01D7  00E9               	movwf	_readMessage
  3800                           
  3801                           ;main.c: 152:                 PORTBbits.RB0 = 0;
  3802  01D8  100D               	bcf	13,0	;volatile
  3803  01D9                     l2458:	
  3804                           
  3805                           ;main.c: 157:             if (state == OPENING) {
  3806  01D9  3002               	movlw	2
  3807  01DA  0668               	xorwf	_state,w
  3808  01DB  1D03               	btfss	3,2
  3809  01DC  29FB               	goto	l2476
  3810                           
  3811                           ;main.c: 158:                 PORTBbits.RB0 = 1;
  3812  01DD  140D               	bsf	13,0	;volatile
  3813                           
  3814                           ;main.c: 159:                 readMessage = SPI_Read();
  3815  01DE  3186  2615  3181   	fcall	_SPI_Read
  3816  01E1  0021               	movlb	1	; select bank1
  3817  01E2  00B5               	movwf	??_main^(0+128)
  3818  01E3  0835               	movf	??_main^(0+128),w
  3819  01E4  0020               	movlb	0	; select bank0
  3820  01E5  00E9               	movwf	_readMessage
  3821                           
  3822                           ;main.c: 160:                 if (readMessage != 0xFF) {
  3823  01E6  0A69               	incf	_readMessage,w
  3824  01E7  1903               	btfsc	3,2
  3825  01E8  29FB               	goto	l2476
  3826                           
  3827                           ;main.c: 161:                     if (readMessage == 0xFE){
  3828  01E9  30FE               	movlw	254
  3829  01EA  0669               	xorwf	_readMessage,w
  3830  01EB  1D03               	btfss	3,2
  3831  01EC  29EF               	goto	l2470
  3832                           
  3833                           ;main.c: 162:                         state = OPEN;
  3834  01ED  01E8               	clrf	_state
  3835                           
  3836                           ;main.c: 163:                     } else {
  3837  01EE  29F9               	goto	l2474
  3838  01EF                     l2470:	
  3839                           
  3840                           ;main.c: 164:                         state = CLOSED;
  3841  01EF  3003               	movlw	3
  3842  01F0  0021               	movlb	1	; select bank1
  3843  01F1  00B5               	movwf	??_main^(0+128)
  3844  01F2  0835               	movf	??_main^(0+128),w
  3845  01F3  0020               	movlb	0	; select bank0
  3846  01F4  00E8               	movwf	_state
  3847                           
  3848                           ;main.c: 165:                         error(OPEN_BLOCK);
  3849  01F5  3000               	movlw	0
  3850  01F6  3186  2605  3181   	fcall	_error
  3851  01F9                     l2474:	
  3852                           
  3853                           ;main.c: 167:                     PORTBbits.RB0 = 0;
  3854  01F9  0020               	movlb	0	; select bank0
  3855  01FA  100D               	bcf	13,0	;volatile
  3856  01FB                     l2476:	
  3857                           
  3858                           ;main.c: 171:             if (state == OPEN) {
  3859  01FB  0868               	movf	_state,w
  3860  01FC  1D03               	btfss	3,2
  3861  01FD  29B3               	goto	l2446
  3862                           
  3863                           ;main.c: 172:                 if (blockIndex >= 512) {
  3864  01FE  0021               	movlb	1	; select bank1
  3865  01FF  082D               	movf	(_blockIndex+1)^(0+128),w
  3866  0200  3A80               	xorlw	128
  3867  0201  00B5               	movwf	??_main^(0+128)
  3868  0202  3082               	movlw	130
  3869  0203  0235               	subwf	??_main^(0+128),w
  3870  0204  1D03               	skipz
  3871  0205  2A08               	goto	u1135
  3872  0206  3000               	movlw	0
  3873  0207  022C               	subwf	_blockIndex^(0+128),w
  3874  0208                     u1135:	
  3875  0208  1C03               	skipc
  3876  0209  2A1F               	goto	l282
  3877                           
  3878                           ;main.c: 173:                     SD_CloseBlock();
  3879  020A  3185  25FC  3181   	fcall	_SD_CloseBlock
  3880                           
  3881                           ;main.c: 174:                     ++address;
  3882  020D  3001               	movlw	1
  3883  020E  0021               	movlb	1	; select bank1
  3884  020F  07A0               	addwf	_address^(0+128),f
  3885  0210  3000               	movlw	0
  3886  0211  3DA1               	addwfc	(_address+1)^(0+128),f
  3887  0212  3000               	movlw	0
  3888  0213  3DA2               	addwfc	(_address+2)^(0+128),f
  3889  0214  3000               	movlw	0
  3890  0215  3DA3               	addwfc	(_address+3)^(0+128),f
  3891                           
  3892                           ;main.c: 175:                     blockIndex = 0;
  3893  0216  01AC               	clrf	_blockIndex^(0+128)
  3894  0217  01AD               	clrf	(_blockIndex+1)^(0+128)
  3895                           
  3896                           ;main.c: 176:                     state = CLOSED;
  3897  0218  3003               	movlw	3
  3898  0219  00B5               	movwf	??_main^(0+128)
  3899  021A  0835               	movf	??_main^(0+128),w
  3900  021B  0020               	movlb	0	; select bank0
  3901  021C  00E8               	movwf	_state
  3902                           
  3903                           ;main.c: 177:                     PORTBbits.RB0 = 1;
  3904  021D  140D               	bsf	13,0	;volatile
  3905                           
  3906                           ;main.c: 178:                 } else {
  3907  021E  29B3               	goto	l2446
  3908  021F                     l282:	
  3909                           
  3910                           ;main.c: 179:                     PIE1bits.TMR2IE = 0;
  3911  021F  0021               	movlb	1	; select bank1
  3912  0220  1091               	bcf	17,1	;volatile
  3913                           
  3914                           ;main.c: 180:                     if (buffer_write_index != buffer_read_index) {
  3915  0221  0877               	movf	_buffer_read_index+1,w
  3916  0222  067A               	xorwf	_buffer_write_index+1,w
  3917  0223  1D03               	skipz
  3918  0224  2A27               	goto	u1145
  3919  0225  0876               	movf	_buffer_read_index,w
  3920  0226  0679               	xorwf	_buffer_write_index,w
  3921  0227                     u1145:	
  3922  0227  1903               	skipnz
  3923  0228  2A70               	goto	l284
  3924                           
  3925                           ;main.c: 181:                         PIE1bits.TMR2IE = 1;
  3926  0229  1491               	bsf	17,1	;volatile
  3927                           
  3928                           ;main.c: 205:                         PORTCbits.RC1 = 1;
  3929  022A  0020               	movlb	0	; select bank0
  3930  022B  148E               	bsf	14,1	;volatile
  3931                           
  3932                           ;main.c: 206:                         sdata[0] = SPI_Read();
  3933  022C  3186  2615  3181   	fcall	_SPI_Read
  3934  022F  0021               	movlb	1	; select bank1
  3935  0230  00B5               	movwf	??_main^(0+128)
  3936  0231  0835               	movf	??_main^(0+128),w
  3937  0232  00AE               	movwf	_sdata^(0+128)
  3938                           
  3939                           ;main.c: 207:                         sdata[1] = SPI_Read();
  3940  0233  3186  2615  3181   	fcall	_SPI_Read
  3941  0236  0021               	movlb	1	; select bank1
  3942  0237  00B5               	movwf	??_main^(0+128)
  3943  0238  0835               	movf	??_main^(0+128),w
  3944  0239  00AF               	movwf	(_sdata^(0+128)+1)
  3945                           
  3946                           ;main.c: 209:                         buffer[ buffer_write_index++ ] = *((short*)sdata)-
      +                           0x8000;
  3947  023A  30AE               	movlw	low (_sdata| 0)
  3948  023B  0086               	movwf	6
  3949  023C  0187               	clrf	7
  3950  023D  3F40               	moviw [0]fsr1
  3951  023E  00B5               	movwf	??_main^(0+128)
  3952  023F  3F41               	moviw [1]fsr1
  3953  0240  00B6               	movwf	(??_main^(0+128)+1)
  3954  0241  0835               	movf	??_main^(0+128),w
  3955  0242  3E00               	addlw	0
  3956  0243  00B7               	movwf	(??_main+2)^(0+128)
  3957  0244  3080               	movlw	128
  3958  0245  3D36               	addwfc	(??_main+1)^(0+128),w
  3959  0246  00B8               	movwf	(??_main+3)^(0+128)
  3960  0247  087A               	movf	_buffer_write_index+1,w
  3961  0248  00BA               	movwf	((??_main+4)^(0+128)+1)
  3962  0249  0879               	movf	_buffer_write_index,w
  3963  024A  00B9               	movwf	(??_main+4)^(0+128)
  3964  024B  35B9               	lslf	(??_main+4)^(0+128),f
  3965  024C  0DBA               	rlf	((??_main+4)^(0+128)+1),f
  3966  024D  30F0               	movlw	240
  3967  024E  00BB               	movwf	(??_main+6)^(0+128)
  3968  024F  3026               	movlw	38
  3969  0250  00BC               	movwf	((??_main+6)^(0+128)+1)
  3970  0251  0839               	movf	(??_main+4)^(0+128),w
  3971  0252  073B               	addwf	(??_main+6)^(0+128),w
  3972  0253  0086               	movwf	6
  3973  0254  083A               	movf	(??_main+5)^(0+128),w
  3974  0255  3D3C               	addwfc	(??_main+7)^(0+128),w
  3975  0256  0087               	movwf	7
  3976  0257  0837               	movf	(??_main+2)^(0+128),w
  3977  0258  3FC0               	movwi [0]fsr1
  3978  0259  0838               	movf	((??_main+2)^(0+128)+1),w
  3979  025A  3FC1               	movwi [1]fsr1
  3980  025B  3001               	movlw	1
  3981  025C  07F9               	addwf	_buffer_write_index,f
  3982  025D  3000               	movlw	0
  3983  025E  3DFA               	addwfc	_buffer_write_index+1,f
  3984                           
  3985                           ;main.c: 210:                         PORTCbits.RC1 = 0;
  3986  025F  0020               	movlb	0	; select bank0
  3987  0260  108E               	bcf	14,1	;volatile
  3988                           
  3989                           ;main.c: 212:                         if (buffer_write_index >= 128) buffer_write_index 
      +                          = 0;
  3990  0261  3000               	movlw	0
  3991  0262  027A               	subwf	_buffer_write_index+1,w
  3992  0263  3080               	movlw	128
  3993  0264  1903               	skipnz
  3994  0265  0279               	subwf	_buffer_write_index,w
  3995  0266  1C03               	skipc
  3996  0267  2A6A               	goto	l2506
  3997  0268  01F9               	clrf	_buffer_write_index
  3998  0269  01FA               	clrf	_buffer_write_index+1
  3999  026A                     l2506:	
  4000                           
  4001                           ;main.c: 213:                         blockIndex += 2;
  4002  026A  3002               	movlw	2
  4003  026B  0021               	movlb	1	; select bank1
  4004  026C  07AC               	addwf	_blockIndex^(0+128),f
  4005  026D  3000               	movlw	0
  4006  026E  3DAD               	addwfc	(_blockIndex+1)^(0+128),f
  4007                           
  4008                           ;main.c: 215:                     } else PIE1bits.TMR2IE = 1;
  4009  026F  29B3               	goto	l2446
  4010  0270                     l284:	
  4011  0270  1491               	bsf	17,1	;volatile
  4012  0271  29B3               	goto	l2446
  4013  0272                     __end_of_main:	
  4014                           
  4015                           	psect	text1
  4016  0454                     __ptext1:	
  4017 ;; *************** function _timer_Init *****************
  4018 ;; Defined at:
  4019 ;;		line 8 in file "timer.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  rate            4    0[BANK0 ] long 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;		None
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  2    0[BANK0 ] int 
  4026 ;; Registers used:
  4027 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4033 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4036 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4037 ;;Total ram usage:        4 bytes
  4038 ;; Hardware stack levels used:    1
  4039 ;; Hardware stack levels required when called:    1
  4040 ;; This function calls:
  4041 ;;		Nothing
  4042 ;; This function is called by:
  4043 ;;		_main
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           
  4048                           ;psect for function _timer_Init
  4049  0454                     _timer_Init:	
  4050                           
  4051                           ;timer.c: 9:     PIR1bits.TMR2IF = 0;
  4052                           
  4053                           ;incstack = 0
  4054                           ; Regs used in _timer_Init: [wreg-fsr0h+status,2+status,0]
  4055  0454  0020               	movlb	0	; select bank0
  4056  0455  1091               	bcf	17,1	;volatile
  4057                           
  4058                           ;timer.c: 10:     PIE1bits.TMR2IE = 1;
  4059  0456  0021               	movlb	1	; select bank1
  4060  0457  1491               	bsf	17,1	;volatile
  4061                           
  4062                           ;timer.c: 11:     INTCONbits.PEIE = 1;
  4063  0458  170B               	bsf	11,6	;volatile
  4064                           
  4065                           ;timer.c: 12:     INTCONbits.GIE = 1;
  4066  0459  178B               	bsf	11,7	;volatile
  4067                           
  4068                           ;timer.c: 14:     switch (rate) {
  4069  045A  2C85               	goto	l2324
  4070  045B                     l2296:	
  4071                           
  4072                           ;timer.c: 16:             T2PR = 100;
  4073  045B  3064               	movlw	100
  4074  045C  0029               	movlb	9	; select bank9
  4075  045D  0094               	movwf	20	;volatile
  4076                           
  4077                           ;timer.c: 17:             T2CLKCON = 0x03;
  4078  045E  3003               	movlw	3
  4079  045F  0097               	movwf	23	;volatile
  4080                           
  4081                           ;timer.c: 18:             T2CON = 0x89;
  4082  0460  3089               	movlw	137
  4083  0461  0095               	movwf	21	;volatile
  4084                           
  4085                           ;timer.c: 19:             PIR1bits.TMR2IF = 0;
  4086  0462  0020               	movlb	0	; select bank0
  4087  0463  1091               	bcf	17,1	;volatile
  4088  0464  0008               	return
  4089  0465                     l2304:	
  4090                           
  4091                           ;timer.c: 23:             T2PR = 32;
  4092  0465  3020               	movlw	32
  4093  0466  0029               	movlb	9	; select bank9
  4094  0467  0094               	movwf	20	;volatile
  4095                           
  4096                           ;timer.c: 24:             T2CLKCON = 0x03;
  4097  0468  3003               	movlw	3
  4098  0469  0097               	movwf	23	;volatile
  4099                           
  4100                           ;timer.c: 25:             T2CON = 0x8A;
  4101  046A  308A               	movlw	138
  4102  046B  0095               	movwf	21	;volatile
  4103  046C  0008               	return
  4104  046D                     l2310:	
  4105                           
  4106                           ;timer.c: 29:             T2PR = 111;
  4107  046D  306F               	movlw	111
  4108  046E  0029               	movlb	9	; select bank9
  4109  046F  0094               	movwf	20	;volatile
  4110                           
  4111                           ;timer.c: 30:             T2CLKCON = 0x03;
  4112  0470  3003               	movlw	3
  4113  0471  0097               	movwf	23	;volatile
  4114                           
  4115                           ;timer.c: 31:             T2CON = 0x82;
  4116  0472  3082               	movlw	130
  4117  0473  0095               	movwf	21	;volatile
  4118  0474  0008               	return
  4119  0475                     l2316:	
  4120                           
  4121                           ;timer.c: 35:             T2PR = 100;
  4122  0475  3064               	movlw	100
  4123  0476  0029               	movlb	9	; select bank9
  4124  0477  0094               	movwf	20	;volatile
  4125                           
  4126                           ;timer.c: 36:             T2CLKCON = 0x03;
  4127  0478  3003               	movlw	3
  4128  0479  0097               	movwf	23	;volatile
  4129                           
  4130                           ;timer.c: 37:             T2CON = 0x84;
  4131  047A  3084               	movlw	132
  4132  047B  0095               	movwf	21	;volatile
  4133                           
  4134                           ;timer.c: 38:         break;
  4135  047C  0008               	return
  4136  047D                     l2318:	
  4137                           
  4138                           ;timer.c: 40:             T2PR = 65;
  4139  047D  3041               	movlw	65
  4140  047E  0029               	movlb	9	; select bank9
  4141  047F  0094               	movwf	20	;volatile
  4142                           
  4143                           ;timer.c: 41:             T2CLKCON = 0x03;
  4144  0480  3003               	movlw	3
  4145  0481  0097               	movwf	23	;volatile
  4146                           
  4147                           ;timer.c: 42:             T2CON = 0x8A;
  4148  0482  308A               	movlw	138
  4149  0483  0095               	movwf	21	;volatile
  4150  0484  0008               	return
  4151  0485                     l2324:	
  4152                           
  4153                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4154                           ; Switch size 1, requested type "simple"
  4155                           ; Number of cases is 1, Range of values is 0 to 0
  4156                           ; switch strategies available:
  4157                           ; Name         Instructions Cycles
  4158                           ; simple_byte            4     3 (average)
  4159                           ; direct_byte            8     6 (fixed)
  4160                           ; jumptable            260     6 (fixed)
  4161                           ;	Chosen strategy is simple_byte
  4162  0485  0020               	movlb	0	; select bank0
  4163  0486  0823               	movf	timer_Init@rate+3,w
  4164  0487  3A00               	xorlw	0	; case 0
  4165  0488  1903               	skipnz
  4166  0489  2CB5               	goto	l2650
  4167  048A  2CBA               	goto	l138
  4168  048B                     l2648:	
  4169                           
  4170                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
  4171                           ; Switch size 1, requested type "simple"
  4172                           ; Number of cases is 5, Range of values is 62 to 187
  4173                           ; switch strategies available:
  4174                           ; Name         Instructions Cycles
  4175                           ; simple_byte           16     9 (average)
  4176                           ; direct_byte          261     9 (fixed)
  4177                           ; jumptable            263     9 (fixed)
  4178                           ;	Chosen strategy is simple_byte
  4179  048B  0821               	movf	timer_Init@rate+1,w
  4180  048C  3A3E               	xorlw	62	; case 62
  4181  048D  1903               	skipnz
  4182  048E  2C9C               	goto	l2652
  4183  048F  3A68               	xorlw	104	; case 86
  4184  0490  1903               	skipnz
  4185  0491  2CA1               	goto	l2654
  4186  0492  3A2B               	xorlw	43	; case 125
  4187  0493  1903               	skipnz
  4188  0494  2CA6               	goto	l2656
  4189  0495  3AD1               	xorlw	209	; case 172
  4190  0496  1903               	skipnz
  4191  0497  2CAB               	goto	l2658
  4192  0498  3A17               	xorlw	23	; case 187
  4193  0499  1903               	skipnz
  4194  049A  2CB0               	goto	l2660
  4195  049B  2CBA               	goto	l138
  4196  049C                     l2652:	
  4197                           
  4198                           ; Switch size 1, requested type "simple"
  4199                           ; Number of cases is 1, Range of values is 128 to 128
  4200                           ; switch strategies available:
  4201                           ; Name         Instructions Cycles
  4202                           ; simple_byte            4     3 (average)
  4203                           ; direct_byte           11     9 (fixed)
  4204                           ; jumptable            263     9 (fixed)
  4205                           ;	Chosen strategy is simple_byte
  4206  049C  0820               	movf	timer_Init@rate,w
  4207  049D  3A80               	xorlw	128	; case 128
  4208  049E  1903               	skipnz
  4209  049F  2C5B               	goto	l2296
  4210  04A0  2CBA               	goto	l138
  4211  04A1                     l2654:	
  4212                           
  4213                           ; Switch size 1, requested type "simple"
  4214                           ; Number of cases is 1, Range of values is 34 to 34
  4215                           ; switch strategies available:
  4216                           ; Name         Instructions Cycles
  4217                           ; simple_byte            4     3 (average)
  4218                           ; direct_byte           11     9 (fixed)
  4219                           ; jumptable            263     9 (fixed)
  4220                           ;	Chosen strategy is simple_byte
  4221  04A1  0820               	movf	timer_Init@rate,w
  4222  04A2  3A22               	xorlw	34	; case 34
  4223  04A3  1903               	skipnz
  4224  04A4  2C7D               	goto	l2318
  4225  04A5  2CBA               	goto	l138
  4226  04A6                     l2656:	
  4227                           
  4228                           ; Switch size 1, requested type "simple"
  4229                           ; Number of cases is 1, Range of values is 0 to 0
  4230                           ; switch strategies available:
  4231                           ; Name         Instructions Cycles
  4232                           ; simple_byte            4     3 (average)
  4233                           ; direct_byte            8     6 (fixed)
  4234                           ; jumptable            260     6 (fixed)
  4235                           ;	Chosen strategy is simple_byte
  4236  04A6  0820               	movf	timer_Init@rate,w
  4237  04A7  3A00               	xorlw	0	; case 0
  4238  04A8  1903               	skipnz
  4239  04A9  2C75               	goto	l2316
  4240  04AA  2CBA               	goto	l138
  4241  04AB                     l2658:	
  4242                           
  4243                           ; Switch size 1, requested type "simple"
  4244                           ; Number of cases is 1, Range of values is 68 to 68
  4245                           ; switch strategies available:
  4246                           ; Name         Instructions Cycles
  4247                           ; simple_byte            4     3 (average)
  4248                           ; direct_byte           11     9 (fixed)
  4249                           ; jumptable            263     9 (fixed)
  4250                           ;	Chosen strategy is simple_byte
  4251  04AB  0820               	movf	timer_Init@rate,w
  4252  04AC  3A44               	xorlw	68	; case 68
  4253  04AD  1903               	skipnz
  4254  04AE  2C65               	goto	l2304
  4255  04AF  2CBA               	goto	l138
  4256  04B0                     l2660:	
  4257                           
  4258                           ; Switch size 1, requested type "simple"
  4259                           ; Number of cases is 1, Range of values is 128 to 128
  4260                           ; switch strategies available:
  4261                           ; Name         Instructions Cycles
  4262                           ; simple_byte            4     3 (average)
  4263                           ; direct_byte           11     9 (fixed)
  4264                           ; jumptable            263     9 (fixed)
  4265                           ;	Chosen strategy is simple_byte
  4266  04B0  0820               	movf	timer_Init@rate,w
  4267  04B1  3A80               	xorlw	128	; case 128
  4268  04B2  1903               	skipnz
  4269  04B3  2C6D               	goto	l2310
  4270  04B4  2CBA               	goto	l138
  4271  04B5                     l2650:	
  4272                           
  4273                           ; Switch size 1, requested type "simple"
  4274                           ; Number of cases is 1, Range of values is 0 to 0
  4275                           ; switch strategies available:
  4276                           ; Name         Instructions Cycles
  4277                           ; simple_byte            4     3 (average)
  4278                           ; direct_byte            8     6 (fixed)
  4279                           ; jumptable            260     6 (fixed)
  4280                           ;	Chosen strategy is simple_byte
  4281  04B5  0822               	movf	timer_Init@rate+2,w
  4282  04B6  3A00               	xorlw	0	; case 0
  4283  04B7  1903               	skipnz
  4284  04B8  2C8B               	goto	l2648
  4285  04B9  2CBA               	goto	l138
  4286  04BA                     l138:	
  4287  04BA  0008               	return
  4288  04BB                     __end_of_timer_Init:	
  4289                           
  4290                           	psect	text2
  4291  0272                     __ptext2:	
  4292 ;; *************** function _openFile *****************
  4293 ;; Defined at:
  4294 ;;		line 69 in file "main.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  a               4   21[BANK0 ] long 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  data            8   35[BANK0 ] struct .
  4299 ;;  fmt            28   43[BANK0 ] struct .
  4300 ;;  riff            8   26[BANK0 ] struct .
  4301 ;;  response        1   34[BANK0 ] unsigned char 
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  1    wreg      void 
  4304 ;; Registers used:
  4305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4311 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4312 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4313 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4314 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4315 ;;Total ram usage:       50 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; Hardware stack levels required when called:    4
  4318 ;; This function calls:
  4319 ;;		_SD_OpenBlock
  4320 ;;		_SPI_Read
  4321 ;;		_error
  4322 ;;		_fourCCeq
  4323 ;;		_readBytes
  4324 ;; This function is called by:
  4325 ;;		_main
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           
  4330                           ;psect for function _openFile
  4331  0272                     _openFile:	
  4332                           
  4333                           ;main.c: 70:     SD_OpenBlock(a);
  4334                           
  4335                           ;incstack = 0
  4336                           ; Regs used in _openFile: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4337  0272  0020               	movlb	0	; select bank0
  4338  0273  0838               	movf	openFile@a+3,w
  4339  0274  00AC               	movwf	SD_OpenBlock@address+3
  4340  0275  0837               	movf	openFile@a+2,w
  4341  0276  00AB               	movwf	SD_OpenBlock@address+2
  4342  0277  0836               	movf	openFile@a+1,w
  4343  0278  00AA               	movwf	SD_OpenBlock@address+1
  4344  0279  0835               	movf	openFile@a,w
  4345  027A  00A9               	movwf	SD_OpenBlock@address
  4346  027B  3185  255B  3182   	fcall	_SD_OpenBlock
  4347                           
  4348                           ;main.c: 71:     state = OPEN;
  4349  027E  0020               	movlb	0	; select bank0
  4350  027F  01E8               	clrf	_state
  4351                           
  4352                           ;main.c: 72:     char response = 0xFF;
  4353  0280  30FF               	movlw	255
  4354  0281                     L1:	
  4355  0281  00B9               	movwf	??_openFile
  4356  0282  0839               	movf	??_openFile,w
  4357  0283  00C2               	movwf	openFile@response
  4358  0284  0A42               	incf	openFile@response,w
  4359  0285  1D03               	btfss	3,2
  4360  0286  2A8C               	goto	l2364
  4361                           
  4362                           ;main.c: 73:     while (response == 0xFF) response = SPI_Read();
  4363  0287  3186  2615  3182   	fcall	_SPI_Read
  4364  028A  0020               	movlb	0	; select bank0
  4365  028B  2A81               	goto	L1
  4366  028C                     l2364:	
  4367                           
  4368                           ;main.c: 74:     if (response != 0xFE) error(OPEN_BLOCK);
  4369  028C  30FE               	movlw	254
  4370  028D  0642               	xorwf	openFile@response,w
  4371  028E  1903               	btfsc	3,2
  4372  028F  2A94               	goto	l2368
  4373  0290  3000               	movlw	0
  4374  0291  3186  2605  3182   	fcall	_error
  4375  0294                     l2368:	
  4376                           
  4377                           ;main.c: 76:     {;main.c: 77:         RiffTag riff;;main.c: 78:         readBytes((char
      +                          *)&riff, sizeof(riff));;
  4378  0294  3008               	movlw	8
  4379  0295  0020               	movlb	0	; select bank0
  4380  0296  00A0               	movwf	readBytes@len
  4381  0297  3000               	movlw	0
  4382  0298  00A1               	movwf	readBytes@len+1
  4383  0299  303A               	movlw	(low (openFile@riff| 0))& (0+255)
  4384  029A  3184  24BB  3182   	fcall	_readBytes
  4385                           
  4386                           ;main.c: 79:         if (!fourCCeq(riff.ckID, "RIFF")) error(RIFF_HEADER);
  4387  029D  302D               	movlw	low (STR_1| (0+32768))
  4388  029E  0020               	movlb	0	; select bank0
  4389  029F  00A0               	movwf	fourCCeq@b
  4390  02A0  3086               	movlw	high (STR_1| (0+32768))
  4391  02A1  00A1               	movwf	fourCCeq@b+1
  4392  02A2  303A               	movlw	(low (openFile@riff| 0))& (0+255)
  4393  02A3  3185  2535  3182   	fcall	_fourCCeq
  4394  02A6  3A00               	xorlw	0
  4395  02A7  1D03               	skipz
  4396  02A8  2AAD               	goto	l2374
  4397  02A9  3001               	movlw	1
  4398  02AA  3186  2605  3182   	fcall	_error
  4399  02AD                     l2374:	
  4400                           
  4401                           ;main.c: 80:     }{;main.c: 81:         FmtChunk fmt;;main.c: 82:         readBytes((cha
      +                          r*)&fmt, sizeof(fmt));;
  4402  02AD  301C               	movlw	28
  4403  02AE  0020               	movlb	0	; select bank0
  4404  02AF  00A0               	movwf	readBytes@len
  4405  02B0  3000               	movlw	0
  4406  02B1  00A1               	movwf	readBytes@len+1
  4407  02B2  304B               	movlw	(low (openFile@fmt| 0))& (0+255)
  4408  02B3  3184  24BB  3182   	fcall	_readBytes
  4409                           
  4410                           ;main.c: 83:         if (!fourCCeq(fmt.WAVEID, "WAVE")) error(WAVE_HEADER);
  4411  02B6  3028               	movlw	low (STR_3| (0+32768))
  4412  02B7  0020               	movlb	0	; select bank0
  4413  02B8  00A0               	movwf	fourCCeq@b
  4414  02B9  3086               	movlw	high (STR_3| (0+32768))
  4415  02BA  00A1               	movwf	fourCCeq@b+1
  4416  02BB  304B               	movlw	(low (openFile@fmt| 0))& (0+255)
  4417  02BC  3185  2535  3182   	fcall	_fourCCeq
  4418  02BF  3A00               	xorlw	0
  4419  02C0  1D03               	skipz
  4420  02C1  2AC6               	goto	l2380
  4421  02C2  3002               	movlw	2
  4422  02C3  3186  2605  3182   	fcall	_error
  4423  02C6                     l2380:	
  4424                           
  4425                           ;main.c: 84:         if (!fourCCeq(fmt.fmtHeader.ckID, "fmt ")) error(FMT_HEADER);
  4426  02C6  3078               	movlw	low (STR_5| (0+32768))
  4427  02C7  0020               	movlb	0	; select bank0
  4428  02C8  00A0               	movwf	fourCCeq@b
  4429  02C9  3081               	movlw	high (STR_5| (0+32768))
  4430  02CA  00A1               	movwf	fourCCeq@b+1
  4431  02CB  304F               	movlw	(low ((openFile@fmt| 0+4)))& (0+255)
  4432  02CC  3185  2535  3182   	fcall	_fourCCeq
  4433  02CF  3A00               	xorlw	0
  4434  02D0  1D03               	skipz
  4435  02D1  2AD6               	goto	l2384
  4436  02D2  3003               	movlw	3
  4437  02D3  3186  2605  3182   	fcall	_error
  4438  02D6                     l2384:	
  4439                           
  4440                           ;main.c: 85:         if (fmt.formatTag != 0x0001) error(CODEC);
  4441  02D6  0020               	movlb	0	; select bank0
  4442  02D7  0357               	decf	openFile@fmt+12,w
  4443  02D8  0458               	iorwf	openFile@fmt+13,w
  4444  02D9  1903               	btfsc	3,2
  4445  02DA  2ADF               	goto	l2388
  4446  02DB  3004               	movlw	4
  4447  02DC  3186  2605  3182   	fcall	_error
  4448  02DF                     l2388:	
  4449                           
  4450                           ;main.c: 86:         if (fmt.bitsPerSamp != 16) error(BIT_DEPTH);
  4451  02DF  3010               	movlw	16
  4452  02E0  0020               	movlb	0	; select bank0
  4453  02E1  0665               	xorwf	openFile@fmt+26,w
  4454  02E2  0466               	iorwf	openFile@fmt+27,w
  4455  02E3  1903               	btfsc	3,2
  4456  02E4  2AE9               	goto	l2392
  4457  02E5  3005               	movlw	5
  4458  02E6  3186  2605  3182   	fcall	_error
  4459  02E9                     l2392:	
  4460                           
  4461                           ;main.c: 88:         channels = fmt.channels;
  4462  02E9  0020               	movlb	0	; select bank0
  4463  02EA  085A               	movf	openFile@fmt+15,w
  4464  02EB  0021               	movlb	1	; select bank1
  4465  02EC  00B3               	movwf	(_channels+1)^(0+128)
  4466  02ED  0020               	movlb	0	; select bank0
  4467  02EE  0859               	movf	openFile@fmt+14,w
  4468  02EF  0021               	movlb	1	; select bank1
  4469  02F0  00B2               	movwf	_channels^(0+128)
  4470                           
  4471                           ;main.c: 89:         sampRate = fmt.sampRate;
  4472  02F1  3010               	movlw	16
  4473  02F2  3E4B               	addlw	(low (openFile@fmt| 0))& (0+255)
  4474  02F3  0086               	movwf	6
  4475  02F4  0187               	clrf	7
  4476  02F5  3F40               	moviw [0]fsr1
  4477  02F6  00A8               	movwf	_sampRate^(0+128)
  4478  02F7  3F41               	moviw [1]fsr1
  4479  02F8  00A9               	movwf	(_sampRate+1)^(0+128)
  4480  02F9  3F42               	moviw [2]fsr1
  4481  02FA  00AA               	movwf	(_sampRate+2)^(0+128)
  4482  02FB  3F43               	moviw [3]fsr1
  4483  02FC  00AB               	movwf	(_sampRate+3)^(0+128)
  4484                           
  4485                           ;main.c: 91:     }{;main.c: 92:         RiffTag data;;main.c: 93:         readBytes((cha
      +                          r*)&data, sizeof(data));;
  4486  02FD  3008               	movlw	8
  4487  02FE  0020               	movlb	0	; select bank0
  4488  02FF  00A0               	movwf	readBytes@len
  4489  0300  3000               	movlw	0
  4490  0301  00A1               	movwf	readBytes@len+1
  4491  0302  3043               	movlw	(low (openFile@data| 0))& (0+255)
  4492  0303  3184  24BB  3182   	fcall	_readBytes
  4493                           
  4494                           ;main.c: 94:         if (!fourCCeq(data.ckID, "data")) error(DATA_HEADER);
  4495  0306  3032               	movlw	low (STR_7| (0+32768))
  4496  0307  0020               	movlb	0	; select bank0
  4497  0308  00A0               	movwf	fourCCeq@b
  4498  0309  3086               	movlw	high (STR_7| (0+32768))
  4499  030A  00A1               	movwf	fourCCeq@b+1
  4500  030B  3043               	movlw	(low (openFile@data| 0))& (0+255)
  4501  030C  3185  2535  3182   	fcall	_fourCCeq
  4502  030F  3A00               	xorlw	0
  4503  0310  1D03               	skipz
  4504  0311  2B15               	goto	l2402
  4505  0312  3006               	movlw	6
  4506  0313  3186  2605         	fcall	_error
  4507  0315                     l2402:	
  4508                           
  4509                           ;main.c: 95:         filesize = data.ckSize;
  4510  0315  3004               	movlw	4
  4511  0316  3E43               	addlw	(low (openFile@data| 0))& (0+255)
  4512  0317  0086               	movwf	6
  4513  0318  0187               	clrf	7
  4514  0319  3F40               	moviw [0]fsr1
  4515  031A  0021               	movlb	1	; select bank1
  4516  031B  00A4               	movwf	_filesize^(0+128)
  4517  031C  3F41               	moviw [1]fsr1
  4518  031D  00A5               	movwf	(_filesize+1)^(0+128)
  4519  031E  3F42               	moviw [2]fsr1
  4520  031F  00A6               	movwf	(_filesize+2)^(0+128)
  4521  0320  3F43               	moviw [3]fsr1
  4522  0321  00A7               	movwf	(_filesize+3)^(0+128)
  4523                           
  4524                           ;main.c: 96:     };main.c: 97:         __nop();
  4525  0322  0000               	nop
  4526  0323  0008               	return
  4527  0324                     __end_of_openFile:	
  4528                           
  4529                           	psect	text3
  4530  04BB                     __ptext3:	
  4531 ;; *************** function _readBytes *****************
  4532 ;; Defined at:
  4533 ;;		line 55 in file "main.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;  dest            1    wreg     PTR unsigned char 
  4536 ;;		 -> openFile@data(8), openFile@fmt(28), openFile@riff(8), 
  4537 ;;  len             2    0[BANK0 ] int 
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;  dest            1    4[BANK0 ] PTR unsigned char 
  4540 ;;		 -> openFile@data(8), openFile@fmt(28), openFile@riff(8), 
  4541 ;;  i               2    5[BANK0 ] int 
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1    wreg      void 
  4544 ;; Registers used:
  4545 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4551 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4552 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4553 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4554 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4555 ;;Total ram usage:        7 bytes
  4556 ;; Hardware stack levels used:    1
  4557 ;; Hardware stack levels required when called:    3
  4558 ;; This function calls:
  4559 ;;		_SD_CloseBlock
  4560 ;;		_SPI_Read
  4561 ;; This function is called by:
  4562 ;;		_openFile
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566                           
  4567                           ;psect for function _readBytes
  4568  04BB                     _readBytes:	
  4569                           
  4570                           ;incstack = 0
  4571                           ; Regs used in _readBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4572                           ;readBytes@dest stored from wreg
  4573  04BB  0020               	movlb	0	; select bank0
  4574  04BC  00A4               	movwf	readBytes@dest
  4575                           
  4576                           ;main.c: 56:     for (int i=0; i<len; i++) {
  4577  04BD  01A5               	clrf	readBytes@i
  4578  04BE  01A6               	clrf	readBytes@i+1
  4579  04BF                     l2290:	
  4580  04BF  0826               	movf	readBytes@i+1,w
  4581  04C0  3A80               	xorlw	128
  4582  04C1  00A2               	movwf	??_readBytes
  4583  04C2  0821               	movf	readBytes@len+1,w
  4584  04C3  3A80               	xorlw	128
  4585  04C4  0222               	subwf	??_readBytes,w
  4586  04C5  1D03               	skipz
  4587  04C6  2CC9               	goto	u955
  4588  04C7  0820               	movf	readBytes@len,w
  4589  04C8  0225               	subwf	readBytes@i,w
  4590  04C9                     u955:	
  4591  04C9  1803               	btfsc	3,0
  4592  04CA  0008               	return
  4593                           
  4594                           ;main.c: 57:         dest[i] = SPI_Read();
  4595  04CB  3186  2615  3184   	fcall	_SPI_Read
  4596  04CE  0020               	movlb	0	; select bank0
  4597  04CF  00A2               	movwf	??_readBytes
  4598  04D0  0825               	movf	readBytes@i,w
  4599  04D1  0724               	addwf	readBytes@dest,w
  4600  04D2  00A3               	movwf	??_readBytes+1
  4601  04D3  0823               	movf	??_readBytes+1,w
  4602  04D4  0086               	movwf	6
  4603  04D5  0187               	clrf	7
  4604  04D6  0822               	movf	??_readBytes,w
  4605  04D7  0081               	movwf	1
  4606                           
  4607                           ;main.c: 58:         ++blockIndex;
  4608  04D8  3001               	movlw	1
  4609  04D9  0021               	movlb	1	; select bank1
  4610  04DA  07AC               	addwf	_blockIndex^(0+128),f
  4611  04DB  3000               	movlw	0
  4612  04DC  3DAD               	addwfc	(_blockIndex+1)^(0+128),f
  4613                           
  4614                           ;main.c: 59:         if (blockIndex >= 512) {
  4615  04DD  082D               	movf	(_blockIndex+1)^(0+128),w
  4616  04DE  3A80               	xorlw	128
  4617  04DF  0020               	movlb	0	; select bank0
  4618  04E0  00A2               	movwf	??_readBytes
  4619  04E1  3082               	movlw	130
  4620  04E2  0222               	subwf	??_readBytes,w
  4621  04E3  1D03               	skipz
  4622  04E4  2CE8               	goto	u945
  4623  04E5  3000               	movlw	0
  4624  04E6  0021               	movlb	1	; select bank1
  4625  04E7  022C               	subwf	_blockIndex^(0+128),w
  4626  04E8                     u945:	
  4627  04E8  1C03               	skipc
  4628  04E9  2CFD               	goto	l2288
  4629                           
  4630                           ;main.c: 60:             SD_CloseBlock();
  4631  04EA  3185  25FC  3184   	fcall	_SD_CloseBlock
  4632                           
  4633                           ;main.c: 61:             ++address;
  4634  04ED  3001               	movlw	1
  4635  04EE  0021               	movlb	1	; select bank1
  4636  04EF  07A0               	addwf	_address^(0+128),f
  4637  04F0  3000               	movlw	0
  4638  04F1  3DA1               	addwfc	(_address+1)^(0+128),f
  4639  04F2  3000               	movlw	0
  4640  04F3  3DA2               	addwfc	(_address+2)^(0+128),f
  4641  04F4  3000               	movlw	0
  4642  04F5  3DA3               	addwfc	(_address+3)^(0+128),f
  4643                           
  4644                           ;main.c: 62:             blockIndex = 0;
  4645  04F6  01AC               	clrf	_blockIndex^(0+128)
  4646  04F7  01AD               	clrf	(_blockIndex+1)^(0+128)
  4647                           
  4648                           ;main.c: 63:             state = CLOSED;
  4649  04F8  3003               	movlw	3
  4650  04F9  0020               	movlb	0	; select bank0
  4651  04FA  00A2               	movwf	??_readBytes
  4652  04FB  0822               	movf	??_readBytes,w
  4653  04FC  00E8               	movwf	_state
  4654  04FD                     l2288:	
  4655                           
  4656                           ;main.c: 65:     }
  4657  04FD  3001               	movlw	1
  4658  04FE  0020               	movlb	0	; select bank0
  4659  04FF  07A5               	addwf	readBytes@i,f
  4660  0500  3000               	movlw	0
  4661  0501  3DA6               	addwfc	readBytes@i+1,f
  4662  0502  2CBF               	goto	l2290
  4663  0503                     __end_of_readBytes:	
  4664                           
  4665                           	psect	text4
  4666  05FC                     __ptext4:	
  4667 ;; *************** function _SD_CloseBlock *****************
  4668 ;; Defined at:
  4669 ;;		line 275 in file "SD.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;		None
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;		None
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      _Bool 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0, pclath, cstack
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4687 ;;Total ram usage:        0 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:    2
  4690 ;; This function calls:
  4691 ;;		_SPI_Read
  4692 ;; This function is called by:
  4693 ;;		_readBytes
  4694 ;;		_main
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           
  4699                           ;psect for function _SD_CloseBlock
  4700  05FC                     _SD_CloseBlock:	
  4701                           
  4702                           ;SD.c: 277:     SPI_Read();
  4703                           
  4704                           ;incstack = 0
  4705                           ; Regs used in _SD_CloseBlock: [wreg+status,2+status,0+pclath+cstack]
  4706  05FC  3186  2615  3185   	fcall	_SPI_Read
  4707                           
  4708                           ;SD.c: 278:     SPI_Read();
  4709  05FF  3186  2615  3185   	fcall	_SPI_Read
  4710                           
  4711                           ;SD.c: 280:     SPI_Read();
  4712  0602  3186  2615         	fcall	_SPI_Read
  4713  0604  0008               	return
  4714  0605                     __end_of_SD_CloseBlock:	
  4715                           
  4716                           	psect	text5
  4717  0535                     __ptext5:	
  4718 ;; *************** function _fourCCeq *****************
  4719 ;; Defined at:
  4720 ;;		line 48 in file "main.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  a               1    wreg     PTR unsigned char 
  4723 ;;		 -> openFile@data(8), fmt.fmtHeader(8), openFile@fmt(28), openFile@riff(8), 
  4724 ;;  b               2    0[BANK0 ] PTR unsigned char 
  4725 ;;		 -> STR_8(5), STR_6(5), STR_4(5), STR_2(5), 
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;  a               1    6[BANK0 ] PTR unsigned char 
  4728 ;;		 -> openFile@data(8), fmt.fmtHeader(8), openFile@fmt(28), openFile@riff(8), 
  4729 ;;  i               1    7[BANK0 ] unsigned char 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      _Bool 
  4732 ;; Registers used:
  4733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4739 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4740 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4741 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4742 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4743 ;;Total ram usage:        8 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    1
  4746 ;; This function calls:
  4747 ;;		Nothing
  4748 ;; This function is called by:
  4749 ;;		_openFile
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           
  4754                           ;psect for function _fourCCeq
  4755  0535                     _fourCCeq:	
  4756                           
  4757                           ;incstack = 0
  4758                           ; Regs used in _fourCCeq: [wreg-fsr1h+status,2+status,0+pclath]
  4759                           ;fourCCeq@a stored from wreg
  4760  0535  0020               	movlb	0	; select bank0
  4761  0536  00A6               	movwf	fourCCeq@a
  4762                           
  4763                           ;main.c: 49:     for (char i=0; i<4; i++) {
  4764  0537  01A7               	clrf	fourCCeq@i
  4765  0538                     l2258:	
  4766                           
  4767                           ;main.c: 50:         if (a[i] != b[i]) return 0;
  4768  0538  0821               	movf	fourCCeq@b+1,w
  4769  0539  00A3               	movwf	??_fourCCeq+1
  4770  053A  0820               	movf	fourCCeq@b,w
  4771  053B  00A2               	movwf	??_fourCCeq
  4772  053C  0827               	movf	fourCCeq@i,w
  4773  053D  0722               	addwf	??_fourCCeq,w
  4774  053E  0084               	movwf	4
  4775  053F  0823               	movf	??_fourCCeq+1,w
  4776  0540  1803               	skipnc
  4777  0541  0A23               	incf	??_fourCCeq+1,w
  4778  0542  0085               	movwf	5
  4779  0543  0800               	movf	0,w	;code access
  4780  0544  00A4               	movwf	??_fourCCeq+2
  4781  0545  0827               	movf	fourCCeq@i,w
  4782  0546  0726               	addwf	fourCCeq@a,w
  4783  0547  00A5               	movwf	??_fourCCeq+3
  4784  0548  0825               	movf	??_fourCCeq+3,w
  4785  0549  0086               	movwf	6
  4786  054A  0187               	clrf	7
  4787  054B  0801               	movf	1,w
  4788  054C  0624               	xorwf	??_fourCCeq+2,w
  4789  054D  1903               	skipnz
  4790  054E  2D51               	goto	l2264
  4791  054F  3000               	movlw	0
  4792  0550  0008               	return
  4793  0551                     l2264:	
  4794                           
  4795                           ;main.c: 51:     }
  4796  0551  3001               	movlw	1
  4797  0552  00A2               	movwf	??_fourCCeq
  4798  0553  0822               	movf	??_fourCCeq,w
  4799  0554  07A7               	addwf	fourCCeq@i,f
  4800  0555  3004               	movlw	4
  4801  0556  0227               	subwf	fourCCeq@i,w
  4802  0557  1C03               	skipc
  4803  0558  2D38               	goto	l2258
  4804                           
  4805                           ;main.c: 52:     return 1;
  4806  0559  3001               	movlw	1
  4807  055A  0008               	return
  4808  055B                     __end_of_fourCCeq:	
  4809                           
  4810                           	psect	text6
  4811  0605                     __ptext6:	
  4812 ;; *************** function _error *****************
  4813 ;; Defined at:
  4814 ;;		line 17 in file "./error.h"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;  e               1    wreg     enum E12100
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  e               1    1[BANK0 ] enum E12100
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  1    wreg      void 
  4821 ;; Registers used:
  4822 ;;		wreg
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4829 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4830 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4831 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4832 ;;Total ram usage:        2 bytes
  4833 ;; Hardware stack levels used:    1
  4834 ;; Hardware stack levels required when called:    1
  4835 ;; This function calls:
  4836 ;;		Nothing
  4837 ;; This function is called by:
  4838 ;;		_openFile
  4839 ;;		_main
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           
  4844                           ;psect for function _error
  4845  0605                     _error:	
  4846                           
  4847                           ;incstack = 0
  4848                           ; Regs used in _error: [wreg]
  4849                           ;error@e stored from wreg
  4850  0605  0020               	movlb	0	; select bank0
  4851  0606  00A1               	movwf	error@e
  4852                           
  4853                           ;./error.h: 19:     global_error = e;
  4854  0607  0821               	movf	error@e,w
  4855  0608  00A0               	movwf	??_error
  4856  0609  0820               	movf	??_error,w
  4857  060A  00F8               	movwf	_global_error
  4858                           
  4859                           ;./error.h: 20:     __nop();
  4860  060B  0000               	nop
  4861  060C  0008               	return
  4862  060D                     __end_of_error:	
  4863                           
  4864                           	psect	text7
  4865  055B                     __ptext7:	
  4866 ;; *************** function _SD_OpenBlock *****************
  4867 ;; Defined at:
  4868 ;;		line 256 in file "SD.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  address         4    9[BANK0 ] long 
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;  a               4   17[BANK0 ] struct .
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      _Bool 
  4875 ;; Registers used:
  4876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4882 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4883 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4884 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4885 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4886 ;;Total ram usage:       12 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    3
  4889 ;; This function calls:
  4890 ;;		_SD_Check8bitResponse
  4891 ;;		_SD_Read8bitResponse
  4892 ;;		_SD_SendCommand
  4893 ;; This function is called by:
  4894 ;;		_openFile
  4895 ;;		_main
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           
  4900                           ;psect for function _SD_OpenBlock
  4901  055B                     _SD_OpenBlock:	
  4902                           
  4903                           ;SD.c: 260:     BlockAddress a = *((BlockAddress*)(&address));
  4904                           
  4905                           ;incstack = 0
  4906                           ; Regs used in _SD_OpenBlock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4907  055B  0020               	movlb	0	; select bank0
  4908  055C  082C               	movf	SD_OpenBlock@address+3,w
  4909  055D  00B4               	movwf	SD_OpenBlock@a+3
  4910  055E  082B               	movf	SD_OpenBlock@address+2,w
  4911  055F  00B3               	movwf	SD_OpenBlock@a+2
  4912  0560  082A               	movf	SD_OpenBlock@address+1,w
  4913  0561  00B2               	movwf	SD_OpenBlock@a+1
  4914  0562  0829               	movf	SD_OpenBlock@address,w
  4915  0563  00B1               	movwf	SD_OpenBlock@a
  4916                           
  4917                           ;SD.c: 262:     SD_SendCommand(17, a.a3, a.a2, a.a1, a.a0);
  4918  0564  0834               	movf	SD_OpenBlock@a+3,w
  4919  0565  00AD               	movwf	??_SD_OpenBlock
  4920  0566  082D               	movf	??_SD_OpenBlock,w
  4921  0567  00A1               	movwf	SD_SendCommand@ARG3
  4922  0568  0833               	movf	SD_OpenBlock@a+2,w
  4923  0569  00AE               	movwf	??_SD_OpenBlock+1
  4924  056A  082E               	movf	??_SD_OpenBlock+1,w
  4925  056B  00A2               	movwf	SD_SendCommand@ARG2
  4926  056C  0832               	movf	SD_OpenBlock@a+1,w
  4927  056D  00AF               	movwf	??_SD_OpenBlock+2
  4928  056E  082F               	movf	??_SD_OpenBlock+2,w
  4929  056F  00A3               	movwf	SD_SendCommand@ARG1
  4930  0570  0831               	movf	SD_OpenBlock@a,w
  4931  0571  00B0               	movwf	??_SD_OpenBlock+3
  4932  0572  0830               	movf	??_SD_OpenBlock+3,w
  4933  0573  00A4               	movwf	SD_SendCommand@ARG0
  4934  0574  3011               	movlw	17
  4935  0575  3183  2324  3185   	fcall	_SD_SendCommand
  4936                           
  4937                           ;SD.c: 265:     SD_Read8bitResponse();
  4938  0578  3185  25D5  3185   	fcall	_SD_Read8bitResponse
  4939                           
  4940                           ;SD.c: 268:     if(SD_Check8bitResponse(0x00) == 0) return 0;
  4941  057B  3000               	movlw	0
  4942  057C  3185  25F2         	fcall	_SD_Check8bitResponse
  4943  057E  0008               	return
  4944  057F                     __end_of_SD_OpenBlock:	
  4945                           
  4946                           	psect	text8
  4947  05C0                     __ptext8:	
  4948 ;; *************** function _init *****************
  4949 ;; Defined at:
  4950 ;;		line 101 in file "main.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;		None
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;		None
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  1    wreg      void 
  4957 ;; Registers used:
  4958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4968 ;;Total ram usage:        0 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; Hardware stack levels required when called:    4
  4971 ;; This function calls:
  4972 ;;		_DAC_Init
  4973 ;;		_SD_Init
  4974 ;;		_SPI_Init
  4975 ;; This function is called by:
  4976 ;;		_main
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           
  4981                           ;psect for function _init
  4982  05C0                     _init:	
  4983                           
  4984                           ;main.c: 103:     OSCCON = 0xF4;
  4985                           
  4986                           ;incstack = 0
  4987                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4988  05C0  30F4               	movlw	244
  4989  05C1  0021               	movlb	1	; select bank1
  4990  05C2  009B               	movwf	27	;volatile
  4991  05C3                     l259:	
  4992                           ;main.c: 104:     while(OSCSTATbits.HFIOFR == 0);
  4993                           
  4994  05C3  1E1C               	btfss	28,4	;volatile
  4995  05C4  2DC3               	goto	l259
  4996                           
  4997                           ;main.c: 106:     TRISB1 = 1;
  4998  05C5  148D               	bsf	13,1	;volatile
  4999                           
  5000                           ;main.c: 107:     ANSB1 = 0;
  5001  05C6  0023               	movlb	3	; select bank3
  5002  05C7  108D               	bcf	13,1	;volatile
  5003                           
  5004                           ;main.c: 109:     TRISC0 = 0;
  5005  05C8  0021               	movlb	1	; select bank1
  5006  05C9  100E               	bcf	14,0	;volatile
  5007                           
  5008                           ;main.c: 110:     TRISC1 = 0;
  5009  05CA  108E               	bcf	14,1	;volatile
  5010                           
  5011                           ;main.c: 111:     TRISB0 = 0;
  5012  05CB  100D               	bcf	13,0	;volatile
  5013                           
  5014                           ;main.c: 114:     SPI_Init();
  5015  05CC  3185  25A3  3185   	fcall	_SPI_Init
  5016                           
  5017                           ;main.c: 115:     SD_Init();
  5018  05CF  3183  23C3  3185   	fcall	_SD_Init
  5019                           
  5020                           ;main.c: 116:     DAC_Init();
  5021  05D2  3186  261C         	fcall	_DAC_Init
  5022  05D4  0008               	return
  5023  05D5                     __end_of_init:	
  5024                           
  5025                           	psect	text9
  5026  05A3                     __ptext9:	
  5027 ;; *************** function _SPI_Init *****************
  5028 ;; Defined at:
  5029 ;;		line 7 in file "SPI.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;		None
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;		None
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      void 
  5036 ;; Registers used:
  5037 ;;		wreg, status,2
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5047 ;;Total ram usage:        0 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:    1
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		_init
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           
  5058                           ;psect for function _SPI_Init
  5059  05A3                     _SPI_Init:	
  5060                           
  5061                           ;SPI.c: 9:     TRISC2 = 0;
  5062                           
  5063                           ;incstack = 0
  5064                           ; Regs used in _SPI_Init: [wreg+status,2]
  5065  05A3  0021               	movlb	1	; select bank1
  5066  05A4  110E               	bcf	14,2	;volatile
  5067                           
  5068                           ;SPI.c: 10:     RC2PPS = 0x21;
  5069  05A5  3021               	movlw	33
  5070  05A6  003D               	movlb	29	; select bank29
  5071  05A7  00A2               	movwf	34	;volatile
  5072                           
  5073                           ;SPI.c: 11:     SSPCLKPPS = 0x12;
  5074  05A8  3012               	movlw	18
  5075  05A9  003C               	movlb	28	; select bank28
  5076  05AA  00BA               	movwf	58	;volatile
  5077                           
  5078                           ;SPI.c: 14:     TRISC3 = 1;
  5079  05AB  0021               	movlb	1	; select bank1
  5080  05AC  158E               	bsf	14,3	;volatile
  5081                           
  5082                           ;SPI.c: 15:     ANSC3 = 0;
  5083  05AD  0023               	movlb	3	; select bank3
  5084  05AE  118E               	bcf	14,3	;volatile
  5085                           
  5086                           ;SPI.c: 16:     SSPDATPPS = 0x13;
  5087  05AF  3013               	movlw	19
  5088  05B0  003C               	movlb	28	; select bank28
  5089  05B1  00BB               	movwf	59	;volatile
  5090                           
  5091                           ;SPI.c: 19:     TRISC4 = 0;
  5092  05B2  0021               	movlb	1	; select bank1
  5093  05B3  120E               	bcf	14,4	;volatile
  5094                           
  5095                           ;SPI.c: 20:     RC4PPS = 0x23;
  5096  05B4  3023               	movlw	35
  5097  05B5  003D               	movlb	29	; select bank29
  5098  05B6  00A4               	movwf	36	;volatile
  5099                           
  5100                           ;SPI.c: 23:     TRISC7 = 0;
  5101  05B7  0021               	movlb	1	; select bank1
  5102  05B8  138E               	bcf	14,7	;volatile
  5103                           
  5104                           ;SPI.c: 26:     SSP1STAT = 0x80;
  5105  05B9  3080               	movlw	128
  5106  05BA  0024               	movlb	4	; select bank4
  5107  05BB  0094               	movwf	20	;volatile
  5108                           
  5109                           ;SPI.c: 29:     SSP1CON1 = 0x30;
  5110  05BC  3030               	movlw	48
  5111  05BD  0095               	movwf	21	;volatile
  5112                           
  5113                           ;SPI.c: 32:     SSP1ADD = 0x00;
  5114  05BE  0192               	clrf	18	;volatile
  5115  05BF  0008               	return
  5116  05C0                     __end_of_SPI_Init:	
  5117                           
  5118                           	psect	text10
  5119  03C3                     __ptext10:	
  5120 ;; *************** function _SD_Init *****************
  5121 ;; Defined at:
  5122 ;;		line 11 in file "SD.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;		None
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;		None
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  1    wreg      void 
  5129 ;; Registers used:
  5130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5138 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5139 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5140 ;;Total ram usage:        1 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:    3
  5143 ;; This function calls:
  5144 ;;		_SD_Check40bitResponse
  5145 ;;		_SD_Check8bitResponse
  5146 ;;		_SD_Read40bitResponse
  5147 ;;		_SD_Read8bitResponse
  5148 ;;		_SD_SendCommand
  5149 ;;		_SPI_Write
  5150 ;; This function is called by:
  5151 ;;		_init
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           
  5156                           ;psect for function _SD_Init
  5157  03C3                     _SD_Init:	
  5158                           
  5159                           ;SD.c: 14:     { PORTCbits.RC7 = 1; SSP1CON1bits.WCOL = 0; };
  5160                           
  5161                           ;incstack = 0
  5162                           ; Regs used in _SD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5163  03C3  0020               	movlb	0	; select bank0
  5164  03C4  178E               	bsf	14,7	;volatile
  5165  03C5  0024               	movlb	4	; select bank4
  5166  03C6  1395               	bcf	21,7	;volatile
  5167                           
  5168                           ;SD.c: 16:     SPI_Write(0xFF);
  5169  03C7  30FF               	movlw	255
  5170  03C8  3186  260D  3183   	fcall	_SPI_Write
  5171                           
  5172                           ;SD.c: 17:     SPI_Write(0xFF);
  5173  03CB  30FF               	movlw	255
  5174  03CC  3186  260D  3183   	fcall	_SPI_Write
  5175                           
  5176                           ;SD.c: 18:     SPI_Write(0xFF);
  5177  03CF  30FF               	movlw	255
  5178  03D0  3186  260D  3183   	fcall	_SPI_Write
  5179                           
  5180                           ;SD.c: 19:     SPI_Write(0xFF);
  5181  03D3  30FF               	movlw	255
  5182  03D4  3186  260D  3183   	fcall	_SPI_Write
  5183                           
  5184                           ;SD.c: 20:     SPI_Write(0xFF);
  5185  03D7  30FF               	movlw	255
  5186  03D8  3186  260D  3183   	fcall	_SPI_Write
  5187                           
  5188                           ;SD.c: 21:     SPI_Write(0xFF);
  5189  03DB  30FF               	movlw	255
  5190  03DC  3186  260D  3183   	fcall	_SPI_Write
  5191                           
  5192                           ;SD.c: 22:     SPI_Write(0xFF);
  5193  03DF  30FF               	movlw	255
  5194  03E0  3186  260D  3183   	fcall	_SPI_Write
  5195                           
  5196                           ;SD.c: 23:     SPI_Write(0xFF);
  5197  03E3  30FF               	movlw	255
  5198  03E4  3186  260D  3183   	fcall	_SPI_Write
  5199                           
  5200                           ;SD.c: 24:     SPI_Write(0xFF);
  5201  03E7  30FF               	movlw	255
  5202  03E8  3186  260D  3183   	fcall	_SPI_Write
  5203                           
  5204                           ;SD.c: 25:     SPI_Write(0xFF);
  5205  03EB  30FF               	movlw	255
  5206  03EC  3186  260D  3183   	fcall	_SPI_Write
  5207                           
  5208                           ;SD.c: 27:     { PORTCbits.RC7 = 0; SSP1CON1bits.WCOL = 0; };
  5209  03EF  0020               	movlb	0	; select bank0
  5210  03F0  138E               	bcf	14,7	;volatile
  5211  03F1  0024               	movlb	4	; select bank4
  5212  03F2  1395               	bcf	21,7	;volatile
  5213  03F3                     l2200:	
  5214                           
  5215                           ;SD.c: 34:         SD_SendCommand(0, 0x00, 0x00, 0x00, 0x00);
  5216  03F3  0020               	movlb	0	; select bank0
  5217  03F4  01A1               	clrf	SD_SendCommand@ARG3
  5218  03F5  01A2               	clrf	SD_SendCommand@ARG2
  5219  03F6  01A3               	clrf	SD_SendCommand@ARG1
  5220  03F7  01A4               	clrf	SD_SendCommand@ARG0
  5221  03F8  3000               	movlw	0
  5222  03F9  3183  2324  3183   	fcall	_SD_SendCommand
  5223                           
  5224                           ;SD.c: 35:         SD_Read8bitResponse();
  5225  03FC  3185  25D5  3183   	fcall	_SD_Read8bitResponse
  5226  03FF  0000               	nop	;# 
  5227                           
  5228                           ;SD.c: 37:     } while (SD_Check8bitResponse(0x01) == 0);
  5229  0400  3001               	movlw	1
  5230  0401  3185  25F2  3183   	fcall	_SD_Check8bitResponse
  5231  0404  3A00               	xorlw	0
  5232  0405  1903               	skipnz
  5233  0406  2BF3               	goto	l2200
  5234  0407                     l2206:	
  5235                           
  5236                           ;SD.c: 44:         SD_SendCommand(8, 0x00, 0x00, 0x01, 0xAA);
  5237  0407  0020               	movlb	0	; select bank0
  5238  0408  01A1               	clrf	SD_SendCommand@ARG3
  5239  0409  01A2               	clrf	SD_SendCommand@ARG2
  5240  040A  01A3               	clrf	SD_SendCommand@ARG1
  5241  040B  0AA3               	incf	SD_SendCommand@ARG1,f
  5242  040C  30AA               	movlw	170
  5243  040D  00A9               	movwf	??_SD_Init
  5244  040E  0829               	movf	??_SD_Init,w
  5245  040F  00A4               	movwf	SD_SendCommand@ARG0
  5246  0410  3008               	movlw	8
  5247  0411  3183  2324  3183   	fcall	_SD_SendCommand
  5248                           
  5249                           ;SD.c: 45:         SD_Read40bitResponse();
  5250  0414  3185  2503  3183   	fcall	_SD_Read40bitResponse
  5251  0417  0000               	nop	;# 
  5252                           
  5253                           ;SD.c: 47:     } while (SD_Check40bitResponse(0x01, 0x00, 0x00, 0x01, 0xAA) == 0);
  5254  0418  0020               	movlb	0	; select bank0
  5255  0419  01A0               	clrf	SD_Check40bitResponse@Byte3
  5256  041A  01A1               	clrf	SD_Check40bitResponse@Byte2
  5257  041B  01A2               	clrf	SD_Check40bitResponse@Byte1
  5258  041C  0AA2               	incf	SD_Check40bitResponse@Byte1,f
  5259  041D  30AA               	movlw	170
  5260  041E  00A9               	movwf	??_SD_Init
  5261  041F  0829               	movf	??_SD_Init,w
  5262  0420  00A3               	movwf	SD_Check40bitResponse@Byte0
  5263  0421  3001               	movlw	1
  5264  0422  3185  257F  3183   	fcall	_SD_Check40bitResponse
  5265  0425  3A00               	xorlw	0
  5266  0426  1903               	skipnz
  5267  0427  2C07               	goto	l2206
  5268  0428                     l2212:	
  5269                           
  5270                           ;SD.c: 55:             SD_SendCommand(55, 0x00, 0x00, 0x00, 0x00);
  5271  0428  0020               	movlb	0	; select bank0
  5272  0429  01A1               	clrf	SD_SendCommand@ARG3
  5273  042A  01A2               	clrf	SD_SendCommand@ARG2
  5274  042B  01A3               	clrf	SD_SendCommand@ARG1
  5275  042C  01A4               	clrf	SD_SendCommand@ARG0
  5276  042D  3037               	movlw	55
  5277  042E  3183  2324  3183   	fcall	_SD_SendCommand
  5278                           
  5279                           ;SD.c: 56:             SD_Read8bitResponse();
  5280  0431  3185  25D5  3183   	fcall	_SD_Read8bitResponse
  5281  0434  0000               	nop	;# 
  5282                           
  5283                           ;SD.c: 58:         } while (SD_Check8bitResponse(0x01) == 0);
  5284  0435  3001               	movlw	1
  5285  0436  3185  25F2  3183   	fcall	_SD_Check8bitResponse
  5286  0439  3A00               	xorlw	0
  5287  043A  1903               	skipnz
  5288  043B  2C28               	goto	l2212
  5289                           
  5290                           ;SD.c: 65:         SD_SendCommand(41, 0x40, 0x00, 0x00, 0x00);
  5291  043C  3040               	movlw	64
  5292  043D  0020               	movlb	0	; select bank0
  5293  043E  00A9               	movwf	??_SD_Init
  5294  043F  0829               	movf	??_SD_Init,w
  5295  0440  00A1               	movwf	SD_SendCommand@ARG3
  5296  0441  01A2               	clrf	SD_SendCommand@ARG2
  5297  0442  01A3               	clrf	SD_SendCommand@ARG1
  5298  0443  01A4               	clrf	SD_SendCommand@ARG0
  5299  0444  3029               	movlw	41
  5300  0445  3183  2324  3183   	fcall	_SD_SendCommand
  5301                           
  5302                           ;SD.c: 66:         SD_Read8bitResponse();
  5303  0448  3185  25D5  3183   	fcall	_SD_Read8bitResponse
  5304  044B  0000               	nop	;# 
  5305                           
  5306                           ;SD.c: 68:     } while (SD_Check8bitResponse(0x00) == 0);
  5307  044C  3000               	movlw	0
  5308  044D  3185  25F2  3183   	fcall	_SD_Check8bitResponse
  5309  0450  3A00               	xorlw	0
  5310  0451  1D03               	btfss	3,2
  5311  0452  0008               	return
  5312  0453  2C28               	goto	l2212
  5313  0454                     __end_of_SD_Init:	
  5314                           
  5315                           	psect	text11
  5316  0324                     __ptext11:	
  5317 ;; *************** function _SD_SendCommand *****************
  5318 ;; Defined at:
  5319 ;;		line 77 in file "SD.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  CMD_6bit        1    wreg     unsigned char 
  5322 ;;  ARG3            1    1[BANK0 ] unsigned char 
  5323 ;;  ARG2            1    2[BANK0 ] unsigned char 
  5324 ;;  ARG1            1    3[BANK0 ] unsigned char 
  5325 ;;  ARG0            1    4[BANK0 ] unsigned char 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;  CMD_6bit        1    6[BANK0 ] unsigned char 
  5328 ;;  Checksum        1    8[BANK0 ] unsigned char 
  5329 ;;  ByteToSend      1    7[BANK0 ] unsigned char 
  5330 ;; Return value:  Size  Location     Type
  5331 ;;                  1    wreg      void 
  5332 ;; Registers used:
  5333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5334 ;; Tracked objects:
  5335 ;;		On entry : 0/0
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5339 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5340 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5341 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5342 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5343 ;;Total ram usage:        8 bytes
  5344 ;; Hardware stack levels used:    1
  5345 ;; Hardware stack levels required when called:    2
  5346 ;; This function calls:
  5347 ;;		_SPI_Write
  5348 ;; This function is called by:
  5349 ;;		_SD_Init
  5350 ;;		_SD_OpenBlock
  5351 ;;		_SD_OpenStream
  5352 ;;		_SD_CloseStream
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356                           
  5357                           ;psect for function _SD_SendCommand
  5358  0324                     _SD_SendCommand:	
  5359                           
  5360                           ;incstack = 0
  5361                           ; Regs used in _SD_SendCommand: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5362                           ;SD_SendCommand@CMD_6bit stored from wreg
  5363  0324  0020               	movlb	0	; select bank0
  5364  0325  00A6               	movwf	SD_SendCommand@CMD_6bit
  5365                           
  5366                           ;SD.c: 79:     char Checksum = 0x00;
  5367  0326  01A8               	clrf	SD_SendCommand@Checksum
  5368                           
  5369                           ;SD.c: 82:     ByteToSend = (CMD_6bit & 0x3F) | 0x40;
  5370  0327  0826               	movf	SD_SendCommand@CMD_6bit,w
  5371  0328  393F               	andlw	63
  5372  0329  3840               	iorlw	64
  5373  032A  00A5               	movwf	??_SD_SendCommand
  5374  032B  0825               	movf	??_SD_SendCommand,w
  5375  032C  00A7               	movwf	SD_SendCommand@ByteToSend
  5376                           
  5377                           ;SD.c: 83:     SPI_Write(ByteToSend);
  5378  032D  0827               	movf	SD_SendCommand@ByteToSend,w
  5379  032E  3186  260D  3183   	fcall	_SPI_Write
  5380                           
  5381                           ;SD.c: 84:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5382  0331  0020               	movlb	0	; select bank0
  5383  0332  3528               	lslf	SD_SendCommand@Checksum,w
  5384  0333  00A5               	movwf	??_SD_SendCommand
  5385  0334  0825               	movf	??_SD_SendCommand,w
  5386  0335  00A8               	movwf	SD_SendCommand@Checksum
  5387  0336  0828               	movf	SD_SendCommand@Checksum,w
  5388  0337  0627               	xorwf	SD_SendCommand@ByteToSend,w
  5389  0338  00A5               	movwf	??_SD_SendCommand
  5390  0339  0825               	movf	??_SD_SendCommand,w
  5391  033A  00A8               	movwf	SD_SendCommand@Checksum
  5392  033B  0828               	movf	SD_SendCommand@Checksum,w
  5393  033C  3E78               	addlw	low (_CRCTable| (0+32768))
  5394  033D  0084               	movwf	4
  5395  033E  3080               	movlw	high (_CRCTable| (0+32768))
  5396  033F  1803               	skipnc
  5397  0340  3E01               	addlw	1
  5398  0341  0085               	movwf	5
  5399  0342  0800               	movf	0,w	;code access
  5400  0343  00A5               	movwf	??_SD_SendCommand
  5401  0344  0825               	movf	??_SD_SendCommand,w
  5402  0345  00A8               	movwf	SD_SendCommand@Checksum
  5403                           
  5404                           ;SD.c: 87:     ByteToSend = ARG3;
  5405  0346  0821               	movf	SD_SendCommand@ARG3,w
  5406  0347  00A5               	movwf	??_SD_SendCommand
  5407  0348  0825               	movf	??_SD_SendCommand,w
  5408  0349  00A7               	movwf	SD_SendCommand@ByteToSend
  5409                           
  5410                           ;SD.c: 88:     SPI_Write(ByteToSend);
  5411  034A  0827               	movf	SD_SendCommand@ByteToSend,w
  5412  034B  3186  260D  3183   	fcall	_SPI_Write
  5413                           
  5414                           ;SD.c: 89:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5415  034E  0020               	movlb	0	; select bank0
  5416  034F  3528               	lslf	SD_SendCommand@Checksum,w
  5417  0350  00A5               	movwf	??_SD_SendCommand
  5418  0351  0825               	movf	??_SD_SendCommand,w
  5419  0352  00A8               	movwf	SD_SendCommand@Checksum
  5420  0353  0828               	movf	SD_SendCommand@Checksum,w
  5421  0354  0627               	xorwf	SD_SendCommand@ByteToSend,w
  5422  0355  00A5               	movwf	??_SD_SendCommand
  5423  0356  0825               	movf	??_SD_SendCommand,w
  5424  0357  00A8               	movwf	SD_SendCommand@Checksum
  5425  0358  0828               	movf	SD_SendCommand@Checksum,w
  5426  0359  3E78               	addlw	low (_CRCTable| (0+32768))
  5427  035A  0084               	movwf	4
  5428  035B  3080               	movlw	high (_CRCTable| (0+32768))
  5429  035C  1803               	skipnc
  5430  035D  3E01               	addlw	1
  5431  035E  0085               	movwf	5
  5432  035F  0800               	movf	0,w	;code access
  5433  0360  00A5               	movwf	??_SD_SendCommand
  5434  0361  0825               	movf	??_SD_SendCommand,w
  5435  0362  00A8               	movwf	SD_SendCommand@Checksum
  5436                           
  5437                           ;SD.c: 91:     ByteToSend = ARG2;
  5438  0363  0822               	movf	SD_SendCommand@ARG2,w
  5439  0364  00A5               	movwf	??_SD_SendCommand
  5440  0365  0825               	movf	??_SD_SendCommand,w
  5441  0366  00A7               	movwf	SD_SendCommand@ByteToSend
  5442                           
  5443                           ;SD.c: 92:     SPI_Write(ByteToSend);
  5444  0367  0827               	movf	SD_SendCommand@ByteToSend,w
  5445  0368  3186  260D  3183   	fcall	_SPI_Write
  5446                           
  5447                           ;SD.c: 93:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5448  036B  0020               	movlb	0	; select bank0
  5449  036C  3528               	lslf	SD_SendCommand@Checksum,w
  5450  036D  00A5               	movwf	??_SD_SendCommand
  5451  036E  0825               	movf	??_SD_SendCommand,w
  5452  036F  00A8               	movwf	SD_SendCommand@Checksum
  5453  0370  0828               	movf	SD_SendCommand@Checksum,w
  5454  0371  0627               	xorwf	SD_SendCommand@ByteToSend,w
  5455  0372  00A5               	movwf	??_SD_SendCommand
  5456  0373  0825               	movf	??_SD_SendCommand,w
  5457  0374  00A8               	movwf	SD_SendCommand@Checksum
  5458  0375  0828               	movf	SD_SendCommand@Checksum,w
  5459  0376  3E78               	addlw	low (_CRCTable| (0+32768))
  5460  0377  0084               	movwf	4
  5461  0378  3080               	movlw	high (_CRCTable| (0+32768))
  5462  0379  1803               	skipnc
  5463  037A  3E01               	addlw	1
  5464  037B  0085               	movwf	5
  5465  037C  0800               	movf	0,w	;code access
  5466  037D  00A5               	movwf	??_SD_SendCommand
  5467  037E  0825               	movf	??_SD_SendCommand,w
  5468  037F  00A8               	movwf	SD_SendCommand@Checksum
  5469                           
  5470                           ;SD.c: 95:     ByteToSend = ARG1;
  5471  0380  0823               	movf	SD_SendCommand@ARG1,w
  5472  0381  00A5               	movwf	??_SD_SendCommand
  5473  0382  0825               	movf	??_SD_SendCommand,w
  5474  0383  00A7               	movwf	SD_SendCommand@ByteToSend
  5475                           
  5476                           ;SD.c: 96:     SPI_Write(ByteToSend);
  5477  0384  0827               	movf	SD_SendCommand@ByteToSend,w
  5478  0385  3186  260D  3183   	fcall	_SPI_Write
  5479                           
  5480                           ;SD.c: 97:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5481  0388  0020               	movlb	0	; select bank0
  5482  0389  3528               	lslf	SD_SendCommand@Checksum,w
  5483  038A  00A5               	movwf	??_SD_SendCommand
  5484  038B  0825               	movf	??_SD_SendCommand,w
  5485  038C  00A8               	movwf	SD_SendCommand@Checksum
  5486  038D  0828               	movf	SD_SendCommand@Checksum,w
  5487  038E  0627               	xorwf	SD_SendCommand@ByteToSend,w
  5488  038F  00A5               	movwf	??_SD_SendCommand
  5489  0390  0825               	movf	??_SD_SendCommand,w
  5490  0391  00A8               	movwf	SD_SendCommand@Checksum
  5491  0392  0828               	movf	SD_SendCommand@Checksum,w
  5492  0393  3E78               	addlw	low (_CRCTable| (0+32768))
  5493  0394  0084               	movwf	4
  5494  0395  3080               	movlw	high (_CRCTable| (0+32768))
  5495  0396  1803               	skipnc
  5496  0397  3E01               	addlw	1
  5497  0398  0085               	movwf	5
  5498  0399  0800               	movf	0,w	;code access
  5499  039A  00A5               	movwf	??_SD_SendCommand
  5500  039B  0825               	movf	??_SD_SendCommand,w
  5501  039C  00A8               	movwf	SD_SendCommand@Checksum
  5502                           
  5503                           ;SD.c: 99:     ByteToSend = ARG0;
  5504  039D  0824               	movf	SD_SendCommand@ARG0,w
  5505  039E  00A5               	movwf	??_SD_SendCommand
  5506  039F  0825               	movf	??_SD_SendCommand,w
  5507  03A0  00A7               	movwf	SD_SendCommand@ByteToSend
  5508                           
  5509                           ;SD.c: 100:     SPI_Write(ByteToSend);
  5510  03A1  0827               	movf	SD_SendCommand@ByteToSend,w
  5511  03A2  3186  260D  3183   	fcall	_SPI_Write
  5512                           
  5513                           ;SD.c: 101:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum =
      +                           CRCTable[Checksum]; };
  5514  03A5  0020               	movlb	0	; select bank0
  5515  03A6  3528               	lslf	SD_SendCommand@Checksum,w
  5516  03A7  00A5               	movwf	??_SD_SendCommand
  5517  03A8  0825               	movf	??_SD_SendCommand,w
  5518  03A9  00A8               	movwf	SD_SendCommand@Checksum
  5519  03AA  0828               	movf	SD_SendCommand@Checksum,w
  5520  03AB  0627               	xorwf	SD_SendCommand@ByteToSend,w
  5521  03AC  00A5               	movwf	??_SD_SendCommand
  5522  03AD  0825               	movf	??_SD_SendCommand,w
  5523  03AE  00A8               	movwf	SD_SendCommand@Checksum
  5524  03AF  0828               	movf	SD_SendCommand@Checksum,w
  5525  03B0  3E78               	addlw	low (_CRCTable| (0+32768))
  5526  03B1  0084               	movwf	4
  5527  03B2  3080               	movlw	high (_CRCTable| (0+32768))
  5528  03B3  1803               	skipnc
  5529  03B4  3E01               	addlw	1
  5530  03B5  0085               	movwf	5
  5531  03B6  0800               	movf	0,w	;code access
  5532  03B7  00A5               	movwf	??_SD_SendCommand
  5533  03B8  0825               	movf	??_SD_SendCommand,w
  5534  03B9  00A8               	movwf	SD_SendCommand@Checksum
  5535                           
  5536                           ;SD.c: 104:     ByteToSend = (Checksum << 1) | 0x01;
  5537  03BA  1403               	setc
  5538  03BB  0D28               	rlf	SD_SendCommand@Checksum,w
  5539  03BC  00A5               	movwf	??_SD_SendCommand
  5540  03BD  0825               	movf	??_SD_SendCommand,w
  5541  03BE  00A7               	movwf	SD_SendCommand@ByteToSend
  5542                           
  5543                           ;SD.c: 105:     SPI_Write(ByteToSend);
  5544  03BF  0827               	movf	SD_SendCommand@ByteToSend,w
  5545  03C0  3186  260D         	fcall	_SPI_Write
  5546  03C2  0008               	return
  5547  03C3                     __end_of_SD_SendCommand:	
  5548                           
  5549                           	psect	text12
  5550  060D                     __ptext12:	
  5551 ;; *************** function _SPI_Write *****************
  5552 ;; Defined at:
  5553 ;;		line 38 in file "SPI.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;  Data_8bit       1    wreg     unsigned char 
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;  Data_8bit       1    0[BANK0 ] unsigned char 
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5568 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5570 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5571 ;;Total ram usage:        1 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; Hardware stack levels required when called:    1
  5574 ;; This function calls:
  5575 ;;		Nothing
  5576 ;; This function is called by:
  5577 ;;		_SD_Init
  5578 ;;		_SD_SendCommand
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           
  5583                           ;psect for function _SPI_Write
  5584  060D                     _SPI_Write:	
  5585                           
  5586                           ;incstack = 0
  5587                           ; Regs used in _SPI_Write: [wreg]
  5588                           ;SPI_Write@Data_8bit stored from wreg
  5589  060D  0020               	movlb	0	; select bank0
  5590  060E  00A0               	movwf	SPI_Write@Data_8bit
  5591                           
  5592                           ;SPI.c: 39:     SSP1BUF = Data_8bit;
  5593  060F  0820               	movf	SPI_Write@Data_8bit,w
  5594  0610  0024               	movlb	4	; select bank4
  5595  0611  0091               	movwf	17	;volatile
  5596  0612                     l112:	
  5597                           ;SPI.c: 40:     while(SSP1STATbits.BF == 0);
  5598                           
  5599  0612  1814               	btfsc	20,0	;volatile
  5600  0613  0008               	return
  5601  0614  2E12               	goto	l112
  5602  0615                     __end_of_SPI_Write:	
  5603                           
  5604                           	psect	text13
  5605  05D5                     __ptext13:	
  5606 ;; *************** function _SD_Read8bitResponse *****************
  5607 ;; Defined at:
  5608 ;;		line 112 in file "SD.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;		None
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  readMessage     1    1[BANK0 ] unsigned char 
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  1    wreg      void 
  5615 ;; Registers used:
  5616 ;;		wreg, status,2, status,0, pclath, cstack
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5623 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5624 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5625 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5626 ;;Total ram usage:        2 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; Hardware stack levels required when called:    2
  5629 ;; This function calls:
  5630 ;;		_SPI_Read
  5631 ;; This function is called by:
  5632 ;;		_SD_Init
  5633 ;;		_SD_OpenBlock
  5634 ;;		_SD_OpenStream
  5635 ;;		_SD_CloseStream
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           
  5640                           ;psect for function _SD_Read8bitResponse
  5641  05D5                     _SD_Read8bitResponse:	
  5642  05D5                     l2122:	
  5643                           ;incstack = 0
  5644                           ; Regs used in _SD_Read8bitResponse: [wreg+status,2+status,0+pclath+cstack]
  5645                           
  5646  05D5  3186  2615  3185   	fcall	_SPI_Read
  5647  05D8  0020               	movlb	0	; select bank0
  5648  05D9  00A0               	movwf	??_SD_Read8bitResponse
  5649  05DA  0820               	movf	??_SD_Read8bitResponse,w
  5650  05DB  00A1               	movwf	SD_Read8bitResponse@readMessage
  5651  05DC  0A21               	incf	SD_Read8bitResponse@readMessage,w
  5652  05DD  1903               	btfsc	3,2
  5653  05DE  2DD5               	goto	l2122
  5654                           
  5655                           ;SD.c: 121:     GLBL_Resp8 = readMessage;
  5656  05DF  0821               	movf	SD_Read8bitResponse@readMessage,w
  5657  05E0  00A0               	movwf	??_SD_Read8bitResponse
  5658  05E1  0820               	movf	??_SD_Read8bitResponse,w
  5659  05E2  00FB               	movwf	_GLBL_Resp8
  5660                           
  5661                           ;SD.c: 124:     SPI_Read();
  5662  05E3  3186  2615         	fcall	_SPI_Read
  5663  05E5  0008               	return
  5664  05E6                     __end_of_SD_Read8bitResponse:	
  5665                           
  5666                           	psect	text14
  5667  0503                     __ptext14:	
  5668 ;; *************** function _SD_Read40bitResponse *****************
  5669 ;; Defined at:
  5670 ;;		line 141 in file "SD.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;		None
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;  readMessage     1    1[BANK0 ] unsigned char 
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  1    wreg      void 
  5677 ;; Registers used:
  5678 ;;		wreg, status,2, status,0, pclath, cstack
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5685 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5686 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5687 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5688 ;;Total ram usage:        2 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; Hardware stack levels required when called:    2
  5691 ;; This function calls:
  5692 ;;		_SPI_Read
  5693 ;; This function is called by:
  5694 ;;		_SD_Init
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           
  5699                           ;psect for function _SD_Read40bitResponse
  5700  0503                     _SD_Read40bitResponse:	
  5701  0503                     l2144:	
  5702                           ;incstack = 0
  5703                           ; Regs used in _SD_Read40bitResponse: [wreg+status,2+status,0+pclath+cstack]
  5704                           
  5705  0503  3186  2615  3185   	fcall	_SPI_Read
  5706  0506  0020               	movlb	0	; select bank0
  5707  0507  00A0               	movwf	??_SD_Read40bitResponse
  5708  0508  0820               	movf	??_SD_Read40bitResponse,w
  5709  0509  00A1               	movwf	SD_Read40bitResponse@readMessage
  5710  050A  0A21               	incf	SD_Read40bitResponse@readMessage,w
  5711  050B  1903               	btfsc	3,2
  5712  050C  2D03               	goto	l2144
  5713                           
  5714                           ;SD.c: 150:     GLBL_Resp40[0] = readMessage;
  5715  050D  0821               	movf	SD_Read40bitResponse@readMessage,w
  5716  050E  00A0               	movwf	??_SD_Read40bitResponse
  5717  050F  0820               	movf	??_SD_Read40bitResponse,w
  5718  0510  0021               	movlb	1	; select bank1
  5719  0511  00BD               	movwf	_GLBL_Resp40^(0+128)
  5720                           
  5721                           ;SD.c: 151:     GLBL_Resp40[1] = SPI_Read();
  5722  0512  3186  2615  3185   	fcall	_SPI_Read
  5723  0515  0020               	movlb	0	; select bank0
  5724  0516  00A0               	movwf	??_SD_Read40bitResponse
  5725  0517  0820               	movf	??_SD_Read40bitResponse,w
  5726  0518  0021               	movlb	1	; select bank1
  5727  0519  00BE               	movwf	(_GLBL_Resp40^(0+128)+1)
  5728                           
  5729                           ;SD.c: 152:     GLBL_Resp40[2] = SPI_Read();
  5730  051A  3186  2615  3185   	fcall	_SPI_Read
  5731  051D  0020               	movlb	0	; select bank0
  5732  051E  00A0               	movwf	??_SD_Read40bitResponse
  5733  051F  0820               	movf	??_SD_Read40bitResponse,w
  5734  0520  0021               	movlb	1	; select bank1
  5735  0521  00BF               	movwf	(_GLBL_Resp40^(0+128)+2)
  5736                           
  5737                           ;SD.c: 153:     GLBL_Resp40[3] = SPI_Read();
  5738  0522  3186  2615  3185   	fcall	_SPI_Read
  5739  0525  0020               	movlb	0	; select bank0
  5740  0526  00A0               	movwf	??_SD_Read40bitResponse
  5741  0527  0820               	movf	??_SD_Read40bitResponse,w
  5742  0528  0021               	movlb	1	; select bank1
  5743  0529  00C0               	movwf	(_GLBL_Resp40^(0+128)+3)
  5744                           
  5745                           ;SD.c: 154:     GLBL_Resp40[4] = SPI_Read();
  5746  052A  3186  2615  3185   	fcall	_SPI_Read
  5747  052D  0020               	movlb	0	; select bank0
  5748  052E  00A0               	movwf	??_SD_Read40bitResponse
  5749  052F  0820               	movf	??_SD_Read40bitResponse,w
  5750  0530  0021               	movlb	1	; select bank1
  5751  0531  00C1               	movwf	(_GLBL_Resp40^(0+128)+4)
  5752                           
  5753                           ;SD.c: 157:     SPI_Read();
  5754  0532  3186  2615         	fcall	_SPI_Read
  5755  0534  0008               	return
  5756  0535                     __end_of_SD_Read40bitResponse:	
  5757                           
  5758                           	psect	text15
  5759  0615                     __ptext15:	
  5760 ;; *************** function _SPI_Read *****************
  5761 ;; Defined at:
  5762 ;;		line 46 in file "SPI.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;		None
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;		None
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1    wreg      unsigned char 
  5769 ;; Registers used:
  5770 ;;		wreg
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5780 ;;Total ram usage:        0 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; Hardware stack levels required when called:    1
  5783 ;; This function calls:
  5784 ;;		Nothing
  5785 ;; This function is called by:
  5786 ;;		_SD_Read8bitResponse
  5787 ;;		_SD_Read40bitResponse
  5788 ;;		_SD_CloseBlock
  5789 ;;		_readBytes
  5790 ;;		_openFile
  5791 ;;		_main
  5792 ;;		_SD_CloseStream
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           
  5796                           
  5797                           ;psect for function _SPI_Read
  5798  0615                     _SPI_Read:	
  5799                           
  5800                           ;SPI.c: 47:     SSP1BUF = 0xFF;
  5801                           
  5802                           ;incstack = 0
  5803                           ; Regs used in _SPI_Read: [wreg]
  5804  0615  30FF               	movlw	255
  5805  0616  0024               	movlb	4	; select bank4
  5806  0617  0091               	movwf	17	;volatile
  5807  0618                     l118:	
  5808                           ;SPI.c: 48:     while(SSP1STATbits.BF == 0);
  5809                           
  5810  0618  1C14               	btfss	20,0	;volatile
  5811  0619  2E18               	goto	l118
  5812                           
  5813                           ;SPI.c: 49:     return SSP1BUF;
  5814  061A  0811               	movf	17,w	;volatile
  5815  061B  0008               	return
  5816  061C                     __end_of_SPI_Read:	
  5817                           
  5818                           	psect	text16
  5819  05F2                     __ptext16:	
  5820 ;; *************** function _SD_Check8bitResponse *****************
  5821 ;; Defined at:
  5822 ;;		line 132 in file "SD.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  Byte            1    wreg     unsigned char 
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  Byte            1    0[BANK0 ] unsigned char 
  5827 ;;  match           1    1[BANK0 ] _Bool 
  5828 ;; Return value:  Size  Location     Type
  5829 ;;                  1    wreg      _Bool 
  5830 ;; Registers used:
  5831 ;;		wreg, status,2
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5838 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5840 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5841 ;;Total ram usage:        2 bytes
  5842 ;; Hardware stack levels used:    1
  5843 ;; Hardware stack levels required when called:    1
  5844 ;; This function calls:
  5845 ;;		Nothing
  5846 ;; This function is called by:
  5847 ;;		_SD_Init
  5848 ;;		_SD_OpenBlock
  5849 ;;		_SD_OpenStream
  5850 ;;		_SD_CloseStream
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           
  5854                           
  5855                           ;psect for function _SD_Check8bitResponse
  5856  05F2                     _SD_Check8bitResponse:	
  5857                           
  5858                           ;incstack = 0
  5859                           ; Regs used in _SD_Check8bitResponse: [wreg+status,2]
  5860                           ;SD_Check8bitResponse@Byte stored from wreg
  5861  05F2  0020               	movlb	0	; select bank0
  5862  05F3  00A0               	movwf	SD_Check8bitResponse@Byte
  5863                           
  5864                           ;SD.c: 133:     _Bool match = 1;
  5865  05F4  01A1               	clrf	SD_Check8bitResponse@match
  5866  05F5  0AA1               	incf	SD_Check8bitResponse@match,f
  5867                           
  5868                           ;SD.c: 134:     if (Byte != GLBL_Resp8) match = 0;
  5869  05F6  0820               	movf	SD_Check8bitResponse@Byte,w
  5870  05F7  067B               	xorwf	_GLBL_Resp8,w
  5871  05F8  1D03               	btfss	3,2
  5872  05F9  01A1               	clrf	SD_Check8bitResponse@match
  5873                           
  5874                           ;SD.c: 135:     return match;
  5875  05FA  0821               	movf	SD_Check8bitResponse@match,w
  5876  05FB  0008               	return
  5877  05FC                     __end_of_SD_Check8bitResponse:	
  5878                           
  5879                           	psect	text17
  5880  057F                     __ptext17:	
  5881 ;; *************** function _SD_Check40bitResponse *****************
  5882 ;; Defined at:
  5883 ;;		line 166 in file "SD.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;  Byte4           1    wreg     unsigned char 
  5886 ;;  Byte3           1    0[BANK0 ] unsigned char 
  5887 ;;  Byte2           1    1[BANK0 ] unsigned char 
  5888 ;;  Byte1           1    2[BANK0 ] unsigned char 
  5889 ;;  Byte0           1    3[BANK0 ] unsigned char 
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;  Byte4           1    4[BANK0 ] unsigned char 
  5892 ;;  match           1    5[BANK0 ] _Bool 
  5893 ;; Return value:  Size  Location     Type
  5894 ;;                  1    wreg      _Bool 
  5895 ;; Registers used:
  5896 ;;		wreg, status,2
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5902 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5903 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5905 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5906 ;;Total ram usage:        6 bytes
  5907 ;; Hardware stack levels used:    1
  5908 ;; Hardware stack levels required when called:    1
  5909 ;; This function calls:
  5910 ;;		Nothing
  5911 ;; This function is called by:
  5912 ;;		_SD_Init
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916                           
  5917                           ;psect for function _SD_Check40bitResponse
  5918  057F                     _SD_Check40bitResponse:	
  5919                           
  5920                           ;incstack = 0
  5921                           ; Regs used in _SD_Check40bitResponse: [wreg+status,2]
  5922                           ;SD_Check40bitResponse@Byte4 stored from wreg
  5923  057F  0020               	movlb	0	; select bank0
  5924  0580  00A4               	movwf	SD_Check40bitResponse@Byte4
  5925                           
  5926                           ;SD.c: 167:     _Bool match = 1;
  5927  0581  01A5               	clrf	SD_Check40bitResponse@match
  5928  0582  0AA5               	incf	SD_Check40bitResponse@match,f
  5929                           
  5930                           ;SD.c: 168:     if (Byte4 != GLBL_Resp40[0]) match = 0;
  5931  0583  0021               	movlb	1	; select bank1
  5932  0584  083D               	movf	_GLBL_Resp40^(0+128),w
  5933  0585  0020               	movlb	0	; select bank0
  5934  0586  0624               	xorwf	SD_Check40bitResponse@Byte4,w
  5935  0587  1D03               	btfss	3,2
  5936  0588  01A5               	clrf	SD_Check40bitResponse@match
  5937                           
  5938                           ;SD.c: 169:     if (Byte3 != GLBL_Resp40[1]) match = 0;
  5939  0589  0021               	movlb	1	; select bank1
  5940  058A  083E               	movf	(_GLBL_Resp40^(0+128)+1),w
  5941  058B  0020               	movlb	0	; select bank0
  5942  058C  0620               	xorwf	SD_Check40bitResponse@Byte3,w
  5943  058D  1D03               	btfss	3,2
  5944  058E  01A5               	clrf	SD_Check40bitResponse@match
  5945                           
  5946                           ;SD.c: 170:     if (Byte2 != GLBL_Resp40[2]) match = 0;
  5947  058F  0021               	movlb	1	; select bank1
  5948  0590  083F               	movf	(_GLBL_Resp40^(0+128)+2),w
  5949  0591  0020               	movlb	0	; select bank0
  5950  0592  0621               	xorwf	SD_Check40bitResponse@Byte2,w
  5951  0593  1D03               	btfss	3,2
  5952  0594  01A5               	clrf	SD_Check40bitResponse@match
  5953                           
  5954                           ;SD.c: 171:     if (Byte1 != GLBL_Resp40[3]) match = 0;
  5955  0595  0021               	movlb	1	; select bank1
  5956  0596  0840               	movf	(_GLBL_Resp40^(0+128)+3),w
  5957  0597  0020               	movlb	0	; select bank0
  5958  0598  0622               	xorwf	SD_Check40bitResponse@Byte1,w
  5959  0599  1D03               	btfss	3,2
  5960  059A  01A5               	clrf	SD_Check40bitResponse@match
  5961                           
  5962                           ;SD.c: 172:     if (Byte0 != GLBL_Resp40[4]) match = 0;
  5963  059B  0021               	movlb	1	; select bank1
  5964  059C  0841               	movf	(_GLBL_Resp40^(0+128)+4),w
  5965  059D  0020               	movlb	0	; select bank0
  5966  059E  0623               	xorwf	SD_Check40bitResponse@Byte0,w
  5967  059F  1D03               	btfss	3,2
  5968  05A0  01A5               	clrf	SD_Check40bitResponse@match
  5969                           
  5970                           ;SD.c: 173:     return match;
  5971  05A1  0825               	movf	SD_Check40bitResponse@match,w
  5972  05A2  0008               	return
  5973  05A3                     __end_of_SD_Check40bitResponse:	
  5974                           
  5975                           	psect	text18
  5976  061C                     __ptext18:	
  5977 ;; *************** function _DAC_Init *****************
  5978 ;; Defined at:
  5979 ;;		line 30 in file "DAC.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;		None
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;		None
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  1    wreg      void 
  5986 ;; Registers used:
  5987 ;;		wreg
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5997 ;;Total ram usage:        0 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:    1
  6000 ;; This function calls:
  6001 ;;		Nothing
  6002 ;; This function is called by:
  6003 ;;		_init
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           
  6008                           ;psect for function _DAC_Init
  6009  061C                     _DAC_Init:	
  6010                           
  6011                           ;DAC.c: 31:     TRISA = 0xFB;
  6012                           
  6013                           ;incstack = 0
  6014                           ; Regs used in _DAC_Init: [wreg]
  6015  061C  30FB               	movlw	251
  6016  061D  0021               	movlb	1	; select bank1
  6017  061E  008C               	movwf	12	;volatile
  6018                           
  6019                           ;DAC.c: 32:     DAC1CON0 = 0xE0;
  6020  061F  30E0               	movlw	224
  6021  0620  002B               	movlb	11	; select bank11
  6022  0621  008E               	movwf	14	;volatile
  6023  0622  0008               	return
  6024  0623                     __end_of_DAC_Init:	
  6025                           
  6026                           	psect	intentry
  6027  0004                     __pintentry:	
  6028 ;; *************** function _isr *****************
  6029 ;; Defined at:
  6030 ;;		line 119 in file "main.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;		None
  6033 ;; Auto vars:     Size  Location     Type
  6034 ;;  level           2    4[COMMON] short 
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  1    wreg      void 
  6037 ;; Registers used:
  6038 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6045 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6046 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6047 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6048 ;;Total ram usage:        6 bytes
  6049 ;; Hardware stack levels used:    1
  6050 ;; This function calls:
  6051 ;;		Nothing
  6052 ;; This function is called by:
  6053 ;;		Interrupt level 1
  6054 ;; This function uses a non-reentrant model
  6055 ;;
  6056                           
  6057  0004                     _isr:	
  6058                           
  6059                           ;incstack = 0
  6060  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6061                           
  6062                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  6063  0005  3180               	pagesel	$
  6064                           
  6065                           ;main.c: 120:     PIR1bits.TMR2IF = 0;
  6066  0006  0020               	movlb	0	; select bank0
  6067  0007  1091               	bcf	17,1	;volatile
  6068                           
  6069                           ;main.c: 121:     PORTCbits.RC0 = 1;
  6070  0008  140E               	bsf	14,0	;volatile
  6071                           
  6072                           ;main.c: 123:     short level = buffer[buffer_read_index++];
  6073  0009  0877               	movf	_buffer_read_index+1,w
  6074  000A  00F1               	movwf	??_isr+1
  6075  000B  0876               	movf	_buffer_read_index,w
  6076  000C  00F0               	movwf	??_isr
  6077  000D  35F0               	lslf	??_isr,f
  6078  000E  0DF1               	rlf	??_isr+1,f
  6079  000F  30F0               	movlw	240
  6080  0010  00F2               	movwf	??_isr+2
  6081  0011  3026               	movlw	38
  6082  0012  00F3               	movwf	??_isr+3
  6083  0013  0870               	movf	??_isr,w
  6084  0014  0772               	addwf	??_isr+2,w
  6085  0015  0086               	movwf	6
  6086  0016  0871               	movf	??_isr+1,w
  6087  0017  3D73               	addwfc	??_isr+3,w
  6088  0018  0087               	movwf	7
  6089  0019  3F40               	moviw [0]fsr1
  6090  001A  00F4               	movwf	isr@level
  6091  001B  3F41               	moviw [1]fsr1
  6092  001C  00F5               	movwf	isr@level+1
  6093  001D  3001               	movlw	1
  6094  001E  07F6               	addwf	_buffer_read_index,f
  6095  001F  3000               	movlw	0
  6096  0020  3DF7               	addwfc	_buffer_read_index+1,f
  6097                           
  6098                           ;main.c: 124:     DAC1REFH = (level & 0xff00) >> 8;
  6099  0021  0875               	movf	isr@level+1,w
  6100  0022  002B               	movlb	11	; select bank11
  6101  0023  0090               	movwf	16	;volatile
  6102                           
  6103                           ;main.c: 125:     DAC1REFL = (level & 0x00C0) << 8;
  6104  0024  018F               	clrf	15	;volatile
  6105                           
  6106                           ;main.c: 126:     DAC1LD = 1;
  6107  0025  140D               	bsf	13,0	;volatile
  6108                           
  6109                           ;main.c: 128:     if (buffer_read_index >= 128) buffer_read_index = 0;
  6110  0026  3000               	movlw	0
  6111  0027  0277               	subwf	_buffer_read_index+1,w
  6112  0028  3080               	movlw	128
  6113  0029  1903               	skipnz
  6114  002A  0276               	subwf	_buffer_read_index,w
  6115  002B  1C03               	skipc
  6116  002C  282F               	goto	i1l1232
  6117  002D  01F6               	clrf	_buffer_read_index
  6118  002E  01F7               	clrf	_buffer_read_index+1
  6119  002F                     i1l1232:	
  6120                           
  6121                           ;main.c: 129:     PORTCbits.RC0 = 0;
  6122  002F  0020               	movlb	0	; select bank0
  6123  0030  100E               	bcf	14,0	;volatile
  6124  0031  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6125  0032  0009               	retfie
  6126  0033                     __end_of_isr:	
  6127  007E                     btemp	set	126	;btemp
  6128  007E                     int$flags	set	126
  6129  007E                     wtemp0	set	126


Data Sizes:
    Strings     20
    Constant    256
    Data        11
    BSS         24
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     71      74
    BANK1            80      8      34
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           16      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    readBytes@dest	PTR unsigned char  size(1) Largest target is 28
		 -> openFile@data(BANK0[8]), openFile@fmt(BANK0[28]), openFile@riff(BANK0[8]), 

    fourCCeq@b	PTR unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), STR_6(CODE[5]), STR_4(CODE[5]), STR_2(CODE[5]), 

    fourCCeq@a	PTR unsigned char  size(1) Largest target is 28
		 -> openFile@data(BANK0[8]), fmt.fmtHeader(BANK0[8]), openFile@fmt(BANK0[28]), openFile@riff(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_openFile
    _openFile->_SD_OpenBlock
    _SD_OpenBlock->_SD_SendCommand
    _init->_SD_Init
    _SD_Init->_SD_SendCommand
    _SD_SendCommand->_SPI_Write

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   14591
                                              0 BANK1      8     8      0
                      _SD_CloseBlock
                       _SD_OpenBlock
                           _SPI_Read
                              _error
                               _init
                           _openFile
                         _timer_Init
 ---------------------------------------------------------------------------------
 (1) _timer_Init                                           4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _openFile                                            50    46      4    5933
                                             21 BANK0     50    46      4
                       _SD_OpenBlock
                           _SPI_Read
                              _error
                           _fourCCeq
                          _readBytes
 ---------------------------------------------------------------------------------
 (2) _readBytes                                            7     5      2     508
                                              0 BANK0      7     5      2
                      _SD_CloseBlock
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SD_CloseBlock                                        0     0      0       0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (2) _fourCCeq                                             8     6      2     696
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _error                                                2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SD_OpenBlock                                        12     8      4    4095
                                              9 BANK0     12     8      4
               _SD_Check8bitResponse
                _SD_Read8bitResponse
                     _SD_SendCommand
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    4411
                           _DAC_Init
                            _SD_Init
                           _SPI_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SD_Init                                              1     1      0    4411
                                              9 BANK0      1     1      0
              _SD_Check40bitResponse
               _SD_Check8bitResponse
               _SD_Read40bitResponse
                _SD_Read8bitResponse
                     _SD_SendCommand
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SD_SendCommand                                       8     4      4    3612
                                              1 BANK0      8     4      4
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (4) _SPI_Write                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SD_Read8bitResponse                                  2     2      0      68
                                              0 BANK0      2     2      0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SD_Read40bitResponse                                 2     2      0      68
                                              0 BANK0      2     2      0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SPI_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SD_Check8bitResponse                                 2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _SD_Check40bitResponse                                6     2      4     564
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _DAC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  6     6      0      15
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SD_CloseBlock
     _SPI_Read
   _SD_OpenBlock
     _SD_Check8bitResponse
     _SD_Read8bitResponse
       _SPI_Read
     _SD_SendCommand
       _SPI_Write
   _SPI_Read
   _error
   _init
     _DAC_Init
     _SD_Init
       _SD_Check40bitResponse
       _SD_Check8bitResponse
       _SD_Read40bitResponse
         _SPI_Read
       _SD_Read8bitResponse
         _SPI_Read
       _SD_SendCommand
         _SPI_Write
       _SPI_Write
     _SPI_Init
   _openFile
     _SD_OpenBlock
       _SD_Check8bitResponse
       _SD_Read8bitResponse
         _SPI_Read
       _SD_SendCommand
         _SPI_Write
     _SPI_Read
     _error
     _fourCCeq
     _readBytes
       _SD_CloseBlock
         _SPI_Read
       _SPI_Read
   _timer_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BIGRAM             3F0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITCOMMON            E      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
COMMON               E      6       C       3       85.7%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
STACK                0      0       0       4        0.0%
BANK0               50     47      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK0            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      8      22       8       42.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
ABS                  0      0      78      13        0.0%
BITBANK4            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK5            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK6            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK7            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK8            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK9            50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9               50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK10           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITBANK11           50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
DATA                 0      0      78      30        0.0%
BITBANK12           30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12              30      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK13           50      0       0      33        0.0%
BANK13              50      0       0      34        0.0%
BITBANK14           50      0       0      35        0.0%
BANK14              50      0       0      36        0.0%
BITBANK15           50      0       0      37        0.0%
BANK15              50      0       0      38        0.0%
BITBANK16           50      0       0      39        0.0%
BANK16              50      0       0      40        0.0%
BITBANK17           50      0       0      41        0.0%
BANK17              50      0       0      42        0.0%
BITBANK18           50      0       0      43        0.0%
BANK18              50      0       0      44        0.0%
BITBANK19           50      0       0      45        0.0%
BANK19              50      0       0      46        0.0%
BITBANK20           50      0       0      47        0.0%
BANK20              50      0       0      48        0.0%
BITBANK21           50      0       0      49        0.0%
BANK21              50      0       0      50        0.0%
BITBANK22           50      0       0      51        0.0%
BANK22              10      0       0      52        0.0%
BITBANK23           50      0       0      53        0.0%
BANK23               0      0       0      54        0.0%
BITBANK24           50      0       0      55        0.0%
BANK24               0      0       0      56        0.0%
BITBANK25           20      0       0      57        0.0%
BANK25               0      0       0      58        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Apr 04 16:10:36 2019

            SD_OpenBlock@address 0029                              l112 0612                              l118 0618  
                            l138 04BA                              l282 021F                              l259 05C3  
                            l284 0270                              u945 04E8                              u955 04C9  
                            _isr 0004           ??_SD_Check8bitResponse 0020                  ?_SD_SendCommand 0021  
                           l2200 03F3                             l2122 05D5                             l2212 0428  
                           l2206 0407                             l2310 046D                             l2144 0503  
                           l2304 0465                             l2402 0315                             l2316 0475  
                           l2324 0485                             l2318 047D                             l2264 0551  
                           l2258 0538                             l2290 04BF                             l2506 026A  
                           l2380 02C6                             l2364 028C                             l2374 02AD  
                           l2470 01EF                             l2446 01B3                             l2288 04FD  
                           l2392 02E9                             l2384 02D6                             l2368 0294  
                           l2296 045B                             l2650 04B5                             l2474 01F9  
                           l2458 01D9                             l2388 02DF                             l2660 04B0  
                           l2652 049C                             l2476 01FB                             l2654 04A1  
                           l2656 04A6                             l2648 048B                             l2658 04AB  
                           ?_isr 0070                             STR_1 062D                             STR_2 062D  
                           STR_3 0628                             STR_4 0628                             STR_5 0178  
                           STR_6 0178                             STR_7 0632                             STR_8 0632  
                           u1135 0208                             u1145 0227                             _T2PR 0494  
                           _main 017D                             _init 05C0                  __end_of_SD_Init 0454  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                 __end_of_DAC_Init 0623                             start 0033  
  __size_of_SD_Read40bitResponse 0032                  ??_SD_CloseBlock 0020     __size_of_SD_Read8bitResponse 0011  
               __end_of_CRCTable 0178                            ??_isr 0070                    __CFG_PLLEN$ON 0000  
                          ?_main 0070                            ?_init 0070                    __CFG_WDTE$OFF 0000  
                          _ANSB1 0C69                            _ANSC3 0C73                            _T2CON 0495  
                          _TRISA 008C                            _error 0605                            _sdata 00AE  
                          _state 0068                 __end_of_SPI_Init 05C0                 __end_of_SPI_Read 061C  
                          status 0003                            wtemp0 007E               __size_of_SPI_Write 0008  
                __initialization 0035                     __end_of_main 0272                     __end_of_init 05D5  
             _buffer_write_index 0079                           ??_main 00B5                           ??_init 002A  
       SD_Check8bitResponse@Byte 0020                           _DAC1LD 2C68                           ?_error 0070  
                      ??_SD_Init 0029                           _RC2PPS 0EA2                           _RC4PPS 0EA4  
                         i1l1232 002F                           _OSCCON 009B                           _TRISB0 0468  
                         _TRISB1 0469                           _TRISC0 0470                           _TRISC1 0471  
                         _TRISC2 0472                           _TRISC3 0473                           _TRISC4 0474  
                         _TRISC7 0477                    SD_OpenBlock@a 0031                 __end_of_fourCCeq 055B  
                         _buffer 26F0         SD_SendCommand@ByteToSend 0027                 __end_of_openFile 0324  
              __end_of_SPI_Write 0615                           error@e 0021                     __pdataCOMMON 0079  
                      ?_DAC_Init 0070          __end_of__initialization 0074   __size_of_SD_Check40bitResponse 0024  
  __end_of_SD_Check40bitResponse 05A3                   __pcstackCOMMON 0070                     __pidataBANK0 063A  
                   __pidataBANK1 0623                    __end_of_error 060D                        ?_SPI_Init 0070  
                      ?_SPI_Read 0070                 ??_SD_SendCommand 0025                       ??_DAC_Init 0020  
            _SD_Read8bitResponse 05D5                          ??_error 0020                       __pbssBANK1 00A0  
             __size_of_readBytes 0048                       __pmaintext 017D             ?_SD_Read8bitResponse 0070  
                     _blockIndex 00AC                      openFile@fmt 004B                       __pintentry 0004  
                     ??_SPI_Init 0020                       ??_SPI_Read 0020     __end_of_SD_Read40bitResponse 0535  
                        _SSP1ADD 0212                          _SSP1BUF 0211                          _SD_Init 03C3  
  __size_of_SD_Check8bitResponse 000A                        ?_fourCCeq 0020                     readBytes@len 0020  
                      ?_openFile 0035            ??_SD_Read8bitResponse 0020            __end_of_SD_CloseBlock 0605  
                        _address 00A0                          __ptext1 0454                          __ptext2 0272  
                        __ptext3 04BB                          __ptext4 05FC                          __ptext5 0535  
                        __ptext6 0605                          __ptext7 055B                          __ptext8 05C0  
                        __ptext9 05A3                __end_of_readBytes 0503                     __size_of_isr 002F  
                        clrloop0 05E7             end_of_initialization 0074                       ??_fourCCeq 0022  
     SD_Check40bitResponse@Byte0 0023       SD_Check40bitResponse@Byte1 0022       SD_Check40bitResponse@Byte2 0021  
     SD_Check40bitResponse@Byte3 0020       SD_Check40bitResponse@Byte4 0024       SD_Check40bitResponse@match 0025  
                     ??_openFile 0039                       _timer_Init 0454                        _PORTBbits 000D  
                      _PORTCbits 000E                        _SSPDATPPS 0E3B                        _SSPCLKPPS 0E3A  
               __CFG_FOSC$INTOSC 0000                    __pbssBIGRAM_1 26F0                        _SPI_Write 060D  
              __size_of_DAC_Init 0007                    ?_SD_OpenBlock 0029  SD_Read40bitResponse@readMessage 0021  
           _SD_Read40bitResponse 0503                     _global_error 0078                    __pidataCOMMON 0637  
              __size_of_SPI_Init 001D                __size_of_SPI_Read 0007              start_initialization 0035  
             SPI_Write@Data_8bit 0020                      __end_of_isr 0033                       ?_SPI_Write 0070  
                 ??_SD_OpenBlock 002D            ?_SD_Read40bitResponse 0070                    _samplePending 00B4  
                     readBytes@i 0025            _SD_Check40bitResponse 057F                      __pdataBANK0 0067  
                    __pdataBANK1 00BD                      ?_timer_Init 0020                      __pbssCOMMON 0076  
                      ___latbits 0003                    __pcstackBANK0 0020                    __pcstackBANK1 00B5  
                       ?_SD_Init 0070                __size_of_fourCCeq 0026                __size_of_openFile 00B2  
   __end_of_SD_Check8bitResponse 05FC                     openFile@data 0043                     openFile@riff 003A  
                       _DAC1CON0 058E                         _DAC1REFH 0590                         _DAC1REFL 058F  
                      _isPlaying 0067                      _bitsPerSamp 00B0                      _GLBL_Resp40 00BD  
                       _DAC_Init 061C                      ??_SPI_Write 0020                        _readBytes 04BB  
                 __size_of_error 0008                         _T2CLKCON 0497                         _CRCTable 0078  
        __size_of_SD_SendCommand 009F              __size_of_timer_Init 0067           ??_SD_Read40bitResponse 0020  
    __end_of_SD_Read8bitResponse 05E6                        clear_ram0 05E6                         _PIE1bits 0091  
         SD_SendCommand@CMD_6bit 0026                         _PIR1bits 0011           ?_SD_Check40bitResponse 0020  
                       _SSP1CON1 0215                         _SSP1STAT 0214             __end_of_SD_OpenBlock 057F  
                       _SPI_Init 05A3                         _SPI_Read 0615                       ?_readBytes 0020  
         __size_of_SD_CloseBlock 0009                 __size_of_SD_Init 0091                        fourCCeq@a 0026  
                      fourCCeq@b 0020                        fourCCeq@i 0027                    readBytes@dest 0024  
         SD_SendCommand@Checksum 0028                      _readMessage 0069                         _channels 00B2  
                      openFile@a 0035                         __ptext10 03C3                         __ptext11 0324  
                       __ptext12 060D                         __ptext13 05D5                         __ptext14 0503  
                       __ptext15 0615                         __ptext16 05F2                         __ptext17 057F  
                       __ptext18 061C                     _SSP1CON1bits 0215                         _filesize 00A4  
           _SD_Check8bitResponse 05F2                         _fourCCeq 0535                       _GLBL_Resp8 007B  
                  __size_of_main 00F5                    __size_of_init 0015               SD_SendCommand@ARG0 0024  
             SD_SendCommand@ARG1 0023               SD_SendCommand@ARG2 0022               SD_SendCommand@ARG3 0021  
                       _sampRate 00A8                         _openFile 0272                         int$flags 007E  
                  _SD_CloseBlock 05FC                     ??_timer_Init 0024                     _SSP1STATbits 0214  
                    _OSCSTATbits 009C                 openFile@response 0042   SD_Read8bitResponse@readMessage 0021  
                     _INTCONbits 000B                         isr@level 0074                      ??_readBytes 0022  
          ?_SD_Check8bitResponse 0070                         intlevel1 0000                   _SD_SendCommand 0324  
      SD_Check8bitResponse@match 0021               __end_of_timer_Init 04BB                   timer_Init@rate 0020  
          __size_of_SD_OpenBlock 0024                   ?_SD_CloseBlock 0070                _buffer_read_index 0076  
                  __pstringtext1 0078                    __pstringtext2 0628                    __pstringtext3 062D  
                  __pstringtext4 0632                    __pstringtext5 0000           __end_of_SD_SendCommand 03C3  
                   _SD_OpenBlock 055B          ??_SD_Check40bitResponse 0024  
