

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 09 01:24:25 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1778
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.05
    49                           ; Generated 20/12/2018 GMT
    50                           ; 
    51                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F1778 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  0111                     	;# 
   138  0112                     	;# 
   139  0113                     	;# 
   140  0114                     	;# 
   141  0115                     	;# 
   142  0116                     	;# 
   143  0117                     	;# 
   144  0118                     	;# 
   145  0119                     	;# 
   146  011A                     	;# 
   147  011B                     	;# 
   148  011C                     	;# 
   149  011D                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  018E                     	;# 
   153  0191                     	;# 
   154  0191                     	;# 
   155  0192                     	;# 
   156  0193                     	;# 
   157  0193                     	;# 
   158  0194                     	;# 
   159  0195                     	;# 
   160  0196                     	;# 
   161  0197                     	;# 
   162  0199                     	;# 
   163  0199                     	;# 
   164  0199                     	;# 
   165  019A                     	;# 
   166  019A                     	;# 
   167  019A                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019B                     	;# 
   173  019C                     	;# 
   174  019C                     	;# 
   175  019C                     	;# 
   176  019D                     	;# 
   177  019D                     	;# 
   178  019D                     	;# 
   179  019E                     	;# 
   180  019E                     	;# 
   181  019E                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  019F                     	;# 
   186  019F                     	;# 
   187  020C                     	;# 
   188  020D                     	;# 
   189  020E                     	;# 
   190  0210                     	;# 
   191  0211                     	;# 
   192  0211                     	;# 
   193  0212                     	;# 
   194  0212                     	;# 
   195  0213                     	;# 
   196  0213                     	;# 
   197  0214                     	;# 
   198  0214                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0216                     	;# 
   204  0216                     	;# 
   205  0217                     	;# 
   206  0217                     	;# 
   207  021B                     	;# 
   208  021C                     	;# 
   209  021D                     	;# 
   210  021E                     	;# 
   211  021F                     	;# 
   212  028C                     	;# 
   213  028D                     	;# 
   214  028E                     	;# 
   215  0291                     	;# 
   216  0291                     	;# 
   217  0292                     	;# 
   218  0293                     	;# 
   219  0294                     	;# 
   220  0295                     	;# 
   221  0295                     	;# 
   222  0296                     	;# 
   223  0297                     	;# 
   224  0298                     	;# 
   225  0299                     	;# 
   226  0299                     	;# 
   227  029A                     	;# 
   228  029B                     	;# 
   229  029C                     	;# 
   230  029E                     	;# 
   231  029F                     	;# 
   232  030C                     	;# 
   233  030D                     	;# 
   234  030E                     	;# 
   235  0315                     	;# 
   236  0316                     	;# 
   237  0317                     	;# 
   238  0318                     	;# 
   239  0319                     	;# 
   240  031B                     	;# 
   241  031C                     	;# 
   242  031D                     	;# 
   243  031E                     	;# 
   244  031F                     	;# 
   245  038C                     	;# 
   246  038D                     	;# 
   247  038E                     	;# 
   248  0390                     	;# 
   249  0391                     	;# 
   250  0392                     	;# 
   251  0393                     	;# 
   252  0394                     	;# 
   253  0395                     	;# 
   254  0396                     	;# 
   255  0397                     	;# 
   256  0398                     	;# 
   257  0399                     	;# 
   258  039D                     	;# 
   259  039E                     	;# 
   260  039F                     	;# 
   261  040D                     	;# 
   262  040F                     	;# 
   263  040F                     	;# 
   264  0410                     	;# 
   265  0411                     	;# 
   266  0412                     	;# 
   267  0413                     	;# 
   268  0413                     	;# 
   269  0414                     	;# 
   270  0414                     	;# 
   271  0415                     	;# 
   272  0416                     	;# 
   273  0417                     	;# 
   274  0418                     	;# 
   275  041A                     	;# 
   276  041A                     	;# 
   277  041B                     	;# 
   278  041B                     	;# 
   279  041C                     	;# 
   280  041D                     	;# 
   281  041E                     	;# 
   282  041F                     	;# 
   283  048E                     	;# 
   284  048E                     	;# 
   285  048F                     	;# 
   286  0490                     	;# 
   287  0491                     	;# 
   288  0492                     	;# 
   289  0493                     	;# 
   290  0493                     	;# 
   291  0494                     	;# 
   292  0494                     	;# 
   293  0495                     	;# 
   294  0496                     	;# 
   295  0497                     	;# 
   296  0498                     	;# 
   297  049A                     	;# 
   298  049A                     	;# 
   299  049B                     	;# 
   300  049B                     	;# 
   301  049C                     	;# 
   302  049D                     	;# 
   303  049E                     	;# 
   304  049F                     	;# 
   305  050F                     	;# 
   306  0510                     	;# 
   307  0511                     	;# 
   308  0512                     	;# 
   309  0513                     	;# 
   310  0514                     	;# 
   311  0515                     	;# 
   312  0516                     	;# 
   313  0517                     	;# 
   314  0518                     	;# 
   315  0519                     	;# 
   316  051A                     	;# 
   317  058D                     	;# 
   318  058E                     	;# 
   319  058F                     	;# 
   320  058F                     	;# 
   321  058F                     	;# 
   322  0590                     	;# 
   323  0590                     	;# 
   324  0591                     	;# 
   325  0592                     	;# 
   326  0592                     	;# 
   327  0592                     	;# 
   328  0593                     	;# 
   329  0593                     	;# 
   330  0594                     	;# 
   331  0595                     	;# 
   332  0595                     	;# 
   333  0596                     	;# 
   334  0597                     	;# 
   335  0597                     	;# 
   336  0598                     	;# 
   337  0599                     	;# 
   338  0599                     	;# 
   339  0599                     	;# 
   340  059A                     	;# 
   341  059A                     	;# 
   342  059E                     	;# 
   343  059F                     	;# 
   344  059F                     	;# 
   345  0614                     	;# 
   346  0614                     	;# 
   347  0615                     	;# 
   348  0616                     	;# 
   349  0617                     	;# 
   350  0617                     	;# 
   351  0618                     	;# 
   352  0619                     	;# 
   353  061A                     	;# 
   354  061A                     	;# 
   355  061B                     	;# 
   356  061C                     	;# 
   357  068D                     	;# 
   358  068E                     	;# 
   359  068F                     	;# 
   360  0690                     	;# 
   361  0691                     	;# 
   362  0692                     	;# 
   363  0693                     	;# 
   364  0694                     	;# 
   365  0695                     	;# 
   366  0696                     	;# 
   367  0697                     	;# 
   368  0698                     	;# 
   369  0699                     	;# 
   370  069A                     	;# 
   371  069B                     	;# 
   372  069C                     	;# 
   373  069D                     	;# 
   374  069E                     	;# 
   375  069F                     	;# 
   376  070D                     	;# 
   377  070E                     	;# 
   378  070F                     	;# 
   379  0710                     	;# 
   380  0711                     	;# 
   381  0712                     	;# 
   382  0713                     	;# 
   383  0714                     	;# 
   384  0715                     	;# 
   385  0716                     	;# 
   386  0717                     	;# 
   387  0718                     	;# 
   388  0719                     	;# 
   389  071A                     	;# 
   390  071B                     	;# 
   391  071C                     	;# 
   392  071D                     	;# 
   393  071E                     	;# 
   394  071F                     	;# 
   395  078E                     	;# 
   396  078F                     	;# 
   397  0790                     	;# 
   398  0791                     	;# 
   399  0792                     	;# 
   400  0793                     	;# 
   401  0794                     	;# 
   402  0795                     	;# 
   403  0796                     	;# 
   404  0797                     	;# 
   405  0798                     	;# 
   406  0799                     	;# 
   407  079A                     	;# 
   408  079B                     	;# 
   409  079C                     	;# 
   410  079D                     	;# 
   411  079E                     	;# 
   412  079F                     	;# 
   413  080D                     	;# 
   414  080E                     	;# 
   415  080F                     	;# 
   416  0810                     	;# 
   417  0811                     	;# 
   418  0812                     	;# 
   419  0813                     	;# 
   420  0814                     	;# 
   421  0815                     	;# 
   422  0816                     	;# 
   423  0817                     	;# 
   424  0818                     	;# 
   425  0819                     	;# 
   426  081A                     	;# 
   427  081B                     	;# 
   428  081C                     	;# 
   429  081D                     	;# 
   430  081E                     	;# 
   431  081F                     	;# 
   432  090C                     	;# 
   433  090D                     	;# 
   434  090E                     	;# 
   435  090F                     	;# 
   436  0910                     	;# 
   437  0911                     	;# 
   438  0912                     	;# 
   439  0913                     	;# 
   440  0914                     	;# 
   441  0915                     	;# 
   442  0916                     	;# 
   443  0917                     	;# 
   444  0D8E                     	;# 
   445  0D8F                     	;# 
   446  0D90                     	;# 
   447  0D91                     	;# 
   448  0D91                     	;# 
   449  0D92                     	;# 
   450  0D93                     	;# 
   451  0D93                     	;# 
   452  0D94                     	;# 
   453  0D95                     	;# 
   454  0D95                     	;# 
   455  0D96                     	;# 
   456  0D97                     	;# 
   457  0D97                     	;# 
   458  0D98                     	;# 
   459  0D99                     	;# 
   460  0D99                     	;# 
   461  0D9A                     	;# 
   462  0D9B                     	;# 
   463  0D9C                     	;# 
   464  0D9C                     	;# 
   465  0D9D                     	;# 
   466  0D9D                     	;# 
   467  0D9E                     	;# 
   468  0D9F                     	;# 
   469  0DA0                     	;# 
   470  0DA1                     	;# 
   471  0DA1                     	;# 
   472  0DA2                     	;# 
   473  0DA3                     	;# 
   474  0DA3                     	;# 
   475  0DA4                     	;# 
   476  0DA5                     	;# 
   477  0DA5                     	;# 
   478  0DA6                     	;# 
   479  0DA7                     	;# 
   480  0DA7                     	;# 
   481  0DA8                     	;# 
   482  0DA9                     	;# 
   483  0DA9                     	;# 
   484  0DAA                     	;# 
   485  0DAB                     	;# 
   486  0DAC                     	;# 
   487  0DAC                     	;# 
   488  0DAD                     	;# 
   489  0DAD                     	;# 
   490  0DAE                     	;# 
   491  0DAF                     	;# 
   492  0DB0                     	;# 
   493  0DB1                     	;# 
   494  0DB1                     	;# 
   495  0DB2                     	;# 
   496  0DB3                     	;# 
   497  0DB3                     	;# 
   498  0DB4                     	;# 
   499  0DB5                     	;# 
   500  0DB5                     	;# 
   501  0DB6                     	;# 
   502  0DB7                     	;# 
   503  0DB7                     	;# 
   504  0DB8                     	;# 
   505  0DB9                     	;# 
   506  0DB9                     	;# 
   507  0DBA                     	;# 
   508  0DBB                     	;# 
   509  0DBC                     	;# 
   510  0DBC                     	;# 
   511  0DBD                     	;# 
   512  0DBD                     	;# 
   513  0DBE                     	;# 
   514  0DBF                     	;# 
   515  0DC0                     	;# 
   516  0E0C                     	;# 
   517  0E0D                     	;# 
   518  0E0E                     	;# 
   519  0E0F                     	;# 
   520  0E10                     	;# 
   521  0E11                     	;# 
   522  0E12                     	;# 
   523  0E13                     	;# 
   524  0E14                     	;# 
   525  0E15                     	;# 
   526  0E15                     	;# 
   527  0E15                     	;# 
   528  0E16                     	;# 
   529  0E16                     	;# 
   530  0E16                     	;# 
   531  0E17                     	;# 
   532  0E17                     	;# 
   533  0E17                     	;# 
   534  0E18                     	;# 
   535  0E18                     	;# 
   536  0E18                     	;# 
   537  0E19                     	;# 
   538  0E1A                     	;# 
   539  0E1B                     	;# 
   540  0E1D                     	;# 
   541  0E1E                     	;# 
   542  0E1F                     	;# 
   543  0E21                     	;# 
   544  0E22                     	;# 
   545  0E23                     	;# 
   546  0E24                     	;# 
   547  0E25                     	;# 
   548  0E26                     	;# 
   549  0E27                     	;# 
   550  0E28                     	;# 
   551  0E29                     	;# 
   552  0E2D                     	;# 
   553  0E2E                     	;# 
   554  0E2F                     	;# 
   555  0E30                     	;# 
   556  0E31                     	;# 
   557  0E32                     	;# 
   558  0E35                     	;# 
   559  0E36                     	;# 
   560  0E37                     	;# 
   561  0E38                     	;# 
   562  0E39                     	;# 
   563  0E3A                     	;# 
   564  0E3B                     	;# 
   565  0E3C                     	;# 
   566  0E3D                     	;# 
   567  0E3E                     	;# 
   568  0E90                     	;# 
   569  0E91                     	;# 
   570  0E92                     	;# 
   571  0E93                     	;# 
   572  0E94                     	;# 
   573  0E95                     	;# 
   574  0E96                     	;# 
   575  0E97                     	;# 
   576  0E98                     	;# 
   577  0E99                     	;# 
   578  0E9A                     	;# 
   579  0E9B                     	;# 
   580  0E9C                     	;# 
   581  0E9D                     	;# 
   582  0E9E                     	;# 
   583  0E9F                     	;# 
   584  0EA0                     	;# 
   585  0EA1                     	;# 
   586  0EA2                     	;# 
   587  0EA3                     	;# 
   588  0EA4                     	;# 
   589  0EA5                     	;# 
   590  0EA6                     	;# 
   591  0EA7                     	;# 
   592  0F0F                     	;# 
   593  0F10                     	;# 
   594  0F11                     	;# 
   595  0F12                     	;# 
   596  0F13                     	;# 
   597  0F14                     	;# 
   598  0F15                     	;# 
   599  0F16                     	;# 
   600  0F17                     	;# 
   601  0F18                     	;# 
   602  0F19                     	;# 
   603  0F1A                     	;# 
   604  0F1B                     	;# 
   605  0F1C                     	;# 
   606  0F1D                     	;# 
   607  0F1E                     	;# 
   608  0F1F                     	;# 
   609  0F20                     	;# 
   610  0F21                     	;# 
   611  0F22                     	;# 
   612  0F23                     	;# 
   613  0F24                     	;# 
   614  0F25                     	;# 
   615  0F26                     	;# 
   616  0F27                     	;# 
   617  0F28                     	;# 
   618  0F29                     	;# 
   619  0F2A                     	;# 
   620  0F2B                     	;# 
   621  0F2C                     	;# 
   622  0F2D                     	;# 
   623  0F2E                     	;# 
   624  0F2F                     	;# 
   625  0F30                     	;# 
   626  0F31                     	;# 
   627  0F32                     	;# 
   628  0F33                     	;# 
   629  0F34                     	;# 
   630  0F35                     	;# 
   631  0F36                     	;# 
   632  0F37                     	;# 
   633  0FE4                     	;# 
   634  0FE5                     	;# 
   635  0FE6                     	;# 
   636  0FE7                     	;# 
   637  0FE8                     	;# 
   638  0FE9                     	;# 
   639  0FEA                     	;# 
   640  0FEB                     	;# 
   641  0FED                     	;# 
   642  0FEE                     	;# 
   643  0FEF                     	;# 
   644  0000                     	;# 
   645  0001                     	;# 
   646  0002                     	;# 
   647  0003                     	;# 
   648  0004                     	;# 
   649  0005                     	;# 
   650  0006                     	;# 
   651  0007                     	;# 
   652  0008                     	;# 
   653  0009                     	;# 
   654  000A                     	;# 
   655  000B                     	;# 
   656  000C                     	;# 
   657  000D                     	;# 
   658  000E                     	;# 
   659  0010                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0013                     	;# 
   663  0014                     	;# 
   664  0015                     	;# 
   665  0016                     	;# 
   666  0017                     	;# 
   667  0018                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001C                     	;# 
   673  001C                     	;# 
   674  001D                     	;# 
   675  001E                     	;# 
   676  001F                     	;# 
   677  008C                     	;# 
   678  008D                     	;# 
   679  008E                     	;# 
   680  0090                     	;# 
   681  0091                     	;# 
   682  0092                     	;# 
   683  0093                     	;# 
   684  0094                     	;# 
   685  0095                     	;# 
   686  0096                     	;# 
   687  0097                     	;# 
   688  0098                     	;# 
   689  0099                     	;# 
   690  009A                     	;# 
   691  009B                     	;# 
   692  009C                     	;# 
   693  009D                     	;# 
   694  009E                     	;# 
   695  009F                     	;# 
   696  010C                     	;# 
   697  010D                     	;# 
   698  010E                     	;# 
   699  0111                     	;# 
   700  0112                     	;# 
   701  0113                     	;# 
   702  0114                     	;# 
   703  0115                     	;# 
   704  0116                     	;# 
   705  0117                     	;# 
   706  0118                     	;# 
   707  0119                     	;# 
   708  011A                     	;# 
   709  011B                     	;# 
   710  011C                     	;# 
   711  011D                     	;# 
   712  018C                     	;# 
   713  018D                     	;# 
   714  018E                     	;# 
   715  0191                     	;# 
   716  0191                     	;# 
   717  0192                     	;# 
   718  0193                     	;# 
   719  0193                     	;# 
   720  0194                     	;# 
   721  0195                     	;# 
   722  0196                     	;# 
   723  0197                     	;# 
   724  0199                     	;# 
   725  0199                     	;# 
   726  0199                     	;# 
   727  019A                     	;# 
   728  019A                     	;# 
   729  019A                     	;# 
   730  019B                     	;# 
   731  019B                     	;# 
   732  019B                     	;# 
   733  019B                     	;# 
   734  019B                     	;# 
   735  019C                     	;# 
   736  019C                     	;# 
   737  019C                     	;# 
   738  019D                     	;# 
   739  019D                     	;# 
   740  019D                     	;# 
   741  019E                     	;# 
   742  019E                     	;# 
   743  019E                     	;# 
   744  019F                     	;# 
   745  019F                     	;# 
   746  019F                     	;# 
   747  019F                     	;# 
   748  019F                     	;# 
   749  020C                     	;# 
   750  020D                     	;# 
   751  020E                     	;# 
   752  0210                     	;# 
   753  0211                     	;# 
   754  0211                     	;# 
   755  0212                     	;# 
   756  0212                     	;# 
   757  0213                     	;# 
   758  0213                     	;# 
   759  0214                     	;# 
   760  0214                     	;# 
   761  0215                     	;# 
   762  0215                     	;# 
   763  0215                     	;# 
   764  0215                     	;# 
   765  0216                     	;# 
   766  0216                     	;# 
   767  0217                     	;# 
   768  0217                     	;# 
   769  021B                     	;# 
   770  021C                     	;# 
   771  021D                     	;# 
   772  021E                     	;# 
   773  021F                     	;# 
   774  028C                     	;# 
   775  028D                     	;# 
   776  028E                     	;# 
   777  0291                     	;# 
   778  0291                     	;# 
   779  0292                     	;# 
   780  0293                     	;# 
   781  0294                     	;# 
   782  0295                     	;# 
   783  0295                     	;# 
   784  0296                     	;# 
   785  0297                     	;# 
   786  0298                     	;# 
   787  0299                     	;# 
   788  0299                     	;# 
   789  029A                     	;# 
   790  029B                     	;# 
   791  029C                     	;# 
   792  029E                     	;# 
   793  029F                     	;# 
   794  030C                     	;# 
   795  030D                     	;# 
   796  030E                     	;# 
   797  0315                     	;# 
   798  0316                     	;# 
   799  0317                     	;# 
   800  0318                     	;# 
   801  0319                     	;# 
   802  031B                     	;# 
   803  031C                     	;# 
   804  031D                     	;# 
   805  031E                     	;# 
   806  031F                     	;# 
   807  038C                     	;# 
   808  038D                     	;# 
   809  038E                     	;# 
   810  0390                     	;# 
   811  0391                     	;# 
   812  0392                     	;# 
   813  0393                     	;# 
   814  0394                     	;# 
   815  0395                     	;# 
   816  0396                     	;# 
   817  0397                     	;# 
   818  0398                     	;# 
   819  0399                     	;# 
   820  039D                     	;# 
   821  039E                     	;# 
   822  039F                     	;# 
   823  040D                     	;# 
   824  040F                     	;# 
   825  040F                     	;# 
   826  0410                     	;# 
   827  0411                     	;# 
   828  0412                     	;# 
   829  0413                     	;# 
   830  0413                     	;# 
   831  0414                     	;# 
   832  0414                     	;# 
   833  0415                     	;# 
   834  0416                     	;# 
   835  0417                     	;# 
   836  0418                     	;# 
   837  041A                     	;# 
   838  041A                     	;# 
   839  041B                     	;# 
   840  041B                     	;# 
   841  041C                     	;# 
   842  041D                     	;# 
   843  041E                     	;# 
   844  041F                     	;# 
   845  048E                     	;# 
   846  048E                     	;# 
   847  048F                     	;# 
   848  0490                     	;# 
   849  0491                     	;# 
   850  0492                     	;# 
   851  0493                     	;# 
   852  0493                     	;# 
   853  0494                     	;# 
   854  0494                     	;# 
   855  0495                     	;# 
   856  0496                     	;# 
   857  0497                     	;# 
   858  0498                     	;# 
   859  049A                     	;# 
   860  049A                     	;# 
   861  049B                     	;# 
   862  049B                     	;# 
   863  049C                     	;# 
   864  049D                     	;# 
   865  049E                     	;# 
   866  049F                     	;# 
   867  050F                     	;# 
   868  0510                     	;# 
   869  0511                     	;# 
   870  0512                     	;# 
   871  0513                     	;# 
   872  0514                     	;# 
   873  0515                     	;# 
   874  0516                     	;# 
   875  0517                     	;# 
   876  0518                     	;# 
   877  0519                     	;# 
   878  051A                     	;# 
   879  058D                     	;# 
   880  058E                     	;# 
   881  058F                     	;# 
   882  058F                     	;# 
   883  058F                     	;# 
   884  0590                     	;# 
   885  0590                     	;# 
   886  0591                     	;# 
   887  0592                     	;# 
   888  0592                     	;# 
   889  0592                     	;# 
   890  0593                     	;# 
   891  0593                     	;# 
   892  0594                     	;# 
   893  0595                     	;# 
   894  0595                     	;# 
   895  0596                     	;# 
   896  0597                     	;# 
   897  0597                     	;# 
   898  0598                     	;# 
   899  0599                     	;# 
   900  0599                     	;# 
   901  0599                     	;# 
   902  059A                     	;# 
   903  059A                     	;# 
   904  059E                     	;# 
   905  059F                     	;# 
   906  059F                     	;# 
   907  0614                     	;# 
   908  0614                     	;# 
   909  0615                     	;# 
   910  0616                     	;# 
   911  0617                     	;# 
   912  0617                     	;# 
   913  0618                     	;# 
   914  0619                     	;# 
   915  061A                     	;# 
   916  061A                     	;# 
   917  061B                     	;# 
   918  061C                     	;# 
   919  068D                     	;# 
   920  068E                     	;# 
   921  068F                     	;# 
   922  0690                     	;# 
   923  0691                     	;# 
   924  0692                     	;# 
   925  0693                     	;# 
   926  0694                     	;# 
   927  0695                     	;# 
   928  0696                     	;# 
   929  0697                     	;# 
   930  0698                     	;# 
   931  0699                     	;# 
   932  069A                     	;# 
   933  069B                     	;# 
   934  069C                     	;# 
   935  069D                     	;# 
   936  069E                     	;# 
   937  069F                     	;# 
   938  070D                     	;# 
   939  070E                     	;# 
   940  070F                     	;# 
   941  0710                     	;# 
   942  0711                     	;# 
   943  0712                     	;# 
   944  0713                     	;# 
   945  0714                     	;# 
   946  0715                     	;# 
   947  0716                     	;# 
   948  0717                     	;# 
   949  0718                     	;# 
   950  0719                     	;# 
   951  071A                     	;# 
   952  071B                     	;# 
   953  071C                     	;# 
   954  071D                     	;# 
   955  071E                     	;# 
   956  071F                     	;# 
   957  078E                     	;# 
   958  078F                     	;# 
   959  0790                     	;# 
   960  0791                     	;# 
   961  0792                     	;# 
   962  0793                     	;# 
   963  0794                     	;# 
   964  0795                     	;# 
   965  0796                     	;# 
   966  0797                     	;# 
   967  0798                     	;# 
   968  0799                     	;# 
   969  079A                     	;# 
   970  079B                     	;# 
   971  079C                     	;# 
   972  079D                     	;# 
   973  079E                     	;# 
   974  079F                     	;# 
   975  080D                     	;# 
   976  080E                     	;# 
   977  080F                     	;# 
   978  0810                     	;# 
   979  0811                     	;# 
   980  0812                     	;# 
   981  0813                     	;# 
   982  0814                     	;# 
   983  0815                     	;# 
   984  0816                     	;# 
   985  0817                     	;# 
   986  0818                     	;# 
   987  0819                     	;# 
   988  081A                     	;# 
   989  081B                     	;# 
   990  081C                     	;# 
   991  081D                     	;# 
   992  081E                     	;# 
   993  081F                     	;# 
   994  090C                     	;# 
   995  090D                     	;# 
   996  090E                     	;# 
   997  090F                     	;# 
   998  0910                     	;# 
   999  0911                     	;# 
  1000  0912                     	;# 
  1001  0913                     	;# 
  1002  0914                     	;# 
  1003  0915                     	;# 
  1004  0916                     	;# 
  1005  0917                     	;# 
  1006  0D8E                     	;# 
  1007  0D8F                     	;# 
  1008  0D90                     	;# 
  1009  0D91                     	;# 
  1010  0D91                     	;# 
  1011  0D92                     	;# 
  1012  0D93                     	;# 
  1013  0D93                     	;# 
  1014  0D94                     	;# 
  1015  0D95                     	;# 
  1016  0D95                     	;# 
  1017  0D96                     	;# 
  1018  0D97                     	;# 
  1019  0D97                     	;# 
  1020  0D98                     	;# 
  1021  0D99                     	;# 
  1022  0D99                     	;# 
  1023  0D9A                     	;# 
  1024  0D9B                     	;# 
  1025  0D9C                     	;# 
  1026  0D9C                     	;# 
  1027  0D9D                     	;# 
  1028  0D9D                     	;# 
  1029  0D9E                     	;# 
  1030  0D9F                     	;# 
  1031  0DA0                     	;# 
  1032  0DA1                     	;# 
  1033  0DA1                     	;# 
  1034  0DA2                     	;# 
  1035  0DA3                     	;# 
  1036  0DA3                     	;# 
  1037  0DA4                     	;# 
  1038  0DA5                     	;# 
  1039  0DA5                     	;# 
  1040  0DA6                     	;# 
  1041  0DA7                     	;# 
  1042  0DA7                     	;# 
  1043  0DA8                     	;# 
  1044  0DA9                     	;# 
  1045  0DA9                     	;# 
  1046  0DAA                     	;# 
  1047  0DAB                     	;# 
  1048  0DAC                     	;# 
  1049  0DAC                     	;# 
  1050  0DAD                     	;# 
  1051  0DAD                     	;# 
  1052  0DAE                     	;# 
  1053  0DAF                     	;# 
  1054  0DB0                     	;# 
  1055  0DB1                     	;# 
  1056  0DB1                     	;# 
  1057  0DB2                     	;# 
  1058  0DB3                     	;# 
  1059  0DB3                     	;# 
  1060  0DB4                     	;# 
  1061  0DB5                     	;# 
  1062  0DB5                     	;# 
  1063  0DB6                     	;# 
  1064  0DB7                     	;# 
  1065  0DB7                     	;# 
  1066  0DB8                     	;# 
  1067  0DB9                     	;# 
  1068  0DB9                     	;# 
  1069  0DBA                     	;# 
  1070  0DBB                     	;# 
  1071  0DBC                     	;# 
  1072  0DBC                     	;# 
  1073  0DBD                     	;# 
  1074  0DBD                     	;# 
  1075  0DBE                     	;# 
  1076  0DBF                     	;# 
  1077  0DC0                     	;# 
  1078  0E0C                     	;# 
  1079  0E0D                     	;# 
  1080  0E0E                     	;# 
  1081  0E0F                     	;# 
  1082  0E10                     	;# 
  1083  0E11                     	;# 
  1084  0E12                     	;# 
  1085  0E13                     	;# 
  1086  0E14                     	;# 
  1087  0E15                     	;# 
  1088  0E15                     	;# 
  1089  0E15                     	;# 
  1090  0E16                     	;# 
  1091  0E16                     	;# 
  1092  0E16                     	;# 
  1093  0E17                     	;# 
  1094  0E17                     	;# 
  1095  0E17                     	;# 
  1096  0E18                     	;# 
  1097  0E18                     	;# 
  1098  0E18                     	;# 
  1099  0E19                     	;# 
  1100  0E1A                     	;# 
  1101  0E1B                     	;# 
  1102  0E1D                     	;# 
  1103  0E1E                     	;# 
  1104  0E1F                     	;# 
  1105  0E21                     	;# 
  1106  0E22                     	;# 
  1107  0E23                     	;# 
  1108  0E24                     	;# 
  1109  0E25                     	;# 
  1110  0E26                     	;# 
  1111  0E27                     	;# 
  1112  0E28                     	;# 
  1113  0E29                     	;# 
  1114  0E2D                     	;# 
  1115  0E2E                     	;# 
  1116  0E2F                     	;# 
  1117  0E30                     	;# 
  1118  0E31                     	;# 
  1119  0E32                     	;# 
  1120  0E35                     	;# 
  1121  0E36                     	;# 
  1122  0E37                     	;# 
  1123  0E38                     	;# 
  1124  0E39                     	;# 
  1125  0E3A                     	;# 
  1126  0E3B                     	;# 
  1127  0E3C                     	;# 
  1128  0E3D                     	;# 
  1129  0E3E                     	;# 
  1130  0E90                     	;# 
  1131  0E91                     	;# 
  1132  0E92                     	;# 
  1133  0E93                     	;# 
  1134  0E94                     	;# 
  1135  0E95                     	;# 
  1136  0E96                     	;# 
  1137  0E97                     	;# 
  1138  0E98                     	;# 
  1139  0E99                     	;# 
  1140  0E9A                     	;# 
  1141  0E9B                     	;# 
  1142  0E9C                     	;# 
  1143  0E9D                     	;# 
  1144  0E9E                     	;# 
  1145  0E9F                     	;# 
  1146  0EA0                     	;# 
  1147  0EA1                     	;# 
  1148  0EA2                     	;# 
  1149  0EA3                     	;# 
  1150  0EA4                     	;# 
  1151  0EA5                     	;# 
  1152  0EA6                     	;# 
  1153  0EA7                     	;# 
  1154  0F0F                     	;# 
  1155  0F10                     	;# 
  1156  0F11                     	;# 
  1157  0F12                     	;# 
  1158  0F13                     	;# 
  1159  0F14                     	;# 
  1160  0F15                     	;# 
  1161  0F16                     	;# 
  1162  0F17                     	;# 
  1163  0F18                     	;# 
  1164  0F19                     	;# 
  1165  0F1A                     	;# 
  1166  0F1B                     	;# 
  1167  0F1C                     	;# 
  1168  0F1D                     	;# 
  1169  0F1E                     	;# 
  1170  0F1F                     	;# 
  1171  0F20                     	;# 
  1172  0F21                     	;# 
  1173  0F22                     	;# 
  1174  0F23                     	;# 
  1175  0F24                     	;# 
  1176  0F25                     	;# 
  1177  0F26                     	;# 
  1178  0F27                     	;# 
  1179  0F28                     	;# 
  1180  0F29                     	;# 
  1181  0F2A                     	;# 
  1182  0F2B                     	;# 
  1183  0F2C                     	;# 
  1184  0F2D                     	;# 
  1185  0F2E                     	;# 
  1186  0F2F                     	;# 
  1187  0F30                     	;# 
  1188  0F31                     	;# 
  1189  0F32                     	;# 
  1190  0F33                     	;# 
  1191  0F34                     	;# 
  1192  0F35                     	;# 
  1193  0F36                     	;# 
  1194  0F37                     	;# 
  1195  0FE4                     	;# 
  1196  0FE5                     	;# 
  1197  0FE6                     	;# 
  1198  0FE7                     	;# 
  1199  0FE8                     	;# 
  1200  0FE9                     	;# 
  1201  0FEA                     	;# 
  1202  0FEB                     	;# 
  1203  0FED                     	;# 
  1204  0FEE                     	;# 
  1205  0FEF                     	;# 
  1206  0000                     	;# 
  1207  0001                     	;# 
  1208  0002                     	;# 
  1209  0003                     	;# 
  1210  0004                     	;# 
  1211  0005                     	;# 
  1212  0006                     	;# 
  1213  0007                     	;# 
  1214  0008                     	;# 
  1215  0009                     	;# 
  1216  000A                     	;# 
  1217  000B                     	;# 
  1218  000C                     	;# 
  1219  000D                     	;# 
  1220  000E                     	;# 
  1221  0010                     	;# 
  1222  0011                     	;# 
  1223  0012                     	;# 
  1224  0013                     	;# 
  1225  0014                     	;# 
  1226  0015                     	;# 
  1227  0016                     	;# 
  1228  0017                     	;# 
  1229  0018                     	;# 
  1230  0018                     	;# 
  1231  0019                     	;# 
  1232  001A                     	;# 
  1233  001B                     	;# 
  1234  001C                     	;# 
  1235  001C                     	;# 
  1236  001D                     	;# 
  1237  001E                     	;# 
  1238  001F                     	;# 
  1239  008C                     	;# 
  1240  008D                     	;# 
  1241  008E                     	;# 
  1242  0090                     	;# 
  1243  0091                     	;# 
  1244  0092                     	;# 
  1245  0093                     	;# 
  1246  0094                     	;# 
  1247  0095                     	;# 
  1248  0096                     	;# 
  1249  0097                     	;# 
  1250  0098                     	;# 
  1251  0099                     	;# 
  1252  009A                     	;# 
  1253  009B                     	;# 
  1254  009C                     	;# 
  1255  009D                     	;# 
  1256  009E                     	;# 
  1257  009F                     	;# 
  1258  010C                     	;# 
  1259  010D                     	;# 
  1260  010E                     	;# 
  1261  0111                     	;# 
  1262  0112                     	;# 
  1263  0113                     	;# 
  1264  0114                     	;# 
  1265  0115                     	;# 
  1266  0116                     	;# 
  1267  0117                     	;# 
  1268  0118                     	;# 
  1269  0119                     	;# 
  1270  011A                     	;# 
  1271  011B                     	;# 
  1272  011C                     	;# 
  1273  011D                     	;# 
  1274  018C                     	;# 
  1275  018D                     	;# 
  1276  018E                     	;# 
  1277  0191                     	;# 
  1278  0191                     	;# 
  1279  0192                     	;# 
  1280  0193                     	;# 
  1281  0193                     	;# 
  1282  0194                     	;# 
  1283  0195                     	;# 
  1284  0196                     	;# 
  1285  0197                     	;# 
  1286  0199                     	;# 
  1287  0199                     	;# 
  1288  0199                     	;# 
  1289  019A                     	;# 
  1290  019A                     	;# 
  1291  019A                     	;# 
  1292  019B                     	;# 
  1293  019B                     	;# 
  1294  019B                     	;# 
  1295  019B                     	;# 
  1296  019B                     	;# 
  1297  019C                     	;# 
  1298  019C                     	;# 
  1299  019C                     	;# 
  1300  019D                     	;# 
  1301  019D                     	;# 
  1302  019D                     	;# 
  1303  019E                     	;# 
  1304  019E                     	;# 
  1305  019E                     	;# 
  1306  019F                     	;# 
  1307  019F                     	;# 
  1308  019F                     	;# 
  1309  019F                     	;# 
  1310  019F                     	;# 
  1311  020C                     	;# 
  1312  020D                     	;# 
  1313  020E                     	;# 
  1314  0210                     	;# 
  1315  0211                     	;# 
  1316  0211                     	;# 
  1317  0212                     	;# 
  1318  0212                     	;# 
  1319  0213                     	;# 
  1320  0213                     	;# 
  1321  0214                     	;# 
  1322  0214                     	;# 
  1323  0215                     	;# 
  1324  0215                     	;# 
  1325  0215                     	;# 
  1326  0215                     	;# 
  1327  0216                     	;# 
  1328  0216                     	;# 
  1329  0217                     	;# 
  1330  0217                     	;# 
  1331  021B                     	;# 
  1332  021C                     	;# 
  1333  021D                     	;# 
  1334  021E                     	;# 
  1335  021F                     	;# 
  1336  028C                     	;# 
  1337  028D                     	;# 
  1338  028E                     	;# 
  1339  0291                     	;# 
  1340  0291                     	;# 
  1341  0292                     	;# 
  1342  0293                     	;# 
  1343  0294                     	;# 
  1344  0295                     	;# 
  1345  0295                     	;# 
  1346  0296                     	;# 
  1347  0297                     	;# 
  1348  0298                     	;# 
  1349  0299                     	;# 
  1350  0299                     	;# 
  1351  029A                     	;# 
  1352  029B                     	;# 
  1353  029C                     	;# 
  1354  029E                     	;# 
  1355  029F                     	;# 
  1356  030C                     	;# 
  1357  030D                     	;# 
  1358  030E                     	;# 
  1359  0315                     	;# 
  1360  0316                     	;# 
  1361  0317                     	;# 
  1362  0318                     	;# 
  1363  0319                     	;# 
  1364  031B                     	;# 
  1365  031C                     	;# 
  1366  031D                     	;# 
  1367  031E                     	;# 
  1368  031F                     	;# 
  1369  038C                     	;# 
  1370  038D                     	;# 
  1371  038E                     	;# 
  1372  0390                     	;# 
  1373  0391                     	;# 
  1374  0392                     	;# 
  1375  0393                     	;# 
  1376  0394                     	;# 
  1377  0395                     	;# 
  1378  0396                     	;# 
  1379  0397                     	;# 
  1380  0398                     	;# 
  1381  0399                     	;# 
  1382  039D                     	;# 
  1383  039E                     	;# 
  1384  039F                     	;# 
  1385  040D                     	;# 
  1386  040F                     	;# 
  1387  040F                     	;# 
  1388  0410                     	;# 
  1389  0411                     	;# 
  1390  0412                     	;# 
  1391  0413                     	;# 
  1392  0413                     	;# 
  1393  0414                     	;# 
  1394  0414                     	;# 
  1395  0415                     	;# 
  1396  0416                     	;# 
  1397  0417                     	;# 
  1398  0418                     	;# 
  1399  041A                     	;# 
  1400  041A                     	;# 
  1401  041B                     	;# 
  1402  041B                     	;# 
  1403  041C                     	;# 
  1404  041D                     	;# 
  1405  041E                     	;# 
  1406  041F                     	;# 
  1407  048E                     	;# 
  1408  048E                     	;# 
  1409  048F                     	;# 
  1410  0490                     	;# 
  1411  0491                     	;# 
  1412  0492                     	;# 
  1413  0493                     	;# 
  1414  0493                     	;# 
  1415  0494                     	;# 
  1416  0494                     	;# 
  1417  0495                     	;# 
  1418  0496                     	;# 
  1419  0497                     	;# 
  1420  0498                     	;# 
  1421  049A                     	;# 
  1422  049A                     	;# 
  1423  049B                     	;# 
  1424  049B                     	;# 
  1425  049C                     	;# 
  1426  049D                     	;# 
  1427  049E                     	;# 
  1428  049F                     	;# 
  1429  050F                     	;# 
  1430  0510                     	;# 
  1431  0511                     	;# 
  1432  0512                     	;# 
  1433  0513                     	;# 
  1434  0514                     	;# 
  1435  0515                     	;# 
  1436  0516                     	;# 
  1437  0517                     	;# 
  1438  0518                     	;# 
  1439  0519                     	;# 
  1440  051A                     	;# 
  1441  058D                     	;# 
  1442  058E                     	;# 
  1443  058F                     	;# 
  1444  058F                     	;# 
  1445  058F                     	;# 
  1446  0590                     	;# 
  1447  0590                     	;# 
  1448  0591                     	;# 
  1449  0592                     	;# 
  1450  0592                     	;# 
  1451  0592                     	;# 
  1452  0593                     	;# 
  1453  0593                     	;# 
  1454  0594                     	;# 
  1455  0595                     	;# 
  1456  0595                     	;# 
  1457  0596                     	;# 
  1458  0597                     	;# 
  1459  0597                     	;# 
  1460  0598                     	;# 
  1461  0599                     	;# 
  1462  0599                     	;# 
  1463  0599                     	;# 
  1464  059A                     	;# 
  1465  059A                     	;# 
  1466  059E                     	;# 
  1467  059F                     	;# 
  1468  059F                     	;# 
  1469  0614                     	;# 
  1470  0614                     	;# 
  1471  0615                     	;# 
  1472  0616                     	;# 
  1473  0617                     	;# 
  1474  0617                     	;# 
  1475  0618                     	;# 
  1476  0619                     	;# 
  1477  061A                     	;# 
  1478  061A                     	;# 
  1479  061B                     	;# 
  1480  061C                     	;# 
  1481  068D                     	;# 
  1482  068E                     	;# 
  1483  068F                     	;# 
  1484  0690                     	;# 
  1485  0691                     	;# 
  1486  0692                     	;# 
  1487  0693                     	;# 
  1488  0694                     	;# 
  1489  0695                     	;# 
  1490  0696                     	;# 
  1491  0697                     	;# 
  1492  0698                     	;# 
  1493  0699                     	;# 
  1494  069A                     	;# 
  1495  069B                     	;# 
  1496  069C                     	;# 
  1497  069D                     	;# 
  1498  069E                     	;# 
  1499  069F                     	;# 
  1500  070D                     	;# 
  1501  070E                     	;# 
  1502  070F                     	;# 
  1503  0710                     	;# 
  1504  0711                     	;# 
  1505  0712                     	;# 
  1506  0713                     	;# 
  1507  0714                     	;# 
  1508  0715                     	;# 
  1509  0716                     	;# 
  1510  0717                     	;# 
  1511  0718                     	;# 
  1512  0719                     	;# 
  1513  071A                     	;# 
  1514  071B                     	;# 
  1515  071C                     	;# 
  1516  071D                     	;# 
  1517  071E                     	;# 
  1518  071F                     	;# 
  1519  078E                     	;# 
  1520  078F                     	;# 
  1521  0790                     	;# 
  1522  0791                     	;# 
  1523  0792                     	;# 
  1524  0793                     	;# 
  1525  0794                     	;# 
  1526  0795                     	;# 
  1527  0796                     	;# 
  1528  0797                     	;# 
  1529  0798                     	;# 
  1530  0799                     	;# 
  1531  079A                     	;# 
  1532  079B                     	;# 
  1533  079C                     	;# 
  1534  079D                     	;# 
  1535  079E                     	;# 
  1536  079F                     	;# 
  1537  080D                     	;# 
  1538  080E                     	;# 
  1539  080F                     	;# 
  1540  0810                     	;# 
  1541  0811                     	;# 
  1542  0812                     	;# 
  1543  0813                     	;# 
  1544  0814                     	;# 
  1545  0815                     	;# 
  1546  0816                     	;# 
  1547  0817                     	;# 
  1548  0818                     	;# 
  1549  0819                     	;# 
  1550  081A                     	;# 
  1551  081B                     	;# 
  1552  081C                     	;# 
  1553  081D                     	;# 
  1554  081E                     	;# 
  1555  081F                     	;# 
  1556  090C                     	;# 
  1557  090D                     	;# 
  1558  090E                     	;# 
  1559  090F                     	;# 
  1560  0910                     	;# 
  1561  0911                     	;# 
  1562  0912                     	;# 
  1563  0913                     	;# 
  1564  0914                     	;# 
  1565  0915                     	;# 
  1566  0916                     	;# 
  1567  0917                     	;# 
  1568  0D8E                     	;# 
  1569  0D8F                     	;# 
  1570  0D90                     	;# 
  1571  0D91                     	;# 
  1572  0D91                     	;# 
  1573  0D92                     	;# 
  1574  0D93                     	;# 
  1575  0D93                     	;# 
  1576  0D94                     	;# 
  1577  0D95                     	;# 
  1578  0D95                     	;# 
  1579  0D96                     	;# 
  1580  0D97                     	;# 
  1581  0D97                     	;# 
  1582  0D98                     	;# 
  1583  0D99                     	;# 
  1584  0D99                     	;# 
  1585  0D9A                     	;# 
  1586  0D9B                     	;# 
  1587  0D9C                     	;# 
  1588  0D9C                     	;# 
  1589  0D9D                     	;# 
  1590  0D9D                     	;# 
  1591  0D9E                     	;# 
  1592  0D9F                     	;# 
  1593  0DA0                     	;# 
  1594  0DA1                     	;# 
  1595  0DA1                     	;# 
  1596  0DA2                     	;# 
  1597  0DA3                     	;# 
  1598  0DA3                     	;# 
  1599  0DA4                     	;# 
  1600  0DA5                     	;# 
  1601  0DA5                     	;# 
  1602  0DA6                     	;# 
  1603  0DA7                     	;# 
  1604  0DA7                     	;# 
  1605  0DA8                     	;# 
  1606  0DA9                     	;# 
  1607  0DA9                     	;# 
  1608  0DAA                     	;# 
  1609  0DAB                     	;# 
  1610  0DAC                     	;# 
  1611  0DAC                     	;# 
  1612  0DAD                     	;# 
  1613  0DAD                     	;# 
  1614  0DAE                     	;# 
  1615  0DAF                     	;# 
  1616  0DB0                     	;# 
  1617  0DB1                     	;# 
  1618  0DB1                     	;# 
  1619  0DB2                     	;# 
  1620  0DB3                     	;# 
  1621  0DB3                     	;# 
  1622  0DB4                     	;# 
  1623  0DB5                     	;# 
  1624  0DB5                     	;# 
  1625  0DB6                     	;# 
  1626  0DB7                     	;# 
  1627  0DB7                     	;# 
  1628  0DB8                     	;# 
  1629  0DB9                     	;# 
  1630  0DB9                     	;# 
  1631  0DBA                     	;# 
  1632  0DBB                     	;# 
  1633  0DBC                     	;# 
  1634  0DBC                     	;# 
  1635  0DBD                     	;# 
  1636  0DBD                     	;# 
  1637  0DBE                     	;# 
  1638  0DBF                     	;# 
  1639  0DC0                     	;# 
  1640  0E0C                     	;# 
  1641  0E0D                     	;# 
  1642  0E0E                     	;# 
  1643  0E0F                     	;# 
  1644  0E10                     	;# 
  1645  0E11                     	;# 
  1646  0E12                     	;# 
  1647  0E13                     	;# 
  1648  0E14                     	;# 
  1649  0E15                     	;# 
  1650  0E15                     	;# 
  1651  0E15                     	;# 
  1652  0E16                     	;# 
  1653  0E16                     	;# 
  1654  0E16                     	;# 
  1655  0E17                     	;# 
  1656  0E17                     	;# 
  1657  0E17                     	;# 
  1658  0E18                     	;# 
  1659  0E18                     	;# 
  1660  0E18                     	;# 
  1661  0E19                     	;# 
  1662  0E1A                     	;# 
  1663  0E1B                     	;# 
  1664  0E1D                     	;# 
  1665  0E1E                     	;# 
  1666  0E1F                     	;# 
  1667  0E21                     	;# 
  1668  0E22                     	;# 
  1669  0E23                     	;# 
  1670  0E24                     	;# 
  1671  0E25                     	;# 
  1672  0E26                     	;# 
  1673  0E27                     	;# 
  1674  0E28                     	;# 
  1675  0E29                     	;# 
  1676  0E2D                     	;# 
  1677  0E2E                     	;# 
  1678  0E2F                     	;# 
  1679  0E30                     	;# 
  1680  0E31                     	;# 
  1681  0E32                     	;# 
  1682  0E35                     	;# 
  1683  0E36                     	;# 
  1684  0E37                     	;# 
  1685  0E38                     	;# 
  1686  0E39                     	;# 
  1687  0E3A                     	;# 
  1688  0E3B                     	;# 
  1689  0E3C                     	;# 
  1690  0E3D                     	;# 
  1691  0E3E                     	;# 
  1692  0E90                     	;# 
  1693  0E91                     	;# 
  1694  0E92                     	;# 
  1695  0E93                     	;# 
  1696  0E94                     	;# 
  1697  0E95                     	;# 
  1698  0E96                     	;# 
  1699  0E97                     	;# 
  1700  0E98                     	;# 
  1701  0E99                     	;# 
  1702  0E9A                     	;# 
  1703  0E9B                     	;# 
  1704  0E9C                     	;# 
  1705  0E9D                     	;# 
  1706  0E9E                     	;# 
  1707  0E9F                     	;# 
  1708  0EA0                     	;# 
  1709  0EA1                     	;# 
  1710  0EA2                     	;# 
  1711  0EA3                     	;# 
  1712  0EA4                     	;# 
  1713  0EA5                     	;# 
  1714  0EA6                     	;# 
  1715  0EA7                     	;# 
  1716  0F0F                     	;# 
  1717  0F10                     	;# 
  1718  0F11                     	;# 
  1719  0F12                     	;# 
  1720  0F13                     	;# 
  1721  0F14                     	;# 
  1722  0F15                     	;# 
  1723  0F16                     	;# 
  1724  0F17                     	;# 
  1725  0F18                     	;# 
  1726  0F19                     	;# 
  1727  0F1A                     	;# 
  1728  0F1B                     	;# 
  1729  0F1C                     	;# 
  1730  0F1D                     	;# 
  1731  0F1E                     	;# 
  1732  0F1F                     	;# 
  1733  0F20                     	;# 
  1734  0F21                     	;# 
  1735  0F22                     	;# 
  1736  0F23                     	;# 
  1737  0F24                     	;# 
  1738  0F25                     	;# 
  1739  0F26                     	;# 
  1740  0F27                     	;# 
  1741  0F28                     	;# 
  1742  0F29                     	;# 
  1743  0F2A                     	;# 
  1744  0F2B                     	;# 
  1745  0F2C                     	;# 
  1746  0F2D                     	;# 
  1747  0F2E                     	;# 
  1748  0F2F                     	;# 
  1749  0F30                     	;# 
  1750  0F31                     	;# 
  1751  0F32                     	;# 
  1752  0F33                     	;# 
  1753  0F34                     	;# 
  1754  0F35                     	;# 
  1755  0F36                     	;# 
  1756  0F37                     	;# 
  1757  0FE4                     	;# 
  1758  0FE5                     	;# 
  1759  0FE6                     	;# 
  1760  0FE7                     	;# 
  1761  0FE8                     	;# 
  1762  0FE9                     	;# 
  1763  0FEA                     	;# 
  1764  0FEB                     	;# 
  1765  0FED                     	;# 
  1766  0FEE                     	;# 
  1767  0FEF                     	;# 
  1768  0000                     	;# 
  1769  0001                     	;# 
  1770  0002                     	;# 
  1771  0003                     	;# 
  1772  0004                     	;# 
  1773  0005                     	;# 
  1774  0006                     	;# 
  1775  0007                     	;# 
  1776  0008                     	;# 
  1777  0009                     	;# 
  1778  000A                     	;# 
  1779  000B                     	;# 
  1780  000C                     	;# 
  1781  000D                     	;# 
  1782  000E                     	;# 
  1783  0010                     	;# 
  1784  0011                     	;# 
  1785  0012                     	;# 
  1786  0013                     	;# 
  1787  0014                     	;# 
  1788  0015                     	;# 
  1789  0016                     	;# 
  1790  0017                     	;# 
  1791  0018                     	;# 
  1792  0018                     	;# 
  1793  0019                     	;# 
  1794  001A                     	;# 
  1795  001B                     	;# 
  1796  001C                     	;# 
  1797  001C                     	;# 
  1798  001D                     	;# 
  1799  001E                     	;# 
  1800  001F                     	;# 
  1801  008C                     	;# 
  1802  008D                     	;# 
  1803  008E                     	;# 
  1804  0090                     	;# 
  1805  0091                     	;# 
  1806  0092                     	;# 
  1807  0093                     	;# 
  1808  0094                     	;# 
  1809  0095                     	;# 
  1810  0096                     	;# 
  1811  0097                     	;# 
  1812  0098                     	;# 
  1813  0099                     	;# 
  1814  009A                     	;# 
  1815  009B                     	;# 
  1816  009C                     	;# 
  1817  009D                     	;# 
  1818  009E                     	;# 
  1819  009F                     	;# 
  1820  010C                     	;# 
  1821  010D                     	;# 
  1822  010E                     	;# 
  1823  0111                     	;# 
  1824  0112                     	;# 
  1825  0113                     	;# 
  1826  0114                     	;# 
  1827  0115                     	;# 
  1828  0116                     	;# 
  1829  0117                     	;# 
  1830  0118                     	;# 
  1831  0119                     	;# 
  1832  011A                     	;# 
  1833  011B                     	;# 
  1834  011C                     	;# 
  1835  011D                     	;# 
  1836  018C                     	;# 
  1837  018D                     	;# 
  1838  018E                     	;# 
  1839  0191                     	;# 
  1840  0191                     	;# 
  1841  0192                     	;# 
  1842  0193                     	;# 
  1843  0193                     	;# 
  1844  0194                     	;# 
  1845  0195                     	;# 
  1846  0196                     	;# 
  1847  0197                     	;# 
  1848  0199                     	;# 
  1849  0199                     	;# 
  1850  0199                     	;# 
  1851  019A                     	;# 
  1852  019A                     	;# 
  1853  019A                     	;# 
  1854  019B                     	;# 
  1855  019B                     	;# 
  1856  019B                     	;# 
  1857  019B                     	;# 
  1858  019B                     	;# 
  1859  019C                     	;# 
  1860  019C                     	;# 
  1861  019C                     	;# 
  1862  019D                     	;# 
  1863  019D                     	;# 
  1864  019D                     	;# 
  1865  019E                     	;# 
  1866  019E                     	;# 
  1867  019E                     	;# 
  1868  019F                     	;# 
  1869  019F                     	;# 
  1870  019F                     	;# 
  1871  019F                     	;# 
  1872  019F                     	;# 
  1873  020C                     	;# 
  1874  020D                     	;# 
  1875  020E                     	;# 
  1876  0210                     	;# 
  1877  0211                     	;# 
  1878  0211                     	;# 
  1879  0212                     	;# 
  1880  0212                     	;# 
  1881  0213                     	;# 
  1882  0213                     	;# 
  1883  0214                     	;# 
  1884  0214                     	;# 
  1885  0215                     	;# 
  1886  0215                     	;# 
  1887  0215                     	;# 
  1888  0215                     	;# 
  1889  0216                     	;# 
  1890  0216                     	;# 
  1891  0217                     	;# 
  1892  0217                     	;# 
  1893  021B                     	;# 
  1894  021C                     	;# 
  1895  021D                     	;# 
  1896  021E                     	;# 
  1897  021F                     	;# 
  1898  028C                     	;# 
  1899  028D                     	;# 
  1900  028E                     	;# 
  1901  0291                     	;# 
  1902  0291                     	;# 
  1903  0292                     	;# 
  1904  0293                     	;# 
  1905  0294                     	;# 
  1906  0295                     	;# 
  1907  0295                     	;# 
  1908  0296                     	;# 
  1909  0297                     	;# 
  1910  0298                     	;# 
  1911  0299                     	;# 
  1912  0299                     	;# 
  1913  029A                     	;# 
  1914  029B                     	;# 
  1915  029C                     	;# 
  1916  029E                     	;# 
  1917  029F                     	;# 
  1918  030C                     	;# 
  1919  030D                     	;# 
  1920  030E                     	;# 
  1921  0315                     	;# 
  1922  0316                     	;# 
  1923  0317                     	;# 
  1924  0318                     	;# 
  1925  0319                     	;# 
  1926  031B                     	;# 
  1927  031C                     	;# 
  1928  031D                     	;# 
  1929  031E                     	;# 
  1930  031F                     	;# 
  1931  038C                     	;# 
  1932  038D                     	;# 
  1933  038E                     	;# 
  1934  0390                     	;# 
  1935  0391                     	;# 
  1936  0392                     	;# 
  1937  0393                     	;# 
  1938  0394                     	;# 
  1939  0395                     	;# 
  1940  0396                     	;# 
  1941  0397                     	;# 
  1942  0398                     	;# 
  1943  0399                     	;# 
  1944  039D                     	;# 
  1945  039E                     	;# 
  1946  039F                     	;# 
  1947  040D                     	;# 
  1948  040F                     	;# 
  1949  040F                     	;# 
  1950  0410                     	;# 
  1951  0411                     	;# 
  1952  0412                     	;# 
  1953  0413                     	;# 
  1954  0413                     	;# 
  1955  0414                     	;# 
  1956  0414                     	;# 
  1957  0415                     	;# 
  1958  0416                     	;# 
  1959  0417                     	;# 
  1960  0418                     	;# 
  1961  041A                     	;# 
  1962  041A                     	;# 
  1963  041B                     	;# 
  1964  041B                     	;# 
  1965  041C                     	;# 
  1966  041D                     	;# 
  1967  041E                     	;# 
  1968  041F                     	;# 
  1969  048E                     	;# 
  1970  048E                     	;# 
  1971  048F                     	;# 
  1972  0490                     	;# 
  1973  0491                     	;# 
  1974  0492                     	;# 
  1975  0493                     	;# 
  1976  0493                     	;# 
  1977  0494                     	;# 
  1978  0494                     	;# 
  1979  0495                     	;# 
  1980  0496                     	;# 
  1981  0497                     	;# 
  1982  0498                     	;# 
  1983  049A                     	;# 
  1984  049A                     	;# 
  1985  049B                     	;# 
  1986  049B                     	;# 
  1987  049C                     	;# 
  1988  049D                     	;# 
  1989  049E                     	;# 
  1990  049F                     	;# 
  1991  050F                     	;# 
  1992  0510                     	;# 
  1993  0511                     	;# 
  1994  0512                     	;# 
  1995  0513                     	;# 
  1996  0514                     	;# 
  1997  0515                     	;# 
  1998  0516                     	;# 
  1999  0517                     	;# 
  2000  0518                     	;# 
  2001  0519                     	;# 
  2002  051A                     	;# 
  2003  058D                     	;# 
  2004  058E                     	;# 
  2005  058F                     	;# 
  2006  058F                     	;# 
  2007  058F                     	;# 
  2008  0590                     	;# 
  2009  0590                     	;# 
  2010  0591                     	;# 
  2011  0592                     	;# 
  2012  0592                     	;# 
  2013  0592                     	;# 
  2014  0593                     	;# 
  2015  0593                     	;# 
  2016  0594                     	;# 
  2017  0595                     	;# 
  2018  0595                     	;# 
  2019  0596                     	;# 
  2020  0597                     	;# 
  2021  0597                     	;# 
  2022  0598                     	;# 
  2023  0599                     	;# 
  2024  0599                     	;# 
  2025  0599                     	;# 
  2026  059A                     	;# 
  2027  059A                     	;# 
  2028  059E                     	;# 
  2029  059F                     	;# 
  2030  059F                     	;# 
  2031  0614                     	;# 
  2032  0614                     	;# 
  2033  0615                     	;# 
  2034  0616                     	;# 
  2035  0617                     	;# 
  2036  0617                     	;# 
  2037  0618                     	;# 
  2038  0619                     	;# 
  2039  061A                     	;# 
  2040  061A                     	;# 
  2041  061B                     	;# 
  2042  061C                     	;# 
  2043  068D                     	;# 
  2044  068E                     	;# 
  2045  068F                     	;# 
  2046  0690                     	;# 
  2047  0691                     	;# 
  2048  0692                     	;# 
  2049  0693                     	;# 
  2050  0694                     	;# 
  2051  0695                     	;# 
  2052  0696                     	;# 
  2053  0697                     	;# 
  2054  0698                     	;# 
  2055  0699                     	;# 
  2056  069A                     	;# 
  2057  069B                     	;# 
  2058  069C                     	;# 
  2059  069D                     	;# 
  2060  069E                     	;# 
  2061  069F                     	;# 
  2062  070D                     	;# 
  2063  070E                     	;# 
  2064  070F                     	;# 
  2065  0710                     	;# 
  2066  0711                     	;# 
  2067  0712                     	;# 
  2068  0713                     	;# 
  2069  0714                     	;# 
  2070  0715                     	;# 
  2071  0716                     	;# 
  2072  0717                     	;# 
  2073  0718                     	;# 
  2074  0719                     	;# 
  2075  071A                     	;# 
  2076  071B                     	;# 
  2077  071C                     	;# 
  2078  071D                     	;# 
  2079  071E                     	;# 
  2080  071F                     	;# 
  2081  078E                     	;# 
  2082  078F                     	;# 
  2083  0790                     	;# 
  2084  0791                     	;# 
  2085  0792                     	;# 
  2086  0793                     	;# 
  2087  0794                     	;# 
  2088  0795                     	;# 
  2089  0796                     	;# 
  2090  0797                     	;# 
  2091  0798                     	;# 
  2092  0799                     	;# 
  2093  079A                     	;# 
  2094  079B                     	;# 
  2095  079C                     	;# 
  2096  079D                     	;# 
  2097  079E                     	;# 
  2098  079F                     	;# 
  2099  080D                     	;# 
  2100  080E                     	;# 
  2101  080F                     	;# 
  2102  0810                     	;# 
  2103  0811                     	;# 
  2104  0812                     	;# 
  2105  0813                     	;# 
  2106  0814                     	;# 
  2107  0815                     	;# 
  2108  0816                     	;# 
  2109  0817                     	;# 
  2110  0818                     	;# 
  2111  0819                     	;# 
  2112  081A                     	;# 
  2113  081B                     	;# 
  2114  081C                     	;# 
  2115  081D                     	;# 
  2116  081E                     	;# 
  2117  081F                     	;# 
  2118  090C                     	;# 
  2119  090D                     	;# 
  2120  090E                     	;# 
  2121  090F                     	;# 
  2122  0910                     	;# 
  2123  0911                     	;# 
  2124  0912                     	;# 
  2125  0913                     	;# 
  2126  0914                     	;# 
  2127  0915                     	;# 
  2128  0916                     	;# 
  2129  0917                     	;# 
  2130  0D8E                     	;# 
  2131  0D8F                     	;# 
  2132  0D90                     	;# 
  2133  0D91                     	;# 
  2134  0D91                     	;# 
  2135  0D92                     	;# 
  2136  0D93                     	;# 
  2137  0D93                     	;# 
  2138  0D94                     	;# 
  2139  0D95                     	;# 
  2140  0D95                     	;# 
  2141  0D96                     	;# 
  2142  0D97                     	;# 
  2143  0D97                     	;# 
  2144  0D98                     	;# 
  2145  0D99                     	;# 
  2146  0D99                     	;# 
  2147  0D9A                     	;# 
  2148  0D9B                     	;# 
  2149  0D9C                     	;# 
  2150  0D9C                     	;# 
  2151  0D9D                     	;# 
  2152  0D9D                     	;# 
  2153  0D9E                     	;# 
  2154  0D9F                     	;# 
  2155  0DA0                     	;# 
  2156  0DA1                     	;# 
  2157  0DA1                     	;# 
  2158  0DA2                     	;# 
  2159  0DA3                     	;# 
  2160  0DA3                     	;# 
  2161  0DA4                     	;# 
  2162  0DA5                     	;# 
  2163  0DA5                     	;# 
  2164  0DA6                     	;# 
  2165  0DA7                     	;# 
  2166  0DA7                     	;# 
  2167  0DA8                     	;# 
  2168  0DA9                     	;# 
  2169  0DA9                     	;# 
  2170  0DAA                     	;# 
  2171  0DAB                     	;# 
  2172  0DAC                     	;# 
  2173  0DAC                     	;# 
  2174  0DAD                     	;# 
  2175  0DAD                     	;# 
  2176  0DAE                     	;# 
  2177  0DAF                     	;# 
  2178  0DB0                     	;# 
  2179  0DB1                     	;# 
  2180  0DB1                     	;# 
  2181  0DB2                     	;# 
  2182  0DB3                     	;# 
  2183  0DB3                     	;# 
  2184  0DB4                     	;# 
  2185  0DB5                     	;# 
  2186  0DB5                     	;# 
  2187  0DB6                     	;# 
  2188  0DB7                     	;# 
  2189  0DB7                     	;# 
  2190  0DB8                     	;# 
  2191  0DB9                     	;# 
  2192  0DB9                     	;# 
  2193  0DBA                     	;# 
  2194  0DBB                     	;# 
  2195  0DBC                     	;# 
  2196  0DBC                     	;# 
  2197  0DBD                     	;# 
  2198  0DBD                     	;# 
  2199  0DBE                     	;# 
  2200  0DBF                     	;# 
  2201  0DC0                     	;# 
  2202  0E0C                     	;# 
  2203  0E0D                     	;# 
  2204  0E0E                     	;# 
  2205  0E0F                     	;# 
  2206  0E10                     	;# 
  2207  0E11                     	;# 
  2208  0E12                     	;# 
  2209  0E13                     	;# 
  2210  0E14                     	;# 
  2211  0E15                     	;# 
  2212  0E15                     	;# 
  2213  0E15                     	;# 
  2214  0E16                     	;# 
  2215  0E16                     	;# 
  2216  0E16                     	;# 
  2217  0E17                     	;# 
  2218  0E17                     	;# 
  2219  0E17                     	;# 
  2220  0E18                     	;# 
  2221  0E18                     	;# 
  2222  0E18                     	;# 
  2223  0E19                     	;# 
  2224  0E1A                     	;# 
  2225  0E1B                     	;# 
  2226  0E1D                     	;# 
  2227  0E1E                     	;# 
  2228  0E1F                     	;# 
  2229  0E21                     	;# 
  2230  0E22                     	;# 
  2231  0E23                     	;# 
  2232  0E24                     	;# 
  2233  0E25                     	;# 
  2234  0E26                     	;# 
  2235  0E27                     	;# 
  2236  0E28                     	;# 
  2237  0E29                     	;# 
  2238  0E2D                     	;# 
  2239  0E2E                     	;# 
  2240  0E2F                     	;# 
  2241  0E30                     	;# 
  2242  0E31                     	;# 
  2243  0E32                     	;# 
  2244  0E35                     	;# 
  2245  0E36                     	;# 
  2246  0E37                     	;# 
  2247  0E38                     	;# 
  2248  0E39                     	;# 
  2249  0E3A                     	;# 
  2250  0E3B                     	;# 
  2251  0E3C                     	;# 
  2252  0E3D                     	;# 
  2253  0E3E                     	;# 
  2254  0E90                     	;# 
  2255  0E91                     	;# 
  2256  0E92                     	;# 
  2257  0E93                     	;# 
  2258  0E94                     	;# 
  2259  0E95                     	;# 
  2260  0E96                     	;# 
  2261  0E97                     	;# 
  2262  0E98                     	;# 
  2263  0E99                     	;# 
  2264  0E9A                     	;# 
  2265  0E9B                     	;# 
  2266  0E9C                     	;# 
  2267  0E9D                     	;# 
  2268  0E9E                     	;# 
  2269  0E9F                     	;# 
  2270  0EA0                     	;# 
  2271  0EA1                     	;# 
  2272  0EA2                     	;# 
  2273  0EA3                     	;# 
  2274  0EA4                     	;# 
  2275  0EA5                     	;# 
  2276  0EA6                     	;# 
  2277  0EA7                     	;# 
  2278  0F0F                     	;# 
  2279  0F10                     	;# 
  2280  0F11                     	;# 
  2281  0F12                     	;# 
  2282  0F13                     	;# 
  2283  0F14                     	;# 
  2284  0F15                     	;# 
  2285  0F16                     	;# 
  2286  0F17                     	;# 
  2287  0F18                     	;# 
  2288  0F19                     	;# 
  2289  0F1A                     	;# 
  2290  0F1B                     	;# 
  2291  0F1C                     	;# 
  2292  0F1D                     	;# 
  2293  0F1E                     	;# 
  2294  0F1F                     	;# 
  2295  0F20                     	;# 
  2296  0F21                     	;# 
  2297  0F22                     	;# 
  2298  0F23                     	;# 
  2299  0F24                     	;# 
  2300  0F25                     	;# 
  2301  0F26                     	;# 
  2302  0F27                     	;# 
  2303  0F28                     	;# 
  2304  0F29                     	;# 
  2305  0F2A                     	;# 
  2306  0F2B                     	;# 
  2307  0F2C                     	;# 
  2308  0F2D                     	;# 
  2309  0F2E                     	;# 
  2310  0F2F                     	;# 
  2311  0F30                     	;# 
  2312  0F31                     	;# 
  2313  0F32                     	;# 
  2314  0F33                     	;# 
  2315  0F34                     	;# 
  2316  0F35                     	;# 
  2317  0F36                     	;# 
  2318  0F37                     	;# 
  2319  0FE4                     	;# 
  2320  0FE5                     	;# 
  2321  0FE6                     	;# 
  2322  0FE7                     	;# 
  2323  0FE8                     	;# 
  2324  0FE9                     	;# 
  2325  0FEA                     	;# 
  2326  0FEB                     	;# 
  2327  0FED                     	;# 
  2328  0FEE                     	;# 
  2329  0FEF                     	;# 
  2330  0000                     	;# 
  2331  0001                     	;# 
  2332  0002                     	;# 
  2333  0003                     	;# 
  2334  0004                     	;# 
  2335  0005                     	;# 
  2336  0006                     	;# 
  2337  0007                     	;# 
  2338  0008                     	;# 
  2339  0009                     	;# 
  2340  000A                     	;# 
  2341  000B                     	;# 
  2342  000C                     	;# 
  2343  000D                     	;# 
  2344  000E                     	;# 
  2345  0010                     	;# 
  2346  0011                     	;# 
  2347  0012                     	;# 
  2348  0013                     	;# 
  2349  0014                     	;# 
  2350  0015                     	;# 
  2351  0016                     	;# 
  2352  0017                     	;# 
  2353  0018                     	;# 
  2354  0018                     	;# 
  2355  0019                     	;# 
  2356  001A                     	;# 
  2357  001B                     	;# 
  2358  001C                     	;# 
  2359  001C                     	;# 
  2360  001D                     	;# 
  2361  001E                     	;# 
  2362  001F                     	;# 
  2363  008C                     	;# 
  2364  008D                     	;# 
  2365  008E                     	;# 
  2366  0090                     	;# 
  2367  0091                     	;# 
  2368  0092                     	;# 
  2369  0093                     	;# 
  2370  0094                     	;# 
  2371  0095                     	;# 
  2372  0096                     	;# 
  2373  0097                     	;# 
  2374  0098                     	;# 
  2375  0099                     	;# 
  2376  009A                     	;# 
  2377  009B                     	;# 
  2378  009C                     	;# 
  2379  009D                     	;# 
  2380  009E                     	;# 
  2381  009F                     	;# 
  2382  010C                     	;# 
  2383  010D                     	;# 
  2384  010E                     	;# 
  2385  0111                     	;# 
  2386  0112                     	;# 
  2387  0113                     	;# 
  2388  0114                     	;# 
  2389  0115                     	;# 
  2390  0116                     	;# 
  2391  0117                     	;# 
  2392  0118                     	;# 
  2393  0119                     	;# 
  2394  011A                     	;# 
  2395  011B                     	;# 
  2396  011C                     	;# 
  2397  011D                     	;# 
  2398  018C                     	;# 
  2399  018D                     	;# 
  2400  018E                     	;# 
  2401  0191                     	;# 
  2402  0191                     	;# 
  2403  0192                     	;# 
  2404  0193                     	;# 
  2405  0193                     	;# 
  2406  0194                     	;# 
  2407  0195                     	;# 
  2408  0196                     	;# 
  2409  0197                     	;# 
  2410  0199                     	;# 
  2411  0199                     	;# 
  2412  0199                     	;# 
  2413  019A                     	;# 
  2414  019A                     	;# 
  2415  019A                     	;# 
  2416  019B                     	;# 
  2417  019B                     	;# 
  2418  019B                     	;# 
  2419  019B                     	;# 
  2420  019B                     	;# 
  2421  019C                     	;# 
  2422  019C                     	;# 
  2423  019C                     	;# 
  2424  019D                     	;# 
  2425  019D                     	;# 
  2426  019D                     	;# 
  2427  019E                     	;# 
  2428  019E                     	;# 
  2429  019E                     	;# 
  2430  019F                     	;# 
  2431  019F                     	;# 
  2432  019F                     	;# 
  2433  019F                     	;# 
  2434  019F                     	;# 
  2435  020C                     	;# 
  2436  020D                     	;# 
  2437  020E                     	;# 
  2438  0210                     	;# 
  2439  0211                     	;# 
  2440  0211                     	;# 
  2441  0212                     	;# 
  2442  0212                     	;# 
  2443  0213                     	;# 
  2444  0213                     	;# 
  2445  0214                     	;# 
  2446  0214                     	;# 
  2447  0215                     	;# 
  2448  0215                     	;# 
  2449  0215                     	;# 
  2450  0215                     	;# 
  2451  0216                     	;# 
  2452  0216                     	;# 
  2453  0217                     	;# 
  2454  0217                     	;# 
  2455  021B                     	;# 
  2456  021C                     	;# 
  2457  021D                     	;# 
  2458  021E                     	;# 
  2459  021F                     	;# 
  2460  028C                     	;# 
  2461  028D                     	;# 
  2462  028E                     	;# 
  2463  0291                     	;# 
  2464  0291                     	;# 
  2465  0292                     	;# 
  2466  0293                     	;# 
  2467  0294                     	;# 
  2468  0295                     	;# 
  2469  0295                     	;# 
  2470  0296                     	;# 
  2471  0297                     	;# 
  2472  0298                     	;# 
  2473  0299                     	;# 
  2474  0299                     	;# 
  2475  029A                     	;# 
  2476  029B                     	;# 
  2477  029C                     	;# 
  2478  029E                     	;# 
  2479  029F                     	;# 
  2480  030C                     	;# 
  2481  030D                     	;# 
  2482  030E                     	;# 
  2483  0315                     	;# 
  2484  0316                     	;# 
  2485  0317                     	;# 
  2486  0318                     	;# 
  2487  0319                     	;# 
  2488  031B                     	;# 
  2489  031C                     	;# 
  2490  031D                     	;# 
  2491  031E                     	;# 
  2492  031F                     	;# 
  2493  038C                     	;# 
  2494  038D                     	;# 
  2495  038E                     	;# 
  2496  0390                     	;# 
  2497  0391                     	;# 
  2498  0392                     	;# 
  2499  0393                     	;# 
  2500  0394                     	;# 
  2501  0395                     	;# 
  2502  0396                     	;# 
  2503  0397                     	;# 
  2504  0398                     	;# 
  2505  0399                     	;# 
  2506  039D                     	;# 
  2507  039E                     	;# 
  2508  039F                     	;# 
  2509  040D                     	;# 
  2510  040F                     	;# 
  2511  040F                     	;# 
  2512  0410                     	;# 
  2513  0411                     	;# 
  2514  0412                     	;# 
  2515  0413                     	;# 
  2516  0413                     	;# 
  2517  0414                     	;# 
  2518  0414                     	;# 
  2519  0415                     	;# 
  2520  0416                     	;# 
  2521  0417                     	;# 
  2522  0418                     	;# 
  2523  041A                     	;# 
  2524  041A                     	;# 
  2525  041B                     	;# 
  2526  041B                     	;# 
  2527  041C                     	;# 
  2528  041D                     	;# 
  2529  041E                     	;# 
  2530  041F                     	;# 
  2531  048E                     	;# 
  2532  048E                     	;# 
  2533  048F                     	;# 
  2534  0490                     	;# 
  2535  0491                     	;# 
  2536  0492                     	;# 
  2537  0493                     	;# 
  2538  0493                     	;# 
  2539  0494                     	;# 
  2540  0494                     	;# 
  2541  0495                     	;# 
  2542  0496                     	;# 
  2543  0497                     	;# 
  2544  0498                     	;# 
  2545  049A                     	;# 
  2546  049A                     	;# 
  2547  049B                     	;# 
  2548  049B                     	;# 
  2549  049C                     	;# 
  2550  049D                     	;# 
  2551  049E                     	;# 
  2552  049F                     	;# 
  2553  050F                     	;# 
  2554  0510                     	;# 
  2555  0511                     	;# 
  2556  0512                     	;# 
  2557  0513                     	;# 
  2558  0514                     	;# 
  2559  0515                     	;# 
  2560  0516                     	;# 
  2561  0517                     	;# 
  2562  0518                     	;# 
  2563  0519                     	;# 
  2564  051A                     	;# 
  2565  058D                     	;# 
  2566  058E                     	;# 
  2567  058F                     	;# 
  2568  058F                     	;# 
  2569  058F                     	;# 
  2570  0590                     	;# 
  2571  0590                     	;# 
  2572  0591                     	;# 
  2573  0592                     	;# 
  2574  0592                     	;# 
  2575  0592                     	;# 
  2576  0593                     	;# 
  2577  0593                     	;# 
  2578  0594                     	;# 
  2579  0595                     	;# 
  2580  0595                     	;# 
  2581  0596                     	;# 
  2582  0597                     	;# 
  2583  0597                     	;# 
  2584  0598                     	;# 
  2585  0599                     	;# 
  2586  0599                     	;# 
  2587  0599                     	;# 
  2588  059A                     	;# 
  2589  059A                     	;# 
  2590  059E                     	;# 
  2591  059F                     	;# 
  2592  059F                     	;# 
  2593  0614                     	;# 
  2594  0614                     	;# 
  2595  0615                     	;# 
  2596  0616                     	;# 
  2597  0617                     	;# 
  2598  0617                     	;# 
  2599  0618                     	;# 
  2600  0619                     	;# 
  2601  061A                     	;# 
  2602  061A                     	;# 
  2603  061B                     	;# 
  2604  061C                     	;# 
  2605  068D                     	;# 
  2606  068E                     	;# 
  2607  068F                     	;# 
  2608  0690                     	;# 
  2609  0691                     	;# 
  2610  0692                     	;# 
  2611  0693                     	;# 
  2612  0694                     	;# 
  2613  0695                     	;# 
  2614  0696                     	;# 
  2615  0697                     	;# 
  2616  0698                     	;# 
  2617  0699                     	;# 
  2618  069A                     	;# 
  2619  069B                     	;# 
  2620  069C                     	;# 
  2621  069D                     	;# 
  2622  069E                     	;# 
  2623  069F                     	;# 
  2624  070D                     	;# 
  2625  070E                     	;# 
  2626  070F                     	;# 
  2627  0710                     	;# 
  2628  0711                     	;# 
  2629  0712                     	;# 
  2630  0713                     	;# 
  2631  0714                     	;# 
  2632  0715                     	;# 
  2633  0716                     	;# 
  2634  0717                     	;# 
  2635  0718                     	;# 
  2636  0719                     	;# 
  2637  071A                     	;# 
  2638  071B                     	;# 
  2639  071C                     	;# 
  2640  071D                     	;# 
  2641  071E                     	;# 
  2642  071F                     	;# 
  2643  078E                     	;# 
  2644  078F                     	;# 
  2645  0790                     	;# 
  2646  0791                     	;# 
  2647  0792                     	;# 
  2648  0793                     	;# 
  2649  0794                     	;# 
  2650  0795                     	;# 
  2651  0796                     	;# 
  2652  0797                     	;# 
  2653  0798                     	;# 
  2654  0799                     	;# 
  2655  079A                     	;# 
  2656  079B                     	;# 
  2657  079C                     	;# 
  2658  079D                     	;# 
  2659  079E                     	;# 
  2660  079F                     	;# 
  2661  080D                     	;# 
  2662  080E                     	;# 
  2663  080F                     	;# 
  2664  0810                     	;# 
  2665  0811                     	;# 
  2666  0812                     	;# 
  2667  0813                     	;# 
  2668  0814                     	;# 
  2669  0815                     	;# 
  2670  0816                     	;# 
  2671  0817                     	;# 
  2672  0818                     	;# 
  2673  0819                     	;# 
  2674  081A                     	;# 
  2675  081B                     	;# 
  2676  081C                     	;# 
  2677  081D                     	;# 
  2678  081E                     	;# 
  2679  081F                     	;# 
  2680  090C                     	;# 
  2681  090D                     	;# 
  2682  090E                     	;# 
  2683  090F                     	;# 
  2684  0910                     	;# 
  2685  0911                     	;# 
  2686  0912                     	;# 
  2687  0913                     	;# 
  2688  0914                     	;# 
  2689  0915                     	;# 
  2690  0916                     	;# 
  2691  0917                     	;# 
  2692  0D8E                     	;# 
  2693  0D8F                     	;# 
  2694  0D90                     	;# 
  2695  0D91                     	;# 
  2696  0D91                     	;# 
  2697  0D92                     	;# 
  2698  0D93                     	;# 
  2699  0D93                     	;# 
  2700  0D94                     	;# 
  2701  0D95                     	;# 
  2702  0D95                     	;# 
  2703  0D96                     	;# 
  2704  0D97                     	;# 
  2705  0D97                     	;# 
  2706  0D98                     	;# 
  2707  0D99                     	;# 
  2708  0D99                     	;# 
  2709  0D9A                     	;# 
  2710  0D9B                     	;# 
  2711  0D9C                     	;# 
  2712  0D9C                     	;# 
  2713  0D9D                     	;# 
  2714  0D9D                     	;# 
  2715  0D9E                     	;# 
  2716  0D9F                     	;# 
  2717  0DA0                     	;# 
  2718  0DA1                     	;# 
  2719  0DA1                     	;# 
  2720  0DA2                     	;# 
  2721  0DA3                     	;# 
  2722  0DA3                     	;# 
  2723  0DA4                     	;# 
  2724  0DA5                     	;# 
  2725  0DA5                     	;# 
  2726  0DA6                     	;# 
  2727  0DA7                     	;# 
  2728  0DA7                     	;# 
  2729  0DA8                     	;# 
  2730  0DA9                     	;# 
  2731  0DA9                     	;# 
  2732  0DAA                     	;# 
  2733  0DAB                     	;# 
  2734  0DAC                     	;# 
  2735  0DAC                     	;# 
  2736  0DAD                     	;# 
  2737  0DAD                     	;# 
  2738  0DAE                     	;# 
  2739  0DAF                     	;# 
  2740  0DB0                     	;# 
  2741  0DB1                     	;# 
  2742  0DB1                     	;# 
  2743  0DB2                     	;# 
  2744  0DB3                     	;# 
  2745  0DB3                     	;# 
  2746  0DB4                     	;# 
  2747  0DB5                     	;# 
  2748  0DB5                     	;# 
  2749  0DB6                     	;# 
  2750  0DB7                     	;# 
  2751  0DB7                     	;# 
  2752  0DB8                     	;# 
  2753  0DB9                     	;# 
  2754  0DB9                     	;# 
  2755  0DBA                     	;# 
  2756  0DBB                     	;# 
  2757  0DBC                     	;# 
  2758  0DBC                     	;# 
  2759  0DBD                     	;# 
  2760  0DBD                     	;# 
  2761  0DBE                     	;# 
  2762  0DBF                     	;# 
  2763  0DC0                     	;# 
  2764  0E0C                     	;# 
  2765  0E0D                     	;# 
  2766  0E0E                     	;# 
  2767  0E0F                     	;# 
  2768  0E10                     	;# 
  2769  0E11                     	;# 
  2770  0E12                     	;# 
  2771  0E13                     	;# 
  2772  0E14                     	;# 
  2773  0E15                     	;# 
  2774  0E15                     	;# 
  2775  0E15                     	;# 
  2776  0E16                     	;# 
  2777  0E16                     	;# 
  2778  0E16                     	;# 
  2779  0E17                     	;# 
  2780  0E17                     	;# 
  2781  0E17                     	;# 
  2782  0E18                     	;# 
  2783  0E18                     	;# 
  2784  0E18                     	;# 
  2785  0E19                     	;# 
  2786  0E1A                     	;# 
  2787  0E1B                     	;# 
  2788  0E1D                     	;# 
  2789  0E1E                     	;# 
  2790  0E1F                     	;# 
  2791  0E21                     	;# 
  2792  0E22                     	;# 
  2793  0E23                     	;# 
  2794  0E24                     	;# 
  2795  0E25                     	;# 
  2796  0E26                     	;# 
  2797  0E27                     	;# 
  2798  0E28                     	;# 
  2799  0E29                     	;# 
  2800  0E2D                     	;# 
  2801  0E2E                     	;# 
  2802  0E2F                     	;# 
  2803  0E30                     	;# 
  2804  0E31                     	;# 
  2805  0E32                     	;# 
  2806  0E35                     	;# 
  2807  0E36                     	;# 
  2808  0E37                     	;# 
  2809  0E38                     	;# 
  2810  0E39                     	;# 
  2811  0E3A                     	;# 
  2812  0E3B                     	;# 
  2813  0E3C                     	;# 
  2814  0E3D                     	;# 
  2815  0E3E                     	;# 
  2816  0E90                     	;# 
  2817  0E91                     	;# 
  2818  0E92                     	;# 
  2819  0E93                     	;# 
  2820  0E94                     	;# 
  2821  0E95                     	;# 
  2822  0E96                     	;# 
  2823  0E97                     	;# 
  2824  0E98                     	;# 
  2825  0E99                     	;# 
  2826  0E9A                     	;# 
  2827  0E9B                     	;# 
  2828  0E9C                     	;# 
  2829  0E9D                     	;# 
  2830  0E9E                     	;# 
  2831  0E9F                     	;# 
  2832  0EA0                     	;# 
  2833  0EA1                     	;# 
  2834  0EA2                     	;# 
  2835  0EA3                     	;# 
  2836  0EA4                     	;# 
  2837  0EA5                     	;# 
  2838  0EA6                     	;# 
  2839  0EA7                     	;# 
  2840  0F0F                     	;# 
  2841  0F10                     	;# 
  2842  0F11                     	;# 
  2843  0F12                     	;# 
  2844  0F13                     	;# 
  2845  0F14                     	;# 
  2846  0F15                     	;# 
  2847  0F16                     	;# 
  2848  0F17                     	;# 
  2849  0F18                     	;# 
  2850  0F19                     	;# 
  2851  0F1A                     	;# 
  2852  0F1B                     	;# 
  2853  0F1C                     	;# 
  2854  0F1D                     	;# 
  2855  0F1E                     	;# 
  2856  0F1F                     	;# 
  2857  0F20                     	;# 
  2858  0F21                     	;# 
  2859  0F22                     	;# 
  2860  0F23                     	;# 
  2861  0F24                     	;# 
  2862  0F25                     	;# 
  2863  0F26                     	;# 
  2864  0F27                     	;# 
  2865  0F28                     	;# 
  2866  0F29                     	;# 
  2867  0F2A                     	;# 
  2868  0F2B                     	;# 
  2869  0F2C                     	;# 
  2870  0F2D                     	;# 
  2871  0F2E                     	;# 
  2872  0F2F                     	;# 
  2873  0F30                     	;# 
  2874  0F31                     	;# 
  2875  0F32                     	;# 
  2876  0F33                     	;# 
  2877  0F34                     	;# 
  2878  0F35                     	;# 
  2879  0F36                     	;# 
  2880  0F37                     	;# 
  2881  0FE4                     	;# 
  2882  0FE5                     	;# 
  2883  0FE6                     	;# 
  2884  0FE7                     	;# 
  2885  0FE8                     	;# 
  2886  0FE9                     	;# 
  2887  0FEA                     	;# 
  2888  0FEB                     	;# 
  2889  0FED                     	;# 
  2890  0FEE                     	;# 
  2891  0FEF                     	;# 
  2892  0000                     	;# 
  2893  0001                     	;# 
  2894  0002                     	;# 
  2895  0003                     	;# 
  2896  0004                     	;# 
  2897  0005                     	;# 
  2898  0006                     	;# 
  2899  0007                     	;# 
  2900  0008                     	;# 
  2901  0009                     	;# 
  2902  000A                     	;# 
  2903  000B                     	;# 
  2904  000C                     	;# 
  2905  000D                     	;# 
  2906  000E                     	;# 
  2907  0010                     	;# 
  2908  0011                     	;# 
  2909  0012                     	;# 
  2910  0013                     	;# 
  2911  0014                     	;# 
  2912  0015                     	;# 
  2913  0016                     	;# 
  2914  0017                     	;# 
  2915  0018                     	;# 
  2916  0018                     	;# 
  2917  0019                     	;# 
  2918  001A                     	;# 
  2919  001B                     	;# 
  2920  001C                     	;# 
  2921  001C                     	;# 
  2922  001D                     	;# 
  2923  001E                     	;# 
  2924  001F                     	;# 
  2925  008C                     	;# 
  2926  008D                     	;# 
  2927  008E                     	;# 
  2928  0090                     	;# 
  2929  0091                     	;# 
  2930  0092                     	;# 
  2931  0093                     	;# 
  2932  0094                     	;# 
  2933  0095                     	;# 
  2934  0096                     	;# 
  2935  0097                     	;# 
  2936  0098                     	;# 
  2937  0099                     	;# 
  2938  009A                     	;# 
  2939  009B                     	;# 
  2940  009C                     	;# 
  2941  009D                     	;# 
  2942  009E                     	;# 
  2943  009F                     	;# 
  2944  010C                     	;# 
  2945  010D                     	;# 
  2946  010E                     	;# 
  2947  0111                     	;# 
  2948  0112                     	;# 
  2949  0113                     	;# 
  2950  0114                     	;# 
  2951  0115                     	;# 
  2952  0116                     	;# 
  2953  0117                     	;# 
  2954  0118                     	;# 
  2955  0119                     	;# 
  2956  011A                     	;# 
  2957  011B                     	;# 
  2958  011C                     	;# 
  2959  011D                     	;# 
  2960  018C                     	;# 
  2961  018D                     	;# 
  2962  018E                     	;# 
  2963  0191                     	;# 
  2964  0191                     	;# 
  2965  0192                     	;# 
  2966  0193                     	;# 
  2967  0193                     	;# 
  2968  0194                     	;# 
  2969  0195                     	;# 
  2970  0196                     	;# 
  2971  0197                     	;# 
  2972  0199                     	;# 
  2973  0199                     	;# 
  2974  0199                     	;# 
  2975  019A                     	;# 
  2976  019A                     	;# 
  2977  019A                     	;# 
  2978  019B                     	;# 
  2979  019B                     	;# 
  2980  019B                     	;# 
  2981  019B                     	;# 
  2982  019B                     	;# 
  2983  019C                     	;# 
  2984  019C                     	;# 
  2985  019C                     	;# 
  2986  019D                     	;# 
  2987  019D                     	;# 
  2988  019D                     	;# 
  2989  019E                     	;# 
  2990  019E                     	;# 
  2991  019E                     	;# 
  2992  019F                     	;# 
  2993  019F                     	;# 
  2994  019F                     	;# 
  2995  019F                     	;# 
  2996  019F                     	;# 
  2997  020C                     	;# 
  2998  020D                     	;# 
  2999  020E                     	;# 
  3000  0210                     	;# 
  3001  0211                     	;# 
  3002  0211                     	;# 
  3003  0212                     	;# 
  3004  0212                     	;# 
  3005  0213                     	;# 
  3006  0213                     	;# 
  3007  0214                     	;# 
  3008  0214                     	;# 
  3009  0215                     	;# 
  3010  0215                     	;# 
  3011  0215                     	;# 
  3012  0215                     	;# 
  3013  0216                     	;# 
  3014  0216                     	;# 
  3015  0217                     	;# 
  3016  0217                     	;# 
  3017  021B                     	;# 
  3018  021C                     	;# 
  3019  021D                     	;# 
  3020  021E                     	;# 
  3021  021F                     	;# 
  3022  028C                     	;# 
  3023  028D                     	;# 
  3024  028E                     	;# 
  3025  0291                     	;# 
  3026  0291                     	;# 
  3027  0292                     	;# 
  3028  0293                     	;# 
  3029  0294                     	;# 
  3030  0295                     	;# 
  3031  0295                     	;# 
  3032  0296                     	;# 
  3033  0297                     	;# 
  3034  0298                     	;# 
  3035  0299                     	;# 
  3036  0299                     	;# 
  3037  029A                     	;# 
  3038  029B                     	;# 
  3039  029C                     	;# 
  3040  029E                     	;# 
  3041  029F                     	;# 
  3042  030C                     	;# 
  3043  030D                     	;# 
  3044  030E                     	;# 
  3045  0315                     	;# 
  3046  0316                     	;# 
  3047  0317                     	;# 
  3048  0318                     	;# 
  3049  0319                     	;# 
  3050  031B                     	;# 
  3051  031C                     	;# 
  3052  031D                     	;# 
  3053  031E                     	;# 
  3054  031F                     	;# 
  3055  038C                     	;# 
  3056  038D                     	;# 
  3057  038E                     	;# 
  3058  0390                     	;# 
  3059  0391                     	;# 
  3060  0392                     	;# 
  3061  0393                     	;# 
  3062  0394                     	;# 
  3063  0395                     	;# 
  3064  0396                     	;# 
  3065  0397                     	;# 
  3066  0398                     	;# 
  3067  0399                     	;# 
  3068  039D                     	;# 
  3069  039E                     	;# 
  3070  039F                     	;# 
  3071  040D                     	;# 
  3072  040F                     	;# 
  3073  040F                     	;# 
  3074  0410                     	;# 
  3075  0411                     	;# 
  3076  0412                     	;# 
  3077  0413                     	;# 
  3078  0413                     	;# 
  3079  0414                     	;# 
  3080  0414                     	;# 
  3081  0415                     	;# 
  3082  0416                     	;# 
  3083  0417                     	;# 
  3084  0418                     	;# 
  3085  041A                     	;# 
  3086  041A                     	;# 
  3087  041B                     	;# 
  3088  041B                     	;# 
  3089  041C                     	;# 
  3090  041D                     	;# 
  3091  041E                     	;# 
  3092  041F                     	;# 
  3093  048E                     	;# 
  3094  048E                     	;# 
  3095  048F                     	;# 
  3096  0490                     	;# 
  3097  0491                     	;# 
  3098  0492                     	;# 
  3099  0493                     	;# 
  3100  0493                     	;# 
  3101  0494                     	;# 
  3102  0494                     	;# 
  3103  0495                     	;# 
  3104  0496                     	;# 
  3105  0497                     	;# 
  3106  0498                     	;# 
  3107  049A                     	;# 
  3108  049A                     	;# 
  3109  049B                     	;# 
  3110  049B                     	;# 
  3111  049C                     	;# 
  3112  049D                     	;# 
  3113  049E                     	;# 
  3114  049F                     	;# 
  3115  050F                     	;# 
  3116  0510                     	;# 
  3117  0511                     	;# 
  3118  0512                     	;# 
  3119  0513                     	;# 
  3120  0514                     	;# 
  3121  0515                     	;# 
  3122  0516                     	;# 
  3123  0517                     	;# 
  3124  0518                     	;# 
  3125  0519                     	;# 
  3126  051A                     	;# 
  3127  058D                     	;# 
  3128  058E                     	;# 
  3129  058F                     	;# 
  3130  058F                     	;# 
  3131  058F                     	;# 
  3132  0590                     	;# 
  3133  0590                     	;# 
  3134  0591                     	;# 
  3135  0592                     	;# 
  3136  0592                     	;# 
  3137  0592                     	;# 
  3138  0593                     	;# 
  3139  0593                     	;# 
  3140  0594                     	;# 
  3141  0595                     	;# 
  3142  0595                     	;# 
  3143  0596                     	;# 
  3144  0597                     	;# 
  3145  0597                     	;# 
  3146  0598                     	;# 
  3147  0599                     	;# 
  3148  0599                     	;# 
  3149  0599                     	;# 
  3150  059A                     	;# 
  3151  059A                     	;# 
  3152  059E                     	;# 
  3153  059F                     	;# 
  3154  059F                     	;# 
  3155  0614                     	;# 
  3156  0614                     	;# 
  3157  0615                     	;# 
  3158  0616                     	;# 
  3159  0617                     	;# 
  3160  0617                     	;# 
  3161  0618                     	;# 
  3162  0619                     	;# 
  3163  061A                     	;# 
  3164  061A                     	;# 
  3165  061B                     	;# 
  3166  061C                     	;# 
  3167  068D                     	;# 
  3168  068E                     	;# 
  3169  068F                     	;# 
  3170  0690                     	;# 
  3171  0691                     	;# 
  3172  0692                     	;# 
  3173  0693                     	;# 
  3174  0694                     	;# 
  3175  0695                     	;# 
  3176  0696                     	;# 
  3177  0697                     	;# 
  3178  0698                     	;# 
  3179  0699                     	;# 
  3180  069A                     	;# 
  3181  069B                     	;# 
  3182  069C                     	;# 
  3183  069D                     	;# 
  3184  069E                     	;# 
  3185  069F                     	;# 
  3186  070D                     	;# 
  3187  070E                     	;# 
  3188  070F                     	;# 
  3189  0710                     	;# 
  3190  0711                     	;# 
  3191  0712                     	;# 
  3192  0713                     	;# 
  3193  0714                     	;# 
  3194  0715                     	;# 
  3195  0716                     	;# 
  3196  0717                     	;# 
  3197  0718                     	;# 
  3198  0719                     	;# 
  3199  071A                     	;# 
  3200  071B                     	;# 
  3201  071C                     	;# 
  3202  071D                     	;# 
  3203  071E                     	;# 
  3204  071F                     	;# 
  3205  078E                     	;# 
  3206  078F                     	;# 
  3207  0790                     	;# 
  3208  0791                     	;# 
  3209  0792                     	;# 
  3210  0793                     	;# 
  3211  0794                     	;# 
  3212  0795                     	;# 
  3213  0796                     	;# 
  3214  0797                     	;# 
  3215  0798                     	;# 
  3216  0799                     	;# 
  3217  079A                     	;# 
  3218  079B                     	;# 
  3219  079C                     	;# 
  3220  079D                     	;# 
  3221  079E                     	;# 
  3222  079F                     	;# 
  3223  080D                     	;# 
  3224  080E                     	;# 
  3225  080F                     	;# 
  3226  0810                     	;# 
  3227  0811                     	;# 
  3228  0812                     	;# 
  3229  0813                     	;# 
  3230  0814                     	;# 
  3231  0815                     	;# 
  3232  0816                     	;# 
  3233  0817                     	;# 
  3234  0818                     	;# 
  3235  0819                     	;# 
  3236  081A                     	;# 
  3237  081B                     	;# 
  3238  081C                     	;# 
  3239  081D                     	;# 
  3240  081E                     	;# 
  3241  081F                     	;# 
  3242  090C                     	;# 
  3243  090D                     	;# 
  3244  090E                     	;# 
  3245  090F                     	;# 
  3246  0910                     	;# 
  3247  0911                     	;# 
  3248  0912                     	;# 
  3249  0913                     	;# 
  3250  0914                     	;# 
  3251  0915                     	;# 
  3252  0916                     	;# 
  3253  0917                     	;# 
  3254  0D8E                     	;# 
  3255  0D8F                     	;# 
  3256  0D90                     	;# 
  3257  0D91                     	;# 
  3258  0D91                     	;# 
  3259  0D92                     	;# 
  3260  0D93                     	;# 
  3261  0D93                     	;# 
  3262  0D94                     	;# 
  3263  0D95                     	;# 
  3264  0D95                     	;# 
  3265  0D96                     	;# 
  3266  0D97                     	;# 
  3267  0D97                     	;# 
  3268  0D98                     	;# 
  3269  0D99                     	;# 
  3270  0D99                     	;# 
  3271  0D9A                     	;# 
  3272  0D9B                     	;# 
  3273  0D9C                     	;# 
  3274  0D9C                     	;# 
  3275  0D9D                     	;# 
  3276  0D9D                     	;# 
  3277  0D9E                     	;# 
  3278  0D9F                     	;# 
  3279  0DA0                     	;# 
  3280  0DA1                     	;# 
  3281  0DA1                     	;# 
  3282  0DA2                     	;# 
  3283  0DA3                     	;# 
  3284  0DA3                     	;# 
  3285  0DA4                     	;# 
  3286  0DA5                     	;# 
  3287  0DA5                     	;# 
  3288  0DA6                     	;# 
  3289  0DA7                     	;# 
  3290  0DA7                     	;# 
  3291  0DA8                     	;# 
  3292  0DA9                     	;# 
  3293  0DA9                     	;# 
  3294  0DAA                     	;# 
  3295  0DAB                     	;# 
  3296  0DAC                     	;# 
  3297  0DAC                     	;# 
  3298  0DAD                     	;# 
  3299  0DAD                     	;# 
  3300  0DAE                     	;# 
  3301  0DAF                     	;# 
  3302  0DB0                     	;# 
  3303  0DB1                     	;# 
  3304  0DB1                     	;# 
  3305  0DB2                     	;# 
  3306  0DB3                     	;# 
  3307  0DB3                     	;# 
  3308  0DB4                     	;# 
  3309  0DB5                     	;# 
  3310  0DB5                     	;# 
  3311  0DB6                     	;# 
  3312  0DB7                     	;# 
  3313  0DB7                     	;# 
  3314  0DB8                     	;# 
  3315  0DB9                     	;# 
  3316  0DB9                     	;# 
  3317  0DBA                     	;# 
  3318  0DBB                     	;# 
  3319  0DBC                     	;# 
  3320  0DBC                     	;# 
  3321  0DBD                     	;# 
  3322  0DBD                     	;# 
  3323  0DBE                     	;# 
  3324  0DBF                     	;# 
  3325  0DC0                     	;# 
  3326  0E0C                     	;# 
  3327  0E0D                     	;# 
  3328  0E0E                     	;# 
  3329  0E0F                     	;# 
  3330  0E10                     	;# 
  3331  0E11                     	;# 
  3332  0E12                     	;# 
  3333  0E13                     	;# 
  3334  0E14                     	;# 
  3335  0E15                     	;# 
  3336  0E15                     	;# 
  3337  0E15                     	;# 
  3338  0E16                     	;# 
  3339  0E16                     	;# 
  3340  0E16                     	;# 
  3341  0E17                     	;# 
  3342  0E17                     	;# 
  3343  0E17                     	;# 
  3344  0E18                     	;# 
  3345  0E18                     	;# 
  3346  0E18                     	;# 
  3347  0E19                     	;# 
  3348  0E1A                     	;# 
  3349  0E1B                     	;# 
  3350  0E1D                     	;# 
  3351  0E1E                     	;# 
  3352  0E1F                     	;# 
  3353  0E21                     	;# 
  3354  0E22                     	;# 
  3355  0E23                     	;# 
  3356  0E24                     	;# 
  3357  0E25                     	;# 
  3358  0E26                     	;# 
  3359  0E27                     	;# 
  3360  0E28                     	;# 
  3361  0E29                     	;# 
  3362  0E2D                     	;# 
  3363  0E2E                     	;# 
  3364  0E2F                     	;# 
  3365  0E30                     	;# 
  3366  0E31                     	;# 
  3367  0E32                     	;# 
  3368  0E35                     	;# 
  3369  0E36                     	;# 
  3370  0E37                     	;# 
  3371  0E38                     	;# 
  3372  0E39                     	;# 
  3373  0E3A                     	;# 
  3374  0E3B                     	;# 
  3375  0E3C                     	;# 
  3376  0E3D                     	;# 
  3377  0E3E                     	;# 
  3378  0E90                     	;# 
  3379  0E91                     	;# 
  3380  0E92                     	;# 
  3381  0E93                     	;# 
  3382  0E94                     	;# 
  3383  0E95                     	;# 
  3384  0E96                     	;# 
  3385  0E97                     	;# 
  3386  0E98                     	;# 
  3387  0E99                     	;# 
  3388  0E9A                     	;# 
  3389  0E9B                     	;# 
  3390  0E9C                     	;# 
  3391  0E9D                     	;# 
  3392  0E9E                     	;# 
  3393  0E9F                     	;# 
  3394  0EA0                     	;# 
  3395  0EA1                     	;# 
  3396  0EA2                     	;# 
  3397  0EA3                     	;# 
  3398  0EA4                     	;# 
  3399  0EA5                     	;# 
  3400  0EA6                     	;# 
  3401  0EA7                     	;# 
  3402  0F0F                     	;# 
  3403  0F10                     	;# 
  3404  0F11                     	;# 
  3405  0F12                     	;# 
  3406  0F13                     	;# 
  3407  0F14                     	;# 
  3408  0F15                     	;# 
  3409  0F16                     	;# 
  3410  0F17                     	;# 
  3411  0F18                     	;# 
  3412  0F19                     	;# 
  3413  0F1A                     	;# 
  3414  0F1B                     	;# 
  3415  0F1C                     	;# 
  3416  0F1D                     	;# 
  3417  0F1E                     	;# 
  3418  0F1F                     	;# 
  3419  0F20                     	;# 
  3420  0F21                     	;# 
  3421  0F22                     	;# 
  3422  0F23                     	;# 
  3423  0F24                     	;# 
  3424  0F25                     	;# 
  3425  0F26                     	;# 
  3426  0F27                     	;# 
  3427  0F28                     	;# 
  3428  0F29                     	;# 
  3429  0F2A                     	;# 
  3430  0F2B                     	;# 
  3431  0F2C                     	;# 
  3432  0F2D                     	;# 
  3433  0F2E                     	;# 
  3434  0F2F                     	;# 
  3435  0F30                     	;# 
  3436  0F31                     	;# 
  3437  0F32                     	;# 
  3438  0F33                     	;# 
  3439  0F34                     	;# 
  3440  0F35                     	;# 
  3441  0F36                     	;# 
  3442  0F37                     	;# 
  3443  0FE4                     	;# 
  3444  0FE5                     	;# 
  3445  0FE6                     	;# 
  3446  0FE7                     	;# 
  3447  0FE8                     	;# 
  3448  0FE9                     	;# 
  3449  0FEA                     	;# 
  3450  0FEB                     	;# 
  3451  0FED                     	;# 
  3452  0FEE                     	;# 
  3453  0FEF                     	;# 
  3454                           
  3455                           	psect	idataCOMMON
  3456  063C                     __pidataCOMMON:	
  3457                           
  3458                           ;initializer for _buffer_write_index
  3459  063C  3401               	retlw	1
  3460  063D  3400               	retlw	0
  3461                           
  3462                           	psect	idataBANK0
  3463  0638                     __pidataBANK0:	
  3464                           
  3465                           ;initializer for _isPlaying
  3466  0638  3401               	retlw	1
  3467                           
  3468                           ;initializer for _state
  3469  0639  3403               	retlw	3
  3470                           
  3471                           ;initializer for _readMessage
  3472  063A  34FF               	retlw	255
  3473                           
  3474                           ;initializer for _GLBL_Resp8
  3475  063B  34FF               	retlw	255
  3476                           
  3477                           	psect	idataBANK1
  3478  0624                     __pidataBANK1:	
  3479                           
  3480                           ;initializer for _GLBL_Resp40
  3481  0624  34FF               	retlw	255
  3482  0625  34FF               	retlw	255
  3483  0626  34FF               	retlw	255
  3484  0627  34FF               	retlw	255
  3485  0628  34FF               	retlw	255
  3486                           
  3487                           	psect	stringtext1
  3488  0186                     __pstringtext1:	
  3489  0186                     _CRCTable:	
  3490  0186  3400               	retlw	0
  3491  0187  3409               	retlw	9
  3492  0188  3412               	retlw	18
  3493  0189  341B               	retlw	27
  3494  018A  3424               	retlw	36
  3495  018B  342D               	retlw	45
  3496  018C  3436               	retlw	54
  3497  018D  343F               	retlw	63
  3498  018E  3448               	retlw	72
  3499  018F  3441               	retlw	65
  3500  0190  345A               	retlw	90
  3501  0191  3453               	retlw	83
  3502  0192  346C               	retlw	108
  3503  0193  3465               	retlw	101
  3504  0194  347E               	retlw	126
  3505  0195  3477               	retlw	119
  3506  0196  3419               	retlw	25
  3507  0197  3410               	retlw	16
  3508  0198  340B               	retlw	11
  3509  0199  3402               	retlw	2
  3510  019A  343D               	retlw	61
  3511  019B  3434               	retlw	52
  3512  019C  342F               	retlw	47
  3513  019D  3426               	retlw	38
  3514  019E  3451               	retlw	81
  3515  019F  3458               	retlw	88
  3516  01A0  3443               	retlw	67
  3517  01A1  344A               	retlw	74
  3518  01A2  3475               	retlw	117
  3519  01A3  347C               	retlw	124
  3520  01A4  3467               	retlw	103
  3521  01A5  346E               	retlw	110
  3522  01A6  3432               	retlw	50
  3523  01A7  343B               	retlw	59
  3524  01A8  3420               	retlw	32
  3525  01A9  3429               	retlw	41
  3526  01AA  3416               	retlw	22
  3527  01AB  341F               	retlw	31
  3528  01AC  3404               	retlw	4
  3529  01AD  340D               	retlw	13
  3530  01AE  347A               	retlw	122
  3531  01AF  3473               	retlw	115
  3532  01B0  3468               	retlw	104
  3533  01B1  3461               	retlw	97
  3534  01B2  345E               	retlw	94
  3535  01B3  3457               	retlw	87
  3536  01B4  344C               	retlw	76
  3537  01B5  3445               	retlw	69
  3538  01B6  342B               	retlw	43
  3539  01B7  3422               	retlw	34
  3540  01B8  3439               	retlw	57
  3541  01B9  3430               	retlw	48
  3542  01BA  340F               	retlw	15
  3543  01BB  3406               	retlw	6
  3544  01BC  341D               	retlw	29
  3545  01BD  3414               	retlw	20
  3546  01BE  3463               	retlw	99
  3547  01BF  346A               	retlw	106
  3548  01C0  3471               	retlw	113
  3549  01C1  3478               	retlw	120
  3550  01C2  3447               	retlw	71
  3551  01C3  344E               	retlw	78
  3552  01C4  3455               	retlw	85
  3553  01C5  345C               	retlw	92
  3554  01C6  3464               	retlw	100
  3555  01C7  346D               	retlw	109
  3556  01C8  3476               	retlw	118
  3557  01C9  347F               	retlw	127
  3558  01CA  3440               	retlw	64
  3559  01CB  3449               	retlw	73
  3560  01CC  3452               	retlw	82
  3561  01CD  345B               	retlw	91
  3562  01CE  342C               	retlw	44
  3563  01CF  3425               	retlw	37
  3564  01D0  343E               	retlw	62
  3565  01D1  3437               	retlw	55
  3566  01D2  3408               	retlw	8
  3567  01D3  3401               	retlw	1
  3568  01D4  341A               	retlw	26
  3569  01D5  3413               	retlw	19
  3570  01D6  347D               	retlw	125
  3571  01D7  3474               	retlw	116
  3572  01D8  346F               	retlw	111
  3573  01D9  3466               	retlw	102
  3574  01DA  3459               	retlw	89
  3575  01DB  3450               	retlw	80
  3576  01DC  344B               	retlw	75
  3577  01DD  3442               	retlw	66
  3578  01DE  3435               	retlw	53
  3579  01DF  343C               	retlw	60
  3580  01E0  3427               	retlw	39
  3581  01E1  342E               	retlw	46
  3582  01E2  3411               	retlw	17
  3583  01E3  3418               	retlw	24
  3584  01E4  3403               	retlw	3
  3585  01E5  340A               	retlw	10
  3586  01E6  3456               	retlw	86
  3587  01E7  345F               	retlw	95
  3588  01E8  3444               	retlw	68
  3589  01E9  344D               	retlw	77
  3590  01EA  3472               	retlw	114
  3591  01EB  347B               	retlw	123
  3592  01EC  3460               	retlw	96
  3593  01ED  3469               	retlw	105
  3594  01EE  341E               	retlw	30
  3595  01EF  3417               	retlw	23
  3596  01F0  340C               	retlw	12
  3597  01F1  3405               	retlw	5
  3598  01F2  343A               	retlw	58
  3599  01F3  3433               	retlw	51
  3600  01F4  3428               	retlw	40
  3601  01F5  3421               	retlw	33
  3602  01F6  344F               	retlw	79
  3603  01F7  3446               	retlw	70
  3604  01F8  345D               	retlw	93
  3605  01F9  3454               	retlw	84
  3606  01FA  346B               	retlw	107
  3607  01FB  3462               	retlw	98
  3608  01FC  3479               	retlw	121
  3609  01FD  3470               	retlw	112
  3610  01FE  3407               	retlw	7
  3611  01FF  340E               	retlw	14
  3612  0200  3415               	retlw	21
  3613  0201  341C               	retlw	28
  3614  0202  3423               	retlw	35
  3615  0203  342A               	retlw	42
  3616  0204  3431               	retlw	49
  3617  0205  3438               	retlw	56
  3618  0206  3441               	retlw	65
  3619  0207  3448               	retlw	72
  3620  0208  3453               	retlw	83
  3621  0209  345A               	retlw	90
  3622  020A  3465               	retlw	101
  3623  020B  346C               	retlw	108
  3624  020C  3477               	retlw	119
  3625  020D  347E               	retlw	126
  3626  020E  3409               	retlw	9
  3627  020F  3400               	retlw	0
  3628  0210  341B               	retlw	27
  3629  0211  3412               	retlw	18
  3630  0212  342D               	retlw	45
  3631  0213  3424               	retlw	36
  3632  0214  343F               	retlw	63
  3633  0215  3436               	retlw	54
  3634  0216  3458               	retlw	88
  3635  0217  3451               	retlw	81
  3636  0218  344A               	retlw	74
  3637  0219  3443               	retlw	67
  3638  021A  347C               	retlw	124
  3639  021B  3475               	retlw	117
  3640  021C  346E               	retlw	110
  3641  021D  3467               	retlw	103
  3642  021E  3410               	retlw	16
  3643  021F  3419               	retlw	25
  3644  0220  3402               	retlw	2
  3645  0221  340B               	retlw	11
  3646  0222  3434               	retlw	52
  3647  0223  343D               	retlw	61
  3648  0224  3426               	retlw	38
  3649  0225  342F               	retlw	47
  3650  0226  3473               	retlw	115
  3651  0227  347A               	retlw	122
  3652  0228  3461               	retlw	97
  3653  0229  3468               	retlw	104
  3654  022A  3457               	retlw	87
  3655  022B  345E               	retlw	94
  3656  022C  3445               	retlw	69
  3657  022D  344C               	retlw	76
  3658  022E  343B               	retlw	59
  3659  022F  3432               	retlw	50
  3660  0230  3429               	retlw	41
  3661  0231  3420               	retlw	32
  3662  0232  341F               	retlw	31
  3663  0233  3416               	retlw	22
  3664  0234  340D               	retlw	13
  3665  0235  3404               	retlw	4
  3666  0236  346A               	retlw	106
  3667  0237  3463               	retlw	99
  3668  0238  3478               	retlw	120
  3669  0239  3471               	retlw	113
  3670  023A  344E               	retlw	78
  3671  023B  3447               	retlw	71
  3672  023C  345C               	retlw	92
  3673  023D  3455               	retlw	85
  3674  023E  3422               	retlw	34
  3675  023F  342B               	retlw	43
  3676  0240  3430               	retlw	48
  3677  0241  3439               	retlw	57
  3678  0242  3406               	retlw	6
  3679  0243  340F               	retlw	15
  3680  0244  3414               	retlw	20
  3681  0245  341D               	retlw	29
  3682  0246  3425               	retlw	37
  3683  0247  342C               	retlw	44
  3684  0248  3437               	retlw	55
  3685  0249  343E               	retlw	62
  3686  024A  3401               	retlw	1
  3687  024B  3408               	retlw	8
  3688  024C  3413               	retlw	19
  3689  024D  341A               	retlw	26
  3690  024E  346D               	retlw	109
  3691  024F  3464               	retlw	100
  3692  0250  347F               	retlw	127
  3693  0251  3476               	retlw	118
  3694  0252  3449               	retlw	73
  3695  0253  3440               	retlw	64
  3696  0254  345B               	retlw	91
  3697  0255  3452               	retlw	82
  3698  0256  343C               	retlw	60
  3699  0257  3435               	retlw	53
  3700  0258  342E               	retlw	46
  3701  0259  3427               	retlw	39
  3702  025A  3418               	retlw	24
  3703  025B  3411               	retlw	17
  3704  025C  340A               	retlw	10
  3705  025D  3403               	retlw	3
  3706  025E  3474               	retlw	116
  3707  025F  347D               	retlw	125
  3708  0260  3466               	retlw	102
  3709  0261  346F               	retlw	111
  3710  0262  3450               	retlw	80
  3711  0263  3459               	retlw	89
  3712  0264  3442               	retlw	66
  3713  0265  344B               	retlw	75
  3714  0266  3417               	retlw	23
  3715  0267  341E               	retlw	30
  3716  0268  3405               	retlw	5
  3717  0269  340C               	retlw	12
  3718  026A  3433               	retlw	51
  3719  026B  343A               	retlw	58
  3720  026C  3421               	retlw	33
  3721  026D  3428               	retlw	40
  3722  026E  345F               	retlw	95
  3723  026F  3456               	retlw	86
  3724  0270  344D               	retlw	77
  3725  0271  3444               	retlw	68
  3726  0272  347B               	retlw	123
  3727  0273  3472               	retlw	114
  3728  0274  3469               	retlw	105
  3729  0275  3460               	retlw	96
  3730  0276  340E               	retlw	14
  3731  0277  3407               	retlw	7
  3732  0278  341C               	retlw	28
  3733  0279  3415               	retlw	21
  3734  027A  342A               	retlw	42
  3735  027B  3423               	retlw	35
  3736  027C  3438               	retlw	56
  3737  027D  3431               	retlw	49
  3738  027E  3446               	retlw	70
  3739  027F  344F               	retlw	79
  3740  0280  3454               	retlw	84
  3741  0281  345D               	retlw	93
  3742  0282  3462               	retlw	98
  3743  0283  346B               	retlw	107
  3744  0284  3470               	retlw	112
  3745  0285  3479               	retlw	121
  3746  0286                     __end_of_CRCTable:	
  3747  000D                     _PORTB	set	13
  3748  000B                     _INTCONbits	set	11
  3749  0011                     _PIR1bits	set	17
  3750  000E                     _PORTCbits	set	14
  3751  008D                     _TRISB	set	141
  3752  008C                     _TRISA	set	140
  3753  009C                     _OSCSTATbits	set	156
  3754  009B                     _OSCCON	set	155
  3755  0091                     _PIE1bits	set	145
  3756  0476                     _TRISC6	set	1142
  3757  0468                     _TRISB0	set	1128
  3758  0471                     _TRISC1	set	1137
  3759  0470                     _TRISC0	set	1136
  3760  0469                     _TRISB1	set	1129
  3761  0477                     _TRISC7	set	1143
  3762  0474                     _TRISC4	set	1140
  3763  0473                     _TRISC3	set	1139
  3764  0472                     _TRISC2	set	1138
  3765  018D                     _ANSELB	set	397
  3766  0C69                     _ANSB1	set	3177
  3767  0C73                     _ANSC3	set	3187
  3768  0214                     _SSP1STATbits	set	532
  3769  0211                     _SSP1BUF	set	529
  3770  0212                     _SSP1ADD	set	530
  3771  0215                     _SSP1CON1	set	533
  3772  0214                     _SSP1STAT	set	532
  3773  0215                     _SSP1CON1bits	set	533
  3774  0495                     _T2CON	set	1173
  3775  0497                     _T2CLKCON	set	1175
  3776  0494                     _T2PR	set	1172
  3777  058E                     _DAC1CON0	set	1422
  3778  058F                     _DAC1REFL	set	1423
  3779  0590                     _DAC1REFH	set	1424
  3780  2C68                     _DAC1LD	set	11368
  3781  0E3B                     _SSPDATPPS	set	3643
  3782  0E3A                     _SSPCLKPPS	set	3642
  3783  0EA4                     _RC4PPS	set	3748
  3784  0EA2                     _RC2PPS	set	3746
  3785  0286                     STR_5:	
  3786  0286  3466               	retlw	102	;'f'
  3787  0287  346D               	retlw	109	;'m'
  3788  0288  3474               	retlw	116	;'t'
  3789  0289  3420               	retlw	32	;' '
  3790  028A  3400               	retlw	0
  3791                           
  3792                           	psect	stringtext2
  3793  0629                     __pstringtext2:	
  3794  0629                     STR_3:	
  3795  0629  3457               	retlw	87	;'W'
  3796  062A  3441               	retlw	65	;'A'
  3797  062B  3456               	retlw	86	;'V'
  3798  062C  3445               	retlw	69	;'E'
  3799  062D  3400               	retlw	0
  3800                           
  3801                           	psect	stringtext3
  3802  062E                     __pstringtext3:	
  3803  062E                     STR_1:	
  3804  062E  3452               	retlw	82	;'R'
  3805  062F  3449               	retlw	73	;'I'
  3806  0630  3446               	retlw	70	;'F'
  3807  0631  3446               	retlw	70	;'F'
  3808  0632  3400               	retlw	0
  3809                           
  3810                           	psect	stringtext4
  3811  0633                     __pstringtext4:	
  3812  0633                     STR_7:	
  3813  0633  3464               	retlw	100	;'d'
  3814  0634  3461               	retlw	97	;'a'
  3815  0635  3474               	retlw	116	;'t'
  3816  0636  3461               	retlw	97	;'a'
  3817  0637  3400               	retlw	0
  3818                           
  3819                           	psect	stringtext5
  3820  0000                     __pstringtext5:	
  3821  0286                     
  3822                           ; #config settings
  3823  0000                     
  3824                           	psect	cinit
  3825  0028                     start_initialization:	
  3826  0028                     __initialization:	
  3827                           
  3828                           ; Initialize objects allocated to COMMON
  3829  0028  3186  263C  3180   	fcall	__pidataCOMMON	;fetch initializer
  3830  002B  00FA               	movwf	__pdataCOMMON& (0+127)
  3831  002C  3186  263D  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  3832  002F  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
  3833                           
  3834                           ; Initialize objects allocated to BANK0
  3835  0030  3038               	movlw	low __pidataBANK0
  3836  0031  0084               	movwf	4
  3837  0032  3086               	movlw	(high __pidataBANK0)| (0+128)
  3838  0033  0085               	movwf	5
  3839  0034  306B               	movlw	low __pdataBANK0
  3840  0035  0086               	movwf	6
  3841  0036  3000               	movlw	high __pdataBANK0
  3842  0037  0087               	movwf	7
  3843  0038  3004               	movlw	4
  3844  0039  3186  2618  3180   	fcall	init_ram
  3845                           
  3846                           ; Initialize objects allocated to BANK1
  3847  003C  3024               	movlw	low __pidataBANK1
  3848  003D  0084               	movwf	4
  3849  003E  3086               	movlw	(high __pidataBANK1)| (0+128)
  3850  003F  0085               	movwf	5
  3851  0040  30B2               	movlw	low __pdataBANK1
  3852  0041  0086               	movwf	6
  3853  0042  3000               	movlw	high __pdataBANK1
  3854  0043  0087               	movwf	7
  3855  0044  3005               	movlw	5
  3856  0045  3186  2618  3180   	fcall	init_ram
  3857                           
  3858                           ; Clear objects allocated to BANK0
  3859  0048  3061               	movlw	low __pbssBANK0
  3860  0049  0084               	movwf	4
  3861  004A  3000               	movlw	high __pbssBANK0
  3862  004B  0085               	movwf	5
  3863  004C  300A               	movlw	10
  3864  004D  3186  261E  3180   	fcall	clear_ram0
  3865                           
  3866                           ; Clear objects allocated to BANK1
  3867  0050  30A0               	movlw	low __pbssBANK1
  3868  0051  0084               	movwf	4
  3869  0052  3000               	movlw	high __pbssBANK1
  3870  0053  0085               	movwf	5
  3871  0054  3012               	movlw	18
  3872  0055  3186  261E  3180   	fcall	clear_ram0
  3873                           
  3874                           ; Clear objects allocated to BANK2
  3875  0058  3020               	movlw	low __pbssBANK2
  3876  0059  0084               	movwf	4
  3877  005A  3001               	movlw	high __pbssBANK2
  3878  005B  0085               	movwf	5
  3879  005C  3040               	movlw	64
  3880  005D  3186  261E  3180   	fcall	clear_ram0
  3881                           
  3882                           ; Clear objects allocated to BANK3
  3883  0060  30A0               	movlw	low __pbssBANK3
  3884  0061  0084               	movwf	4
  3885  0062  3001               	movlw	high __pbssBANK3
  3886  0063  0085               	movwf	5
  3887  0064  3040               	movlw	64
  3888  0065  3186  261E         	fcall	clear_ram0
  3889  0067                     end_of_initialization:	
  3890                           ;End of C runtime variable initialization code
  3891                           
  3892  0067                     __end_of__initialization:	
  3893  0067  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3894  0068  0020               	movlb	0
  3895  0069  3180  286B         	ljmp	_main	;jump to C main() function
  3896                           
  3897                           	psect	dataCOMMON
  3898  007A                     __pdataCOMMON:	
  3899  007A                     _buffer_write_index:	
  3900  007A                     	ds	2
  3901                           
  3902                           	psect	bssBANK0
  3903  0061                     __pbssBANK0:	
  3904  0061                     _buffer_read_index:	
  3905  0061                     	ds	2
  3906  0063                     _sdata:	
  3907  0063                     	ds	2
  3908  0065                     _total_presses:	
  3909  0065                     	ds	1
  3910  0066                     _number_of_errors:	
  3911  0066                     	ds	1
  3912  0067                     _first_byte:	
  3913  0067                     	ds	1
  3914  0068                     _check_buttons:	
  3915  0068                     	ds	1
  3916  0069                     _samplePending:	
  3917  0069                     	ds	1
  3918  006A                     _global_error:	
  3919  006A                     	ds	1
  3920                           
  3921                           	psect	dataBANK0
  3922  006B                     __pdataBANK0:	
  3923  006B                     _isPlaying:	
  3924  006B                     	ds	1
  3925  006C                     _state:	
  3926  006C                     	ds	1
  3927  006D                     _readMessage:	
  3928  006D                     	ds	1
  3929  006E                     _GLBL_Resp8:	
  3930  006E                     	ds	1
  3931                           
  3932                           	psect	bssBANK1
  3933  00A0                     __pbssBANK1:	
  3934  00A0                     _address:	
  3935  00A0                     	ds	4
  3936  00A4                     _filesize:	
  3937  00A4                     	ds	4
  3938  00A8                     _sampRate:	
  3939  00A8                     	ds	4
  3940  00AC                     _blockIndex:	
  3941  00AC                     	ds	2
  3942  00AE                     _bitsPerSamp:	
  3943  00AE                     	ds	2
  3944  00B0                     _channels:	
  3945  00B0                     	ds	2
  3946                           
  3947                           	psect	dataBANK1
  3948  00B2                     __pdataBANK1:	
  3949  00B2                     _GLBL_Resp40:	
  3950  00B2                     	ds	5
  3951                           
  3952                           	psect	bssBANK2
  3953  0120                     __pbssBANK2:	
  3954  0120                     _lbuffer:	
  3955  0120                     	ds	64
  3956                           
  3957                           	psect	bssBANK3
  3958  01A0                     __pbssBANK3:	
  3959  01A0                     _rbuffer:	
  3960  01A0                     	ds	64
  3961                           
  3962                           	psect	inittext
  3963  0618                     init_ram:	
  3964  0618  00FE               	movwf	126
  3965  0619                     initloop:	
  3966  0619  0012               	moviw fsr0++
  3967  061A  001E               	movwi fsr1++
  3968  061B  0BFE               	decfsz	126,f
  3969  061C  2E19               	goto	initloop
  3970  061D  3400               	retlw	0
  3971                           
  3972                           	psect	clrtext
  3973  061E                     clear_ram0:	
  3974                           ;	Called with FSR0 containing the base address, and
  3975                           ;	WREG with the size to clear
  3976                           
  3977  061E  0064               	clrwdt	;clear the watchdog before getting into this loop
  3978  061F                     clrloop0:	
  3979  061F  0180               	clrf	0	;clear RAM location pointed to by FSR
  3980  0620  3101               	addfsr 0,1
  3981  0621  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3982  0622  2E1F               	goto	clrloop0	;have we reached the end yet?
  3983  0623  3400               	retlw	0	;all done for this memory range, return
  3984                           
  3985                           	psect	cstackBANK1
  3986  00B7                     __pcstackBANK1:	
  3987  00B7                     ??_main:	
  3988                           
  3989                           ; 1 bytes @ 0x0
  3990  00B7                     	ds	4
  3991                           
  3992                           	psect	cstackCOMMON
  3993  0070                     __pcstackCOMMON:	
  3994  0070                     ?_SPI_Write:	
  3995  0070                     ?_SD_Read8bitResponse:	
  3996                           ; 1 bytes @ 0x0
  3997                           
  3998  0070                     ?_SD_Check8bitResponse:	
  3999                           ; 1 bytes @ 0x0
  4000                           
  4001  0070                     ?_SD_Read40bitResponse:	
  4002                           ; 1 bytes @ 0x0
  4003                           
  4004  0070                     ?_SPI_Read:	
  4005                           ; 1 bytes @ 0x0
  4006                           
  4007  0070                     ?_DAC_Init:	
  4008                           ; 1 bytes @ 0x0
  4009                           
  4010  0070                     ?_BrassButtons_Init:	
  4011                           ; 1 bytes @ 0x0
  4012                           
  4013  0070                     ?_SD_Init:	
  4014                           ; 1 bytes @ 0x0
  4015                           
  4016  0070                     ?_SD_CloseBlock:	
  4017                           ; 1 bytes @ 0x0
  4018                           
  4019  0070                     ?_SPI_Init:	
  4020                           ; 1 bytes @ 0x0
  4021                           
  4022  0070                     ?_error:	
  4023                           ; 1 bytes @ 0x0
  4024                           
  4025  0070                     ?_init:	
  4026                           ; 1 bytes @ 0x0
  4027                           
  4028  0070                     ?_isr:	
  4029                           ; 1 bytes @ 0x0
  4030                           
  4031  0070                     ??_isr:	
  4032                           ; 1 bytes @ 0x0
  4033                           
  4034  0070                     ?_main:	
  4035                           ; 1 bytes @ 0x0
  4036                           
  4037  0070                     isr@level:	
  4038                           ; 1 bytes @ 0x0
  4039                           
  4040                           
  4041                           ; 2 bytes @ 0x0
  4042  0070                     	ds	2
  4043  0072                     ??_SPI_Write:	
  4044  0072                     ??_SD_Read8bitResponse:	
  4045                           ; 1 bytes @ 0x2
  4046                           
  4047  0072                     ??_SD_Check8bitResponse:	
  4048                           ; 1 bytes @ 0x2
  4049                           
  4050  0072                     ??_SD_Read40bitResponse:	
  4051                           ; 1 bytes @ 0x2
  4052                           
  4053  0072                     ?_SD_Check40bitResponse:	
  4054                           ; 1 bytes @ 0x2
  4055                           
  4056  0072                     ??_SPI_Read:	
  4057                           ; 1 bytes @ 0x2
  4058                           
  4059  0072                     ??_DAC_Init:	
  4060                           ; 1 bytes @ 0x2
  4061                           
  4062  0072                     ??_BrassButtons_Init:	
  4063                           ; 1 bytes @ 0x2
  4064                           
  4065  0072                     ??_SD_CloseBlock:	
  4066                           ; 1 bytes @ 0x2
  4067                           
  4068  0072                     ??_SPI_Init:	
  4069                           ; 1 bytes @ 0x2
  4070                           
  4071  0072                     ??_error:	
  4072                           ; 1 bytes @ 0x2
  4073                           
  4074  0072                     ?_fourCCeq:	
  4075                           ; 1 bytes @ 0x2
  4076                           
  4077  0072                     ?_readBytes:	
  4078                           ; 1 bytes @ 0x2
  4079                           
  4080  0072                     ?_timer_Init:	
  4081                           ; 1 bytes @ 0x2
  4082                           
  4083  0072                     SD_Check8bitResponse@Byte:	
  4084                           ; 2 bytes @ 0x2
  4085                           
  4086  0072                     SD_Check40bitResponse@Byte3:	
  4087                           ; 1 bytes @ 0x2
  4088                           
  4089  0072                     SPI_Write@Data_8bit:	
  4090                           ; 1 bytes @ 0x2
  4091                           
  4092  0072                     fourCCeq@b:	
  4093                           ; 1 bytes @ 0x2
  4094                           
  4095  0072                     readBytes@len:	
  4096                           ; 2 bytes @ 0x2
  4097                           
  4098  0072                     timer_Init@rate:	
  4099                           ; 2 bytes @ 0x2
  4100                           
  4101                           
  4102                           ; 4 bytes @ 0x2
  4103  0072                     	ds	1
  4104  0073                     ?_SD_SendCommand:	
  4105  0073                     SD_SendCommand@ARG3:	
  4106                           ; 1 bytes @ 0x3
  4107                           
  4108  0073                     SD_Read8bitResponse@readMessage:	
  4109                           ; 1 bytes @ 0x3
  4110                           
  4111  0073                     SD_Check8bitResponse@match:	
  4112                           ; 1 bytes @ 0x3
  4113                           
  4114  0073                     SD_Read40bitResponse@readMessage:	
  4115                           ; 1 bytes @ 0x3
  4116                           
  4117  0073                     SD_Check40bitResponse@Byte2:	
  4118                           ; 1 bytes @ 0x3
  4119                           
  4120  0073                     error@e:	
  4121                           ; 1 bytes @ 0x3
  4122                           
  4123                           
  4124                           ; 1 bytes @ 0x3
  4125  0073                     	ds	1
  4126  0074                     ??_fourCCeq:	
  4127  0074                     ??_readBytes:	
  4128                           ; 1 bytes @ 0x4
  4129                           
  4130  0074                     SD_SendCommand@ARG2:	
  4131                           ; 1 bytes @ 0x4
  4132                           
  4133  0074                     SD_Check40bitResponse@Byte1:	
  4134                           ; 1 bytes @ 0x4
  4135                           
  4136                           
  4137                           ; 1 bytes @ 0x4
  4138  0074                     	ds	1
  4139  0075                     SD_SendCommand@ARG1:	
  4140  0075                     SD_Check40bitResponse@Byte0:	
  4141                           ; 1 bytes @ 0x5
  4142                           
  4143                           
  4144                           ; 1 bytes @ 0x5
  4145  0075                     	ds	1
  4146  0076                     ??_SD_Check40bitResponse:	
  4147  0076                     ??_timer_Init:	
  4148                           ; 1 bytes @ 0x6
  4149                           
  4150  0076                     SD_SendCommand@ARG0:	
  4151                           ; 1 bytes @ 0x6
  4152                           
  4153  0076                     SD_Check40bitResponse@Byte4:	
  4154                           ; 1 bytes @ 0x6
  4155                           
  4156  0076                     readBytes@dest:	
  4157                           ; 1 bytes @ 0x6
  4158                           
  4159                           
  4160                           ; 1 bytes @ 0x6
  4161  0076                     	ds	1
  4162  0077                     ??_SD_SendCommand:	
  4163  0077                     SD_Check40bitResponse@match:	
  4164                           ; 1 bytes @ 0x7
  4165                           
  4166  0077                     readBytes@i:	
  4167                           ; 1 bytes @ 0x7
  4168                           
  4169                           
  4170                           ; 2 bytes @ 0x7
  4171  0077                     	ds	1
  4172  0078                     ??_SD_Init:	
  4173  0078                     fourCCeq@a:	
  4174                           ; 1 bytes @ 0x8
  4175                           
  4176                           
  4177                           ; 1 bytes @ 0x8
  4178  0078                     	ds	1
  4179  0079                     ??_init:	
  4180  0079                     fourCCeq@i:	
  4181                           ; 1 bytes @ 0x9
  4182                           
  4183                           
  4184                           ; 1 bytes @ 0x9
  4185  0079                     	ds	1
  4186                           
  4187                           	psect	cstackBANK0
  4188  0020                     __pcstackBANK0:	
  4189  0020                     SD_SendCommand@CMD_6bit:	
  4190                           
  4191                           ; 1 bytes @ 0x0
  4192  0020                     	ds	1
  4193  0021                     SD_SendCommand@ByteToSend:	
  4194                           
  4195                           ; 1 bytes @ 0x1
  4196  0021                     	ds	1
  4197  0022                     SD_SendCommand@Checksum:	
  4198                           
  4199                           ; 1 bytes @ 0x2
  4200  0022                     	ds	1
  4201  0023                     ?_SD_OpenStream:	
  4202  0023                     SD_OpenStream@address:	
  4203                           ; 1 bytes @ 0x3
  4204                           
  4205                           
  4206                           ; 4 bytes @ 0x3
  4207  0023                     	ds	4
  4208  0027                     ??_SD_OpenStream:	
  4209                           
  4210                           ; 1 bytes @ 0x7
  4211  0027                     	ds	4
  4212  002B                     SD_OpenStream@a:	
  4213                           
  4214                           ; 4 bytes @ 0xB
  4215  002B                     	ds	4
  4216  002F                     ?_openFile:	
  4217  002F                     openFile@a:	
  4218                           ; 1 bytes @ 0xF
  4219                           
  4220                           
  4221                           ; 4 bytes @ 0xF
  4222  002F                     	ds	4
  4223  0033                     ??_openFile:	
  4224                           
  4225                           ; 1 bytes @ 0x13
  4226  0033                     	ds	1
  4227  0034                     openFile@riff:	
  4228                           
  4229                           ; 8 bytes @ 0x14
  4230  0034                     	ds	8
  4231  003C                     openFile@response:	
  4232                           
  4233                           ; 1 bytes @ 0x1C
  4234  003C                     	ds	1
  4235  003D                     openFile@data:	
  4236                           
  4237                           ; 8 bytes @ 0x1D
  4238  003D                     	ds	8
  4239  0045                     openFile@fmt:	
  4240                           
  4241                           ; 28 bytes @ 0x25
  4242  0045                     	ds	28
  4243                           
  4244                           	psect	maintext
  4245  006B                     __pmaintext:	
  4246 ;;
  4247 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  4248 ;;
  4249 ;; *************** function _main *****************
  4250 ;; Defined at:
  4251 ;;		line 144 in file "main.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;		None
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;		None
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      void 
  4258 ;; Registers used:
  4259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : B1F/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4267 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4268 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4269 ;;Total ram usage:        4 bytes
  4270 ;; Hardware stack levels required when called:    5
  4271 ;; This function calls:
  4272 ;;		_BrassButtons_Init
  4273 ;;		_SPI_Read
  4274 ;;		_error
  4275 ;;		_init
  4276 ;;		_openFile
  4277 ;;		_timer_Init
  4278 ;; This function is called by:
  4279 ;;		Startup code after reset
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           
  4284                           ;psect for function _main
  4285  006B                     _main:	
  4286                           
  4287                           ;main.c: 145:         init();
  4288                           
  4289                           ;incstack = 0
  4290                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4291  006B  3185  25B7  3180   	fcall	_init
  4292                           
  4293                           ;main.c: 146:     BrassButtons_Init();
  4294  006E  3185  25FB  3180   	fcall	_BrassButtons_Init
  4295                           
  4296                           ;main.c: 149:         address = 0;
  4297  0071  3000               	movlw	0
  4298  0072  0021               	movlb	1	; select bank1
  4299  0073  00A3               	movwf	(_address+3)^(0+128)
  4300  0074  3000               	movlw	0
  4301  0075  00A2               	movwf	(_address+2)^(0+128)
  4302  0076  3000               	movlw	0
  4303  0077  00A1               	movwf	(_address+1)^(0+128)
  4304  0078  3000               	movlw	0
  4305  0079  00A0               	movwf	_address^(0+128)
  4306                           
  4307                           ;main.c: 151:         openFile(address);
  4308  007A  0823               	movf	(_address+3)^(0+128),w
  4309  007B  0020               	movlb	0	; select bank0
  4310  007C  00B2               	movwf	openFile@a+3
  4311  007D  0021               	movlb	1	; select bank1
  4312  007E  0822               	movf	(_address+2)^(0+128),w
  4313  007F  0020               	movlb	0	; select bank0
  4314  0080  00B1               	movwf	openFile@a+2
  4315  0081  0021               	movlb	1	; select bank1
  4316  0082  0821               	movf	(_address+1)^(0+128),w
  4317  0083  0020               	movlb	0	; select bank0
  4318  0084  00B0               	movwf	openFile@a+1
  4319  0085  0021               	movlb	1	; select bank1
  4320  0086  0820               	movf	_address^(0+128),w
  4321  0087  0020               	movlb	0	; select bank0
  4322  0088  00AF               	movwf	openFile@a
  4323  0089  3182  228B  3180   	fcall	_openFile
  4324                           
  4325                           ;main.c: 152:         if(channels != 2) samplePending = 0;
  4326  008C  3002               	movlw	2
  4327  008D  0021               	movlb	1	; select bank1
  4328  008E  0630               	xorwf	_channels^(0+128),w
  4329  008F  0431               	iorwf	(_channels+1)^(0+128),w
  4330  0090  1903               	btfsc	3,2
  4331  0091  2894               	goto	l2394
  4332  0092  0020               	movlb	0	; select bank0
  4333  0093  01E9               	clrf	_samplePending
  4334  0094                     l2394:	
  4335                           
  4336                           ;main.c: 153:         timer_Init(sampRate);
  4337  0094  0021               	movlb	1	; select bank1
  4338  0095  082B               	movf	(_sampRate+3)^(0+128),w
  4339  0096  00F5               	movwf	timer_Init@rate+3
  4340  0097  082A               	movf	(_sampRate+2)^(0+128),w
  4341  0098  00F4               	movwf	timer_Init@rate+2
  4342  0099  0829               	movf	(_sampRate+1)^(0+128),w
  4343  009A  00F3               	movwf	timer_Init@rate+1
  4344  009B  0828               	movf	_sampRate^(0+128),w
  4345  009C  00F2               	movwf	timer_Init@rate
  4346  009D  3184  2461  3180   	fcall	_timer_Init
  4347  00A0                     l2396:	
  4348                           
  4349                           ;main.c: 181:             if (state == OPEN) {
  4350  00A0  0020               	movlb	0	; select bank0
  4351  00A1  086C               	movf	_state,w
  4352  00A2  1D03               	btfss	3,2
  4353  00A3  28A0               	goto	l2396
  4354                           
  4355                           ;main.c: 182:                 if (blockIndex >= 512) {
  4356  00A4  0021               	movlb	1	; select bank1
  4357  00A5  082D               	movf	(_blockIndex+1)^(0+128),w
  4358  00A6  3A80               	xorlw	128
  4359  00A7  00B7               	movwf	??_main^(0+128)
  4360  00A8  3082               	movlw	130
  4361  00A9  0237               	subwf	??_main^(0+128),w
  4362  00AA  1D03               	skipz
  4363  00AB  28AE               	goto	u935
  4364  00AC  3000               	movlw	0
  4365  00AD  022C               	subwf	_blockIndex^(0+128),w
  4366  00AE                     u935:	
  4367  00AE  1C03               	skipc
  4368  00AF  28CB               	goto	l293
  4369                           
  4370                           ;main.c: 184:                     ++address;
  4371  00B0  3001               	movlw	1
  4372  00B1  0021               	movlb	1	; select bank1
  4373  00B2  07A0               	addwf	_address^(0+128),f
  4374  00B3  3000               	movlw	0
  4375  00B4  3DA1               	addwfc	(_address+1)^(0+128),f
  4376  00B5  3000               	movlw	0
  4377  00B6  3DA2               	addwfc	(_address+2)^(0+128),f
  4378  00B7  3000               	movlw	0
  4379  00B8  3DA3               	addwfc	(_address+3)^(0+128),f
  4380                           
  4381                           ;main.c: 185:                     blockIndex = 0;
  4382  00B9  01AC               	clrf	_blockIndex^(0+128)
  4383  00BA  01AD               	clrf	(_blockIndex+1)^(0+128)
  4384                           
  4385                           ;main.c: 186:                     SPI_Read();
  4386  00BB  3186  260A  3180   	fcall	_SPI_Read
  4387                           
  4388                           ;main.c: 187:                     SPI_Read();
  4389  00BE  3186  260A  3180   	fcall	_SPI_Read
  4390                           
  4391                           ;main.c: 188:                     SPI_Read();
  4392  00C1  3186  260A  3180   	fcall	_SPI_Read
  4393                           
  4394                           ;main.c: 189:                     SPI_Read();
  4395  00C4  3186  260A  3180   	fcall	_SPI_Read
  4396                           
  4397                           ;main.c: 190:                     check_buttons = 1;
  4398  00C7  0020               	movlb	0	; select bank0
  4399  00C8  01E8               	clrf	_check_buttons
  4400  00C9  0AE8               	incf	_check_buttons,f
  4401                           
  4402                           ;main.c: 193:                 } else {
  4403  00CA  28A0               	goto	l2396
  4404  00CB                     l293:	
  4405                           
  4406                           ;main.c: 194:                     PIE1bits.TMR2IE = 0;
  4407  00CB  0021               	movlb	1	; select bank1
  4408  00CC  1091               	bcf	17,1	;volatile
  4409                           
  4410                           ;main.c: 195:                     if (buffer_write_index != buffer_read_index) {
  4411  00CD  0020               	movlb	0	; select bank0
  4412  00CE  0862               	movf	_buffer_read_index+1,w
  4413  00CF  067B               	xorwf	_buffer_write_index+1,w
  4414  00D0  1D03               	skipz
  4415  00D1  28D4               	goto	u945
  4416  00D2  0861               	movf	_buffer_read_index,w
  4417  00D3  067A               	xorwf	_buffer_write_index,w
  4418  00D4                     u945:	
  4419  00D4  1903               	skipnz
  4420  00D5  2983               	goto	l295
  4421                           
  4422                           ;main.c: 196:                         PIE1bits.TMR2IE = 1;
  4423  00D6  0021               	movlb	1	; select bank1
  4424  00D7  1491               	bsf	17,1	;volatile
  4425                           
  4426                           ;main.c: 198:                         switch (channels) {
  4427  00D8  296C               	goto	l2448
  4428  00D9                     l2418:	
  4429                           
  4430                           ;main.c: 200:                                 SSP1BUF = 0xFF;
  4431  00D9  30FF               	movlw	255
  4432  00DA  0024               	movlb	4	; select bank4
  4433  00DB  0091               	movwf	17	;volatile
  4434  00DC                     l298:	
  4435                           ;main.c: 201:                                 while(SSP1STATbits.BF == 0);
  4436                           
  4437  00DC  1C14               	btfss	20,0	;volatile
  4438  00DD  28DC               	goto	l298
  4439                           
  4440                           ;main.c: 202:                                 sdata[0] = SSP1BUF;
  4441  00DE  0811               	movf	17,w	;volatile
  4442  00DF  0021               	movlb	1	; select bank1
  4443  00E0  00B7               	movwf	??_main^(0+128)
  4444  00E1  0837               	movf	??_main^(0+128),w
  4445  00E2  0020               	movlb	0	; select bank0
  4446  00E3  00E3               	movwf	_sdata
  4447                           
  4448                           ;main.c: 204:                                 SSP1BUF = 0xFF;
  4449  00E4  30FF               	movlw	255
  4450  00E5  0024               	movlb	4	; select bank4
  4451  00E6  0091               	movwf	17	;volatile
  4452  00E7                     l301:	
  4453                           ;main.c: 205:                                 while(SSP1STATbits.BF == 0);
  4454                           
  4455  00E7  1C14               	btfss	20,0	;volatile
  4456  00E8  28E7               	goto	l301
  4457                           
  4458                           ;main.c: 206:                                 sdata[1] = SSP1BUF;
  4459  00E9  0811               	movf	17,w	;volatile
  4460  00EA  0021               	movlb	1	; select bank1
  4461  00EB  00B7               	movwf	??_main^(0+128)
  4462  00EC  0837               	movf	??_main^(0+128),w
  4463  00ED  0020               	movlb	0	; select bank0
  4464  00EE  00E4               	movwf	_sdata+1
  4465                           
  4466                           ;main.c: 208:                                 lbuffer[ buffer_write_index ] = *((short*)
      +                          sdata) - 0x8000;
  4467  00EF  3063               	movlw	low (_sdata| 0)
  4468  00F0  0086               	movwf	6
  4469  00F1  0187               	clrf	7
  4470  00F2  3F40               	moviw [0]fsr1
  4471  00F3  0021               	movlb	1	; select bank1
  4472  00F4  00B7               	movwf	??_main^(0+128)
  4473  00F5  3F41               	moviw [1]fsr1
  4474  00F6  00B8               	movwf	(??_main^(0+128)+1)
  4475  00F7  0837               	movf	??_main^(0+128),w
  4476  00F8  3E00               	addlw	0
  4477  00F9  00B9               	movwf	(??_main+2)^(0+128)
  4478  00FA  3080               	movlw	128
  4479  00FB  3D38               	addwfc	(??_main+1)^(0+128),w
  4480  00FC  00BA               	movwf	(??_main+3)^(0+128)
  4481  00FD  357A               	lslf	_buffer_write_index,w
  4482  00FE  3E20               	addlw	(low (_lbuffer| (0+256)))& (0+255)
  4483  00FF  0086               	movwf	6
  4484  0100  3001               	movlw	1	; select bank2/3
  4485  0101  0087               	movwf	7
  4486  0102  0839               	movf	(??_main+2)^(0+128),w
  4487  0103  3FC0               	movwi [0]fsr1
  4488  0104  083A               	movf	(??_main+3)^(0+128),w
  4489  0105  3FC1               	movwi [1]fsr1
  4490                           
  4491                           ;main.c: 209:                                 ++buffer_write_index;
  4492  0106  3001               	movlw	1
  4493  0107  07FA               	addwf	_buffer_write_index,f
  4494  0108  3000               	movlw	0
  4495  0109  3DFB               	addwfc	_buffer_write_index+1,f
  4496                           
  4497                           ;main.c: 225:                             break;
  4498  010A  2979               	goto	l2450
  4499  010B                     l2428:	
  4500                           
  4501                           ;main.c: 227:                                 if (samplePending) {
  4502  010B  0020               	movlb	0	; select bank0
  4503  010C  0869               	movf	_samplePending,w
  4504  010D  1903               	btfsc	3,2
  4505  010E  293D               	goto	l306
  4506                           
  4507                           ;main.c: 228:                                     samplePending = 0;
  4508  010F  01E9               	clrf	_samplePending
  4509                           
  4510                           ;main.c: 229:                                     sdata[0] = SPI_Read();
  4511  0110  3186  260A  3180   	fcall	_SPI_Read
  4512  0113  0021               	movlb	1	; select bank1
  4513  0114  00B7               	movwf	??_main^(0+128)
  4514  0115  0837               	movf	??_main^(0+128),w
  4515  0116  0020               	movlb	0	; select bank0
  4516  0117  00E3               	movwf	_sdata
  4517                           
  4518                           ;main.c: 230:                                     sdata[1] = SPI_Read();
  4519  0118  3186  260A  3180   	fcall	_SPI_Read
  4520  011B  0021               	movlb	1	; select bank1
  4521  011C  00B7               	movwf	??_main^(0+128)
  4522  011D  0837               	movf	??_main^(0+128),w
  4523  011E  0020               	movlb	0	; select bank0
  4524  011F  00E4               	movwf	_sdata+1
  4525                           
  4526                           ;main.c: 231:                                     rbuffer[ buffer_write_index++ ] = *((s
      +                          hort*)sdata) - 0x8000;
  4527  0120  3063               	movlw	low (_sdata| 0)
  4528  0121  0086               	movwf	6
  4529  0122  0187               	clrf	7
  4530  0123  3F40               	moviw [0]fsr1
  4531  0124  0021               	movlb	1	; select bank1
  4532  0125  00B7               	movwf	??_main^(0+128)
  4533  0126  3F41               	moviw [1]fsr1
  4534  0127  00B8               	movwf	(??_main^(0+128)+1)
  4535  0128  0837               	movf	??_main^(0+128),w
  4536  0129  3E00               	addlw	0
  4537  012A  00B9               	movwf	(??_main+2)^(0+128)
  4538  012B  3080               	movlw	128
  4539  012C  3D38               	addwfc	(??_main+1)^(0+128),w
  4540  012D  00BA               	movwf	(??_main+3)^(0+128)
  4541  012E  357A               	lslf	_buffer_write_index,w
  4542  012F  3EA0               	addlw	(low (_rbuffer| (0+256)))& (0+255)
  4543  0130  0086               	movwf	6
  4544  0131  3001               	movlw	1	; select bank3/4
  4545  0132  0087               	movwf	7
  4546  0133  0839               	movf	(??_main+2)^(0+128),w
  4547  0134  3FC0               	movwi [0]fsr1
  4548  0135  083A               	movf	(??_main+3)^(0+128),w
  4549  0136  3FC1               	movwi [1]fsr1
  4550  0137  3001               	movlw	1
  4551  0138  07FA               	addwf	_buffer_write_index,f
  4552  0139  3000               	movlw	0
  4553  013A  3DFB               	addwfc	_buffer_write_index+1,f
  4554                           
  4555                           ;main.c: 232:                                     __nop();
  4556  013B  0000               	nop
  4557                           
  4558                           ;main.c: 233:                                 } else {
  4559  013C  2979               	goto	l2450
  4560  013D                     l306:	
  4561                           
  4562                           ;main.c: 234:                                     samplePending = 1;
  4563  013D  01E9               	clrf	_samplePending
  4564  013E  0AE9               	incf	_samplePending,f
  4565                           
  4566                           ;main.c: 235:                                     sdata[0] = SPI_Read();
  4567  013F  3186  260A  3180   	fcall	_SPI_Read
  4568  0142  0021               	movlb	1	; select bank1
  4569  0143  00B7               	movwf	??_main^(0+128)
  4570  0144  0837               	movf	??_main^(0+128),w
  4571  0145  0020               	movlb	0	; select bank0
  4572  0146  00E3               	movwf	_sdata
  4573                           
  4574                           ;main.c: 236:                                     sdata[1] = SPI_Read();
  4575  0147  3186  260A  3180   	fcall	_SPI_Read
  4576  014A  0021               	movlb	1	; select bank1
  4577  014B  00B7               	movwf	??_main^(0+128)
  4578  014C  0837               	movf	??_main^(0+128),w
  4579  014D  0020               	movlb	0	; select bank0
  4580  014E  00E4               	movwf	_sdata+1
  4581                           
  4582                           ;main.c: 237:                                     lbuffer[ buffer_write_index ] = *((sho
      +                          rt*)sdata) - 0x8000;
  4583  014F  3063               	movlw	low (_sdata| 0)
  4584  0150  0086               	movwf	6
  4585  0151  0187               	clrf	7
  4586  0152  3F40               	moviw [0]fsr1
  4587  0153  0021               	movlb	1	; select bank1
  4588  0154  00B7               	movwf	??_main^(0+128)
  4589  0155  3F41               	moviw [1]fsr1
  4590  0156  00B8               	movwf	(??_main^(0+128)+1)
  4591  0157  0837               	movf	??_main^(0+128),w
  4592  0158  3E00               	addlw	0
  4593  0159  00B9               	movwf	(??_main+2)^(0+128)
  4594  015A  3080               	movlw	128
  4595  015B  3D38               	addwfc	(??_main+1)^(0+128),w
  4596  015C  00BA               	movwf	(??_main+3)^(0+128)
  4597  015D  357A               	lslf	_buffer_write_index,w
  4598  015E  3E20               	addlw	(low (_lbuffer| (0+256)))& (0+255)
  4599  015F  0086               	movwf	6
  4600  0160  3001               	movlw	1	; select bank2/3
  4601  0161  0087               	movwf	7
  4602  0162  0839               	movf	(??_main+2)^(0+128),w
  4603  0163  3FC0               	movwi [0]fsr1
  4604  0164  083A               	movf	(??_main+3)^(0+128),w
  4605  0165  3FC1               	movwi [1]fsr1
  4606  0166  2979               	goto	l2450
  4607  0167                     l2446:	
  4608                           
  4609                           ;main.c: 241:                                 error(CHANNELS);
  4610  0167  3007               	movlw	7
  4611  0168  3185  25F3  3180   	fcall	_error
  4612                           
  4613                           ;main.c: 242:                         }
  4614  016B  2979               	goto	l2450
  4615  016C                     l2448:	
  4616                           
  4617                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4618                           ; Switch size 1, requested type "simple"
  4619                           ; Number of cases is 1, Range of values is 0 to 0
  4620                           ; switch strategies available:
  4621                           ; Name         Instructions Cycles
  4622                           ; simple_byte            4     3 (average)
  4623                           ; direct_byte            8     6 (fixed)
  4624                           ; jumptable            260     6 (fixed)
  4625                           ;	Chosen strategy is simple_byte
  4626  016C  0831               	movf	(_channels+1)^(0+128),w
  4627  016D  3A00               	xorlw	0	; case 0
  4628  016E  1903               	skipnz
  4629  016F  2971               	goto	l2628
  4630  0170  2967               	goto	l2446
  4631  0171                     l2628:	
  4632                           
  4633                           ; Switch size 1, requested type "simple"
  4634                           ; Number of cases is 2, Range of values is 1 to 2
  4635                           ; switch strategies available:
  4636                           ; Name         Instructions Cycles
  4637                           ; simple_byte            7     4 (average)
  4638                           ; direct_byte           13     9 (fixed)
  4639                           ; jumptable            263     9 (fixed)
  4640                           ;	Chosen strategy is simple_byte
  4641  0171  0830               	movf	_channels^(0+128),w
  4642  0172  3A01               	xorlw	1	; case 1
  4643  0173  1903               	skipnz
  4644  0174  28D9               	goto	l2418
  4645  0175  3A03               	xorlw	3	; case 2
  4646  0176  1903               	skipnz
  4647  0177  290B               	goto	l2428
  4648  0178  2967               	goto	l2446
  4649  0179                     l2450:	
  4650                           
  4651                           ;main.c: 246:                         buffer_write_index %= 32;
  4652  0179  301F               	movlw	31
  4653  017A  05FA               	andwf	_buffer_write_index,f
  4654  017B  3000               	movlw	0
  4655  017C  05FB               	andwf	_buffer_write_index+1,f
  4656                           
  4657                           ;main.c: 247:                         blockIndex += 2;
  4658  017D  3002               	movlw	2
  4659  017E  0021               	movlb	1	; select bank1
  4660  017F  07AC               	addwf	_blockIndex^(0+128),f
  4661  0180  3000               	movlw	0
  4662  0181  3DAD               	addwfc	(_blockIndex+1)^(0+128),f
  4663                           
  4664                           ;main.c: 249:                     } else PIE1bits.TMR2IE = 1;
  4665  0182  28A0               	goto	l2396
  4666  0183                     l295:	
  4667  0183  0021               	movlb	1	; select bank1
  4668  0184  1491               	bsf	17,1	;volatile
  4669  0185  28A0               	goto	l2396
  4670  0186                     __end_of_main:	
  4671                           
  4672                           	psect	text1
  4673  0461                     __ptext1:	
  4674 ;; *************** function _timer_Init *****************
  4675 ;; Defined at:
  4676 ;;		line 8 in file "timer.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;  rate            4    2[COMMON] long 
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;		None
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  2    2[COMMON] int 
  4683 ;; Registers used:
  4684 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4693 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4694 ;;Total ram usage:        4 bytes
  4695 ;; Hardware stack levels used:    1
  4696 ;; Hardware stack levels required when called:    1
  4697 ;; This function calls:
  4698 ;;		Nothing
  4699 ;; This function is called by:
  4700 ;;		_main
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           
  4705                           ;psect for function _timer_Init
  4706  0461                     _timer_Init:	
  4707                           
  4708                           ;timer.c: 9:     PIR1bits.TMR2IF = 0;
  4709                           
  4710                           ;incstack = 0
  4711                           ; Regs used in _timer_Init: [wreg-fsr0h+status,2+status,0]
  4712  0461  0020               	movlb	0	; select bank0
  4713  0462  1091               	bcf	17,1	;volatile
  4714                           
  4715                           ;timer.c: 10:     PIE1bits.TMR2IE = 1;
  4716  0463  0021               	movlb	1	; select bank1
  4717  0464  1491               	bsf	17,1	;volatile
  4718                           
  4719                           ;timer.c: 11:     INTCONbits.PEIE = 1;
  4720  0465  170B               	bsf	11,6	;volatile
  4721                           
  4722                           ;timer.c: 12:     INTCONbits.GIE = 1;
  4723  0466  178B               	bsf	11,7	;volatile
  4724                           
  4725                           ;timer.c: 14:     switch (rate) {
  4726  0467  2C92               	goto	l1822
  4727  0468                     l1794:	
  4728                           
  4729                           ;timer.c: 16:             T2PR = 100;
  4730  0468  3064               	movlw	100
  4731  0469  0029               	movlb	9	; select bank9
  4732  046A  0094               	movwf	20	;volatile
  4733                           
  4734                           ;timer.c: 17:             T2CLKCON = 0x03;
  4735  046B  3003               	movlw	3
  4736  046C  0097               	movwf	23	;volatile
  4737                           
  4738                           ;timer.c: 18:             T2CON = 0x89;
  4739  046D  3089               	movlw	137
  4740  046E  0095               	movwf	21	;volatile
  4741                           
  4742                           ;timer.c: 19:             PIR1bits.TMR2IF = 0;
  4743  046F  0020               	movlb	0	; select bank0
  4744  0470  1091               	bcf	17,1	;volatile
  4745  0471  0008               	return
  4746  0472                     l1802:	
  4747                           
  4748                           ;timer.c: 23:             T2PR = 32;
  4749  0472  3020               	movlw	32
  4750  0473  0029               	movlb	9	; select bank9
  4751  0474  0094               	movwf	20	;volatile
  4752                           
  4753                           ;timer.c: 24:             T2CLKCON = 0x03;
  4754  0475  3003               	movlw	3
  4755  0476  0097               	movwf	23	;volatile
  4756                           
  4757                           ;timer.c: 25:             T2CON = 0x8A;
  4758  0477  308A               	movlw	138
  4759  0478  0095               	movwf	21	;volatile
  4760  0479  0008               	return
  4761  047A                     l1808:	
  4762                           
  4763                           ;timer.c: 29:             T2PR = 111;
  4764  047A  306F               	movlw	111
  4765  047B  0029               	movlb	9	; select bank9
  4766  047C  0094               	movwf	20	;volatile
  4767                           
  4768                           ;timer.c: 30:             T2CLKCON = 0x03;
  4769  047D  3003               	movlw	3
  4770  047E  0097               	movwf	23	;volatile
  4771                           
  4772                           ;timer.c: 31:             T2CON = 0x82;
  4773  047F  3082               	movlw	130
  4774  0480  0095               	movwf	21	;volatile
  4775  0481  0008               	return
  4776  0482                     l1814:	
  4777                           
  4778                           ;timer.c: 35:             T2PR = 100;
  4779  0482  3064               	movlw	100
  4780  0483  0029               	movlb	9	; select bank9
  4781  0484  0094               	movwf	20	;volatile
  4782                           
  4783                           ;timer.c: 36:             T2CLKCON = 0x03;
  4784  0485  3003               	movlw	3
  4785  0486  0097               	movwf	23	;volatile
  4786                           
  4787                           ;timer.c: 37:             T2CON = 0x84;
  4788  0487  3084               	movlw	132
  4789  0488  0095               	movwf	21	;volatile
  4790                           
  4791                           ;timer.c: 38:         break;
  4792  0489  0008               	return
  4793  048A                     l1816:	
  4794                           
  4795                           ;timer.c: 40:             T2PR = 65;
  4796  048A  3041               	movlw	65
  4797  048B  0029               	movlb	9	; select bank9
  4798  048C  0094               	movwf	20	;volatile
  4799                           
  4800                           ;timer.c: 41:             T2CLKCON = 0x03;
  4801  048D  3003               	movlw	3
  4802  048E  0097               	movwf	23	;volatile
  4803                           
  4804                           ;timer.c: 42:             T2CON = 0x8A;
  4805  048F  308A               	movlw	138
  4806  0490  0095               	movwf	21	;volatile
  4807  0491  0008               	return
  4808  0492                     l1822:	
  4809                           
  4810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4811                           ; Switch size 1, requested type "simple"
  4812                           ; Number of cases is 1, Range of values is 0 to 0
  4813                           ; switch strategies available:
  4814                           ; Name         Instructions Cycles
  4815                           ; simple_byte            4     3 (average)
  4816                           ; direct_byte            8     6 (fixed)
  4817                           ; jumptable            260     6 (fixed)
  4818                           ;	Chosen strategy is simple_byte
  4819  0492  0875               	movf	timer_Init@rate+3,w
  4820  0493  3A00               	xorlw	0	; case 0
  4821  0494  1903               	skipnz
  4822  0495  2CC1               	goto	l2632
  4823  0496  2CC6               	goto	l138
  4824  0497                     l2630:	
  4825                           
  4826                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
  4827                           ; Switch size 1, requested type "simple"
  4828                           ; Number of cases is 5, Range of values is 62 to 187
  4829                           ; switch strategies available:
  4830                           ; Name         Instructions Cycles
  4831                           ; simple_byte           16     9 (average)
  4832                           ; direct_byte          261     9 (fixed)
  4833                           ; jumptable            263     9 (fixed)
  4834                           ;	Chosen strategy is simple_byte
  4835  0497  0873               	movf	timer_Init@rate+1,w
  4836  0498  3A3E               	xorlw	62	; case 62
  4837  0499  1903               	skipnz
  4838  049A  2CA8               	goto	l2634
  4839  049B  3A68               	xorlw	104	; case 86
  4840  049C  1903               	skipnz
  4841  049D  2CAD               	goto	l2636
  4842  049E  3A2B               	xorlw	43	; case 125
  4843  049F  1903               	skipnz
  4844  04A0  2CB2               	goto	l2638
  4845  04A1  3AD1               	xorlw	209	; case 172
  4846  04A2  1903               	skipnz
  4847  04A3  2CB7               	goto	l2640
  4848  04A4  3A17               	xorlw	23	; case 187
  4849  04A5  1903               	skipnz
  4850  04A6  2CBC               	goto	l2642
  4851  04A7  2CC6               	goto	l138
  4852  04A8                     l2634:	
  4853                           
  4854                           ; Switch size 1, requested type "simple"
  4855                           ; Number of cases is 1, Range of values is 128 to 128
  4856                           ; switch strategies available:
  4857                           ; Name         Instructions Cycles
  4858                           ; simple_byte            4     3 (average)
  4859                           ; direct_byte           11     9 (fixed)
  4860                           ; jumptable            263     9 (fixed)
  4861                           ;	Chosen strategy is simple_byte
  4862  04A8  0872               	movf	timer_Init@rate,w
  4863  04A9  3A80               	xorlw	128	; case 128
  4864  04AA  1903               	skipnz
  4865  04AB  2C68               	goto	l1794
  4866  04AC  2CC6               	goto	l138
  4867  04AD                     l2636:	
  4868                           
  4869                           ; Switch size 1, requested type "simple"
  4870                           ; Number of cases is 1, Range of values is 34 to 34
  4871                           ; switch strategies available:
  4872                           ; Name         Instructions Cycles
  4873                           ; simple_byte            4     3 (average)
  4874                           ; direct_byte           11     9 (fixed)
  4875                           ; jumptable            263     9 (fixed)
  4876                           ;	Chosen strategy is simple_byte
  4877  04AD  0872               	movf	timer_Init@rate,w
  4878  04AE  3A22               	xorlw	34	; case 34
  4879  04AF  1903               	skipnz
  4880  04B0  2C8A               	goto	l1816
  4881  04B1  2CC6               	goto	l138
  4882  04B2                     l2638:	
  4883                           
  4884                           ; Switch size 1, requested type "simple"
  4885                           ; Number of cases is 1, Range of values is 0 to 0
  4886                           ; switch strategies available:
  4887                           ; Name         Instructions Cycles
  4888                           ; simple_byte            4     3 (average)
  4889                           ; direct_byte            8     6 (fixed)
  4890                           ; jumptable            260     6 (fixed)
  4891                           ;	Chosen strategy is simple_byte
  4892  04B2  0872               	movf	timer_Init@rate,w
  4893  04B3  3A00               	xorlw	0	; case 0
  4894  04B4  1903               	skipnz
  4895  04B5  2C82               	goto	l1814
  4896  04B6  2CC6               	goto	l138
  4897  04B7                     l2640:	
  4898                           
  4899                           ; Switch size 1, requested type "simple"
  4900                           ; Number of cases is 1, Range of values is 68 to 68
  4901                           ; switch strategies available:
  4902                           ; Name         Instructions Cycles
  4903                           ; simple_byte            4     3 (average)
  4904                           ; direct_byte           11     9 (fixed)
  4905                           ; jumptable            263     9 (fixed)
  4906                           ;	Chosen strategy is simple_byte
  4907  04B7  0872               	movf	timer_Init@rate,w
  4908  04B8  3A44               	xorlw	68	; case 68
  4909  04B9  1903               	skipnz
  4910  04BA  2C72               	goto	l1802
  4911  04BB  2CC6               	goto	l138
  4912  04BC                     l2642:	
  4913                           
  4914                           ; Switch size 1, requested type "simple"
  4915                           ; Number of cases is 1, Range of values is 128 to 128
  4916                           ; switch strategies available:
  4917                           ; Name         Instructions Cycles
  4918                           ; simple_byte            4     3 (average)
  4919                           ; direct_byte           11     9 (fixed)
  4920                           ; jumptable            263     9 (fixed)
  4921                           ;	Chosen strategy is simple_byte
  4922  04BC  0872               	movf	timer_Init@rate,w
  4923  04BD  3A80               	xorlw	128	; case 128
  4924  04BE  1903               	skipnz
  4925  04BF  2C7A               	goto	l1808
  4926  04C0  2CC6               	goto	l138
  4927  04C1                     l2632:	
  4928                           
  4929                           ; Switch size 1, requested type "simple"
  4930                           ; Number of cases is 1, Range of values is 0 to 0
  4931                           ; switch strategies available:
  4932                           ; Name         Instructions Cycles
  4933                           ; simple_byte            4     3 (average)
  4934                           ; direct_byte            8     6 (fixed)
  4935                           ; jumptable            260     6 (fixed)
  4936                           ;	Chosen strategy is simple_byte
  4937  04C1  0874               	movf	timer_Init@rate+2,w
  4938  04C2  3A00               	xorlw	0	; case 0
  4939  04C3  1903               	skipnz
  4940  04C4  2C97               	goto	l2630
  4941  04C5  2CC6               	goto	l138
  4942  04C6                     l138:	
  4943  04C6  0008               	return
  4944  04C7                     __end_of_timer_Init:	
  4945                           
  4946                           	psect	text2
  4947  028B                     __ptext2:	
  4948 ;; *************** function _openFile *****************
  4949 ;; Defined at:
  4950 ;;		line 75 in file "main.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;  a               4   15[BANK0 ] long 
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;  data            8   29[BANK0 ] struct .
  4955 ;;  fmt            28   37[BANK0 ] struct .
  4956 ;;  riff            8   20[BANK0 ] struct .
  4957 ;;  response        1   28[BANK0 ] unsigned char 
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      void 
  4960 ;; Registers used:
  4961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4967 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4968 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4969 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4970 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4971 ;;Total ram usage:       50 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    4
  4974 ;; This function calls:
  4975 ;;		_SD_OpenStream
  4976 ;;		_SPI_Read
  4977 ;;		_error
  4978 ;;		_fourCCeq
  4979 ;;		_readBytes
  4980 ;; This function is called by:
  4981 ;;		_main
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           
  4986                           ;psect for function _openFile
  4987  028B                     _openFile:	
  4988                           
  4989                           ;main.c: 76:     SD_OpenStream(a);
  4990                           
  4991                           ;incstack = 0
  4992                           ; Regs used in _openFile: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4993  028B  0020               	movlb	0	; select bank0
  4994  028C  0832               	movf	openFile@a+3,w
  4995  028D  00A6               	movwf	SD_OpenStream@address+3
  4996  028E  0831               	movf	openFile@a+2,w
  4997  028F  00A5               	movwf	SD_OpenStream@address+2
  4998  0290  0830               	movf	openFile@a+1,w
  4999  0291  00A4               	movwf	SD_OpenStream@address+1
  5000  0292  082F               	movf	openFile@a,w
  5001  0293  00A3               	movwf	SD_OpenStream@address
  5002  0294  3185  255C  3182   	fcall	_SD_OpenStream
  5003                           
  5004                           ;main.c: 77:     state = OPEN;
  5005  0297  0020               	movlb	0	; select bank0
  5006  0298  01EC               	clrf	_state
  5007                           
  5008                           ;main.c: 78:     char response = 0xFF;
  5009  0299  30FF               	movlw	255
  5010  029A                     L1:	
  5011  029A  00B3               	movwf	??_openFile
  5012  029B  0833               	movf	??_openFile,w
  5013  029C  00BC               	movwf	openFile@response
  5014  029D  0A3C               	incf	openFile@response,w
  5015  029E  1D03               	btfss	3,2
  5016  029F  2AA5               	goto	l2312
  5017                           
  5018                           ;main.c: 79:     while (response == 0xFF) response = SPI_Read();
  5019  02A0  3186  260A  3182   	fcall	_SPI_Read
  5020  02A3  0020               	movlb	0	; select bank0
  5021  02A4  2A9A               	goto	L1
  5022  02A5                     l2312:	
  5023                           
  5024                           ;main.c: 80:     if (response != 0xFE) error(OPEN_BLOCK);
  5025  02A5  30FE               	movlw	254
  5026  02A6  063C               	xorwf	openFile@response,w
  5027  02A7  1903               	btfsc	3,2
  5028  02A8  2AAD               	goto	l2316
  5029  02A9  3000               	movlw	0
  5030  02AA  3185  25F3  3182   	fcall	_error
  5031  02AD                     l2316:	
  5032                           
  5033                           ;main.c: 82:     {;main.c: 83:         RiffTag riff;;main.c: 84:         readBytes((char
      +                          *)&riff, sizeof(riff));;
  5034  02AD  3008               	movlw	8
  5035  02AE  00F2               	movwf	readBytes@len
  5036  02AF  3000               	movlw	0
  5037  02B0  00F3               	movwf	readBytes@len+1
  5038  02B1  3034               	movlw	(low (openFile@riff| 0))& (0+255)
  5039  02B2  3184  24C7  3182   	fcall	_readBytes
  5040                           
  5041                           ;main.c: 85:         if (!fourCCeq(riff.ckID, "RIFF")) error(RIFF_HEADER);
  5042  02B5  302E               	movlw	low (STR_1| (0+32768))
  5043  02B6  00F2               	movwf	fourCCeq@b
  5044  02B7  3086               	movlw	high (STR_1| (0+32768))
  5045  02B8  00F3               	movwf	fourCCeq@b+1
  5046  02B9  3034               	movlw	(low (openFile@riff| 0))& (0+255)
  5047  02BA  3185  2537  3182   	fcall	_fourCCeq
  5048  02BD  3A00               	xorlw	0
  5049  02BE  1D03               	skipz
  5050  02BF  2AC4               	goto	l2322
  5051  02C0  3001               	movlw	1
  5052  02C1  3185  25F3  3182   	fcall	_error
  5053  02C4                     l2322:	
  5054                           
  5055                           ;main.c: 86:     }{;main.c: 87:         FmtChunk fmt;;main.c: 88:         readBytes((cha
      +                          r*)&fmt, sizeof(fmt));;
  5056  02C4  301C               	movlw	28
  5057  02C5  00F2               	movwf	readBytes@len
  5058  02C6  3000               	movlw	0
  5059  02C7  00F3               	movwf	readBytes@len+1
  5060  02C8  3045               	movlw	(low (openFile@fmt| 0))& (0+255)
  5061  02C9  3184  24C7  3182   	fcall	_readBytes
  5062                           
  5063                           ;main.c: 89:         if (!fourCCeq(fmt.WAVEID, "WAVE")) error(WAVE_HEADER);
  5064  02CC  3029               	movlw	low (STR_3| (0+32768))
  5065  02CD  00F2               	movwf	fourCCeq@b
  5066  02CE  3086               	movlw	high (STR_3| (0+32768))
  5067  02CF  00F3               	movwf	fourCCeq@b+1
  5068  02D0  3045               	movlw	(low (openFile@fmt| 0))& (0+255)
  5069  02D1  3185  2537  3182   	fcall	_fourCCeq
  5070  02D4  3A00               	xorlw	0
  5071  02D5  1D03               	skipz
  5072  02D6  2ADB               	goto	l2328
  5073  02D7  3002               	movlw	2
  5074  02D8  3185  25F3  3182   	fcall	_error
  5075  02DB                     l2328:	
  5076                           
  5077                           ;main.c: 90:         if (!fourCCeq(fmt.fmtHeader.ckID, "fmt ")) error(FMT_HEADER);
  5078  02DB  3086               	movlw	low (STR_5| (0+32768))
  5079  02DC  00F2               	movwf	fourCCeq@b
  5080  02DD  3082               	movlw	high (STR_5| (0+32768))
  5081  02DE  00F3               	movwf	fourCCeq@b+1
  5082  02DF  3049               	movlw	(low ((openFile@fmt| 0+4)))& (0+255)
  5083  02E0  3185  2537  3182   	fcall	_fourCCeq
  5084  02E3  3A00               	xorlw	0
  5085  02E4  1D03               	skipz
  5086  02E5  2AEA               	goto	l2332
  5087  02E6  3003               	movlw	3
  5088  02E7  3185  25F3  3182   	fcall	_error
  5089  02EA                     l2332:	
  5090                           
  5091                           ;main.c: 91:         if (fmt.formatTag != 0x0001) error(CODEC);
  5092  02EA  0020               	movlb	0	; select bank0
  5093  02EB  0351               	decf	openFile@fmt+12,w
  5094  02EC  0452               	iorwf	openFile@fmt+13,w
  5095  02ED  1903               	btfsc	3,2
  5096  02EE  2AF3               	goto	l2336
  5097  02EF  3004               	movlw	4
  5098  02F0  3185  25F3  3182   	fcall	_error
  5099  02F3                     l2336:	
  5100                           
  5101                           ;main.c: 92:         if (fmt.bitsPerSamp != 16) error(BIT_DEPTH);
  5102  02F3  3010               	movlw	16
  5103  02F4  0020               	movlb	0	; select bank0
  5104  02F5  065F               	xorwf	openFile@fmt+26,w
  5105  02F6  0460               	iorwf	openFile@fmt+27,w
  5106  02F7  1903               	btfsc	3,2
  5107  02F8  2AFD               	goto	l2340
  5108  02F9  3005               	movlw	5
  5109  02FA  3185  25F3  3182   	fcall	_error
  5110  02FD                     l2340:	
  5111                           
  5112                           ;main.c: 94:         channels = fmt.channels;
  5113  02FD  0020               	movlb	0	; select bank0
  5114  02FE  0854               	movf	openFile@fmt+15,w
  5115  02FF  0021               	movlb	1	; select bank1
  5116  0300  00B1               	movwf	(_channels+1)^(0+128)
  5117  0301  0020               	movlb	0	; select bank0
  5118  0302  0853               	movf	openFile@fmt+14,w
  5119  0303  0021               	movlb	1	; select bank1
  5120  0304  00B0               	movwf	_channels^(0+128)
  5121                           
  5122                           ;main.c: 95:         sampRate = fmt.sampRate;
  5123  0305  3010               	movlw	16
  5124  0306  3E45               	addlw	(low (openFile@fmt| 0))& (0+255)
  5125  0307  0086               	movwf	6
  5126  0308  0187               	clrf	7
  5127  0309  3F40               	moviw [0]fsr1
  5128  030A  00A8               	movwf	_sampRate^(0+128)
  5129  030B  3F41               	moviw [1]fsr1
  5130  030C  00A9               	movwf	(_sampRate+1)^(0+128)
  5131  030D  3F42               	moviw [2]fsr1
  5132  030E  00AA               	movwf	(_sampRate+2)^(0+128)
  5133  030F  3F43               	moviw [3]fsr1
  5134  0310  00AB               	movwf	(_sampRate+3)^(0+128)
  5135                           
  5136                           ;main.c: 97:     }{;main.c: 98:         RiffTag data;;main.c: 99:         readBytes((cha
      +                          r*)&data, sizeof(data));;
  5137  0311  3008               	movlw	8
  5138  0312  00F2               	movwf	readBytes@len
  5139  0313  3000               	movlw	0
  5140  0314  00F3               	movwf	readBytes@len+1
  5141  0315  303D               	movlw	(low (openFile@data| 0))& (0+255)
  5142  0316  3184  24C7  3182   	fcall	_readBytes
  5143                           
  5144                           ;main.c: 100:         if (!fourCCeq(data.ckID, "data")) error(DATA_HEADER);
  5145  0319  3033               	movlw	low (STR_7| (0+32768))
  5146  031A  00F2               	movwf	fourCCeq@b
  5147  031B  3086               	movlw	high (STR_7| (0+32768))
  5148  031C  00F3               	movwf	fourCCeq@b+1
  5149  031D  303D               	movlw	(low (openFile@data| 0))& (0+255)
  5150  031E  3185  2537  3182   	fcall	_fourCCeq
  5151  0321  3A00               	xorlw	0
  5152  0322  1D03               	skipz
  5153  0323  2B27               	goto	l2350
  5154  0324  3006               	movlw	6
  5155  0325  3185  25F3         	fcall	_error
  5156  0327                     l2350:	
  5157                           
  5158                           ;main.c: 101:         filesize = data.ckSize;
  5159  0327  3004               	movlw	4
  5160  0328  3E3D               	addlw	(low (openFile@data| 0))& (0+255)
  5161  0329  0086               	movwf	6
  5162  032A  0187               	clrf	7
  5163  032B  3F40               	moviw [0]fsr1
  5164  032C  0021               	movlb	1	; select bank1
  5165  032D  00A4               	movwf	_filesize^(0+128)
  5166  032E  3F41               	moviw [1]fsr1
  5167  032F  00A5               	movwf	(_filesize+1)^(0+128)
  5168  0330  3F42               	moviw [2]fsr1
  5169  0331  00A6               	movwf	(_filesize+2)^(0+128)
  5170  0332  3F43               	moviw [3]fsr1
  5171  0333  00A7               	movwf	(_filesize+3)^(0+128)
  5172                           
  5173                           ;main.c: 102:     };main.c: 103:         __nop();
  5174  0334  0000               	nop
  5175  0335  0008               	return
  5176  0336                     __end_of_openFile:	
  5177                           
  5178                           	psect	text3
  5179  04C7                     __ptext3:	
  5180 ;; *************** function _readBytes *****************
  5181 ;; Defined at:
  5182 ;;		line 61 in file "main.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  dest            1    wreg     PTR unsigned char 
  5185 ;;		 -> openFile@data(8), openFile@fmt(28), openFile@riff(8), 
  5186 ;;  len             2    2[COMMON] int 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;  dest            1    6[COMMON] PTR unsigned char 
  5189 ;;		 -> openFile@data(8), openFile@fmt(28), openFile@riff(8), 
  5190 ;;  i               2    7[COMMON] int 
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5201 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5202 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5203 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5204 ;;Total ram usage:        7 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; Hardware stack levels required when called:    3
  5207 ;; This function calls:
  5208 ;;		_SD_CloseBlock
  5209 ;;		_SPI_Read
  5210 ;; This function is called by:
  5211 ;;		_openFile
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           
  5216                           ;psect for function _readBytes
  5217  04C7                     _readBytes:	
  5218                           
  5219                           ;incstack = 0
  5220                           ; Regs used in _readBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5221                           ;readBytes@dest stored from wreg
  5222  04C7  00F6               	movwf	readBytes@dest
  5223                           
  5224                           ;main.c: 62:     for (int i=0; i<len; i++) {
  5225  04C8  01F7               	clrf	readBytes@i
  5226  04C9  01F8               	clrf	readBytes@i+1
  5227  04CA                     l1788:	
  5228  04CA  0878               	movf	readBytes@i+1,w
  5229  04CB  3A80               	xorlw	128
  5230  04CC  00F4               	movwf	??_readBytes
  5231  04CD  0873               	movf	readBytes@len+1,w
  5232  04CE  3A80               	xorlw	128
  5233  04CF  0274               	subwf	??_readBytes,w
  5234  04D0  1D03               	skipz
  5235  04D1  2CD4               	goto	u555
  5236  04D2  0872               	movf	readBytes@len,w
  5237  04D3  0277               	subwf	readBytes@i,w
  5238  04D4                     u555:	
  5239  04D4  1803               	btfsc	3,0
  5240  04D5  0008               	return
  5241                           
  5242                           ;main.c: 63:         dest[i] = SPI_Read();
  5243  04D6  3186  260A  3184   	fcall	_SPI_Read
  5244  04D9  00F4               	movwf	??_readBytes
  5245  04DA  0877               	movf	readBytes@i,w
  5246  04DB  0776               	addwf	readBytes@dest,w
  5247  04DC  00F5               	movwf	??_readBytes+1
  5248  04DD  0875               	movf	??_readBytes+1,w
  5249  04DE  0086               	movwf	6
  5250  04DF  0187               	clrf	7
  5251  04E0  0874               	movf	??_readBytes,w
  5252  04E1  0081               	movwf	1
  5253                           
  5254                           ;main.c: 64:         ++blockIndex;
  5255  04E2  3001               	movlw	1
  5256  04E3  0021               	movlb	1	; select bank1
  5257  04E4  07AC               	addwf	_blockIndex^(0+128),f
  5258  04E5  3000               	movlw	0
  5259  04E6  3DAD               	addwfc	(_blockIndex+1)^(0+128),f
  5260                           
  5261                           ;main.c: 65:         if (blockIndex >= 512) {
  5262  04E7  082D               	movf	(_blockIndex+1)^(0+128),w
  5263  04E8  3A80               	xorlw	128
  5264  04E9  00F4               	movwf	??_readBytes
  5265  04EA  3082               	movlw	130
  5266  04EB  0274               	subwf	??_readBytes,w
  5267  04EC  1D03               	skipz
  5268  04ED  2CF0               	goto	u545
  5269  04EE  3000               	movlw	0
  5270  04EF  022C               	subwf	_blockIndex^(0+128),w
  5271  04F0                     u545:	
  5272  04F0  1C03               	skipc
  5273  04F1  2D05               	goto	l1786
  5274                           
  5275                           ;main.c: 66:             SD_CloseBlock();
  5276  04F2  3185  25EA  3184   	fcall	_SD_CloseBlock
  5277                           
  5278                           ;main.c: 67:             ++address;
  5279  04F5  3001               	movlw	1
  5280  04F6  0021               	movlb	1	; select bank1
  5281  04F7  07A0               	addwf	_address^(0+128),f
  5282  04F8  3000               	movlw	0
  5283  04F9  3DA1               	addwfc	(_address+1)^(0+128),f
  5284  04FA  3000               	movlw	0
  5285  04FB  3DA2               	addwfc	(_address+2)^(0+128),f
  5286  04FC  3000               	movlw	0
  5287  04FD  3DA3               	addwfc	(_address+3)^(0+128),f
  5288                           
  5289                           ;main.c: 68:             blockIndex = 0;
  5290  04FE  01AC               	clrf	_blockIndex^(0+128)
  5291  04FF  01AD               	clrf	(_blockIndex+1)^(0+128)
  5292                           
  5293                           ;main.c: 69:             state = CLOSED;
  5294  0500  3003               	movlw	3
  5295  0501  00F4               	movwf	??_readBytes
  5296  0502  0874               	movf	??_readBytes,w
  5297  0503  0020               	movlb	0	; select bank0
  5298  0504  00EC               	movwf	_state
  5299  0505                     l1786:	
  5300                           
  5301                           ;main.c: 71:     }
  5302  0505  3001               	movlw	1
  5303  0506  07F7               	addwf	readBytes@i,f
  5304  0507  3000               	movlw	0
  5305  0508  3DF8               	addwfc	readBytes@i+1,f
  5306  0509  2CCA               	goto	l1788
  5307  050A                     __end_of_readBytes:	
  5308                           
  5309                           	psect	text4
  5310  05EA                     __ptext4:	
  5311 ;; *************** function _SD_CloseBlock *****************
  5312 ;; Defined at:
  5313 ;;		line 275 in file "SD.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;		None
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;		None
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  1    wreg      _Bool 
  5320 ;; Registers used:
  5321 ;;		wreg, status,2, status,0, pclath, cstack
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5331 ;;Total ram usage:        0 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; Hardware stack levels required when called:    2
  5334 ;; This function calls:
  5335 ;;		_SPI_Read
  5336 ;; This function is called by:
  5337 ;;		_readBytes
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           
  5342                           ;psect for function _SD_CloseBlock
  5343  05EA                     _SD_CloseBlock:	
  5344                           
  5345                           ;SD.c: 277:     SPI_Read();
  5346                           
  5347                           ;incstack = 0
  5348                           ; Regs used in _SD_CloseBlock: [wreg+status,2+status,0+pclath+cstack]
  5349  05EA  3186  260A  3185   	fcall	_SPI_Read
  5350                           
  5351                           ;SD.c: 278:     SPI_Read();
  5352  05ED  3186  260A  3185   	fcall	_SPI_Read
  5353                           
  5354                           ;SD.c: 280:     SPI_Read();
  5355  05F0  3186  260A         	fcall	_SPI_Read
  5356  05F2  0008               	return
  5357  05F3                     __end_of_SD_CloseBlock:	
  5358                           
  5359                           	psect	text5
  5360  0537                     __ptext5:	
  5361 ;; *************** function _fourCCeq *****************
  5362 ;; Defined at:
  5363 ;;		line 54 in file "main.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;  a               1    wreg     PTR unsigned char 
  5366 ;;		 -> openFile@data(8), fmt.fmtHeader(8), openFile@fmt(28), openFile@riff(8), 
  5367 ;;  b               2    2[COMMON] PTR unsigned char 
  5368 ;;		 -> STR_8(5), STR_6(5), STR_4(5), STR_2(5), 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  a               1    8[COMMON] PTR unsigned char 
  5371 ;;		 -> openFile@data(8), fmt.fmtHeader(8), openFile@fmt(28), openFile@riff(8), 
  5372 ;;  i               1    9[COMMON] unsigned char 
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  1    wreg      _Bool 
  5375 ;; Registers used:
  5376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5383 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5384 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5385 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5386 ;;Total ram usage:        8 bytes
  5387 ;; Hardware stack levels used:    1
  5388 ;; Hardware stack levels required when called:    1
  5389 ;; This function calls:
  5390 ;;		Nothing
  5391 ;; This function is called by:
  5392 ;;		_openFile
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           
  5397                           ;psect for function _fourCCeq
  5398  0537                     _fourCCeq:	
  5399                           
  5400                           ;incstack = 0
  5401                           ; Regs used in _fourCCeq: [wreg-fsr1h+status,2+status,0+pclath]
  5402                           ;fourCCeq@a stored from wreg
  5403  0537  00F8               	movwf	fourCCeq@a
  5404                           
  5405                           ;main.c: 55:     for (char i=0; i<4; i++) {
  5406  0538  01F9               	clrf	fourCCeq@i
  5407  0539                     l1756:	
  5408                           
  5409                           ;main.c: 56:         if (a[i] != b[i]) return 0;
  5410  0539  0873               	movf	fourCCeq@b+1,w
  5411  053A  00F5               	movwf	??_fourCCeq+1
  5412  053B  0872               	movf	fourCCeq@b,w
  5413  053C  00F4               	movwf	??_fourCCeq
  5414  053D  0879               	movf	fourCCeq@i,w
  5415  053E  0774               	addwf	??_fourCCeq,w
  5416  053F  0084               	movwf	4
  5417  0540  0875               	movf	??_fourCCeq+1,w
  5418  0541  1803               	skipnc
  5419  0542  0A75               	incf	??_fourCCeq+1,w
  5420  0543  0085               	movwf	5
  5421  0544  0800               	movf	0,w	;code access
  5422  0545  00F6               	movwf	??_fourCCeq+2
  5423  0546  0879               	movf	fourCCeq@i,w
  5424  0547  0778               	addwf	fourCCeq@a,w
  5425  0548  00F7               	movwf	??_fourCCeq+3
  5426  0549  0877               	movf	??_fourCCeq+3,w
  5427  054A  0086               	movwf	6
  5428  054B  0187               	clrf	7
  5429  054C  0801               	movf	1,w
  5430  054D  0676               	xorwf	??_fourCCeq+2,w
  5431  054E  1903               	skipnz
  5432  054F  2D52               	goto	l1762
  5433  0550  3000               	movlw	0
  5434  0551  0008               	return
  5435  0552                     l1762:	
  5436                           
  5437                           ;main.c: 57:     }
  5438  0552  3001               	movlw	1
  5439  0553  00F4               	movwf	??_fourCCeq
  5440  0554  0874               	movf	??_fourCCeq,w
  5441  0555  07F9               	addwf	fourCCeq@i,f
  5442  0556  3004               	movlw	4
  5443  0557  0279               	subwf	fourCCeq@i,w
  5444  0558  1C03               	skipc
  5445  0559  2D39               	goto	l1756
  5446                           
  5447                           ;main.c: 58:     return 1;
  5448  055A  3001               	movlw	1
  5449  055B  0008               	return
  5450  055C                     __end_of_fourCCeq:	
  5451                           
  5452                           	psect	text6
  5453  05F3                     __ptext6:	
  5454 ;; *************** function _error *****************
  5455 ;; Defined at:
  5456 ;;		line 17 in file "./error.h"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  e               1    wreg     enum E12104
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;  e               1    3[COMMON] enum E12104
  5461 ;; Return value:  Size  Location     Type
  5462 ;;                  1    wreg      void 
  5463 ;; Registers used:
  5464 ;;		wreg
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/0
  5467 ;;		On exit  : 0/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5472 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5473 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5474 ;;Total ram usage:        2 bytes
  5475 ;; Hardware stack levels used:    1
  5476 ;; Hardware stack levels required when called:    1
  5477 ;; This function calls:
  5478 ;;		Nothing
  5479 ;; This function is called by:
  5480 ;;		_openFile
  5481 ;;		_main
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485                           
  5486                           ;psect for function _error
  5487  05F3                     _error:	
  5488                           
  5489                           ;incstack = 0
  5490                           ; Regs used in _error: [wreg]
  5491                           ;error@e stored from wreg
  5492  05F3  00F3               	movwf	error@e
  5493                           
  5494                           ;./error.h: 19:     global_error = e;
  5495  05F4  0873               	movf	error@e,w
  5496  05F5  00F2               	movwf	??_error
  5497  05F6  0872               	movf	??_error,w
  5498  05F7  0020               	movlb	0	; select bank0
  5499  05F8  00EA               	movwf	_global_error
  5500                           
  5501                           ;./error.h: 20:     __nop();
  5502  05F9  0000               	nop
  5503  05FA  0008               	return
  5504  05FB                     __end_of_error:	
  5505                           
  5506                           	psect	text7
  5507  055C                     __ptext7:	
  5508 ;; *************** function _SD_OpenStream *****************
  5509 ;; Defined at:
  5510 ;;		line 284 in file "SD.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  address         4    3[BANK0 ] long 
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;  a               4   11[BANK0 ] struct .
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  1    wreg      _Bool 
  5517 ;; Registers used:
  5518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5524 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5525 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5526 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5527 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5528 ;;Total ram usage:       12 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:    3
  5531 ;; This function calls:
  5532 ;;		_SD_Check8bitResponse
  5533 ;;		_SD_Read8bitResponse
  5534 ;;		_SD_SendCommand
  5535 ;; This function is called by:
  5536 ;;		_openFile
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           
  5541                           ;psect for function _SD_OpenStream
  5542  055C                     _SD_OpenStream:	
  5543                           
  5544                           ;SD.c: 288:     BlockAddress a = *((BlockAddress*)(&address));
  5545                           
  5546                           ;incstack = 0
  5547                           ; Regs used in _SD_OpenStream: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5548  055C  0020               	movlb	0	; select bank0
  5549  055D  0826               	movf	SD_OpenStream@address+3,w
  5550  055E  00AE               	movwf	SD_OpenStream@a+3
  5551  055F  0825               	movf	SD_OpenStream@address+2,w
  5552  0560  00AD               	movwf	SD_OpenStream@a+2
  5553  0561  0824               	movf	SD_OpenStream@address+1,w
  5554  0562  00AC               	movwf	SD_OpenStream@a+1
  5555  0563  0823               	movf	SD_OpenStream@address,w
  5556  0564  00AB               	movwf	SD_OpenStream@a
  5557                           
  5558                           ;SD.c: 290:     SD_SendCommand(18, a.a3, a.a2, a.a1, a.a0);
  5559  0565  082E               	movf	SD_OpenStream@a+3,w
  5560  0566  00A7               	movwf	??_SD_OpenStream
  5561  0567  0827               	movf	??_SD_OpenStream,w
  5562  0568  00F3               	movwf	SD_SendCommand@ARG3
  5563  0569  082D               	movf	SD_OpenStream@a+2,w
  5564  056A  00A8               	movwf	??_SD_OpenStream+1
  5565  056B  0828               	movf	??_SD_OpenStream+1,w
  5566  056C  00F4               	movwf	SD_SendCommand@ARG2
  5567  056D  082C               	movf	SD_OpenStream@a+1,w
  5568  056E  00A9               	movwf	??_SD_OpenStream+2
  5569  056F  0829               	movf	??_SD_OpenStream+2,w
  5570  0570  00F5               	movwf	SD_SendCommand@ARG1
  5571  0571  082B               	movf	SD_OpenStream@a,w
  5572  0572  00AA               	movwf	??_SD_OpenStream+3
  5573  0573  082A               	movf	??_SD_OpenStream+3,w
  5574  0574  00F6               	movwf	SD_SendCommand@ARG0
  5575  0575  3012               	movlw	18
  5576  0576  3183  2336  3185   	fcall	_SD_SendCommand
  5577                           
  5578                           ;SD.c: 293:     SD_Read8bitResponse();
  5579  0579  3185  25CF  3185   	fcall	_SD_Read8bitResponse
  5580                           
  5581                           ;SD.c: 296:     if(SD_Check8bitResponse(0x00) == 0) return 0;
  5582  057C  3000               	movlw	0
  5583  057D  3185  25E0         	fcall	_SD_Check8bitResponse
  5584  057F  0008               	return
  5585  0580                     __end_of_SD_OpenStream:	
  5586                           
  5587                           	psect	text8
  5588  05B7                     __ptext8:	
  5589 ;; *************** function _init *****************
  5590 ;; Defined at:
  5591 ;;		line 107 in file "main.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;		None
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;		None
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  1    wreg      void 
  5598 ;; Registers used:
  5599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5609 ;;Total ram usage:        0 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    4
  5612 ;; This function calls:
  5613 ;;		_DAC_Init
  5614 ;;		_SD_Init
  5615 ;;		_SPI_Init
  5616 ;; This function is called by:
  5617 ;;		_main
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           
  5622                           ;psect for function _init
  5623  05B7                     _init:	
  5624                           
  5625                           ;main.c: 109:     OSCCON = 0xF4;
  5626                           
  5627                           ;incstack = 0
  5628                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5629  05B7  30F4               	movlw	244
  5630  05B8  0021               	movlb	1	; select bank1
  5631  05B9  009B               	movwf	27	;volatile
  5632  05BA                     l267:	
  5633                           ;main.c: 110:     while(OSCSTATbits.HFIOFR == 0);
  5634                           
  5635  05BA  1E1C               	btfss	28,4	;volatile
  5636  05BB  2DBA               	goto	l267
  5637                           
  5638                           ;main.c: 112:     TRISB1 = 1;
  5639  05BC  148D               	bsf	13,1	;volatile
  5640                           
  5641                           ;main.c: 113:     ANSB1 = 0;
  5642  05BD  0023               	movlb	3	; select bank3
  5643  05BE  108D               	bcf	13,1	;volatile
  5644                           
  5645                           ;main.c: 115:     TRISC0 = 0;
  5646  05BF  0021               	movlb	1	; select bank1
  5647  05C0  100E               	bcf	14,0	;volatile
  5648                           
  5649                           ;main.c: 116:     TRISC1 = 0;
  5650  05C1  108E               	bcf	14,1	;volatile
  5651                           
  5652                           ;main.c: 117:     TRISB0 = 0;
  5653  05C2  100D               	bcf	13,0	;volatile
  5654                           
  5655                           ;main.c: 118:     TRISC6 = 0;
  5656  05C3  130E               	bcf	14,6	;volatile
  5657                           
  5658                           ;main.c: 120:     PORTCbits.RC6 = 1;
  5659  05C4  0020               	movlb	0	; select bank0
  5660  05C5  170E               	bsf	14,6	;volatile
  5661                           
  5662                           ;main.c: 123:     SPI_Init();
  5663  05C6  3185  2580  3185   	fcall	_SPI_Init
  5664                           
  5665                           ;main.c: 124:     SD_Init();
  5666  05C9  3183  23D5  3185   	fcall	_SD_Init
  5667                           
  5668                           ;main.c: 125:     DAC_Init();
  5669  05CC  3186  2611         	fcall	_DAC_Init
  5670  05CE  0008               	return
  5671  05CF                     __end_of_init:	
  5672                           
  5673                           	psect	text9
  5674  0580                     __ptext9:	
  5675 ;; *************** function _SPI_Init *****************
  5676 ;; Defined at:
  5677 ;;		line 7 in file "SPI.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;		None
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;		None
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  1    wreg      void 
  5684 ;; Registers used:
  5685 ;;		wreg, status,2
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5695 ;;Total ram usage:        0 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; Hardware stack levels required when called:    1
  5698 ;; This function calls:
  5699 ;;		Nothing
  5700 ;; This function is called by:
  5701 ;;		_init
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705                           
  5706                           ;psect for function _SPI_Init
  5707  0580                     _SPI_Init:	
  5708                           
  5709                           ;SPI.c: 9:     TRISC2 = 0;
  5710                           
  5711                           ;incstack = 0
  5712                           ; Regs used in _SPI_Init: [wreg+status,2]
  5713  0580  0021               	movlb	1	; select bank1
  5714  0581  110E               	bcf	14,2	;volatile
  5715                           
  5716                           ;SPI.c: 10:     RC2PPS = 0x21;
  5717  0582  3021               	movlw	33
  5718  0583  003D               	movlb	29	; select bank29
  5719  0584  00A2               	movwf	34	;volatile
  5720                           
  5721                           ;SPI.c: 11:     SSPCLKPPS = 0x12;
  5722  0585  3012               	movlw	18
  5723  0586  003C               	movlb	28	; select bank28
  5724  0587  00BA               	movwf	58	;volatile
  5725                           
  5726                           ;SPI.c: 14:     TRISC3 = 1;
  5727  0588  0021               	movlb	1	; select bank1
  5728  0589  158E               	bsf	14,3	;volatile
  5729                           
  5730                           ;SPI.c: 15:     ANSC3 = 0;
  5731  058A  0023               	movlb	3	; select bank3
  5732  058B  118E               	bcf	14,3	;volatile
  5733                           
  5734                           ;SPI.c: 16:     SSPDATPPS = 0x13;
  5735  058C  3013               	movlw	19
  5736  058D  003C               	movlb	28	; select bank28
  5737  058E  00BB               	movwf	59	;volatile
  5738                           
  5739                           ;SPI.c: 19:     TRISC4 = 0;
  5740  058F  0021               	movlb	1	; select bank1
  5741  0590  120E               	bcf	14,4	;volatile
  5742                           
  5743                           ;SPI.c: 20:     RC4PPS = 0x23;
  5744  0591  3023               	movlw	35
  5745  0592  003D               	movlb	29	; select bank29
  5746  0593  00A4               	movwf	36	;volatile
  5747                           
  5748                           ;SPI.c: 23:     TRISC7 = 0;
  5749  0594  0021               	movlb	1	; select bank1
  5750  0595  138E               	bcf	14,7	;volatile
  5751                           
  5752                           ;SPI.c: 26:     SSP1STAT = 0x80;
  5753  0596  3080               	movlw	128
  5754  0597  0024               	movlb	4	; select bank4
  5755  0598  0094               	movwf	20	;volatile
  5756                           
  5757                           ;SPI.c: 29:     SSP1CON1 = 0x30;
  5758  0599  3030               	movlw	48
  5759  059A  0095               	movwf	21	;volatile
  5760                           
  5761                           ;SPI.c: 32:     SSP1ADD = 0x00;
  5762  059B  0192               	clrf	18	;volatile
  5763  059C  0008               	return
  5764  059D                     __end_of_SPI_Init:	
  5765                           
  5766                           	psect	text10
  5767  03D5                     __ptext10:	
  5768 ;; *************** function _SD_Init *****************
  5769 ;; Defined at:
  5770 ;;		line 11 in file "SD.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;		None
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;		None
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  1    wreg      void 
  5777 ;; Registers used:
  5778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5786 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5787 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5788 ;;Total ram usage:        1 bytes
  5789 ;; Hardware stack levels used:    1
  5790 ;; Hardware stack levels required when called:    3
  5791 ;; This function calls:
  5792 ;;		_SD_Check40bitResponse
  5793 ;;		_SD_Check8bitResponse
  5794 ;;		_SD_Read40bitResponse
  5795 ;;		_SD_Read8bitResponse
  5796 ;;		_SD_SendCommand
  5797 ;;		_SPI_Write
  5798 ;; This function is called by:
  5799 ;;		_init
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           
  5804                           ;psect for function _SD_Init
  5805  03D5                     _SD_Init:	
  5806                           
  5807                           ;SD.c: 14:     { PORTCbits.RC7 = 1; SSP1CON1bits.WCOL = 0; };
  5808                           
  5809                           ;incstack = 0
  5810                           ; Regs used in _SD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5811  03D5  0020               	movlb	0	; select bank0
  5812  03D6  178E               	bsf	14,7	;volatile
  5813  03D7  0024               	movlb	4	; select bank4
  5814  03D8  1395               	bcf	21,7	;volatile
  5815                           
  5816                           ;SD.c: 16:     SPI_Write(0xFF);
  5817  03D9  30FF               	movlw	255
  5818  03DA  3186  2603  3183   	fcall	_SPI_Write
  5819                           
  5820                           ;SD.c: 17:     SPI_Write(0xFF);
  5821  03DD  30FF               	movlw	255
  5822  03DE  3186  2603  3183   	fcall	_SPI_Write
  5823                           
  5824                           ;SD.c: 18:     SPI_Write(0xFF);
  5825  03E1  30FF               	movlw	255
  5826  03E2  3186  2603  3183   	fcall	_SPI_Write
  5827                           
  5828                           ;SD.c: 19:     SPI_Write(0xFF);
  5829  03E5  30FF               	movlw	255
  5830  03E6  3186  2603  3183   	fcall	_SPI_Write
  5831                           
  5832                           ;SD.c: 20:     SPI_Write(0xFF);
  5833  03E9  30FF               	movlw	255
  5834  03EA  3186  2603  3183   	fcall	_SPI_Write
  5835                           
  5836                           ;SD.c: 21:     SPI_Write(0xFF);
  5837  03ED  30FF               	movlw	255
  5838  03EE  3186  2603  3183   	fcall	_SPI_Write
  5839                           
  5840                           ;SD.c: 22:     SPI_Write(0xFF);
  5841  03F1  30FF               	movlw	255
  5842  03F2  3186  2603  3183   	fcall	_SPI_Write
  5843                           
  5844                           ;SD.c: 23:     SPI_Write(0xFF);
  5845  03F5  30FF               	movlw	255
  5846  03F6  3186  2603  3183   	fcall	_SPI_Write
  5847                           
  5848                           ;SD.c: 24:     SPI_Write(0xFF);
  5849  03F9  30FF               	movlw	255
  5850  03FA  3186  2603  3183   	fcall	_SPI_Write
  5851                           
  5852                           ;SD.c: 25:     SPI_Write(0xFF);
  5853  03FD  30FF               	movlw	255
  5854  03FE  3186  2603  3183   	fcall	_SPI_Write
  5855                           
  5856                           ;SD.c: 27:     { PORTCbits.RC7 = 0; SSP1CON1bits.WCOL = 0; };
  5857  0401  0020               	movlb	0	; select bank0
  5858  0402  138E               	bcf	14,7	;volatile
  5859  0403  0024               	movlb	4	; select bank4
  5860  0404  1395               	bcf	21,7	;volatile
  5861  0405                     l2268:	
  5862                           
  5863                           ;SD.c: 34:         SD_SendCommand(0, 0x00, 0x00, 0x00, 0x00);
  5864  0405  01F3               	clrf	SD_SendCommand@ARG3
  5865  0406  01F4               	clrf	SD_SendCommand@ARG2
  5866  0407  01F5               	clrf	SD_SendCommand@ARG1
  5867  0408  01F6               	clrf	SD_SendCommand@ARG0
  5868  0409  3000               	movlw	0
  5869  040A  3183  2336  3183   	fcall	_SD_SendCommand
  5870                           
  5871                           ;SD.c: 35:         SD_Read8bitResponse();
  5872  040D  3185  25CF  3183   	fcall	_SD_Read8bitResponse
  5873  0410  0000               	nop	;# 
  5874                           
  5875                           ;SD.c: 37:     } while (SD_Check8bitResponse(0x01) == 0);
  5876  0411  3001               	movlw	1
  5877  0412  3185  25E0  3183   	fcall	_SD_Check8bitResponse
  5878  0415  3A00               	xorlw	0
  5879  0416  1903               	skipnz
  5880  0417  2C05               	goto	l2268
  5881  0418                     l2274:	
  5882                           
  5883                           ;SD.c: 44:         SD_SendCommand(8, 0x00, 0x00, 0x01, 0xAA);
  5884  0418  01F3               	clrf	SD_SendCommand@ARG3
  5885  0419  01F4               	clrf	SD_SendCommand@ARG2
  5886  041A  01F5               	clrf	SD_SendCommand@ARG1
  5887  041B  0AF5               	incf	SD_SendCommand@ARG1,f
  5888  041C  30AA               	movlw	170
  5889  041D  00F8               	movwf	??_SD_Init
  5890  041E  0878               	movf	??_SD_Init,w
  5891  041F  00F6               	movwf	SD_SendCommand@ARG0
  5892  0420  3008               	movlw	8
  5893  0421  3183  2336  3183   	fcall	_SD_SendCommand
  5894                           
  5895                           ;SD.c: 45:         SD_Read40bitResponse();
  5896  0424  3185  250A  3183   	fcall	_SD_Read40bitResponse
  5897  0427  0000               	nop	;# 
  5898                           
  5899                           ;SD.c: 47:     } while (SD_Check40bitResponse(0x01, 0x00, 0x00, 0x01, 0xAA) == 0);
  5900  0428  01F2               	clrf	SD_Check40bitResponse@Byte3
  5901  0429  01F3               	clrf	SD_Check40bitResponse@Byte2
  5902  042A  01F4               	clrf	SD_Check40bitResponse@Byte1
  5903  042B  0AF4               	incf	SD_Check40bitResponse@Byte1,f
  5904  042C  30AA               	movlw	170
  5905  042D  00F8               	movwf	??_SD_Init
  5906  042E  0878               	movf	??_SD_Init,w
  5907  042F  00F5               	movwf	SD_Check40bitResponse@Byte0
  5908  0430  3001               	movlw	1
  5909  0431  3185  259D  3183   	fcall	_SD_Check40bitResponse
  5910  0434  3A00               	xorlw	0
  5911  0435  1903               	skipnz
  5912  0436  2C18               	goto	l2274
  5913  0437                     l2280:	
  5914                           
  5915                           ;SD.c: 55:             SD_SendCommand(55, 0x00, 0x00, 0x00, 0x00);
  5916  0437  01F3               	clrf	SD_SendCommand@ARG3
  5917  0438  01F4               	clrf	SD_SendCommand@ARG2
  5918  0439  01F5               	clrf	SD_SendCommand@ARG1
  5919  043A  01F6               	clrf	SD_SendCommand@ARG0
  5920  043B  3037               	movlw	55
  5921  043C  3183  2336  3183   	fcall	_SD_SendCommand
  5922                           
  5923                           ;SD.c: 56:             SD_Read8bitResponse();
  5924  043F  3185  25CF  3183   	fcall	_SD_Read8bitResponse
  5925  0442  0000               	nop	;# 
  5926                           
  5927                           ;SD.c: 58:         } while (SD_Check8bitResponse(0x01) == 0);
  5928  0443  3001               	movlw	1
  5929  0444  3185  25E0  3183   	fcall	_SD_Check8bitResponse
  5930  0447  3A00               	xorlw	0
  5931  0448  1903               	skipnz
  5932  0449  2C37               	goto	l2280
  5933                           
  5934                           ;SD.c: 65:         SD_SendCommand(41, 0x40, 0x00, 0x00, 0x00);
  5935  044A  3040               	movlw	64
  5936  044B  00F8               	movwf	??_SD_Init
  5937  044C  0878               	movf	??_SD_Init,w
  5938  044D  00F3               	movwf	SD_SendCommand@ARG3
  5939  044E  01F4               	clrf	SD_SendCommand@ARG2
  5940  044F  01F5               	clrf	SD_SendCommand@ARG1
  5941  0450  01F6               	clrf	SD_SendCommand@ARG0
  5942  0451  3029               	movlw	41
  5943  0452  3183  2336  3183   	fcall	_SD_SendCommand
  5944                           
  5945                           ;SD.c: 66:         SD_Read8bitResponse();
  5946  0455  3185  25CF  3183   	fcall	_SD_Read8bitResponse
  5947  0458  0000               	nop	;# 
  5948                           
  5949                           ;SD.c: 68:     } while (SD_Check8bitResponse(0x00) == 0);
  5950  0459  3000               	movlw	0
  5951  045A  3185  25E0  3183   	fcall	_SD_Check8bitResponse
  5952  045D  3A00               	xorlw	0
  5953  045E  1D03               	btfss	3,2
  5954  045F  0008               	return
  5955  0460  2C37               	goto	l2280
  5956  0461                     __end_of_SD_Init:	
  5957                           
  5958                           	psect	text11
  5959  0336                     __ptext11:	
  5960 ;; *************** function _SD_SendCommand *****************
  5961 ;; Defined at:
  5962 ;;		line 77 in file "SD.c"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;  CMD_6bit        1    wreg     unsigned char 
  5965 ;;  ARG3            1    3[COMMON] unsigned char 
  5966 ;;  ARG2            1    4[COMMON] unsigned char 
  5967 ;;  ARG1            1    5[COMMON] unsigned char 
  5968 ;;  ARG0            1    6[COMMON] unsigned char 
  5969 ;; Auto vars:     Size  Location     Type
  5970 ;;  CMD_6bit        1    0[BANK0 ] unsigned char 
  5971 ;;  Checksum        1    2[BANK0 ] unsigned char 
  5972 ;;  ByteToSend      1    1[BANK0 ] unsigned char 
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  1    wreg      void 
  5975 ;; Registers used:
  5976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5982 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5983 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5984 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5985 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5986 ;;Total ram usage:        8 bytes
  5987 ;; Hardware stack levels used:    1
  5988 ;; Hardware stack levels required when called:    2
  5989 ;; This function calls:
  5990 ;;		_SPI_Write
  5991 ;; This function is called by:
  5992 ;;		_SD_Init
  5993 ;;		_SD_OpenStream
  5994 ;;		_SD_OpenBlock
  5995 ;;		_SD_CloseStream
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           
  6000                           ;psect for function _SD_SendCommand
  6001  0336                     _SD_SendCommand:	
  6002                           
  6003                           ;incstack = 0
  6004                           ; Regs used in _SD_SendCommand: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6005                           ;SD_SendCommand@CMD_6bit stored from wreg
  6006  0336  0020               	movlb	0	; select bank0
  6007  0337  00A0               	movwf	SD_SendCommand@CMD_6bit
  6008                           
  6009                           ;SD.c: 79:     char Checksum = 0x00;
  6010  0338  01A2               	clrf	SD_SendCommand@Checksum
  6011                           
  6012                           ;SD.c: 82:     ByteToSend = (CMD_6bit & 0x3F) | 0x40;
  6013  0339  0820               	movf	SD_SendCommand@CMD_6bit,w
  6014  033A  393F               	andlw	63
  6015  033B  3840               	iorlw	64
  6016  033C  00F7               	movwf	??_SD_SendCommand
  6017  033D  0877               	movf	??_SD_SendCommand,w
  6018  033E  00A1               	movwf	SD_SendCommand@ByteToSend
  6019                           
  6020                           ;SD.c: 83:     SPI_Write(ByteToSend);
  6021  033F  0821               	movf	SD_SendCommand@ByteToSend,w
  6022  0340  3186  2603  3183   	fcall	_SPI_Write
  6023                           
  6024                           ;SD.c: 84:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  6025  0343  0020               	movlb	0	; select bank0
  6026  0344  3522               	lslf	SD_SendCommand@Checksum,w
  6027  0345  00F7               	movwf	??_SD_SendCommand
  6028  0346  0877               	movf	??_SD_SendCommand,w
  6029  0347  00A2               	movwf	SD_SendCommand@Checksum
  6030  0348  0822               	movf	SD_SendCommand@Checksum,w
  6031  0349  0621               	xorwf	SD_SendCommand@ByteToSend,w
  6032  034A  00F7               	movwf	??_SD_SendCommand
  6033  034B  0877               	movf	??_SD_SendCommand,w
  6034  034C  00A2               	movwf	SD_SendCommand@Checksum
  6035  034D  0822               	movf	SD_SendCommand@Checksum,w
  6036  034E  3E86               	addlw	low (_CRCTable| (0+32768))
  6037  034F  0084               	movwf	4
  6038  0350  3081               	movlw	high (_CRCTable| (0+32768))
  6039  0351  1803               	skipnc
  6040  0352  3E01               	addlw	1
  6041  0353  0085               	movwf	5
  6042  0354  0800               	movf	0,w	;code access
  6043  0355  00F7               	movwf	??_SD_SendCommand
  6044  0356  0877               	movf	??_SD_SendCommand,w
  6045  0357  00A2               	movwf	SD_SendCommand@Checksum
  6046                           
  6047                           ;SD.c: 87:     ByteToSend = ARG3;
  6048  0358  0873               	movf	SD_SendCommand@ARG3,w
  6049  0359  00F7               	movwf	??_SD_SendCommand
  6050  035A  0877               	movf	??_SD_SendCommand,w
  6051  035B  00A1               	movwf	SD_SendCommand@ByteToSend
  6052                           
  6053                           ;SD.c: 88:     SPI_Write(ByteToSend);
  6054  035C  0821               	movf	SD_SendCommand@ByteToSend,w
  6055  035D  3186  2603  3183   	fcall	_SPI_Write
  6056                           
  6057                           ;SD.c: 89:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  6058  0360  0020               	movlb	0	; select bank0
  6059  0361  3522               	lslf	SD_SendCommand@Checksum,w
  6060  0362  00F7               	movwf	??_SD_SendCommand
  6061  0363  0877               	movf	??_SD_SendCommand,w
  6062  0364  00A2               	movwf	SD_SendCommand@Checksum
  6063  0365  0822               	movf	SD_SendCommand@Checksum,w
  6064  0366  0621               	xorwf	SD_SendCommand@ByteToSend,w
  6065  0367  00F7               	movwf	??_SD_SendCommand
  6066  0368  0877               	movf	??_SD_SendCommand,w
  6067  0369  00A2               	movwf	SD_SendCommand@Checksum
  6068  036A  0822               	movf	SD_SendCommand@Checksum,w
  6069  036B  3E86               	addlw	low (_CRCTable| (0+32768))
  6070  036C  0084               	movwf	4
  6071  036D  3081               	movlw	high (_CRCTable| (0+32768))
  6072  036E  1803               	skipnc
  6073  036F  3E01               	addlw	1
  6074  0370  0085               	movwf	5
  6075  0371  0800               	movf	0,w	;code access
  6076  0372  00F7               	movwf	??_SD_SendCommand
  6077  0373  0877               	movf	??_SD_SendCommand,w
  6078  0374  00A2               	movwf	SD_SendCommand@Checksum
  6079                           
  6080                           ;SD.c: 91:     ByteToSend = ARG2;
  6081  0375  0874               	movf	SD_SendCommand@ARG2,w
  6082  0376  00F7               	movwf	??_SD_SendCommand
  6083  0377  0877               	movf	??_SD_SendCommand,w
  6084  0378  00A1               	movwf	SD_SendCommand@ByteToSend
  6085                           
  6086                           ;SD.c: 92:     SPI_Write(ByteToSend);
  6087  0379  0821               	movf	SD_SendCommand@ByteToSend,w
  6088  037A  3186  2603  3183   	fcall	_SPI_Write
  6089                           
  6090                           ;SD.c: 93:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  6091  037D  0020               	movlb	0	; select bank0
  6092  037E  3522               	lslf	SD_SendCommand@Checksum,w
  6093  037F  00F7               	movwf	??_SD_SendCommand
  6094  0380  0877               	movf	??_SD_SendCommand,w
  6095  0381  00A2               	movwf	SD_SendCommand@Checksum
  6096  0382  0822               	movf	SD_SendCommand@Checksum,w
  6097  0383  0621               	xorwf	SD_SendCommand@ByteToSend,w
  6098  0384  00F7               	movwf	??_SD_SendCommand
  6099  0385  0877               	movf	??_SD_SendCommand,w
  6100  0386  00A2               	movwf	SD_SendCommand@Checksum
  6101  0387  0822               	movf	SD_SendCommand@Checksum,w
  6102  0388  3E86               	addlw	low (_CRCTable| (0+32768))
  6103  0389  0084               	movwf	4
  6104  038A  3081               	movlw	high (_CRCTable| (0+32768))
  6105  038B  1803               	skipnc
  6106  038C  3E01               	addlw	1
  6107  038D  0085               	movwf	5
  6108  038E  0800               	movf	0,w	;code access
  6109  038F  00F7               	movwf	??_SD_SendCommand
  6110  0390  0877               	movf	??_SD_SendCommand,w
  6111  0391  00A2               	movwf	SD_SendCommand@Checksum
  6112                           
  6113                           ;SD.c: 95:     ByteToSend = ARG1;
  6114  0392  0875               	movf	SD_SendCommand@ARG1,w
  6115  0393  00F7               	movwf	??_SD_SendCommand
  6116  0394  0877               	movf	??_SD_SendCommand,w
  6117  0395  00A1               	movwf	SD_SendCommand@ByteToSend
  6118                           
  6119                           ;SD.c: 96:     SPI_Write(ByteToSend);
  6120  0396  0821               	movf	SD_SendCommand@ByteToSend,w
  6121  0397  3186  2603  3183   	fcall	_SPI_Write
  6122                           
  6123                           ;SD.c: 97:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  6124  039A  0020               	movlb	0	; select bank0
  6125  039B  3522               	lslf	SD_SendCommand@Checksum,w
  6126  039C  00F7               	movwf	??_SD_SendCommand
  6127  039D  0877               	movf	??_SD_SendCommand,w
  6128  039E  00A2               	movwf	SD_SendCommand@Checksum
  6129  039F  0822               	movf	SD_SendCommand@Checksum,w
  6130  03A0  0621               	xorwf	SD_SendCommand@ByteToSend,w
  6131  03A1  00F7               	movwf	??_SD_SendCommand
  6132  03A2  0877               	movf	??_SD_SendCommand,w
  6133  03A3  00A2               	movwf	SD_SendCommand@Checksum
  6134  03A4  0822               	movf	SD_SendCommand@Checksum,w
  6135  03A5  3E86               	addlw	low (_CRCTable| (0+32768))
  6136  03A6  0084               	movwf	4
  6137  03A7  3081               	movlw	high (_CRCTable| (0+32768))
  6138  03A8  1803               	skipnc
  6139  03A9  3E01               	addlw	1
  6140  03AA  0085               	movwf	5
  6141  03AB  0800               	movf	0,w	;code access
  6142  03AC  00F7               	movwf	??_SD_SendCommand
  6143  03AD  0877               	movf	??_SD_SendCommand,w
  6144  03AE  00A2               	movwf	SD_SendCommand@Checksum
  6145                           
  6146                           ;SD.c: 99:     ByteToSend = ARG0;
  6147  03AF  0876               	movf	SD_SendCommand@ARG0,w
  6148  03B0  00F7               	movwf	??_SD_SendCommand
  6149  03B1  0877               	movf	??_SD_SendCommand,w
  6150  03B2  00A1               	movwf	SD_SendCommand@ByteToSend
  6151                           
  6152                           ;SD.c: 100:     SPI_Write(ByteToSend);
  6153  03B3  0821               	movf	SD_SendCommand@ByteToSend,w
  6154  03B4  3186  2603  3183   	fcall	_SPI_Write
  6155                           
  6156                           ;SD.c: 101:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum =
      +                           CRCTable[Checksum]; };
  6157  03B7  0020               	movlb	0	; select bank0
  6158  03B8  3522               	lslf	SD_SendCommand@Checksum,w
  6159  03B9  00F7               	movwf	??_SD_SendCommand
  6160  03BA  0877               	movf	??_SD_SendCommand,w
  6161  03BB  00A2               	movwf	SD_SendCommand@Checksum
  6162  03BC  0822               	movf	SD_SendCommand@Checksum,w
  6163  03BD  0621               	xorwf	SD_SendCommand@ByteToSend,w
  6164  03BE  00F7               	movwf	??_SD_SendCommand
  6165  03BF  0877               	movf	??_SD_SendCommand,w
  6166  03C0  00A2               	movwf	SD_SendCommand@Checksum
  6167  03C1  0822               	movf	SD_SendCommand@Checksum,w
  6168  03C2  3E86               	addlw	low (_CRCTable| (0+32768))
  6169  03C3  0084               	movwf	4
  6170  03C4  3081               	movlw	high (_CRCTable| (0+32768))
  6171  03C5  1803               	skipnc
  6172  03C6  3E01               	addlw	1
  6173  03C7  0085               	movwf	5
  6174  03C8  0800               	movf	0,w	;code access
  6175  03C9  00F7               	movwf	??_SD_SendCommand
  6176  03CA  0877               	movf	??_SD_SendCommand,w
  6177  03CB  00A2               	movwf	SD_SendCommand@Checksum
  6178                           
  6179                           ;SD.c: 104:     ByteToSend = (Checksum << 1) | 0x01;
  6180  03CC  1403               	setc
  6181  03CD  0D22               	rlf	SD_SendCommand@Checksum,w
  6182  03CE  00F7               	movwf	??_SD_SendCommand
  6183  03CF  0877               	movf	??_SD_SendCommand,w
  6184  03D0  00A1               	movwf	SD_SendCommand@ByteToSend
  6185                           
  6186                           ;SD.c: 105:     SPI_Write(ByteToSend);
  6187  03D1  0821               	movf	SD_SendCommand@ByteToSend,w
  6188  03D2  3186  2603         	fcall	_SPI_Write
  6189  03D4  0008               	return
  6190  03D5                     __end_of_SD_SendCommand:	
  6191                           
  6192                           	psect	text12
  6193  0603                     __ptext12:	
  6194 ;; *************** function _SPI_Write *****************
  6195 ;; Defined at:
  6196 ;;		line 38 in file "SPI.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;  Data_8bit       1    wreg     unsigned char 
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;  Data_8bit       1    2[COMMON] unsigned char 
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  1    wreg      void 
  6203 ;; Registers used:
  6204 ;;		wreg
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6213 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6214 ;;Total ram usage:        1 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    1
  6217 ;; This function calls:
  6218 ;;		Nothing
  6219 ;; This function is called by:
  6220 ;;		_SD_Init
  6221 ;;		_SD_SendCommand
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           
  6226                           ;psect for function _SPI_Write
  6227  0603                     _SPI_Write:	
  6228                           
  6229                           ;incstack = 0
  6230                           ; Regs used in _SPI_Write: [wreg]
  6231                           ;SPI_Write@Data_8bit stored from wreg
  6232  0603  00F2               	movwf	SPI_Write@Data_8bit
  6233                           
  6234                           ;SPI.c: 39:     SSP1BUF = Data_8bit;
  6235  0604  0872               	movf	SPI_Write@Data_8bit,w
  6236  0605  0024               	movlb	4	; select bank4
  6237  0606  0091               	movwf	17	;volatile
  6238  0607                     l112:	
  6239                           ;SPI.c: 40:     while(SSP1STATbits.BF == 0);
  6240                           
  6241  0607  1814               	btfsc	20,0	;volatile
  6242  0608  0008               	return
  6243  0609  2E07               	goto	l112
  6244  060A                     __end_of_SPI_Write:	
  6245                           
  6246                           	psect	text13
  6247  05CF                     __ptext13:	
  6248 ;; *************** function _SD_Read8bitResponse *****************
  6249 ;; Defined at:
  6250 ;;		line 112 in file "SD.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;		None
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;  readMessage     1    3[COMMON] unsigned char 
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  1    wreg      void 
  6257 ;; Registers used:
  6258 ;;		wreg, status,2, status,0, pclath, cstack
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6267 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6268 ;;Total ram usage:        2 bytes
  6269 ;; Hardware stack levels used:    1
  6270 ;; Hardware stack levels required when called:    2
  6271 ;; This function calls:
  6272 ;;		_SPI_Read
  6273 ;; This function is called by:
  6274 ;;		_SD_Init
  6275 ;;		_SD_OpenStream
  6276 ;;		_SD_OpenBlock
  6277 ;;		_SD_CloseStream
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           
  6282                           ;psect for function _SD_Read8bitResponse
  6283  05CF                     _SD_Read8bitResponse:	
  6284  05CF                     l1620:	
  6285                           ;incstack = 0
  6286                           ; Regs used in _SD_Read8bitResponse: [wreg+status,2+status,0+pclath+cstack]
  6287                           
  6288  05CF  3186  260A  3185   	fcall	_SPI_Read
  6289  05D2  00F2               	movwf	??_SD_Read8bitResponse
  6290  05D3  0872               	movf	??_SD_Read8bitResponse,w
  6291  05D4  00F3               	movwf	SD_Read8bitResponse@readMessage
  6292  05D5  0A73               	incf	SD_Read8bitResponse@readMessage,w
  6293  05D6  1903               	btfsc	3,2
  6294  05D7  2DCF               	goto	l1620
  6295                           
  6296                           ;SD.c: 121:     GLBL_Resp8 = readMessage;
  6297  05D8  0873               	movf	SD_Read8bitResponse@readMessage,w
  6298  05D9  00F2               	movwf	??_SD_Read8bitResponse
  6299  05DA  0872               	movf	??_SD_Read8bitResponse,w
  6300  05DB  0020               	movlb	0	; select bank0
  6301  05DC  00EE               	movwf	_GLBL_Resp8
  6302                           
  6303                           ;SD.c: 124:     SPI_Read();
  6304  05DD  3186  260A         	fcall	_SPI_Read
  6305  05DF  0008               	return
  6306  05E0                     __end_of_SD_Read8bitResponse:	
  6307                           
  6308                           	psect	text14
  6309  050A                     __ptext14:	
  6310 ;; *************** function _SD_Read40bitResponse *****************
  6311 ;; Defined at:
  6312 ;;		line 141 in file "SD.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;		None
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;  readMessage     1    3[COMMON] unsigned char 
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  1    wreg      void 
  6319 ;; Registers used:
  6320 ;;		wreg, status,2, status,0, pclath, cstack
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6328 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6329 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6330 ;;Total ram usage:        2 bytes
  6331 ;; Hardware stack levels used:    1
  6332 ;; Hardware stack levels required when called:    2
  6333 ;; This function calls:
  6334 ;;		_SPI_Read
  6335 ;; This function is called by:
  6336 ;;		_SD_Init
  6337 ;; This function uses a non-reentrant model
  6338 ;;
  6339                           
  6340                           
  6341                           ;psect for function _SD_Read40bitResponse
  6342  050A                     _SD_Read40bitResponse:	
  6343  050A                     l1642:	
  6344                           ;incstack = 0
  6345                           ; Regs used in _SD_Read40bitResponse: [wreg+status,2+status,0+pclath+cstack]
  6346                           
  6347  050A  3186  260A  3185   	fcall	_SPI_Read
  6348  050D  00F2               	movwf	??_SD_Read40bitResponse
  6349  050E  0872               	movf	??_SD_Read40bitResponse,w
  6350  050F  00F3               	movwf	SD_Read40bitResponse@readMessage
  6351  0510  0A73               	incf	SD_Read40bitResponse@readMessage,w
  6352  0511  1903               	btfsc	3,2
  6353  0512  2D0A               	goto	l1642
  6354                           
  6355                           ;SD.c: 150:     GLBL_Resp40[0] = readMessage;
  6356  0513  0873               	movf	SD_Read40bitResponse@readMessage,w
  6357  0514  00F2               	movwf	??_SD_Read40bitResponse
  6358  0515  0872               	movf	??_SD_Read40bitResponse,w
  6359  0516  0021               	movlb	1	; select bank1
  6360  0517  00B2               	movwf	_GLBL_Resp40^(0+128)
  6361                           
  6362                           ;SD.c: 151:     GLBL_Resp40[1] = SPI_Read();
  6363  0518  3186  260A  3185   	fcall	_SPI_Read
  6364  051B  00F2               	movwf	??_SD_Read40bitResponse
  6365  051C  0872               	movf	??_SD_Read40bitResponse,w
  6366  051D  0021               	movlb	1	; select bank1
  6367  051E  00B3               	movwf	(_GLBL_Resp40^(0+128)+1)
  6368                           
  6369                           ;SD.c: 152:     GLBL_Resp40[2] = SPI_Read();
  6370  051F  3186  260A  3185   	fcall	_SPI_Read
  6371  0522  00F2               	movwf	??_SD_Read40bitResponse
  6372  0523  0872               	movf	??_SD_Read40bitResponse,w
  6373  0524  0021               	movlb	1	; select bank1
  6374  0525  00B4               	movwf	(_GLBL_Resp40^(0+128)+2)
  6375                           
  6376                           ;SD.c: 153:     GLBL_Resp40[3] = SPI_Read();
  6377  0526  3186  260A  3185   	fcall	_SPI_Read
  6378  0529  00F2               	movwf	??_SD_Read40bitResponse
  6379  052A  0872               	movf	??_SD_Read40bitResponse,w
  6380  052B  0021               	movlb	1	; select bank1
  6381  052C  00B5               	movwf	(_GLBL_Resp40^(0+128)+3)
  6382                           
  6383                           ;SD.c: 154:     GLBL_Resp40[4] = SPI_Read();
  6384  052D  3186  260A  3185   	fcall	_SPI_Read
  6385  0530  00F2               	movwf	??_SD_Read40bitResponse
  6386  0531  0872               	movf	??_SD_Read40bitResponse,w
  6387  0532  0021               	movlb	1	; select bank1
  6388  0533  00B6               	movwf	(_GLBL_Resp40^(0+128)+4)
  6389                           
  6390                           ;SD.c: 157:     SPI_Read();
  6391  0534  3186  260A         	fcall	_SPI_Read
  6392  0536  0008               	return
  6393  0537                     __end_of_SD_Read40bitResponse:	
  6394                           
  6395                           	psect	text15
  6396  060A                     __ptext15:	
  6397 ;; *************** function _SPI_Read *****************
  6398 ;; Defined at:
  6399 ;;		line 47 in file "SPI.c"
  6400 ;; Parameters:    Size  Location     Type
  6401 ;;		None
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;		None
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  1    wreg      unsigned char 
  6406 ;; Registers used:
  6407 ;;		wreg
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6417 ;;Total ram usage:        0 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; Hardware stack levels required when called:    1
  6420 ;; This function calls:
  6421 ;;		Nothing
  6422 ;; This function is called by:
  6423 ;;		_SD_Read8bitResponse
  6424 ;;		_SD_Read40bitResponse
  6425 ;;		_SD_CloseBlock
  6426 ;;		_readBytes
  6427 ;;		_openFile
  6428 ;;		_main
  6429 ;;		_SD_CloseStream
  6430 ;; This function uses a non-reentrant model
  6431 ;;
  6432                           
  6433                           
  6434                           ;psect for function _SPI_Read
  6435  060A                     _SPI_Read:	
  6436                           
  6437                           ;SPI.c: 48:     SSP1BUF = 0xFF;
  6438                           
  6439                           ;incstack = 0
  6440                           ; Regs used in _SPI_Read: [wreg]
  6441  060A  30FF               	movlw	255
  6442  060B  0024               	movlb	4	; select bank4
  6443  060C  0091               	movwf	17	;volatile
  6444  060D                     l118:	
  6445                           ;SPI.c: 49:     while(SSP1STATbits.BF == 0);
  6446                           
  6447  060D  1C14               	btfss	20,0	;volatile
  6448  060E  2E0D               	goto	l118
  6449                           
  6450                           ;SPI.c: 50:     return SSP1BUF;
  6451  060F  0811               	movf	17,w	;volatile
  6452  0610  0008               	return
  6453  0611                     __end_of_SPI_Read:	
  6454                           
  6455                           	psect	text16
  6456  05E0                     __ptext16:	
  6457 ;; *************** function _SD_Check8bitResponse *****************
  6458 ;; Defined at:
  6459 ;;		line 132 in file "SD.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;  Byte            1    wreg     unsigned char 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  Byte            1    2[COMMON] unsigned char 
  6464 ;;  match           1    3[COMMON] _Bool 
  6465 ;; Return value:  Size  Location     Type
  6466 ;;                  1    wreg      _Bool 
  6467 ;; Registers used:
  6468 ;;		wreg, status,2
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6475 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6477 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6478 ;;Total ram usage:        2 bytes
  6479 ;; Hardware stack levels used:    1
  6480 ;; Hardware stack levels required when called:    1
  6481 ;; This function calls:
  6482 ;;		Nothing
  6483 ;; This function is called by:
  6484 ;;		_SD_Init
  6485 ;;		_SD_OpenStream
  6486 ;;		_SD_OpenBlock
  6487 ;;		_SD_CloseStream
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           
  6492                           ;psect for function _SD_Check8bitResponse
  6493  05E0                     _SD_Check8bitResponse:	
  6494                           
  6495                           ;incstack = 0
  6496                           ; Regs used in _SD_Check8bitResponse: [wreg+status,2]
  6497                           ;SD_Check8bitResponse@Byte stored from wreg
  6498  05E0  00F2               	movwf	SD_Check8bitResponse@Byte
  6499                           
  6500                           ;SD.c: 133:     _Bool match = 1;
  6501  05E1  01F3               	clrf	SD_Check8bitResponse@match
  6502  05E2  0AF3               	incf	SD_Check8bitResponse@match,f
  6503                           
  6504                           ;SD.c: 134:     if (Byte != GLBL_Resp8) match = 0;
  6505  05E3  0872               	movf	SD_Check8bitResponse@Byte,w
  6506  05E4  0020               	movlb	0	; select bank0
  6507  05E5  066E               	xorwf	_GLBL_Resp8,w
  6508  05E6  1D03               	btfss	3,2
  6509  05E7  01F3               	clrf	SD_Check8bitResponse@match
  6510                           
  6511                           ;SD.c: 135:     return match;
  6512  05E8  0873               	movf	SD_Check8bitResponse@match,w
  6513  05E9  0008               	return
  6514  05EA                     __end_of_SD_Check8bitResponse:	
  6515                           
  6516                           	psect	text17
  6517  059D                     __ptext17:	
  6518 ;; *************** function _SD_Check40bitResponse *****************
  6519 ;; Defined at:
  6520 ;;		line 166 in file "SD.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;  Byte4           1    wreg     unsigned char 
  6523 ;;  Byte3           1    2[COMMON] unsigned char 
  6524 ;;  Byte2           1    3[COMMON] unsigned char 
  6525 ;;  Byte1           1    4[COMMON] unsigned char 
  6526 ;;  Byte0           1    5[COMMON] unsigned char 
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;  Byte4           1    6[COMMON] unsigned char 
  6529 ;;  match           1    7[COMMON] _Bool 
  6530 ;; Return value:  Size  Location     Type
  6531 ;;                  1    wreg      _Bool 
  6532 ;; Registers used:
  6533 ;;		wreg, status,2
  6534 ;; Tracked objects:
  6535 ;;		On entry : 0/0
  6536 ;;		On exit  : 0/0
  6537 ;;		Unchanged: 0/0
  6538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6539 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6540 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6542 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6543 ;;Total ram usage:        6 bytes
  6544 ;; Hardware stack levels used:    1
  6545 ;; Hardware stack levels required when called:    1
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_SD_Init
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           
  6554                           ;psect for function _SD_Check40bitResponse
  6555  059D                     _SD_Check40bitResponse:	
  6556                           
  6557                           ;incstack = 0
  6558                           ; Regs used in _SD_Check40bitResponse: [wreg+status,2]
  6559                           ;SD_Check40bitResponse@Byte4 stored from wreg
  6560  059D  00F6               	movwf	SD_Check40bitResponse@Byte4
  6561                           
  6562                           ;SD.c: 167:     _Bool match = 1;
  6563  059E  01F7               	clrf	SD_Check40bitResponse@match
  6564  059F  0AF7               	incf	SD_Check40bitResponse@match,f
  6565                           
  6566                           ;SD.c: 168:     if (Byte4 != GLBL_Resp40[0]) match = 0;
  6567  05A0  0021               	movlb	1	; select bank1
  6568  05A1  0832               	movf	_GLBL_Resp40^(0+128),w
  6569  05A2  0676               	xorwf	SD_Check40bitResponse@Byte4,w
  6570  05A3  1D03               	btfss	3,2
  6571  05A4  01F7               	clrf	SD_Check40bitResponse@match
  6572                           
  6573                           ;SD.c: 169:     if (Byte3 != GLBL_Resp40[1]) match = 0;
  6574  05A5  0833               	movf	(_GLBL_Resp40^(0+128)+1),w
  6575  05A6  0672               	xorwf	SD_Check40bitResponse@Byte3,w
  6576  05A7  1D03               	btfss	3,2
  6577  05A8  01F7               	clrf	SD_Check40bitResponse@match
  6578                           
  6579                           ;SD.c: 170:     if (Byte2 != GLBL_Resp40[2]) match = 0;
  6580  05A9  0834               	movf	(_GLBL_Resp40^(0+128)+2),w
  6581  05AA  0673               	xorwf	SD_Check40bitResponse@Byte2,w
  6582  05AB  1D03               	btfss	3,2
  6583  05AC  01F7               	clrf	SD_Check40bitResponse@match
  6584                           
  6585                           ;SD.c: 171:     if (Byte1 != GLBL_Resp40[3]) match = 0;
  6586  05AD  0835               	movf	(_GLBL_Resp40^(0+128)+3),w
  6587  05AE  0674               	xorwf	SD_Check40bitResponse@Byte1,w
  6588  05AF  1D03               	btfss	3,2
  6589  05B0  01F7               	clrf	SD_Check40bitResponse@match
  6590                           
  6591                           ;SD.c: 172:     if (Byte0 != GLBL_Resp40[4]) match = 0;
  6592  05B1  0836               	movf	(_GLBL_Resp40^(0+128)+4),w
  6593  05B2  0675               	xorwf	SD_Check40bitResponse@Byte0,w
  6594  05B3  1D03               	btfss	3,2
  6595  05B4  01F7               	clrf	SD_Check40bitResponse@match
  6596                           
  6597                           ;SD.c: 173:     return match;
  6598  05B5  0877               	movf	SD_Check40bitResponse@match,w
  6599  05B6  0008               	return
  6600  05B7                     __end_of_SD_Check40bitResponse:	
  6601                           
  6602                           	psect	text18
  6603  0611                     __ptext18:	
  6604 ;; *************** function _DAC_Init *****************
  6605 ;; Defined at:
  6606 ;;		line 30 in file "DAC.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;		None
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;		None
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  1    wreg      void 
  6613 ;; Registers used:
  6614 ;;		wreg
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6624 ;;Total ram usage:        0 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    1
  6627 ;; This function calls:
  6628 ;;		Nothing
  6629 ;; This function is called by:
  6630 ;;		_init
  6631 ;; This function uses a non-reentrant model
  6632 ;;
  6633                           
  6634                           
  6635                           ;psect for function _DAC_Init
  6636  0611                     _DAC_Init:	
  6637                           
  6638                           ;DAC.c: 31:     TRISA = 0xFB;
  6639                           
  6640                           ;incstack = 0
  6641                           ; Regs used in _DAC_Init: [wreg]
  6642  0611  30FB               	movlw	251
  6643  0612  0021               	movlb	1	; select bank1
  6644  0613  008C               	movwf	12	;volatile
  6645                           
  6646                           ;DAC.c: 32:     DAC1CON0 = 0xE0;
  6647  0614  30E0               	movlw	224
  6648  0615  002B               	movlb	11	; select bank11
  6649  0616  008E               	movwf	14	;volatile
  6650  0617  0008               	return
  6651  0618                     __end_of_DAC_Init:	
  6652                           
  6653                           	psect	text19
  6654  05FB                     __ptext19:	
  6655 ;; *************** function _BrassButtons_Init *****************
  6656 ;; Defined at:
  6657 ;;		line 9 in file "buttons.c"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;		None
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;		None
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  1    wreg      void 
  6664 ;; Registers used:
  6665 ;;		wreg, status,2
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/0
  6668 ;;		On exit  : 0/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6675 ;;Total ram usage:        0 bytes
  6676 ;; Hardware stack levels used:    1
  6677 ;; Hardware stack levels required when called:    1
  6678 ;; This function calls:
  6679 ;;		Nothing
  6680 ;; This function is called by:
  6681 ;;		_main
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685                           
  6686                           ;psect for function _BrassButtons_Init
  6687  05FB                     _BrassButtons_Init:	
  6688                           
  6689                           ;buttons.c: 16:     ANSELB = 0;
  6690                           
  6691                           ;incstack = 0
  6692                           ; Regs used in _BrassButtons_Init: [wreg+status,2]
  6693  05FB  0023               	movlb	3	; select bank3
  6694  05FC  018D               	clrf	13	;volatile
  6695                           
  6696                           ;buttons.c: 17:     TRISB = 0b00001110;
  6697  05FD  300E               	movlw	14
  6698  05FE  0021               	movlb	1	; select bank1
  6699  05FF  008D               	movwf	13	;volatile
  6700                           
  6701                           ;buttons.c: 18:     PORTB = 0;
  6702  0600  0020               	movlb	0	; select bank0
  6703  0601  018D               	clrf	13	;volatile
  6704  0602  0008               	return
  6705  0603                     __end_of_BrassButtons_Init:	
  6706                           
  6707                           	psect	intentry
  6708  0004                     __pintentry:	
  6709 ;; *************** function _isr *****************
  6710 ;; Defined at:
  6711 ;;		line 128 in file "main.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;		None
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;  level           2    0[COMMON] short 
  6716 ;; Return value:  Size  Location     Type
  6717 ;;                  1    wreg      void 
  6718 ;; Registers used:
  6719 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6720 ;; Tracked objects:
  6721 ;;		On entry : 0/0
  6722 ;;		On exit  : 0/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6726 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6728 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6729 ;;Total ram usage:        2 bytes
  6730 ;; Hardware stack levels used:    1
  6731 ;; This function calls:
  6732 ;;		Nothing
  6733 ;; This function is called by:
  6734 ;;		Interrupt level 1
  6735 ;; This function uses a non-reentrant model
  6736 ;;
  6737                           
  6738  0004                     _isr:	
  6739                           
  6740                           ;incstack = 0
  6741  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6742                           
  6743                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  6744  0005  3180               	pagesel	$
  6745                           
  6746                           ;main.c: 129:     PIR1bits.TMR2IF = 0;
  6747  0006  0020               	movlb	0	; select bank0
  6748  0007  1091               	bcf	17,1	;volatile
  6749                           
  6750                           ;main.c: 131:     short level = lbuffer[buffer_read_index++];
  6751  0008  3561               	lslf	_buffer_read_index,w
  6752  0009  3E20               	addlw	(low (_lbuffer| (0+256)))& (0+255)
  6753  000A  0086               	movwf	6
  6754  000B  3001               	movlw	1	; select bank2/3
  6755  000C  0087               	movwf	7
  6756  000D  3F40               	moviw [0]fsr1
  6757  000E  00F0               	movwf	isr@level
  6758  000F  3F41               	moviw [1]fsr1
  6759  0010  00F1               	movwf	isr@level+1
  6760  0011  3001               	movlw	1
  6761  0012  07E1               	addwf	_buffer_read_index,f
  6762  0013  3000               	movlw	0
  6763  0014  3DE2               	addwfc	_buffer_read_index+1,f
  6764                           
  6765                           ;main.c: 132:     DAC1REFH = (level & 0xff00) >> 8;
  6766  0015  0871               	movf	isr@level+1,w
  6767  0016  002B               	movlb	11	; select bank11
  6768  0017  0090               	movwf	16	;volatile
  6769                           
  6770                           ;main.c: 133:     DAC1REFL = (level & 0x00C0) << 8;
  6771  0018  018F               	clrf	15	;volatile
  6772                           
  6773                           ;main.c: 134:     DAC1LD = 1;
  6774  0019  140D               	bsf	13,0	;volatile
  6775                           
  6776                           ;main.c: 135:     if (buffer_read_index >= 32) buffer_read_index = 0;
  6777  001A  3000               	movlw	0
  6778  001B  0020               	movlb	0	; select bank0
  6779  001C  0262               	subwf	_buffer_read_index+1,w
  6780  001D  3020               	movlw	32
  6781  001E  1903               	skipnz
  6782  001F  0261               	subwf	_buffer_read_index,w
  6783  0020  1C03               	skipc
  6784  0021  2824               	goto	i1l276
  6785  0022  01E1               	clrf	_buffer_read_index
  6786  0023  01E2               	clrf	_buffer_read_index+1
  6787  0024                     i1l276:	
  6788  0024  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6789  0025  0009               	retfie
  6790  0026                     __end_of_isr:	
  6791  007E                     btemp	set	126	;btemp
  6792  007E                     int$flags	set	126
  6793  007E                     wtemp0	set	126


Data Sizes:
    Strings     20
    Constant    256
    Data        11
    BSS         156
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     65      79
    BANK1            80      4      27
    BANK2            80      0      64
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    readBytes@dest	PTR unsigned char  size(1) Largest target is 28
		 -> openFile@data(BANK0[8]), openFile@fmt(BANK0[28]), openFile@riff(BANK0[8]), 

    fourCCeq@b	PTR unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), STR_6(CODE[5]), STR_4(CODE[5]), STR_2(CODE[5]), 

    fourCCeq@a	PTR unsigned char  size(1) Largest target is 28
		 -> openFile@data(BANK0[8]), fmt.fmtHeader(BANK0[8]), openFile@fmt(BANK0[28]), openFile@riff(BANK0[8]), 


Critical Paths under _main in COMMON

    _openFile->_fourCCeq
    _SD_OpenStream->_SD_SendCommand
    _init->_SD_Init
    _SD_Init->_SD_Check40bitResponse
    _SD_Init->_SD_SendCommand
    _SD_SendCommand->_SPI_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_openFile
    _openFile->_SD_OpenStream
    _SD_OpenStream->_SD_SendCommand
    _SD_Init->_SD_SendCommand

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9916
                                              0 BANK1      4     4      0
                  _BrassButtons_Init
                           _SPI_Read
                              _error
                               _init
                           _openFile
                         _timer_Init
 ---------------------------------------------------------------------------------
 (1) _timer_Init                                           4     0      4      98
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _openFile                                            50    46      4    5573
                                             15 BANK0     50    46      4
                      _SD_OpenStream
                           _SPI_Read
                              _error
                           _fourCCeq
                          _readBytes
 ---------------------------------------------------------------------------------
 (2) _readBytes                                            7     5      2     417
                                              2 COMMON     7     5      2
                      _SD_CloseBlock
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SD_CloseBlock                                        0     0      0       0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (2) _fourCCeq                                             8     6      2     570
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _error                                                2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SD_OpenStream                                       12     8      4    3961
                                              3 BANK0     12     8      4
               _SD_Check8bitResponse
                _SD_Read8bitResponse
                     _SD_SendCommand
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    4223
                           _DAC_Init
                            _SD_Init
                           _SPI_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SD_Init                                              1     1      0    4223
                                              8 COMMON     1     1      0
              _SD_Check40bitResponse
               _SD_Check8bitResponse
               _SD_Read40bitResponse
                _SD_Read8bitResponse
                     _SD_SendCommand
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SD_SendCommand                                       8     4      4    3612
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (4) _SPI_Write                                            1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SD_Read8bitResponse                                  2     2      0      46
                                              2 COMMON     2     2      0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SD_Read40bitResponse                                 2     2      0      46
                                              2 COMMON     2     2      0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SPI_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SD_Check8bitResponse                                 2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _SD_Check40bitResponse                                6     2      4     442
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _DAC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BrassButtons_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BrassButtons_Init
   _SPI_Read
   _error
   _init
     _DAC_Init
     _SD_Init
       _SD_Check40bitResponse
       _SD_Check8bitResponse
       _SD_Read40bitResponse
         _SPI_Read
       _SD_Read8bitResponse
         _SPI_Read
       _SD_SendCommand
         _SPI_Write
       _SPI_Write
     _SPI_Init
   _openFile
     _SD_OpenStream
       _SD_Check8bitResponse
       _SD_Read8bitResponse
         _SPI_Read
       _SD_SendCommand
         _SPI_Write
     _SPI_Read
     _error
     _fourCCeq
     _readBytes
       _SD_CloseBlock
         _SPI_Read
       _SPI_Read
   _timer_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BIGRAM             3F0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITCOMMON            E      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
COMMON               E      A       C       3       85.7%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
STACK                0      0       0       4        0.0%
BANK0               50     41      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK0            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      4      1B       8       33.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
ABS                  0      0      F6      13        0.0%
BITBANK4            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK5            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK6            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK7            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK8            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK9            50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9               50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK10           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITBANK11           50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
DATA                 0      0      F6      30        0.0%
BITBANK12           30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12              30      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK13           50      0       0      33        0.0%
BANK13              50      0       0      34        0.0%
BITBANK14           50      0       0      35        0.0%
BANK14              50      0       0      36        0.0%
BITBANK15           50      0       0      37        0.0%
BANK15              50      0       0      38        0.0%
BITBANK16           50      0       0      39        0.0%
BANK16              50      0       0      40        0.0%
BITBANK17           50      0       0      41        0.0%
BANK17              50      0       0      42        0.0%
BITBANK18           50      0       0      43        0.0%
BANK18              50      0       0      44        0.0%
BITBANK19           50      0       0      45        0.0%
BANK19              50      0       0      46        0.0%
BITBANK20           50      0       0      47        0.0%
BANK20              50      0       0      48        0.0%
BITBANK21           50      0       0      49        0.0%
BANK21              50      0       0      50        0.0%
BITBANK22           50      0       0      51        0.0%
BANK22              50      0       0      52        0.0%
BITBANK23           50      0       0      53        0.0%
BANK23              50      0       0      54        0.0%
BITBANK24           50      0       0      55        0.0%
BANK24              50      0       0      56        0.0%
BITBANK25           20      0       0      57        0.0%
BANK25              20      0       0      58        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 09 01:24:25 2019

                            l112 0607                              l301 00E7                              l118 060D  
                            l138 04C6                              l306 013D                              l267 05BA  
                            l293 00CB                              l295 0183                              l298 00DC  
                            u545 04F0                              u555 04D4                              u935 00AE  
                            u945 00D4                              _isr 0004                              wreg 0009  
                 ?_SD_OpenStream 0023           ??_SD_Check8bitResponse 0072                  ?_SD_SendCommand 0073  
           SD_OpenStream@address 0023                             l2312 02A5                             l2322 02C4  
                           l1620 05CF                             l2340 02FD                             l2332 02EA  
                           l2316 02AD                             l2350 0327                             l2280 0437  
                           l2336 02F3                             l2328 02DB                             l1642 050A  
                           l2274 0418                             l1802 0472                             l2450 0179  
                           l2418 00D9                             l2268 0405                             l2428 010B  
                           l2630 0497                             l1814 0482                             l1822 0492  
                           l2446 0167                             l2640 04B7                             l2632 04C1  
                           l1816 048A                             l1808 047A                             l2448 016C  
                           l1762 0552                             l2642 04BC                             l2634 04A8  
                           l2394 0094                             l1756 0539                             l2636 04AD  
                           l2628 0171                             l2396 00A0                             l2638 04B2  
                           l1786 0505                             l1794 0468                             l1788 04CA  
                           ?_isr 0070                             STR_1 062E                             STR_2 062E  
                           STR_3 0629                             STR_4 0629                             STR_5 0286  
                           STR_6 0286                             STR_7 0633                             STR_8 0633  
                           _T2PR 0494                             _main 006B                             _init 05B7  
                __end_of_SD_Init 0461                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                 __end_of_DAC_Init 0618  
                           start 0026    __size_of_SD_Read40bitResponse 002D                  ??_SD_CloseBlock 0072  
     __size_of_BrassButtons_Init 0008     __size_of_SD_Read8bitResponse 0011                 __end_of_CRCTable 0286  
                          ??_isr 0070                    __CFG_PLLEN$ON 0000                            ?_main 0070  
                          ?_init 0070                    __CFG_WDTE$OFF 0000                            _ANSB1 0C69  
                          _ANSC3 0C73                            _T2CON 0495                            i1l276 0024  
                          _PORTB 000D                            _TRISA 008C                            _TRISB 008D  
                          _error 05F3                            _sdata 0063                            _state 006C  
               __end_of_SPI_Init 059D                 __end_of_SPI_Read 0611                            status 0003  
                          wtemp0 007E               __size_of_SPI_Write 0007                  __initialization 0028  
                   __end_of_main 0186                     __end_of_init 05CF               _buffer_write_index 007A  
                         ??_main 00B7                           ??_init 0079                    _total_presses 0065  
       SD_Check8bitResponse@Byte 0072                  ??_SD_OpenStream 0027                           _DAC1LD 2C68  
                         ?_error 0070                        ??_SD_Init 0078                           _ANSELB 018D  
                         _RC2PPS 0EA2                           _RC4PPS 0EA4                           _OSCCON 009B  
                         _TRISB0 0468                           _TRISB1 0469                           _TRISC0 0470  
                         _TRISC1 0471                           _TRISC2 0472                           _TRISC3 0473  
                         _TRISC4 0474                           _TRISC6 0476                           _TRISC7 0477  
               __end_of_fourCCeq 055C         SD_SendCommand@ByteToSend 0021                 __end_of_openFile 0336  
              __end_of_SPI_Write 060A                           error@e 0073                     __pdataCOMMON 007A  
                      ?_DAC_Init 0070          __end_of__initialization 0067   __size_of_SD_Check40bitResponse 001A  
  __end_of_SD_Check40bitResponse 05B7                   __pcstackCOMMON 0070                     __pidataBANK0 0638  
                   __pidataBANK1 0624                    __end_of_error 05FB                        ?_SPI_Init 0070  
                      ?_SPI_Read 0070                 ??_SD_SendCommand 0077                       ??_DAC_Init 0072  
            _SD_Read8bitResponse 05CF                          ??_error 0072                       __pbssBANK0 0061  
                     __pbssBANK1 00A0                       __pbssBANK2 0120                       __pbssBANK3 01A0  
             __size_of_readBytes 0043                       __pmaintext 006B             ?_SD_Read8bitResponse 0070  
                     _blockIndex 00AC                      openFile@fmt 0045                       __pintentry 0004  
                     ??_SPI_Init 0072                       ??_SPI_Read 0072     __end_of_SD_Read40bitResponse 0537  
                        _SSP1ADD 0212                          _SSP1BUF 0211                          _SD_Init 03D5  
  __size_of_SD_Check8bitResponse 000A                        ?_fourCCeq 0072                     readBytes@len 0072  
                     _first_byte 0067                        ?_openFile 002F            ??_SD_Read8bitResponse 0072  
          __end_of_SD_CloseBlock 05F3                          _address 00A0                          __ptext1 0461  
                        __ptext2 028B                          __ptext3 04C7                          __ptext4 05EA  
                        __ptext5 0537                          __ptext6 05F3                          __ptext7 055C  
                        __ptext8 05B7                          __ptext9 0580                   SD_OpenStream@a 002B  
              __end_of_readBytes 050A                          _lbuffer 0120                     __size_of_isr 0022  
                        _rbuffer 01A0                          clrloop0 061F             end_of_initialization 0067  
                     ??_fourCCeq 0074       SD_Check40bitResponse@Byte0 0075       SD_Check40bitResponse@Byte1 0074  
     SD_Check40bitResponse@Byte2 0073       SD_Check40bitResponse@Byte3 0072       SD_Check40bitResponse@Byte4 0076  
                        init_ram 0618                          initloop 0619       SD_Check40bitResponse@match 0077  
                     ??_openFile 0033                       _timer_Init 0461                        _PORTCbits 000E  
                      _SSPDATPPS 0E3B                        _SSPCLKPPS 0E3A                 __CFG_FOSC$INTOSC 0000  
          __end_of_SD_OpenStream 0580                        _SPI_Write 0603                __size_of_DAC_Init 0007  
                  _check_buttons 0068  SD_Read40bitResponse@readMessage 0073             _SD_Read40bitResponse 050A  
                   _global_error 006A                    __pidataCOMMON 063C                __size_of_SPI_Init 001D  
              __size_of_SPI_Read 0007              start_initialization 0028               SPI_Write@Data_8bit 0072  
                    __end_of_isr 0026                       ?_SPI_Write 0070            ?_SD_Read40bitResponse 0070  
                  _samplePending 0069                       readBytes@i 0077            _SD_Check40bitResponse 059D  
                    __pdataBANK0 006B                      __pdataBANK1 00B2                      ?_timer_Init 0072  
                      ___latbits 0003                    __pcstackBANK0 0020                    __pcstackBANK1 00B7  
                       ?_SD_Init 0070                 _number_of_errors 0066                __size_of_fourCCeq 0025  
              __size_of_openFile 00AB     __end_of_SD_Check8bitResponse 05EA                     openFile@data 003D  
                   openFile@riff 0034                         _DAC1CON0 058E                         _DAC1REFH 0590  
                       _DAC1REFL 058F                        _isPlaying 006B                      _bitsPerSamp 00AE  
                    _GLBL_Resp40 00B2                         _DAC_Init 0611                      ??_SPI_Write 0072  
                      _readBytes 04C7                   __size_of_error 0008                         _T2CLKCON 0497  
                       _CRCTable 0186          __size_of_SD_SendCommand 009F              __size_of_timer_Init 0066  
         ??_SD_Read40bitResponse 0072      __end_of_SD_Read8bitResponse 05E0                        clear_ram0 061E  
                       _PIE1bits 0091           SD_SendCommand@CMD_6bit 0020                         _PIR1bits 0011  
         ?_SD_Check40bitResponse 0072                         _SSP1CON1 0215                         _SSP1STAT 0214  
                       _SPI_Init 0580                         _SPI_Read 060A                       ?_readBytes 0072  
         __size_of_SD_CloseBlock 0009                 __size_of_SD_Init 008C                        fourCCeq@a 0078  
                      fourCCeq@b 0072                        fourCCeq@i 0079                    readBytes@dest 0076  
         SD_SendCommand@Checksum 0022                      _readMessage 006D                         _channels 00B0  
                      openFile@a 002F                         __ptext10 03D5                         __ptext11 0336  
                       __ptext12 0603                         __ptext13 05CF                         __ptext14 050A  
                       __ptext15 060A                         __ptext16 05E0                         __ptext17 059D  
                       __ptext18 0611                         __ptext19 05FB                     _SSP1CON1bits 0215  
                       _filesize 00A4             _SD_Check8bitResponse 05E0                         _fourCCeq 0537  
                     _GLBL_Resp8 006E                    __size_of_main 011B                    __size_of_init 0018  
             SD_SendCommand@ARG0 0076               SD_SendCommand@ARG1 0075               SD_SendCommand@ARG2 0074  
             SD_SendCommand@ARG3 0073                         _sampRate 00A8                         _openFile 028B  
         __size_of_SD_OpenStream 0024                         int$flags 007E                _BrassButtons_Init 05FB  
                  _SD_CloseBlock 05EA                     ??_timer_Init 0076                     _SSP1STATbits 0214  
             ?_BrassButtons_Init 0070                      _OSCSTATbits 009C                 openFile@response 003C  
 SD_Read8bitResponse@readMessage 0073                       _INTCONbits 000B              ??_BrassButtons_Init 0072  
                       isr@level 0070                      ??_readBytes 0074            ?_SD_Check8bitResponse 0070  
                       intlevel1 0000                   _SD_SendCommand 0336        SD_Check8bitResponse@match 0073  
             __end_of_timer_Init 04C7                   timer_Init@rate 0072        __end_of_BrassButtons_Init 0603  
                 ?_SD_CloseBlock 0070                _buffer_read_index 0061                    __pstringtext1 0186  
                  __pstringtext2 0629                    __pstringtext3 062E                    __pstringtext4 0633  
                  __pstringtext5 0000                    _SD_OpenStream 055C           __end_of_SD_SendCommand 03D5  
        ??_SD_Check40bitResponse 0076  
