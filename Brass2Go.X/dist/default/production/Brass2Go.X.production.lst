

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 02 14:59:21 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1778
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.05
    49                           ; Generated 20/12/2018 GMT
    50                           ; 
    51                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F1778 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  0111                     	;# 
   138  0112                     	;# 
   139  0113                     	;# 
   140  0114                     	;# 
   141  0115                     	;# 
   142  0116                     	;# 
   143  0117                     	;# 
   144  0118                     	;# 
   145  0119                     	;# 
   146  011A                     	;# 
   147  011B                     	;# 
   148  011C                     	;# 
   149  011D                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  018E                     	;# 
   153  0191                     	;# 
   154  0191                     	;# 
   155  0192                     	;# 
   156  0193                     	;# 
   157  0193                     	;# 
   158  0194                     	;# 
   159  0195                     	;# 
   160  0196                     	;# 
   161  0197                     	;# 
   162  0199                     	;# 
   163  0199                     	;# 
   164  0199                     	;# 
   165  019A                     	;# 
   166  019A                     	;# 
   167  019A                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019B                     	;# 
   173  019C                     	;# 
   174  019C                     	;# 
   175  019C                     	;# 
   176  019D                     	;# 
   177  019D                     	;# 
   178  019D                     	;# 
   179  019E                     	;# 
   180  019E                     	;# 
   181  019E                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  019F                     	;# 
   186  019F                     	;# 
   187  020C                     	;# 
   188  020D                     	;# 
   189  020E                     	;# 
   190  0210                     	;# 
   191  0211                     	;# 
   192  0211                     	;# 
   193  0212                     	;# 
   194  0212                     	;# 
   195  0213                     	;# 
   196  0213                     	;# 
   197  0214                     	;# 
   198  0214                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0216                     	;# 
   204  0216                     	;# 
   205  0217                     	;# 
   206  0217                     	;# 
   207  021B                     	;# 
   208  021C                     	;# 
   209  021D                     	;# 
   210  021E                     	;# 
   211  021F                     	;# 
   212  028C                     	;# 
   213  028D                     	;# 
   214  028E                     	;# 
   215  0291                     	;# 
   216  0291                     	;# 
   217  0292                     	;# 
   218  0293                     	;# 
   219  0294                     	;# 
   220  0295                     	;# 
   221  0295                     	;# 
   222  0296                     	;# 
   223  0297                     	;# 
   224  0298                     	;# 
   225  0299                     	;# 
   226  0299                     	;# 
   227  029A                     	;# 
   228  029B                     	;# 
   229  029C                     	;# 
   230  029E                     	;# 
   231  029F                     	;# 
   232  030C                     	;# 
   233  030D                     	;# 
   234  030E                     	;# 
   235  0315                     	;# 
   236  0316                     	;# 
   237  0317                     	;# 
   238  0318                     	;# 
   239  0319                     	;# 
   240  031B                     	;# 
   241  031C                     	;# 
   242  031D                     	;# 
   243  031E                     	;# 
   244  031F                     	;# 
   245  038C                     	;# 
   246  038D                     	;# 
   247  038E                     	;# 
   248  0390                     	;# 
   249  0391                     	;# 
   250  0392                     	;# 
   251  0393                     	;# 
   252  0394                     	;# 
   253  0395                     	;# 
   254  0396                     	;# 
   255  0397                     	;# 
   256  0398                     	;# 
   257  0399                     	;# 
   258  039D                     	;# 
   259  039E                     	;# 
   260  039F                     	;# 
   261  040D                     	;# 
   262  040F                     	;# 
   263  040F                     	;# 
   264  0410                     	;# 
   265  0411                     	;# 
   266  0412                     	;# 
   267  0413                     	;# 
   268  0413                     	;# 
   269  0414                     	;# 
   270  0414                     	;# 
   271  0415                     	;# 
   272  0416                     	;# 
   273  0417                     	;# 
   274  0418                     	;# 
   275  041A                     	;# 
   276  041A                     	;# 
   277  041B                     	;# 
   278  041B                     	;# 
   279  041C                     	;# 
   280  041D                     	;# 
   281  041E                     	;# 
   282  041F                     	;# 
   283  048E                     	;# 
   284  048E                     	;# 
   285  048F                     	;# 
   286  0490                     	;# 
   287  0491                     	;# 
   288  0492                     	;# 
   289  0493                     	;# 
   290  0493                     	;# 
   291  0494                     	;# 
   292  0494                     	;# 
   293  0495                     	;# 
   294  0496                     	;# 
   295  0497                     	;# 
   296  0498                     	;# 
   297  049A                     	;# 
   298  049A                     	;# 
   299  049B                     	;# 
   300  049B                     	;# 
   301  049C                     	;# 
   302  049D                     	;# 
   303  049E                     	;# 
   304  049F                     	;# 
   305  050F                     	;# 
   306  0510                     	;# 
   307  0511                     	;# 
   308  0512                     	;# 
   309  0513                     	;# 
   310  0514                     	;# 
   311  0515                     	;# 
   312  0516                     	;# 
   313  0517                     	;# 
   314  0518                     	;# 
   315  0519                     	;# 
   316  051A                     	;# 
   317  058D                     	;# 
   318  058E                     	;# 
   319  058F                     	;# 
   320  058F                     	;# 
   321  058F                     	;# 
   322  0590                     	;# 
   323  0590                     	;# 
   324  0591                     	;# 
   325  0592                     	;# 
   326  0592                     	;# 
   327  0592                     	;# 
   328  0593                     	;# 
   329  0593                     	;# 
   330  0594                     	;# 
   331  0595                     	;# 
   332  0595                     	;# 
   333  0596                     	;# 
   334  0597                     	;# 
   335  0597                     	;# 
   336  0598                     	;# 
   337  0599                     	;# 
   338  0599                     	;# 
   339  0599                     	;# 
   340  059A                     	;# 
   341  059A                     	;# 
   342  059E                     	;# 
   343  059F                     	;# 
   344  059F                     	;# 
   345  0614                     	;# 
   346  0614                     	;# 
   347  0615                     	;# 
   348  0616                     	;# 
   349  0617                     	;# 
   350  0617                     	;# 
   351  0618                     	;# 
   352  0619                     	;# 
   353  061A                     	;# 
   354  061A                     	;# 
   355  061B                     	;# 
   356  061C                     	;# 
   357  068D                     	;# 
   358  068E                     	;# 
   359  068F                     	;# 
   360  0690                     	;# 
   361  0691                     	;# 
   362  0692                     	;# 
   363  0693                     	;# 
   364  0694                     	;# 
   365  0695                     	;# 
   366  0696                     	;# 
   367  0697                     	;# 
   368  0698                     	;# 
   369  0699                     	;# 
   370  069A                     	;# 
   371  069B                     	;# 
   372  069C                     	;# 
   373  069D                     	;# 
   374  069E                     	;# 
   375  069F                     	;# 
   376  070D                     	;# 
   377  070E                     	;# 
   378  070F                     	;# 
   379  0710                     	;# 
   380  0711                     	;# 
   381  0712                     	;# 
   382  0713                     	;# 
   383  0714                     	;# 
   384  0715                     	;# 
   385  0716                     	;# 
   386  0717                     	;# 
   387  0718                     	;# 
   388  0719                     	;# 
   389  071A                     	;# 
   390  071B                     	;# 
   391  071C                     	;# 
   392  071D                     	;# 
   393  071E                     	;# 
   394  071F                     	;# 
   395  078E                     	;# 
   396  078F                     	;# 
   397  0790                     	;# 
   398  0791                     	;# 
   399  0792                     	;# 
   400  0793                     	;# 
   401  0794                     	;# 
   402  0795                     	;# 
   403  0796                     	;# 
   404  0797                     	;# 
   405  0798                     	;# 
   406  0799                     	;# 
   407  079A                     	;# 
   408  079B                     	;# 
   409  079C                     	;# 
   410  079D                     	;# 
   411  079E                     	;# 
   412  079F                     	;# 
   413  080D                     	;# 
   414  080E                     	;# 
   415  080F                     	;# 
   416  0810                     	;# 
   417  0811                     	;# 
   418  0812                     	;# 
   419  0813                     	;# 
   420  0814                     	;# 
   421  0815                     	;# 
   422  0816                     	;# 
   423  0817                     	;# 
   424  0818                     	;# 
   425  0819                     	;# 
   426  081A                     	;# 
   427  081B                     	;# 
   428  081C                     	;# 
   429  081D                     	;# 
   430  081E                     	;# 
   431  081F                     	;# 
   432  090C                     	;# 
   433  090D                     	;# 
   434  090E                     	;# 
   435  090F                     	;# 
   436  0910                     	;# 
   437  0911                     	;# 
   438  0912                     	;# 
   439  0913                     	;# 
   440  0914                     	;# 
   441  0915                     	;# 
   442  0916                     	;# 
   443  0917                     	;# 
   444  0D8E                     	;# 
   445  0D8F                     	;# 
   446  0D90                     	;# 
   447  0D91                     	;# 
   448  0D91                     	;# 
   449  0D92                     	;# 
   450  0D93                     	;# 
   451  0D93                     	;# 
   452  0D94                     	;# 
   453  0D95                     	;# 
   454  0D95                     	;# 
   455  0D96                     	;# 
   456  0D97                     	;# 
   457  0D97                     	;# 
   458  0D98                     	;# 
   459  0D99                     	;# 
   460  0D99                     	;# 
   461  0D9A                     	;# 
   462  0D9B                     	;# 
   463  0D9C                     	;# 
   464  0D9C                     	;# 
   465  0D9D                     	;# 
   466  0D9D                     	;# 
   467  0D9E                     	;# 
   468  0D9F                     	;# 
   469  0DA0                     	;# 
   470  0DA1                     	;# 
   471  0DA1                     	;# 
   472  0DA2                     	;# 
   473  0DA3                     	;# 
   474  0DA3                     	;# 
   475  0DA4                     	;# 
   476  0DA5                     	;# 
   477  0DA5                     	;# 
   478  0DA6                     	;# 
   479  0DA7                     	;# 
   480  0DA7                     	;# 
   481  0DA8                     	;# 
   482  0DA9                     	;# 
   483  0DA9                     	;# 
   484  0DAA                     	;# 
   485  0DAB                     	;# 
   486  0DAC                     	;# 
   487  0DAC                     	;# 
   488  0DAD                     	;# 
   489  0DAD                     	;# 
   490  0DAE                     	;# 
   491  0DAF                     	;# 
   492  0DB0                     	;# 
   493  0DB1                     	;# 
   494  0DB1                     	;# 
   495  0DB2                     	;# 
   496  0DB3                     	;# 
   497  0DB3                     	;# 
   498  0DB4                     	;# 
   499  0DB5                     	;# 
   500  0DB5                     	;# 
   501  0DB6                     	;# 
   502  0DB7                     	;# 
   503  0DB7                     	;# 
   504  0DB8                     	;# 
   505  0DB9                     	;# 
   506  0DB9                     	;# 
   507  0DBA                     	;# 
   508  0DBB                     	;# 
   509  0DBC                     	;# 
   510  0DBC                     	;# 
   511  0DBD                     	;# 
   512  0DBD                     	;# 
   513  0DBE                     	;# 
   514  0DBF                     	;# 
   515  0DC0                     	;# 
   516  0E0C                     	;# 
   517  0E0D                     	;# 
   518  0E0E                     	;# 
   519  0E0F                     	;# 
   520  0E10                     	;# 
   521  0E11                     	;# 
   522  0E12                     	;# 
   523  0E13                     	;# 
   524  0E14                     	;# 
   525  0E15                     	;# 
   526  0E15                     	;# 
   527  0E15                     	;# 
   528  0E16                     	;# 
   529  0E16                     	;# 
   530  0E16                     	;# 
   531  0E17                     	;# 
   532  0E17                     	;# 
   533  0E17                     	;# 
   534  0E18                     	;# 
   535  0E18                     	;# 
   536  0E18                     	;# 
   537  0E19                     	;# 
   538  0E1A                     	;# 
   539  0E1B                     	;# 
   540  0E1D                     	;# 
   541  0E1E                     	;# 
   542  0E1F                     	;# 
   543  0E21                     	;# 
   544  0E22                     	;# 
   545  0E23                     	;# 
   546  0E24                     	;# 
   547  0E25                     	;# 
   548  0E26                     	;# 
   549  0E27                     	;# 
   550  0E28                     	;# 
   551  0E29                     	;# 
   552  0E2D                     	;# 
   553  0E2E                     	;# 
   554  0E2F                     	;# 
   555  0E30                     	;# 
   556  0E31                     	;# 
   557  0E32                     	;# 
   558  0E35                     	;# 
   559  0E36                     	;# 
   560  0E37                     	;# 
   561  0E38                     	;# 
   562  0E39                     	;# 
   563  0E3A                     	;# 
   564  0E3B                     	;# 
   565  0E3C                     	;# 
   566  0E3D                     	;# 
   567  0E3E                     	;# 
   568  0E90                     	;# 
   569  0E91                     	;# 
   570  0E92                     	;# 
   571  0E93                     	;# 
   572  0E94                     	;# 
   573  0E95                     	;# 
   574  0E96                     	;# 
   575  0E97                     	;# 
   576  0E98                     	;# 
   577  0E99                     	;# 
   578  0E9A                     	;# 
   579  0E9B                     	;# 
   580  0E9C                     	;# 
   581  0E9D                     	;# 
   582  0E9E                     	;# 
   583  0E9F                     	;# 
   584  0EA0                     	;# 
   585  0EA1                     	;# 
   586  0EA2                     	;# 
   587  0EA3                     	;# 
   588  0EA4                     	;# 
   589  0EA5                     	;# 
   590  0EA6                     	;# 
   591  0EA7                     	;# 
   592  0F0F                     	;# 
   593  0F10                     	;# 
   594  0F11                     	;# 
   595  0F12                     	;# 
   596  0F13                     	;# 
   597  0F14                     	;# 
   598  0F15                     	;# 
   599  0F16                     	;# 
   600  0F17                     	;# 
   601  0F18                     	;# 
   602  0F19                     	;# 
   603  0F1A                     	;# 
   604  0F1B                     	;# 
   605  0F1C                     	;# 
   606  0F1D                     	;# 
   607  0F1E                     	;# 
   608  0F1F                     	;# 
   609  0F20                     	;# 
   610  0F21                     	;# 
   611  0F22                     	;# 
   612  0F23                     	;# 
   613  0F24                     	;# 
   614  0F25                     	;# 
   615  0F26                     	;# 
   616  0F27                     	;# 
   617  0F28                     	;# 
   618  0F29                     	;# 
   619  0F2A                     	;# 
   620  0F2B                     	;# 
   621  0F2C                     	;# 
   622  0F2D                     	;# 
   623  0F2E                     	;# 
   624  0F2F                     	;# 
   625  0F30                     	;# 
   626  0F31                     	;# 
   627  0F32                     	;# 
   628  0F33                     	;# 
   629  0F34                     	;# 
   630  0F35                     	;# 
   631  0F36                     	;# 
   632  0F37                     	;# 
   633  0FE4                     	;# 
   634  0FE5                     	;# 
   635  0FE6                     	;# 
   636  0FE7                     	;# 
   637  0FE8                     	;# 
   638  0FE9                     	;# 
   639  0FEA                     	;# 
   640  0FEB                     	;# 
   641  0FED                     	;# 
   642  0FEE                     	;# 
   643  0FEF                     	;# 
   644  0000                     	;# 
   645  0001                     	;# 
   646  0002                     	;# 
   647  0003                     	;# 
   648  0004                     	;# 
   649  0005                     	;# 
   650  0006                     	;# 
   651  0007                     	;# 
   652  0008                     	;# 
   653  0009                     	;# 
   654  000A                     	;# 
   655  000B                     	;# 
   656  000C                     	;# 
   657  000D                     	;# 
   658  000E                     	;# 
   659  0010                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0013                     	;# 
   663  0014                     	;# 
   664  0015                     	;# 
   665  0016                     	;# 
   666  0017                     	;# 
   667  0018                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001C                     	;# 
   673  001C                     	;# 
   674  001D                     	;# 
   675  001E                     	;# 
   676  001F                     	;# 
   677  008C                     	;# 
   678  008D                     	;# 
   679  008E                     	;# 
   680  0090                     	;# 
   681  0091                     	;# 
   682  0092                     	;# 
   683  0093                     	;# 
   684  0094                     	;# 
   685  0095                     	;# 
   686  0096                     	;# 
   687  0097                     	;# 
   688  0098                     	;# 
   689  0099                     	;# 
   690  009A                     	;# 
   691  009B                     	;# 
   692  009C                     	;# 
   693  009D                     	;# 
   694  009E                     	;# 
   695  009F                     	;# 
   696  010C                     	;# 
   697  010D                     	;# 
   698  010E                     	;# 
   699  0111                     	;# 
   700  0112                     	;# 
   701  0113                     	;# 
   702  0114                     	;# 
   703  0115                     	;# 
   704  0116                     	;# 
   705  0117                     	;# 
   706  0118                     	;# 
   707  0119                     	;# 
   708  011A                     	;# 
   709  011B                     	;# 
   710  011C                     	;# 
   711  011D                     	;# 
   712  018C                     	;# 
   713  018D                     	;# 
   714  018E                     	;# 
   715  0191                     	;# 
   716  0191                     	;# 
   717  0192                     	;# 
   718  0193                     	;# 
   719  0193                     	;# 
   720  0194                     	;# 
   721  0195                     	;# 
   722  0196                     	;# 
   723  0197                     	;# 
   724  0199                     	;# 
   725  0199                     	;# 
   726  0199                     	;# 
   727  019A                     	;# 
   728  019A                     	;# 
   729  019A                     	;# 
   730  019B                     	;# 
   731  019B                     	;# 
   732  019B                     	;# 
   733  019B                     	;# 
   734  019B                     	;# 
   735  019C                     	;# 
   736  019C                     	;# 
   737  019C                     	;# 
   738  019D                     	;# 
   739  019D                     	;# 
   740  019D                     	;# 
   741  019E                     	;# 
   742  019E                     	;# 
   743  019E                     	;# 
   744  019F                     	;# 
   745  019F                     	;# 
   746  019F                     	;# 
   747  019F                     	;# 
   748  019F                     	;# 
   749  020C                     	;# 
   750  020D                     	;# 
   751  020E                     	;# 
   752  0210                     	;# 
   753  0211                     	;# 
   754  0211                     	;# 
   755  0212                     	;# 
   756  0212                     	;# 
   757  0213                     	;# 
   758  0213                     	;# 
   759  0214                     	;# 
   760  0214                     	;# 
   761  0215                     	;# 
   762  0215                     	;# 
   763  0215                     	;# 
   764  0215                     	;# 
   765  0216                     	;# 
   766  0216                     	;# 
   767  0217                     	;# 
   768  0217                     	;# 
   769  021B                     	;# 
   770  021C                     	;# 
   771  021D                     	;# 
   772  021E                     	;# 
   773  021F                     	;# 
   774  028C                     	;# 
   775  028D                     	;# 
   776  028E                     	;# 
   777  0291                     	;# 
   778  0291                     	;# 
   779  0292                     	;# 
   780  0293                     	;# 
   781  0294                     	;# 
   782  0295                     	;# 
   783  0295                     	;# 
   784  0296                     	;# 
   785  0297                     	;# 
   786  0298                     	;# 
   787  0299                     	;# 
   788  0299                     	;# 
   789  029A                     	;# 
   790  029B                     	;# 
   791  029C                     	;# 
   792  029E                     	;# 
   793  029F                     	;# 
   794  030C                     	;# 
   795  030D                     	;# 
   796  030E                     	;# 
   797  0315                     	;# 
   798  0316                     	;# 
   799  0317                     	;# 
   800  0318                     	;# 
   801  0319                     	;# 
   802  031B                     	;# 
   803  031C                     	;# 
   804  031D                     	;# 
   805  031E                     	;# 
   806  031F                     	;# 
   807  038C                     	;# 
   808  038D                     	;# 
   809  038E                     	;# 
   810  0390                     	;# 
   811  0391                     	;# 
   812  0392                     	;# 
   813  0393                     	;# 
   814  0394                     	;# 
   815  0395                     	;# 
   816  0396                     	;# 
   817  0397                     	;# 
   818  0398                     	;# 
   819  0399                     	;# 
   820  039D                     	;# 
   821  039E                     	;# 
   822  039F                     	;# 
   823  040D                     	;# 
   824  040F                     	;# 
   825  040F                     	;# 
   826  0410                     	;# 
   827  0411                     	;# 
   828  0412                     	;# 
   829  0413                     	;# 
   830  0413                     	;# 
   831  0414                     	;# 
   832  0414                     	;# 
   833  0415                     	;# 
   834  0416                     	;# 
   835  0417                     	;# 
   836  0418                     	;# 
   837  041A                     	;# 
   838  041A                     	;# 
   839  041B                     	;# 
   840  041B                     	;# 
   841  041C                     	;# 
   842  041D                     	;# 
   843  041E                     	;# 
   844  041F                     	;# 
   845  048E                     	;# 
   846  048E                     	;# 
   847  048F                     	;# 
   848  0490                     	;# 
   849  0491                     	;# 
   850  0492                     	;# 
   851  0493                     	;# 
   852  0493                     	;# 
   853  0494                     	;# 
   854  0494                     	;# 
   855  0495                     	;# 
   856  0496                     	;# 
   857  0497                     	;# 
   858  0498                     	;# 
   859  049A                     	;# 
   860  049A                     	;# 
   861  049B                     	;# 
   862  049B                     	;# 
   863  049C                     	;# 
   864  049D                     	;# 
   865  049E                     	;# 
   866  049F                     	;# 
   867  050F                     	;# 
   868  0510                     	;# 
   869  0511                     	;# 
   870  0512                     	;# 
   871  0513                     	;# 
   872  0514                     	;# 
   873  0515                     	;# 
   874  0516                     	;# 
   875  0517                     	;# 
   876  0518                     	;# 
   877  0519                     	;# 
   878  051A                     	;# 
   879  058D                     	;# 
   880  058E                     	;# 
   881  058F                     	;# 
   882  058F                     	;# 
   883  058F                     	;# 
   884  0590                     	;# 
   885  0590                     	;# 
   886  0591                     	;# 
   887  0592                     	;# 
   888  0592                     	;# 
   889  0592                     	;# 
   890  0593                     	;# 
   891  0593                     	;# 
   892  0594                     	;# 
   893  0595                     	;# 
   894  0595                     	;# 
   895  0596                     	;# 
   896  0597                     	;# 
   897  0597                     	;# 
   898  0598                     	;# 
   899  0599                     	;# 
   900  0599                     	;# 
   901  0599                     	;# 
   902  059A                     	;# 
   903  059A                     	;# 
   904  059E                     	;# 
   905  059F                     	;# 
   906  059F                     	;# 
   907  0614                     	;# 
   908  0614                     	;# 
   909  0615                     	;# 
   910  0616                     	;# 
   911  0617                     	;# 
   912  0617                     	;# 
   913  0618                     	;# 
   914  0619                     	;# 
   915  061A                     	;# 
   916  061A                     	;# 
   917  061B                     	;# 
   918  061C                     	;# 
   919  068D                     	;# 
   920  068E                     	;# 
   921  068F                     	;# 
   922  0690                     	;# 
   923  0691                     	;# 
   924  0692                     	;# 
   925  0693                     	;# 
   926  0694                     	;# 
   927  0695                     	;# 
   928  0696                     	;# 
   929  0697                     	;# 
   930  0698                     	;# 
   931  0699                     	;# 
   932  069A                     	;# 
   933  069B                     	;# 
   934  069C                     	;# 
   935  069D                     	;# 
   936  069E                     	;# 
   937  069F                     	;# 
   938  070D                     	;# 
   939  070E                     	;# 
   940  070F                     	;# 
   941  0710                     	;# 
   942  0711                     	;# 
   943  0712                     	;# 
   944  0713                     	;# 
   945  0714                     	;# 
   946  0715                     	;# 
   947  0716                     	;# 
   948  0717                     	;# 
   949  0718                     	;# 
   950  0719                     	;# 
   951  071A                     	;# 
   952  071B                     	;# 
   953  071C                     	;# 
   954  071D                     	;# 
   955  071E                     	;# 
   956  071F                     	;# 
   957  078E                     	;# 
   958  078F                     	;# 
   959  0790                     	;# 
   960  0791                     	;# 
   961  0792                     	;# 
   962  0793                     	;# 
   963  0794                     	;# 
   964  0795                     	;# 
   965  0796                     	;# 
   966  0797                     	;# 
   967  0798                     	;# 
   968  0799                     	;# 
   969  079A                     	;# 
   970  079B                     	;# 
   971  079C                     	;# 
   972  079D                     	;# 
   973  079E                     	;# 
   974  079F                     	;# 
   975  080D                     	;# 
   976  080E                     	;# 
   977  080F                     	;# 
   978  0810                     	;# 
   979  0811                     	;# 
   980  0812                     	;# 
   981  0813                     	;# 
   982  0814                     	;# 
   983  0815                     	;# 
   984  0816                     	;# 
   985  0817                     	;# 
   986  0818                     	;# 
   987  0819                     	;# 
   988  081A                     	;# 
   989  081B                     	;# 
   990  081C                     	;# 
   991  081D                     	;# 
   992  081E                     	;# 
   993  081F                     	;# 
   994  090C                     	;# 
   995  090D                     	;# 
   996  090E                     	;# 
   997  090F                     	;# 
   998  0910                     	;# 
   999  0911                     	;# 
  1000  0912                     	;# 
  1001  0913                     	;# 
  1002  0914                     	;# 
  1003  0915                     	;# 
  1004  0916                     	;# 
  1005  0917                     	;# 
  1006  0D8E                     	;# 
  1007  0D8F                     	;# 
  1008  0D90                     	;# 
  1009  0D91                     	;# 
  1010  0D91                     	;# 
  1011  0D92                     	;# 
  1012  0D93                     	;# 
  1013  0D93                     	;# 
  1014  0D94                     	;# 
  1015  0D95                     	;# 
  1016  0D95                     	;# 
  1017  0D96                     	;# 
  1018  0D97                     	;# 
  1019  0D97                     	;# 
  1020  0D98                     	;# 
  1021  0D99                     	;# 
  1022  0D99                     	;# 
  1023  0D9A                     	;# 
  1024  0D9B                     	;# 
  1025  0D9C                     	;# 
  1026  0D9C                     	;# 
  1027  0D9D                     	;# 
  1028  0D9D                     	;# 
  1029  0D9E                     	;# 
  1030  0D9F                     	;# 
  1031  0DA0                     	;# 
  1032  0DA1                     	;# 
  1033  0DA1                     	;# 
  1034  0DA2                     	;# 
  1035  0DA3                     	;# 
  1036  0DA3                     	;# 
  1037  0DA4                     	;# 
  1038  0DA5                     	;# 
  1039  0DA5                     	;# 
  1040  0DA6                     	;# 
  1041  0DA7                     	;# 
  1042  0DA7                     	;# 
  1043  0DA8                     	;# 
  1044  0DA9                     	;# 
  1045  0DA9                     	;# 
  1046  0DAA                     	;# 
  1047  0DAB                     	;# 
  1048  0DAC                     	;# 
  1049  0DAC                     	;# 
  1050  0DAD                     	;# 
  1051  0DAD                     	;# 
  1052  0DAE                     	;# 
  1053  0DAF                     	;# 
  1054  0DB0                     	;# 
  1055  0DB1                     	;# 
  1056  0DB1                     	;# 
  1057  0DB2                     	;# 
  1058  0DB3                     	;# 
  1059  0DB3                     	;# 
  1060  0DB4                     	;# 
  1061  0DB5                     	;# 
  1062  0DB5                     	;# 
  1063  0DB6                     	;# 
  1064  0DB7                     	;# 
  1065  0DB7                     	;# 
  1066  0DB8                     	;# 
  1067  0DB9                     	;# 
  1068  0DB9                     	;# 
  1069  0DBA                     	;# 
  1070  0DBB                     	;# 
  1071  0DBC                     	;# 
  1072  0DBC                     	;# 
  1073  0DBD                     	;# 
  1074  0DBD                     	;# 
  1075  0DBE                     	;# 
  1076  0DBF                     	;# 
  1077  0DC0                     	;# 
  1078  0E0C                     	;# 
  1079  0E0D                     	;# 
  1080  0E0E                     	;# 
  1081  0E0F                     	;# 
  1082  0E10                     	;# 
  1083  0E11                     	;# 
  1084  0E12                     	;# 
  1085  0E13                     	;# 
  1086  0E14                     	;# 
  1087  0E15                     	;# 
  1088  0E15                     	;# 
  1089  0E15                     	;# 
  1090  0E16                     	;# 
  1091  0E16                     	;# 
  1092  0E16                     	;# 
  1093  0E17                     	;# 
  1094  0E17                     	;# 
  1095  0E17                     	;# 
  1096  0E18                     	;# 
  1097  0E18                     	;# 
  1098  0E18                     	;# 
  1099  0E19                     	;# 
  1100  0E1A                     	;# 
  1101  0E1B                     	;# 
  1102  0E1D                     	;# 
  1103  0E1E                     	;# 
  1104  0E1F                     	;# 
  1105  0E21                     	;# 
  1106  0E22                     	;# 
  1107  0E23                     	;# 
  1108  0E24                     	;# 
  1109  0E25                     	;# 
  1110  0E26                     	;# 
  1111  0E27                     	;# 
  1112  0E28                     	;# 
  1113  0E29                     	;# 
  1114  0E2D                     	;# 
  1115  0E2E                     	;# 
  1116  0E2F                     	;# 
  1117  0E30                     	;# 
  1118  0E31                     	;# 
  1119  0E32                     	;# 
  1120  0E35                     	;# 
  1121  0E36                     	;# 
  1122  0E37                     	;# 
  1123  0E38                     	;# 
  1124  0E39                     	;# 
  1125  0E3A                     	;# 
  1126  0E3B                     	;# 
  1127  0E3C                     	;# 
  1128  0E3D                     	;# 
  1129  0E3E                     	;# 
  1130  0E90                     	;# 
  1131  0E91                     	;# 
  1132  0E92                     	;# 
  1133  0E93                     	;# 
  1134  0E94                     	;# 
  1135  0E95                     	;# 
  1136  0E96                     	;# 
  1137  0E97                     	;# 
  1138  0E98                     	;# 
  1139  0E99                     	;# 
  1140  0E9A                     	;# 
  1141  0E9B                     	;# 
  1142  0E9C                     	;# 
  1143  0E9D                     	;# 
  1144  0E9E                     	;# 
  1145  0E9F                     	;# 
  1146  0EA0                     	;# 
  1147  0EA1                     	;# 
  1148  0EA2                     	;# 
  1149  0EA3                     	;# 
  1150  0EA4                     	;# 
  1151  0EA5                     	;# 
  1152  0EA6                     	;# 
  1153  0EA7                     	;# 
  1154  0F0F                     	;# 
  1155  0F10                     	;# 
  1156  0F11                     	;# 
  1157  0F12                     	;# 
  1158  0F13                     	;# 
  1159  0F14                     	;# 
  1160  0F15                     	;# 
  1161  0F16                     	;# 
  1162  0F17                     	;# 
  1163  0F18                     	;# 
  1164  0F19                     	;# 
  1165  0F1A                     	;# 
  1166  0F1B                     	;# 
  1167  0F1C                     	;# 
  1168  0F1D                     	;# 
  1169  0F1E                     	;# 
  1170  0F1F                     	;# 
  1171  0F20                     	;# 
  1172  0F21                     	;# 
  1173  0F22                     	;# 
  1174  0F23                     	;# 
  1175  0F24                     	;# 
  1176  0F25                     	;# 
  1177  0F26                     	;# 
  1178  0F27                     	;# 
  1179  0F28                     	;# 
  1180  0F29                     	;# 
  1181  0F2A                     	;# 
  1182  0F2B                     	;# 
  1183  0F2C                     	;# 
  1184  0F2D                     	;# 
  1185  0F2E                     	;# 
  1186  0F2F                     	;# 
  1187  0F30                     	;# 
  1188  0F31                     	;# 
  1189  0F32                     	;# 
  1190  0F33                     	;# 
  1191  0F34                     	;# 
  1192  0F35                     	;# 
  1193  0F36                     	;# 
  1194  0F37                     	;# 
  1195  0FE4                     	;# 
  1196  0FE5                     	;# 
  1197  0FE6                     	;# 
  1198  0FE7                     	;# 
  1199  0FE8                     	;# 
  1200  0FE9                     	;# 
  1201  0FEA                     	;# 
  1202  0FEB                     	;# 
  1203  0FED                     	;# 
  1204  0FEE                     	;# 
  1205  0FEF                     	;# 
  1206  0000                     	;# 
  1207  0001                     	;# 
  1208  0002                     	;# 
  1209  0003                     	;# 
  1210  0004                     	;# 
  1211  0005                     	;# 
  1212  0006                     	;# 
  1213  0007                     	;# 
  1214  0008                     	;# 
  1215  0009                     	;# 
  1216  000A                     	;# 
  1217  000B                     	;# 
  1218  000C                     	;# 
  1219  000D                     	;# 
  1220  000E                     	;# 
  1221  0010                     	;# 
  1222  0011                     	;# 
  1223  0012                     	;# 
  1224  0013                     	;# 
  1225  0014                     	;# 
  1226  0015                     	;# 
  1227  0016                     	;# 
  1228  0017                     	;# 
  1229  0018                     	;# 
  1230  0018                     	;# 
  1231  0019                     	;# 
  1232  001A                     	;# 
  1233  001B                     	;# 
  1234  001C                     	;# 
  1235  001C                     	;# 
  1236  001D                     	;# 
  1237  001E                     	;# 
  1238  001F                     	;# 
  1239  008C                     	;# 
  1240  008D                     	;# 
  1241  008E                     	;# 
  1242  0090                     	;# 
  1243  0091                     	;# 
  1244  0092                     	;# 
  1245  0093                     	;# 
  1246  0094                     	;# 
  1247  0095                     	;# 
  1248  0096                     	;# 
  1249  0097                     	;# 
  1250  0098                     	;# 
  1251  0099                     	;# 
  1252  009A                     	;# 
  1253  009B                     	;# 
  1254  009C                     	;# 
  1255  009D                     	;# 
  1256  009E                     	;# 
  1257  009F                     	;# 
  1258  010C                     	;# 
  1259  010D                     	;# 
  1260  010E                     	;# 
  1261  0111                     	;# 
  1262  0112                     	;# 
  1263  0113                     	;# 
  1264  0114                     	;# 
  1265  0115                     	;# 
  1266  0116                     	;# 
  1267  0117                     	;# 
  1268  0118                     	;# 
  1269  0119                     	;# 
  1270  011A                     	;# 
  1271  011B                     	;# 
  1272  011C                     	;# 
  1273  011D                     	;# 
  1274  018C                     	;# 
  1275  018D                     	;# 
  1276  018E                     	;# 
  1277  0191                     	;# 
  1278  0191                     	;# 
  1279  0192                     	;# 
  1280  0193                     	;# 
  1281  0193                     	;# 
  1282  0194                     	;# 
  1283  0195                     	;# 
  1284  0196                     	;# 
  1285  0197                     	;# 
  1286  0199                     	;# 
  1287  0199                     	;# 
  1288  0199                     	;# 
  1289  019A                     	;# 
  1290  019A                     	;# 
  1291  019A                     	;# 
  1292  019B                     	;# 
  1293  019B                     	;# 
  1294  019B                     	;# 
  1295  019B                     	;# 
  1296  019B                     	;# 
  1297  019C                     	;# 
  1298  019C                     	;# 
  1299  019C                     	;# 
  1300  019D                     	;# 
  1301  019D                     	;# 
  1302  019D                     	;# 
  1303  019E                     	;# 
  1304  019E                     	;# 
  1305  019E                     	;# 
  1306  019F                     	;# 
  1307  019F                     	;# 
  1308  019F                     	;# 
  1309  019F                     	;# 
  1310  019F                     	;# 
  1311  020C                     	;# 
  1312  020D                     	;# 
  1313  020E                     	;# 
  1314  0210                     	;# 
  1315  0211                     	;# 
  1316  0211                     	;# 
  1317  0212                     	;# 
  1318  0212                     	;# 
  1319  0213                     	;# 
  1320  0213                     	;# 
  1321  0214                     	;# 
  1322  0214                     	;# 
  1323  0215                     	;# 
  1324  0215                     	;# 
  1325  0215                     	;# 
  1326  0215                     	;# 
  1327  0216                     	;# 
  1328  0216                     	;# 
  1329  0217                     	;# 
  1330  0217                     	;# 
  1331  021B                     	;# 
  1332  021C                     	;# 
  1333  021D                     	;# 
  1334  021E                     	;# 
  1335  021F                     	;# 
  1336  028C                     	;# 
  1337  028D                     	;# 
  1338  028E                     	;# 
  1339  0291                     	;# 
  1340  0291                     	;# 
  1341  0292                     	;# 
  1342  0293                     	;# 
  1343  0294                     	;# 
  1344  0295                     	;# 
  1345  0295                     	;# 
  1346  0296                     	;# 
  1347  0297                     	;# 
  1348  0298                     	;# 
  1349  0299                     	;# 
  1350  0299                     	;# 
  1351  029A                     	;# 
  1352  029B                     	;# 
  1353  029C                     	;# 
  1354  029E                     	;# 
  1355  029F                     	;# 
  1356  030C                     	;# 
  1357  030D                     	;# 
  1358  030E                     	;# 
  1359  0315                     	;# 
  1360  0316                     	;# 
  1361  0317                     	;# 
  1362  0318                     	;# 
  1363  0319                     	;# 
  1364  031B                     	;# 
  1365  031C                     	;# 
  1366  031D                     	;# 
  1367  031E                     	;# 
  1368  031F                     	;# 
  1369  038C                     	;# 
  1370  038D                     	;# 
  1371  038E                     	;# 
  1372  0390                     	;# 
  1373  0391                     	;# 
  1374  0392                     	;# 
  1375  0393                     	;# 
  1376  0394                     	;# 
  1377  0395                     	;# 
  1378  0396                     	;# 
  1379  0397                     	;# 
  1380  0398                     	;# 
  1381  0399                     	;# 
  1382  039D                     	;# 
  1383  039E                     	;# 
  1384  039F                     	;# 
  1385  040D                     	;# 
  1386  040F                     	;# 
  1387  040F                     	;# 
  1388  0410                     	;# 
  1389  0411                     	;# 
  1390  0412                     	;# 
  1391  0413                     	;# 
  1392  0413                     	;# 
  1393  0414                     	;# 
  1394  0414                     	;# 
  1395  0415                     	;# 
  1396  0416                     	;# 
  1397  0417                     	;# 
  1398  0418                     	;# 
  1399  041A                     	;# 
  1400  041A                     	;# 
  1401  041B                     	;# 
  1402  041B                     	;# 
  1403  041C                     	;# 
  1404  041D                     	;# 
  1405  041E                     	;# 
  1406  041F                     	;# 
  1407  048E                     	;# 
  1408  048E                     	;# 
  1409  048F                     	;# 
  1410  0490                     	;# 
  1411  0491                     	;# 
  1412  0492                     	;# 
  1413  0493                     	;# 
  1414  0493                     	;# 
  1415  0494                     	;# 
  1416  0494                     	;# 
  1417  0495                     	;# 
  1418  0496                     	;# 
  1419  0497                     	;# 
  1420  0498                     	;# 
  1421  049A                     	;# 
  1422  049A                     	;# 
  1423  049B                     	;# 
  1424  049B                     	;# 
  1425  049C                     	;# 
  1426  049D                     	;# 
  1427  049E                     	;# 
  1428  049F                     	;# 
  1429  050F                     	;# 
  1430  0510                     	;# 
  1431  0511                     	;# 
  1432  0512                     	;# 
  1433  0513                     	;# 
  1434  0514                     	;# 
  1435  0515                     	;# 
  1436  0516                     	;# 
  1437  0517                     	;# 
  1438  0518                     	;# 
  1439  0519                     	;# 
  1440  051A                     	;# 
  1441  058D                     	;# 
  1442  058E                     	;# 
  1443  058F                     	;# 
  1444  058F                     	;# 
  1445  058F                     	;# 
  1446  0590                     	;# 
  1447  0590                     	;# 
  1448  0591                     	;# 
  1449  0592                     	;# 
  1450  0592                     	;# 
  1451  0592                     	;# 
  1452  0593                     	;# 
  1453  0593                     	;# 
  1454  0594                     	;# 
  1455  0595                     	;# 
  1456  0595                     	;# 
  1457  0596                     	;# 
  1458  0597                     	;# 
  1459  0597                     	;# 
  1460  0598                     	;# 
  1461  0599                     	;# 
  1462  0599                     	;# 
  1463  0599                     	;# 
  1464  059A                     	;# 
  1465  059A                     	;# 
  1466  059E                     	;# 
  1467  059F                     	;# 
  1468  059F                     	;# 
  1469  0614                     	;# 
  1470  0614                     	;# 
  1471  0615                     	;# 
  1472  0616                     	;# 
  1473  0617                     	;# 
  1474  0617                     	;# 
  1475  0618                     	;# 
  1476  0619                     	;# 
  1477  061A                     	;# 
  1478  061A                     	;# 
  1479  061B                     	;# 
  1480  061C                     	;# 
  1481  068D                     	;# 
  1482  068E                     	;# 
  1483  068F                     	;# 
  1484  0690                     	;# 
  1485  0691                     	;# 
  1486  0692                     	;# 
  1487  0693                     	;# 
  1488  0694                     	;# 
  1489  0695                     	;# 
  1490  0696                     	;# 
  1491  0697                     	;# 
  1492  0698                     	;# 
  1493  0699                     	;# 
  1494  069A                     	;# 
  1495  069B                     	;# 
  1496  069C                     	;# 
  1497  069D                     	;# 
  1498  069E                     	;# 
  1499  069F                     	;# 
  1500  070D                     	;# 
  1501  070E                     	;# 
  1502  070F                     	;# 
  1503  0710                     	;# 
  1504  0711                     	;# 
  1505  0712                     	;# 
  1506  0713                     	;# 
  1507  0714                     	;# 
  1508  0715                     	;# 
  1509  0716                     	;# 
  1510  0717                     	;# 
  1511  0718                     	;# 
  1512  0719                     	;# 
  1513  071A                     	;# 
  1514  071B                     	;# 
  1515  071C                     	;# 
  1516  071D                     	;# 
  1517  071E                     	;# 
  1518  071F                     	;# 
  1519  078E                     	;# 
  1520  078F                     	;# 
  1521  0790                     	;# 
  1522  0791                     	;# 
  1523  0792                     	;# 
  1524  0793                     	;# 
  1525  0794                     	;# 
  1526  0795                     	;# 
  1527  0796                     	;# 
  1528  0797                     	;# 
  1529  0798                     	;# 
  1530  0799                     	;# 
  1531  079A                     	;# 
  1532  079B                     	;# 
  1533  079C                     	;# 
  1534  079D                     	;# 
  1535  079E                     	;# 
  1536  079F                     	;# 
  1537  080D                     	;# 
  1538  080E                     	;# 
  1539  080F                     	;# 
  1540  0810                     	;# 
  1541  0811                     	;# 
  1542  0812                     	;# 
  1543  0813                     	;# 
  1544  0814                     	;# 
  1545  0815                     	;# 
  1546  0816                     	;# 
  1547  0817                     	;# 
  1548  0818                     	;# 
  1549  0819                     	;# 
  1550  081A                     	;# 
  1551  081B                     	;# 
  1552  081C                     	;# 
  1553  081D                     	;# 
  1554  081E                     	;# 
  1555  081F                     	;# 
  1556  090C                     	;# 
  1557  090D                     	;# 
  1558  090E                     	;# 
  1559  090F                     	;# 
  1560  0910                     	;# 
  1561  0911                     	;# 
  1562  0912                     	;# 
  1563  0913                     	;# 
  1564  0914                     	;# 
  1565  0915                     	;# 
  1566  0916                     	;# 
  1567  0917                     	;# 
  1568  0D8E                     	;# 
  1569  0D8F                     	;# 
  1570  0D90                     	;# 
  1571  0D91                     	;# 
  1572  0D91                     	;# 
  1573  0D92                     	;# 
  1574  0D93                     	;# 
  1575  0D93                     	;# 
  1576  0D94                     	;# 
  1577  0D95                     	;# 
  1578  0D95                     	;# 
  1579  0D96                     	;# 
  1580  0D97                     	;# 
  1581  0D97                     	;# 
  1582  0D98                     	;# 
  1583  0D99                     	;# 
  1584  0D99                     	;# 
  1585  0D9A                     	;# 
  1586  0D9B                     	;# 
  1587  0D9C                     	;# 
  1588  0D9C                     	;# 
  1589  0D9D                     	;# 
  1590  0D9D                     	;# 
  1591  0D9E                     	;# 
  1592  0D9F                     	;# 
  1593  0DA0                     	;# 
  1594  0DA1                     	;# 
  1595  0DA1                     	;# 
  1596  0DA2                     	;# 
  1597  0DA3                     	;# 
  1598  0DA3                     	;# 
  1599  0DA4                     	;# 
  1600  0DA5                     	;# 
  1601  0DA5                     	;# 
  1602  0DA6                     	;# 
  1603  0DA7                     	;# 
  1604  0DA7                     	;# 
  1605  0DA8                     	;# 
  1606  0DA9                     	;# 
  1607  0DA9                     	;# 
  1608  0DAA                     	;# 
  1609  0DAB                     	;# 
  1610  0DAC                     	;# 
  1611  0DAC                     	;# 
  1612  0DAD                     	;# 
  1613  0DAD                     	;# 
  1614  0DAE                     	;# 
  1615  0DAF                     	;# 
  1616  0DB0                     	;# 
  1617  0DB1                     	;# 
  1618  0DB1                     	;# 
  1619  0DB2                     	;# 
  1620  0DB3                     	;# 
  1621  0DB3                     	;# 
  1622  0DB4                     	;# 
  1623  0DB5                     	;# 
  1624  0DB5                     	;# 
  1625  0DB6                     	;# 
  1626  0DB7                     	;# 
  1627  0DB7                     	;# 
  1628  0DB8                     	;# 
  1629  0DB9                     	;# 
  1630  0DB9                     	;# 
  1631  0DBA                     	;# 
  1632  0DBB                     	;# 
  1633  0DBC                     	;# 
  1634  0DBC                     	;# 
  1635  0DBD                     	;# 
  1636  0DBD                     	;# 
  1637  0DBE                     	;# 
  1638  0DBF                     	;# 
  1639  0DC0                     	;# 
  1640  0E0C                     	;# 
  1641  0E0D                     	;# 
  1642  0E0E                     	;# 
  1643  0E0F                     	;# 
  1644  0E10                     	;# 
  1645  0E11                     	;# 
  1646  0E12                     	;# 
  1647  0E13                     	;# 
  1648  0E14                     	;# 
  1649  0E15                     	;# 
  1650  0E15                     	;# 
  1651  0E15                     	;# 
  1652  0E16                     	;# 
  1653  0E16                     	;# 
  1654  0E16                     	;# 
  1655  0E17                     	;# 
  1656  0E17                     	;# 
  1657  0E17                     	;# 
  1658  0E18                     	;# 
  1659  0E18                     	;# 
  1660  0E18                     	;# 
  1661  0E19                     	;# 
  1662  0E1A                     	;# 
  1663  0E1B                     	;# 
  1664  0E1D                     	;# 
  1665  0E1E                     	;# 
  1666  0E1F                     	;# 
  1667  0E21                     	;# 
  1668  0E22                     	;# 
  1669  0E23                     	;# 
  1670  0E24                     	;# 
  1671  0E25                     	;# 
  1672  0E26                     	;# 
  1673  0E27                     	;# 
  1674  0E28                     	;# 
  1675  0E29                     	;# 
  1676  0E2D                     	;# 
  1677  0E2E                     	;# 
  1678  0E2F                     	;# 
  1679  0E30                     	;# 
  1680  0E31                     	;# 
  1681  0E32                     	;# 
  1682  0E35                     	;# 
  1683  0E36                     	;# 
  1684  0E37                     	;# 
  1685  0E38                     	;# 
  1686  0E39                     	;# 
  1687  0E3A                     	;# 
  1688  0E3B                     	;# 
  1689  0E3C                     	;# 
  1690  0E3D                     	;# 
  1691  0E3E                     	;# 
  1692  0E90                     	;# 
  1693  0E91                     	;# 
  1694  0E92                     	;# 
  1695  0E93                     	;# 
  1696  0E94                     	;# 
  1697  0E95                     	;# 
  1698  0E96                     	;# 
  1699  0E97                     	;# 
  1700  0E98                     	;# 
  1701  0E99                     	;# 
  1702  0E9A                     	;# 
  1703  0E9B                     	;# 
  1704  0E9C                     	;# 
  1705  0E9D                     	;# 
  1706  0E9E                     	;# 
  1707  0E9F                     	;# 
  1708  0EA0                     	;# 
  1709  0EA1                     	;# 
  1710  0EA2                     	;# 
  1711  0EA3                     	;# 
  1712  0EA4                     	;# 
  1713  0EA5                     	;# 
  1714  0EA6                     	;# 
  1715  0EA7                     	;# 
  1716  0F0F                     	;# 
  1717  0F10                     	;# 
  1718  0F11                     	;# 
  1719  0F12                     	;# 
  1720  0F13                     	;# 
  1721  0F14                     	;# 
  1722  0F15                     	;# 
  1723  0F16                     	;# 
  1724  0F17                     	;# 
  1725  0F18                     	;# 
  1726  0F19                     	;# 
  1727  0F1A                     	;# 
  1728  0F1B                     	;# 
  1729  0F1C                     	;# 
  1730  0F1D                     	;# 
  1731  0F1E                     	;# 
  1732  0F1F                     	;# 
  1733  0F20                     	;# 
  1734  0F21                     	;# 
  1735  0F22                     	;# 
  1736  0F23                     	;# 
  1737  0F24                     	;# 
  1738  0F25                     	;# 
  1739  0F26                     	;# 
  1740  0F27                     	;# 
  1741  0F28                     	;# 
  1742  0F29                     	;# 
  1743  0F2A                     	;# 
  1744  0F2B                     	;# 
  1745  0F2C                     	;# 
  1746  0F2D                     	;# 
  1747  0F2E                     	;# 
  1748  0F2F                     	;# 
  1749  0F30                     	;# 
  1750  0F31                     	;# 
  1751  0F32                     	;# 
  1752  0F33                     	;# 
  1753  0F34                     	;# 
  1754  0F35                     	;# 
  1755  0F36                     	;# 
  1756  0F37                     	;# 
  1757  0FE4                     	;# 
  1758  0FE5                     	;# 
  1759  0FE6                     	;# 
  1760  0FE7                     	;# 
  1761  0FE8                     	;# 
  1762  0FE9                     	;# 
  1763  0FEA                     	;# 
  1764  0FEB                     	;# 
  1765  0FED                     	;# 
  1766  0FEE                     	;# 
  1767  0FEF                     	;# 
  1768  0000                     	;# 
  1769  0001                     	;# 
  1770  0002                     	;# 
  1771  0003                     	;# 
  1772  0004                     	;# 
  1773  0005                     	;# 
  1774  0006                     	;# 
  1775  0007                     	;# 
  1776  0008                     	;# 
  1777  0009                     	;# 
  1778  000A                     	;# 
  1779  000B                     	;# 
  1780  000C                     	;# 
  1781  000D                     	;# 
  1782  000E                     	;# 
  1783  0010                     	;# 
  1784  0011                     	;# 
  1785  0012                     	;# 
  1786  0013                     	;# 
  1787  0014                     	;# 
  1788  0015                     	;# 
  1789  0016                     	;# 
  1790  0017                     	;# 
  1791  0018                     	;# 
  1792  0018                     	;# 
  1793  0019                     	;# 
  1794  001A                     	;# 
  1795  001B                     	;# 
  1796  001C                     	;# 
  1797  001C                     	;# 
  1798  001D                     	;# 
  1799  001E                     	;# 
  1800  001F                     	;# 
  1801  008C                     	;# 
  1802  008D                     	;# 
  1803  008E                     	;# 
  1804  0090                     	;# 
  1805  0091                     	;# 
  1806  0092                     	;# 
  1807  0093                     	;# 
  1808  0094                     	;# 
  1809  0095                     	;# 
  1810  0096                     	;# 
  1811  0097                     	;# 
  1812  0098                     	;# 
  1813  0099                     	;# 
  1814  009A                     	;# 
  1815  009B                     	;# 
  1816  009C                     	;# 
  1817  009D                     	;# 
  1818  009E                     	;# 
  1819  009F                     	;# 
  1820  010C                     	;# 
  1821  010D                     	;# 
  1822  010E                     	;# 
  1823  0111                     	;# 
  1824  0112                     	;# 
  1825  0113                     	;# 
  1826  0114                     	;# 
  1827  0115                     	;# 
  1828  0116                     	;# 
  1829  0117                     	;# 
  1830  0118                     	;# 
  1831  0119                     	;# 
  1832  011A                     	;# 
  1833  011B                     	;# 
  1834  011C                     	;# 
  1835  011D                     	;# 
  1836  018C                     	;# 
  1837  018D                     	;# 
  1838  018E                     	;# 
  1839  0191                     	;# 
  1840  0191                     	;# 
  1841  0192                     	;# 
  1842  0193                     	;# 
  1843  0193                     	;# 
  1844  0194                     	;# 
  1845  0195                     	;# 
  1846  0196                     	;# 
  1847  0197                     	;# 
  1848  0199                     	;# 
  1849  0199                     	;# 
  1850  0199                     	;# 
  1851  019A                     	;# 
  1852  019A                     	;# 
  1853  019A                     	;# 
  1854  019B                     	;# 
  1855  019B                     	;# 
  1856  019B                     	;# 
  1857  019B                     	;# 
  1858  019B                     	;# 
  1859  019C                     	;# 
  1860  019C                     	;# 
  1861  019C                     	;# 
  1862  019D                     	;# 
  1863  019D                     	;# 
  1864  019D                     	;# 
  1865  019E                     	;# 
  1866  019E                     	;# 
  1867  019E                     	;# 
  1868  019F                     	;# 
  1869  019F                     	;# 
  1870  019F                     	;# 
  1871  019F                     	;# 
  1872  019F                     	;# 
  1873  020C                     	;# 
  1874  020D                     	;# 
  1875  020E                     	;# 
  1876  0210                     	;# 
  1877  0211                     	;# 
  1878  0211                     	;# 
  1879  0212                     	;# 
  1880  0212                     	;# 
  1881  0213                     	;# 
  1882  0213                     	;# 
  1883  0214                     	;# 
  1884  0214                     	;# 
  1885  0215                     	;# 
  1886  0215                     	;# 
  1887  0215                     	;# 
  1888  0215                     	;# 
  1889  0216                     	;# 
  1890  0216                     	;# 
  1891  0217                     	;# 
  1892  0217                     	;# 
  1893  021B                     	;# 
  1894  021C                     	;# 
  1895  021D                     	;# 
  1896  021E                     	;# 
  1897  021F                     	;# 
  1898  028C                     	;# 
  1899  028D                     	;# 
  1900  028E                     	;# 
  1901  0291                     	;# 
  1902  0291                     	;# 
  1903  0292                     	;# 
  1904  0293                     	;# 
  1905  0294                     	;# 
  1906  0295                     	;# 
  1907  0295                     	;# 
  1908  0296                     	;# 
  1909  0297                     	;# 
  1910  0298                     	;# 
  1911  0299                     	;# 
  1912  0299                     	;# 
  1913  029A                     	;# 
  1914  029B                     	;# 
  1915  029C                     	;# 
  1916  029E                     	;# 
  1917  029F                     	;# 
  1918  030C                     	;# 
  1919  030D                     	;# 
  1920  030E                     	;# 
  1921  0315                     	;# 
  1922  0316                     	;# 
  1923  0317                     	;# 
  1924  0318                     	;# 
  1925  0319                     	;# 
  1926  031B                     	;# 
  1927  031C                     	;# 
  1928  031D                     	;# 
  1929  031E                     	;# 
  1930  031F                     	;# 
  1931  038C                     	;# 
  1932  038D                     	;# 
  1933  038E                     	;# 
  1934  0390                     	;# 
  1935  0391                     	;# 
  1936  0392                     	;# 
  1937  0393                     	;# 
  1938  0394                     	;# 
  1939  0395                     	;# 
  1940  0396                     	;# 
  1941  0397                     	;# 
  1942  0398                     	;# 
  1943  0399                     	;# 
  1944  039D                     	;# 
  1945  039E                     	;# 
  1946  039F                     	;# 
  1947  040D                     	;# 
  1948  040F                     	;# 
  1949  040F                     	;# 
  1950  0410                     	;# 
  1951  0411                     	;# 
  1952  0412                     	;# 
  1953  0413                     	;# 
  1954  0413                     	;# 
  1955  0414                     	;# 
  1956  0414                     	;# 
  1957  0415                     	;# 
  1958  0416                     	;# 
  1959  0417                     	;# 
  1960  0418                     	;# 
  1961  041A                     	;# 
  1962  041A                     	;# 
  1963  041B                     	;# 
  1964  041B                     	;# 
  1965  041C                     	;# 
  1966  041D                     	;# 
  1967  041E                     	;# 
  1968  041F                     	;# 
  1969  048E                     	;# 
  1970  048E                     	;# 
  1971  048F                     	;# 
  1972  0490                     	;# 
  1973  0491                     	;# 
  1974  0492                     	;# 
  1975  0493                     	;# 
  1976  0493                     	;# 
  1977  0494                     	;# 
  1978  0494                     	;# 
  1979  0495                     	;# 
  1980  0496                     	;# 
  1981  0497                     	;# 
  1982  0498                     	;# 
  1983  049A                     	;# 
  1984  049A                     	;# 
  1985  049B                     	;# 
  1986  049B                     	;# 
  1987  049C                     	;# 
  1988  049D                     	;# 
  1989  049E                     	;# 
  1990  049F                     	;# 
  1991  050F                     	;# 
  1992  0510                     	;# 
  1993  0511                     	;# 
  1994  0512                     	;# 
  1995  0513                     	;# 
  1996  0514                     	;# 
  1997  0515                     	;# 
  1998  0516                     	;# 
  1999  0517                     	;# 
  2000  0518                     	;# 
  2001  0519                     	;# 
  2002  051A                     	;# 
  2003  058D                     	;# 
  2004  058E                     	;# 
  2005  058F                     	;# 
  2006  058F                     	;# 
  2007  058F                     	;# 
  2008  0590                     	;# 
  2009  0590                     	;# 
  2010  0591                     	;# 
  2011  0592                     	;# 
  2012  0592                     	;# 
  2013  0592                     	;# 
  2014  0593                     	;# 
  2015  0593                     	;# 
  2016  0594                     	;# 
  2017  0595                     	;# 
  2018  0595                     	;# 
  2019  0596                     	;# 
  2020  0597                     	;# 
  2021  0597                     	;# 
  2022  0598                     	;# 
  2023  0599                     	;# 
  2024  0599                     	;# 
  2025  0599                     	;# 
  2026  059A                     	;# 
  2027  059A                     	;# 
  2028  059E                     	;# 
  2029  059F                     	;# 
  2030  059F                     	;# 
  2031  0614                     	;# 
  2032  0614                     	;# 
  2033  0615                     	;# 
  2034  0616                     	;# 
  2035  0617                     	;# 
  2036  0617                     	;# 
  2037  0618                     	;# 
  2038  0619                     	;# 
  2039  061A                     	;# 
  2040  061A                     	;# 
  2041  061B                     	;# 
  2042  061C                     	;# 
  2043  068D                     	;# 
  2044  068E                     	;# 
  2045  068F                     	;# 
  2046  0690                     	;# 
  2047  0691                     	;# 
  2048  0692                     	;# 
  2049  0693                     	;# 
  2050  0694                     	;# 
  2051  0695                     	;# 
  2052  0696                     	;# 
  2053  0697                     	;# 
  2054  0698                     	;# 
  2055  0699                     	;# 
  2056  069A                     	;# 
  2057  069B                     	;# 
  2058  069C                     	;# 
  2059  069D                     	;# 
  2060  069E                     	;# 
  2061  069F                     	;# 
  2062  070D                     	;# 
  2063  070E                     	;# 
  2064  070F                     	;# 
  2065  0710                     	;# 
  2066  0711                     	;# 
  2067  0712                     	;# 
  2068  0713                     	;# 
  2069  0714                     	;# 
  2070  0715                     	;# 
  2071  0716                     	;# 
  2072  0717                     	;# 
  2073  0718                     	;# 
  2074  0719                     	;# 
  2075  071A                     	;# 
  2076  071B                     	;# 
  2077  071C                     	;# 
  2078  071D                     	;# 
  2079  071E                     	;# 
  2080  071F                     	;# 
  2081  078E                     	;# 
  2082  078F                     	;# 
  2083  0790                     	;# 
  2084  0791                     	;# 
  2085  0792                     	;# 
  2086  0793                     	;# 
  2087  0794                     	;# 
  2088  0795                     	;# 
  2089  0796                     	;# 
  2090  0797                     	;# 
  2091  0798                     	;# 
  2092  0799                     	;# 
  2093  079A                     	;# 
  2094  079B                     	;# 
  2095  079C                     	;# 
  2096  079D                     	;# 
  2097  079E                     	;# 
  2098  079F                     	;# 
  2099  080D                     	;# 
  2100  080E                     	;# 
  2101  080F                     	;# 
  2102  0810                     	;# 
  2103  0811                     	;# 
  2104  0812                     	;# 
  2105  0813                     	;# 
  2106  0814                     	;# 
  2107  0815                     	;# 
  2108  0816                     	;# 
  2109  0817                     	;# 
  2110  0818                     	;# 
  2111  0819                     	;# 
  2112  081A                     	;# 
  2113  081B                     	;# 
  2114  081C                     	;# 
  2115  081D                     	;# 
  2116  081E                     	;# 
  2117  081F                     	;# 
  2118  090C                     	;# 
  2119  090D                     	;# 
  2120  090E                     	;# 
  2121  090F                     	;# 
  2122  0910                     	;# 
  2123  0911                     	;# 
  2124  0912                     	;# 
  2125  0913                     	;# 
  2126  0914                     	;# 
  2127  0915                     	;# 
  2128  0916                     	;# 
  2129  0917                     	;# 
  2130  0D8E                     	;# 
  2131  0D8F                     	;# 
  2132  0D90                     	;# 
  2133  0D91                     	;# 
  2134  0D91                     	;# 
  2135  0D92                     	;# 
  2136  0D93                     	;# 
  2137  0D93                     	;# 
  2138  0D94                     	;# 
  2139  0D95                     	;# 
  2140  0D95                     	;# 
  2141  0D96                     	;# 
  2142  0D97                     	;# 
  2143  0D97                     	;# 
  2144  0D98                     	;# 
  2145  0D99                     	;# 
  2146  0D99                     	;# 
  2147  0D9A                     	;# 
  2148  0D9B                     	;# 
  2149  0D9C                     	;# 
  2150  0D9C                     	;# 
  2151  0D9D                     	;# 
  2152  0D9D                     	;# 
  2153  0D9E                     	;# 
  2154  0D9F                     	;# 
  2155  0DA0                     	;# 
  2156  0DA1                     	;# 
  2157  0DA1                     	;# 
  2158  0DA2                     	;# 
  2159  0DA3                     	;# 
  2160  0DA3                     	;# 
  2161  0DA4                     	;# 
  2162  0DA5                     	;# 
  2163  0DA5                     	;# 
  2164  0DA6                     	;# 
  2165  0DA7                     	;# 
  2166  0DA7                     	;# 
  2167  0DA8                     	;# 
  2168  0DA9                     	;# 
  2169  0DA9                     	;# 
  2170  0DAA                     	;# 
  2171  0DAB                     	;# 
  2172  0DAC                     	;# 
  2173  0DAC                     	;# 
  2174  0DAD                     	;# 
  2175  0DAD                     	;# 
  2176  0DAE                     	;# 
  2177  0DAF                     	;# 
  2178  0DB0                     	;# 
  2179  0DB1                     	;# 
  2180  0DB1                     	;# 
  2181  0DB2                     	;# 
  2182  0DB3                     	;# 
  2183  0DB3                     	;# 
  2184  0DB4                     	;# 
  2185  0DB5                     	;# 
  2186  0DB5                     	;# 
  2187  0DB6                     	;# 
  2188  0DB7                     	;# 
  2189  0DB7                     	;# 
  2190  0DB8                     	;# 
  2191  0DB9                     	;# 
  2192  0DB9                     	;# 
  2193  0DBA                     	;# 
  2194  0DBB                     	;# 
  2195  0DBC                     	;# 
  2196  0DBC                     	;# 
  2197  0DBD                     	;# 
  2198  0DBD                     	;# 
  2199  0DBE                     	;# 
  2200  0DBF                     	;# 
  2201  0DC0                     	;# 
  2202  0E0C                     	;# 
  2203  0E0D                     	;# 
  2204  0E0E                     	;# 
  2205  0E0F                     	;# 
  2206  0E10                     	;# 
  2207  0E11                     	;# 
  2208  0E12                     	;# 
  2209  0E13                     	;# 
  2210  0E14                     	;# 
  2211  0E15                     	;# 
  2212  0E15                     	;# 
  2213  0E15                     	;# 
  2214  0E16                     	;# 
  2215  0E16                     	;# 
  2216  0E16                     	;# 
  2217  0E17                     	;# 
  2218  0E17                     	;# 
  2219  0E17                     	;# 
  2220  0E18                     	;# 
  2221  0E18                     	;# 
  2222  0E18                     	;# 
  2223  0E19                     	;# 
  2224  0E1A                     	;# 
  2225  0E1B                     	;# 
  2226  0E1D                     	;# 
  2227  0E1E                     	;# 
  2228  0E1F                     	;# 
  2229  0E21                     	;# 
  2230  0E22                     	;# 
  2231  0E23                     	;# 
  2232  0E24                     	;# 
  2233  0E25                     	;# 
  2234  0E26                     	;# 
  2235  0E27                     	;# 
  2236  0E28                     	;# 
  2237  0E29                     	;# 
  2238  0E2D                     	;# 
  2239  0E2E                     	;# 
  2240  0E2F                     	;# 
  2241  0E30                     	;# 
  2242  0E31                     	;# 
  2243  0E32                     	;# 
  2244  0E35                     	;# 
  2245  0E36                     	;# 
  2246  0E37                     	;# 
  2247  0E38                     	;# 
  2248  0E39                     	;# 
  2249  0E3A                     	;# 
  2250  0E3B                     	;# 
  2251  0E3C                     	;# 
  2252  0E3D                     	;# 
  2253  0E3E                     	;# 
  2254  0E90                     	;# 
  2255  0E91                     	;# 
  2256  0E92                     	;# 
  2257  0E93                     	;# 
  2258  0E94                     	;# 
  2259  0E95                     	;# 
  2260  0E96                     	;# 
  2261  0E97                     	;# 
  2262  0E98                     	;# 
  2263  0E99                     	;# 
  2264  0E9A                     	;# 
  2265  0E9B                     	;# 
  2266  0E9C                     	;# 
  2267  0E9D                     	;# 
  2268  0E9E                     	;# 
  2269  0E9F                     	;# 
  2270  0EA0                     	;# 
  2271  0EA1                     	;# 
  2272  0EA2                     	;# 
  2273  0EA3                     	;# 
  2274  0EA4                     	;# 
  2275  0EA5                     	;# 
  2276  0EA6                     	;# 
  2277  0EA7                     	;# 
  2278  0F0F                     	;# 
  2279  0F10                     	;# 
  2280  0F11                     	;# 
  2281  0F12                     	;# 
  2282  0F13                     	;# 
  2283  0F14                     	;# 
  2284  0F15                     	;# 
  2285  0F16                     	;# 
  2286  0F17                     	;# 
  2287  0F18                     	;# 
  2288  0F19                     	;# 
  2289  0F1A                     	;# 
  2290  0F1B                     	;# 
  2291  0F1C                     	;# 
  2292  0F1D                     	;# 
  2293  0F1E                     	;# 
  2294  0F1F                     	;# 
  2295  0F20                     	;# 
  2296  0F21                     	;# 
  2297  0F22                     	;# 
  2298  0F23                     	;# 
  2299  0F24                     	;# 
  2300  0F25                     	;# 
  2301  0F26                     	;# 
  2302  0F27                     	;# 
  2303  0F28                     	;# 
  2304  0F29                     	;# 
  2305  0F2A                     	;# 
  2306  0F2B                     	;# 
  2307  0F2C                     	;# 
  2308  0F2D                     	;# 
  2309  0F2E                     	;# 
  2310  0F2F                     	;# 
  2311  0F30                     	;# 
  2312  0F31                     	;# 
  2313  0F32                     	;# 
  2314  0F33                     	;# 
  2315  0F34                     	;# 
  2316  0F35                     	;# 
  2317  0F36                     	;# 
  2318  0F37                     	;# 
  2319  0FE4                     	;# 
  2320  0FE5                     	;# 
  2321  0FE6                     	;# 
  2322  0FE7                     	;# 
  2323  0FE8                     	;# 
  2324  0FE9                     	;# 
  2325  0FEA                     	;# 
  2326  0FEB                     	;# 
  2327  0FED                     	;# 
  2328  0FEE                     	;# 
  2329  0FEF                     	;# 
  2330  0000                     	;# 
  2331  0001                     	;# 
  2332  0002                     	;# 
  2333  0003                     	;# 
  2334  0004                     	;# 
  2335  0005                     	;# 
  2336  0006                     	;# 
  2337  0007                     	;# 
  2338  0008                     	;# 
  2339  0009                     	;# 
  2340  000A                     	;# 
  2341  000B                     	;# 
  2342  000C                     	;# 
  2343  000D                     	;# 
  2344  000E                     	;# 
  2345  0010                     	;# 
  2346  0011                     	;# 
  2347  0012                     	;# 
  2348  0013                     	;# 
  2349  0014                     	;# 
  2350  0015                     	;# 
  2351  0016                     	;# 
  2352  0017                     	;# 
  2353  0018                     	;# 
  2354  0018                     	;# 
  2355  0019                     	;# 
  2356  001A                     	;# 
  2357  001B                     	;# 
  2358  001C                     	;# 
  2359  001C                     	;# 
  2360  001D                     	;# 
  2361  001E                     	;# 
  2362  001F                     	;# 
  2363  008C                     	;# 
  2364  008D                     	;# 
  2365  008E                     	;# 
  2366  0090                     	;# 
  2367  0091                     	;# 
  2368  0092                     	;# 
  2369  0093                     	;# 
  2370  0094                     	;# 
  2371  0095                     	;# 
  2372  0096                     	;# 
  2373  0097                     	;# 
  2374  0098                     	;# 
  2375  0099                     	;# 
  2376  009A                     	;# 
  2377  009B                     	;# 
  2378  009C                     	;# 
  2379  009D                     	;# 
  2380  009E                     	;# 
  2381  009F                     	;# 
  2382  010C                     	;# 
  2383  010D                     	;# 
  2384  010E                     	;# 
  2385  0111                     	;# 
  2386  0112                     	;# 
  2387  0113                     	;# 
  2388  0114                     	;# 
  2389  0115                     	;# 
  2390  0116                     	;# 
  2391  0117                     	;# 
  2392  0118                     	;# 
  2393  0119                     	;# 
  2394  011A                     	;# 
  2395  011B                     	;# 
  2396  011C                     	;# 
  2397  011D                     	;# 
  2398  018C                     	;# 
  2399  018D                     	;# 
  2400  018E                     	;# 
  2401  0191                     	;# 
  2402  0191                     	;# 
  2403  0192                     	;# 
  2404  0193                     	;# 
  2405  0193                     	;# 
  2406  0194                     	;# 
  2407  0195                     	;# 
  2408  0196                     	;# 
  2409  0197                     	;# 
  2410  0199                     	;# 
  2411  0199                     	;# 
  2412  0199                     	;# 
  2413  019A                     	;# 
  2414  019A                     	;# 
  2415  019A                     	;# 
  2416  019B                     	;# 
  2417  019B                     	;# 
  2418  019B                     	;# 
  2419  019B                     	;# 
  2420  019B                     	;# 
  2421  019C                     	;# 
  2422  019C                     	;# 
  2423  019C                     	;# 
  2424  019D                     	;# 
  2425  019D                     	;# 
  2426  019D                     	;# 
  2427  019E                     	;# 
  2428  019E                     	;# 
  2429  019E                     	;# 
  2430  019F                     	;# 
  2431  019F                     	;# 
  2432  019F                     	;# 
  2433  019F                     	;# 
  2434  019F                     	;# 
  2435  020C                     	;# 
  2436  020D                     	;# 
  2437  020E                     	;# 
  2438  0210                     	;# 
  2439  0211                     	;# 
  2440  0211                     	;# 
  2441  0212                     	;# 
  2442  0212                     	;# 
  2443  0213                     	;# 
  2444  0213                     	;# 
  2445  0214                     	;# 
  2446  0214                     	;# 
  2447  0215                     	;# 
  2448  0215                     	;# 
  2449  0215                     	;# 
  2450  0215                     	;# 
  2451  0216                     	;# 
  2452  0216                     	;# 
  2453  0217                     	;# 
  2454  0217                     	;# 
  2455  021B                     	;# 
  2456  021C                     	;# 
  2457  021D                     	;# 
  2458  021E                     	;# 
  2459  021F                     	;# 
  2460  028C                     	;# 
  2461  028D                     	;# 
  2462  028E                     	;# 
  2463  0291                     	;# 
  2464  0291                     	;# 
  2465  0292                     	;# 
  2466  0293                     	;# 
  2467  0294                     	;# 
  2468  0295                     	;# 
  2469  0295                     	;# 
  2470  0296                     	;# 
  2471  0297                     	;# 
  2472  0298                     	;# 
  2473  0299                     	;# 
  2474  0299                     	;# 
  2475  029A                     	;# 
  2476  029B                     	;# 
  2477  029C                     	;# 
  2478  029E                     	;# 
  2479  029F                     	;# 
  2480  030C                     	;# 
  2481  030D                     	;# 
  2482  030E                     	;# 
  2483  0315                     	;# 
  2484  0316                     	;# 
  2485  0317                     	;# 
  2486  0318                     	;# 
  2487  0319                     	;# 
  2488  031B                     	;# 
  2489  031C                     	;# 
  2490  031D                     	;# 
  2491  031E                     	;# 
  2492  031F                     	;# 
  2493  038C                     	;# 
  2494  038D                     	;# 
  2495  038E                     	;# 
  2496  0390                     	;# 
  2497  0391                     	;# 
  2498  0392                     	;# 
  2499  0393                     	;# 
  2500  0394                     	;# 
  2501  0395                     	;# 
  2502  0396                     	;# 
  2503  0397                     	;# 
  2504  0398                     	;# 
  2505  0399                     	;# 
  2506  039D                     	;# 
  2507  039E                     	;# 
  2508  039F                     	;# 
  2509  040D                     	;# 
  2510  040F                     	;# 
  2511  040F                     	;# 
  2512  0410                     	;# 
  2513  0411                     	;# 
  2514  0412                     	;# 
  2515  0413                     	;# 
  2516  0413                     	;# 
  2517  0414                     	;# 
  2518  0414                     	;# 
  2519  0415                     	;# 
  2520  0416                     	;# 
  2521  0417                     	;# 
  2522  0418                     	;# 
  2523  041A                     	;# 
  2524  041A                     	;# 
  2525  041B                     	;# 
  2526  041B                     	;# 
  2527  041C                     	;# 
  2528  041D                     	;# 
  2529  041E                     	;# 
  2530  041F                     	;# 
  2531  048E                     	;# 
  2532  048E                     	;# 
  2533  048F                     	;# 
  2534  0490                     	;# 
  2535  0491                     	;# 
  2536  0492                     	;# 
  2537  0493                     	;# 
  2538  0493                     	;# 
  2539  0494                     	;# 
  2540  0494                     	;# 
  2541  0495                     	;# 
  2542  0496                     	;# 
  2543  0497                     	;# 
  2544  0498                     	;# 
  2545  049A                     	;# 
  2546  049A                     	;# 
  2547  049B                     	;# 
  2548  049B                     	;# 
  2549  049C                     	;# 
  2550  049D                     	;# 
  2551  049E                     	;# 
  2552  049F                     	;# 
  2553  050F                     	;# 
  2554  0510                     	;# 
  2555  0511                     	;# 
  2556  0512                     	;# 
  2557  0513                     	;# 
  2558  0514                     	;# 
  2559  0515                     	;# 
  2560  0516                     	;# 
  2561  0517                     	;# 
  2562  0518                     	;# 
  2563  0519                     	;# 
  2564  051A                     	;# 
  2565  058D                     	;# 
  2566  058E                     	;# 
  2567  058F                     	;# 
  2568  058F                     	;# 
  2569  058F                     	;# 
  2570  0590                     	;# 
  2571  0590                     	;# 
  2572  0591                     	;# 
  2573  0592                     	;# 
  2574  0592                     	;# 
  2575  0592                     	;# 
  2576  0593                     	;# 
  2577  0593                     	;# 
  2578  0594                     	;# 
  2579  0595                     	;# 
  2580  0595                     	;# 
  2581  0596                     	;# 
  2582  0597                     	;# 
  2583  0597                     	;# 
  2584  0598                     	;# 
  2585  0599                     	;# 
  2586  0599                     	;# 
  2587  0599                     	;# 
  2588  059A                     	;# 
  2589  059A                     	;# 
  2590  059E                     	;# 
  2591  059F                     	;# 
  2592  059F                     	;# 
  2593  0614                     	;# 
  2594  0614                     	;# 
  2595  0615                     	;# 
  2596  0616                     	;# 
  2597  0617                     	;# 
  2598  0617                     	;# 
  2599  0618                     	;# 
  2600  0619                     	;# 
  2601  061A                     	;# 
  2602  061A                     	;# 
  2603  061B                     	;# 
  2604  061C                     	;# 
  2605  068D                     	;# 
  2606  068E                     	;# 
  2607  068F                     	;# 
  2608  0690                     	;# 
  2609  0691                     	;# 
  2610  0692                     	;# 
  2611  0693                     	;# 
  2612  0694                     	;# 
  2613  0695                     	;# 
  2614  0696                     	;# 
  2615  0697                     	;# 
  2616  0698                     	;# 
  2617  0699                     	;# 
  2618  069A                     	;# 
  2619  069B                     	;# 
  2620  069C                     	;# 
  2621  069D                     	;# 
  2622  069E                     	;# 
  2623  069F                     	;# 
  2624  070D                     	;# 
  2625  070E                     	;# 
  2626  070F                     	;# 
  2627  0710                     	;# 
  2628  0711                     	;# 
  2629  0712                     	;# 
  2630  0713                     	;# 
  2631  0714                     	;# 
  2632  0715                     	;# 
  2633  0716                     	;# 
  2634  0717                     	;# 
  2635  0718                     	;# 
  2636  0719                     	;# 
  2637  071A                     	;# 
  2638  071B                     	;# 
  2639  071C                     	;# 
  2640  071D                     	;# 
  2641  071E                     	;# 
  2642  071F                     	;# 
  2643  078E                     	;# 
  2644  078F                     	;# 
  2645  0790                     	;# 
  2646  0791                     	;# 
  2647  0792                     	;# 
  2648  0793                     	;# 
  2649  0794                     	;# 
  2650  0795                     	;# 
  2651  0796                     	;# 
  2652  0797                     	;# 
  2653  0798                     	;# 
  2654  0799                     	;# 
  2655  079A                     	;# 
  2656  079B                     	;# 
  2657  079C                     	;# 
  2658  079D                     	;# 
  2659  079E                     	;# 
  2660  079F                     	;# 
  2661  080D                     	;# 
  2662  080E                     	;# 
  2663  080F                     	;# 
  2664  0810                     	;# 
  2665  0811                     	;# 
  2666  0812                     	;# 
  2667  0813                     	;# 
  2668  0814                     	;# 
  2669  0815                     	;# 
  2670  0816                     	;# 
  2671  0817                     	;# 
  2672  0818                     	;# 
  2673  0819                     	;# 
  2674  081A                     	;# 
  2675  081B                     	;# 
  2676  081C                     	;# 
  2677  081D                     	;# 
  2678  081E                     	;# 
  2679  081F                     	;# 
  2680  090C                     	;# 
  2681  090D                     	;# 
  2682  090E                     	;# 
  2683  090F                     	;# 
  2684  0910                     	;# 
  2685  0911                     	;# 
  2686  0912                     	;# 
  2687  0913                     	;# 
  2688  0914                     	;# 
  2689  0915                     	;# 
  2690  0916                     	;# 
  2691  0917                     	;# 
  2692  0D8E                     	;# 
  2693  0D8F                     	;# 
  2694  0D90                     	;# 
  2695  0D91                     	;# 
  2696  0D91                     	;# 
  2697  0D92                     	;# 
  2698  0D93                     	;# 
  2699  0D93                     	;# 
  2700  0D94                     	;# 
  2701  0D95                     	;# 
  2702  0D95                     	;# 
  2703  0D96                     	;# 
  2704  0D97                     	;# 
  2705  0D97                     	;# 
  2706  0D98                     	;# 
  2707  0D99                     	;# 
  2708  0D99                     	;# 
  2709  0D9A                     	;# 
  2710  0D9B                     	;# 
  2711  0D9C                     	;# 
  2712  0D9C                     	;# 
  2713  0D9D                     	;# 
  2714  0D9D                     	;# 
  2715  0D9E                     	;# 
  2716  0D9F                     	;# 
  2717  0DA0                     	;# 
  2718  0DA1                     	;# 
  2719  0DA1                     	;# 
  2720  0DA2                     	;# 
  2721  0DA3                     	;# 
  2722  0DA3                     	;# 
  2723  0DA4                     	;# 
  2724  0DA5                     	;# 
  2725  0DA5                     	;# 
  2726  0DA6                     	;# 
  2727  0DA7                     	;# 
  2728  0DA7                     	;# 
  2729  0DA8                     	;# 
  2730  0DA9                     	;# 
  2731  0DA9                     	;# 
  2732  0DAA                     	;# 
  2733  0DAB                     	;# 
  2734  0DAC                     	;# 
  2735  0DAC                     	;# 
  2736  0DAD                     	;# 
  2737  0DAD                     	;# 
  2738  0DAE                     	;# 
  2739  0DAF                     	;# 
  2740  0DB0                     	;# 
  2741  0DB1                     	;# 
  2742  0DB1                     	;# 
  2743  0DB2                     	;# 
  2744  0DB3                     	;# 
  2745  0DB3                     	;# 
  2746  0DB4                     	;# 
  2747  0DB5                     	;# 
  2748  0DB5                     	;# 
  2749  0DB6                     	;# 
  2750  0DB7                     	;# 
  2751  0DB7                     	;# 
  2752  0DB8                     	;# 
  2753  0DB9                     	;# 
  2754  0DB9                     	;# 
  2755  0DBA                     	;# 
  2756  0DBB                     	;# 
  2757  0DBC                     	;# 
  2758  0DBC                     	;# 
  2759  0DBD                     	;# 
  2760  0DBD                     	;# 
  2761  0DBE                     	;# 
  2762  0DBF                     	;# 
  2763  0DC0                     	;# 
  2764  0E0C                     	;# 
  2765  0E0D                     	;# 
  2766  0E0E                     	;# 
  2767  0E0F                     	;# 
  2768  0E10                     	;# 
  2769  0E11                     	;# 
  2770  0E12                     	;# 
  2771  0E13                     	;# 
  2772  0E14                     	;# 
  2773  0E15                     	;# 
  2774  0E15                     	;# 
  2775  0E15                     	;# 
  2776  0E16                     	;# 
  2777  0E16                     	;# 
  2778  0E16                     	;# 
  2779  0E17                     	;# 
  2780  0E17                     	;# 
  2781  0E17                     	;# 
  2782  0E18                     	;# 
  2783  0E18                     	;# 
  2784  0E18                     	;# 
  2785  0E19                     	;# 
  2786  0E1A                     	;# 
  2787  0E1B                     	;# 
  2788  0E1D                     	;# 
  2789  0E1E                     	;# 
  2790  0E1F                     	;# 
  2791  0E21                     	;# 
  2792  0E22                     	;# 
  2793  0E23                     	;# 
  2794  0E24                     	;# 
  2795  0E25                     	;# 
  2796  0E26                     	;# 
  2797  0E27                     	;# 
  2798  0E28                     	;# 
  2799  0E29                     	;# 
  2800  0E2D                     	;# 
  2801  0E2E                     	;# 
  2802  0E2F                     	;# 
  2803  0E30                     	;# 
  2804  0E31                     	;# 
  2805  0E32                     	;# 
  2806  0E35                     	;# 
  2807  0E36                     	;# 
  2808  0E37                     	;# 
  2809  0E38                     	;# 
  2810  0E39                     	;# 
  2811  0E3A                     	;# 
  2812  0E3B                     	;# 
  2813  0E3C                     	;# 
  2814  0E3D                     	;# 
  2815  0E3E                     	;# 
  2816  0E90                     	;# 
  2817  0E91                     	;# 
  2818  0E92                     	;# 
  2819  0E93                     	;# 
  2820  0E94                     	;# 
  2821  0E95                     	;# 
  2822  0E96                     	;# 
  2823  0E97                     	;# 
  2824  0E98                     	;# 
  2825  0E99                     	;# 
  2826  0E9A                     	;# 
  2827  0E9B                     	;# 
  2828  0E9C                     	;# 
  2829  0E9D                     	;# 
  2830  0E9E                     	;# 
  2831  0E9F                     	;# 
  2832  0EA0                     	;# 
  2833  0EA1                     	;# 
  2834  0EA2                     	;# 
  2835  0EA3                     	;# 
  2836  0EA4                     	;# 
  2837  0EA5                     	;# 
  2838  0EA6                     	;# 
  2839  0EA7                     	;# 
  2840  0F0F                     	;# 
  2841  0F10                     	;# 
  2842  0F11                     	;# 
  2843  0F12                     	;# 
  2844  0F13                     	;# 
  2845  0F14                     	;# 
  2846  0F15                     	;# 
  2847  0F16                     	;# 
  2848  0F17                     	;# 
  2849  0F18                     	;# 
  2850  0F19                     	;# 
  2851  0F1A                     	;# 
  2852  0F1B                     	;# 
  2853  0F1C                     	;# 
  2854  0F1D                     	;# 
  2855  0F1E                     	;# 
  2856  0F1F                     	;# 
  2857  0F20                     	;# 
  2858  0F21                     	;# 
  2859  0F22                     	;# 
  2860  0F23                     	;# 
  2861  0F24                     	;# 
  2862  0F25                     	;# 
  2863  0F26                     	;# 
  2864  0F27                     	;# 
  2865  0F28                     	;# 
  2866  0F29                     	;# 
  2867  0F2A                     	;# 
  2868  0F2B                     	;# 
  2869  0F2C                     	;# 
  2870  0F2D                     	;# 
  2871  0F2E                     	;# 
  2872  0F2F                     	;# 
  2873  0F30                     	;# 
  2874  0F31                     	;# 
  2875  0F32                     	;# 
  2876  0F33                     	;# 
  2877  0F34                     	;# 
  2878  0F35                     	;# 
  2879  0F36                     	;# 
  2880  0F37                     	;# 
  2881  0FE4                     	;# 
  2882  0FE5                     	;# 
  2883  0FE6                     	;# 
  2884  0FE7                     	;# 
  2885  0FE8                     	;# 
  2886  0FE9                     	;# 
  2887  0FEA                     	;# 
  2888  0FEB                     	;# 
  2889  0FED                     	;# 
  2890  0FEE                     	;# 
  2891  0FEF                     	;# 
  2892                           
  2893                           	psect	idataCOMMON
  2894  05EA                     __pidataCOMMON:	
  2895                           
  2896                           ;initializer for _state
  2897  05EA  3403               	retlw	3
  2898                           
  2899                           ;initializer for _readMessage
  2900  05EB  34FF               	retlw	255
  2901                           
  2902                           ;initializer for _GLBL_Resp8
  2903  05EC  34FF               	retlw	255
  2904                           
  2905                           	psect	idataBANK0
  2906  05ED                     __pidataBANK0:	
  2907                           
  2908                           ;initializer for _buffer_write_index
  2909  05ED  3401               	retlw	1
  2910  05EE  3400               	retlw	0
  2911                           
  2912                           ;initializer for _isPlaying
  2913  05EF  3401               	retlw	1
  2914                           
  2915                           	psect	idataBANK1
  2916  05D2                     __pidataBANK1:	
  2917                           
  2918                           ;initializer for _GLBL_Resp40
  2919  05D2  34FF               	retlw	255
  2920  05D3  34FF               	retlw	255
  2921  05D4  34FF               	retlw	255
  2922  05D5  34FF               	retlw	255
  2923  05D6  34FF               	retlw	255
  2924                           
  2925                           	psect	stringtext1
  2926  0073                     __pstringtext1:	
  2927  0073                     _CRCTable:	
  2928  0073  3400               	retlw	0
  2929  0074  3409               	retlw	9
  2930  0075  3412               	retlw	18
  2931  0076  341B               	retlw	27
  2932  0077  3424               	retlw	36
  2933  0078  342D               	retlw	45
  2934  0079  3436               	retlw	54
  2935  007A  343F               	retlw	63
  2936  007B  3448               	retlw	72
  2937  007C  3441               	retlw	65
  2938  007D  345A               	retlw	90
  2939  007E  3453               	retlw	83
  2940  007F  346C               	retlw	108
  2941  0080  3465               	retlw	101
  2942  0081  347E               	retlw	126
  2943  0082  3477               	retlw	119
  2944  0083  3419               	retlw	25
  2945  0084  3410               	retlw	16
  2946  0085  340B               	retlw	11
  2947  0086  3402               	retlw	2
  2948  0087  343D               	retlw	61
  2949  0088  3434               	retlw	52
  2950  0089  342F               	retlw	47
  2951  008A  3426               	retlw	38
  2952  008B  3451               	retlw	81
  2953  008C  3458               	retlw	88
  2954  008D  3443               	retlw	67
  2955  008E  344A               	retlw	74
  2956  008F  3475               	retlw	117
  2957  0090  347C               	retlw	124
  2958  0091  3467               	retlw	103
  2959  0092  346E               	retlw	110
  2960  0093  3432               	retlw	50
  2961  0094  343B               	retlw	59
  2962  0095  3420               	retlw	32
  2963  0096  3429               	retlw	41
  2964  0097  3416               	retlw	22
  2965  0098  341F               	retlw	31
  2966  0099  3404               	retlw	4
  2967  009A  340D               	retlw	13
  2968  009B  347A               	retlw	122
  2969  009C  3473               	retlw	115
  2970  009D  3468               	retlw	104
  2971  009E  3461               	retlw	97
  2972  009F  345E               	retlw	94
  2973  00A0  3457               	retlw	87
  2974  00A1  344C               	retlw	76
  2975  00A2  3445               	retlw	69
  2976  00A3  342B               	retlw	43
  2977  00A4  3422               	retlw	34
  2978  00A5  3439               	retlw	57
  2979  00A6  3430               	retlw	48
  2980  00A7  340F               	retlw	15
  2981  00A8  3406               	retlw	6
  2982  00A9  341D               	retlw	29
  2983  00AA  3414               	retlw	20
  2984  00AB  3463               	retlw	99
  2985  00AC  346A               	retlw	106
  2986  00AD  3471               	retlw	113
  2987  00AE  3478               	retlw	120
  2988  00AF  3447               	retlw	71
  2989  00B0  344E               	retlw	78
  2990  00B1  3455               	retlw	85
  2991  00B2  345C               	retlw	92
  2992  00B3  3464               	retlw	100
  2993  00B4  346D               	retlw	109
  2994  00B5  3476               	retlw	118
  2995  00B6  347F               	retlw	127
  2996  00B7  3440               	retlw	64
  2997  00B8  3449               	retlw	73
  2998  00B9  3452               	retlw	82
  2999  00BA  345B               	retlw	91
  3000  00BB  342C               	retlw	44
  3001  00BC  3425               	retlw	37
  3002  00BD  343E               	retlw	62
  3003  00BE  3437               	retlw	55
  3004  00BF  3408               	retlw	8
  3005  00C0  3401               	retlw	1
  3006  00C1  341A               	retlw	26
  3007  00C2  3413               	retlw	19
  3008  00C3  347D               	retlw	125
  3009  00C4  3474               	retlw	116
  3010  00C5  346F               	retlw	111
  3011  00C6  3466               	retlw	102
  3012  00C7  3459               	retlw	89
  3013  00C8  3450               	retlw	80
  3014  00C9  344B               	retlw	75
  3015  00CA  3442               	retlw	66
  3016  00CB  3435               	retlw	53
  3017  00CC  343C               	retlw	60
  3018  00CD  3427               	retlw	39
  3019  00CE  342E               	retlw	46
  3020  00CF  3411               	retlw	17
  3021  00D0  3418               	retlw	24
  3022  00D1  3403               	retlw	3
  3023  00D2  340A               	retlw	10
  3024  00D3  3456               	retlw	86
  3025  00D4  345F               	retlw	95
  3026  00D5  3444               	retlw	68
  3027  00D6  344D               	retlw	77
  3028  00D7  3472               	retlw	114
  3029  00D8  347B               	retlw	123
  3030  00D9  3460               	retlw	96
  3031  00DA  3469               	retlw	105
  3032  00DB  341E               	retlw	30
  3033  00DC  3417               	retlw	23
  3034  00DD  340C               	retlw	12
  3035  00DE  3405               	retlw	5
  3036  00DF  343A               	retlw	58
  3037  00E0  3433               	retlw	51
  3038  00E1  3428               	retlw	40
  3039  00E2  3421               	retlw	33
  3040  00E3  344F               	retlw	79
  3041  00E4  3446               	retlw	70
  3042  00E5  345D               	retlw	93
  3043  00E6  3454               	retlw	84
  3044  00E7  346B               	retlw	107
  3045  00E8  3462               	retlw	98
  3046  00E9  3479               	retlw	121
  3047  00EA  3470               	retlw	112
  3048  00EB  3407               	retlw	7
  3049  00EC  340E               	retlw	14
  3050  00ED  3415               	retlw	21
  3051  00EE  341C               	retlw	28
  3052  00EF  3423               	retlw	35
  3053  00F0  342A               	retlw	42
  3054  00F1  3431               	retlw	49
  3055  00F2  3438               	retlw	56
  3056  00F3  3441               	retlw	65
  3057  00F4  3448               	retlw	72
  3058  00F5  3453               	retlw	83
  3059  00F6  345A               	retlw	90
  3060  00F7  3465               	retlw	101
  3061  00F8  346C               	retlw	108
  3062  00F9  3477               	retlw	119
  3063  00FA  347E               	retlw	126
  3064  00FB  3409               	retlw	9
  3065  00FC  3400               	retlw	0
  3066  00FD  341B               	retlw	27
  3067  00FE  3412               	retlw	18
  3068  00FF  342D               	retlw	45
  3069  0100  3424               	retlw	36
  3070  0101  343F               	retlw	63
  3071  0102  3436               	retlw	54
  3072  0103  3458               	retlw	88
  3073  0104  3451               	retlw	81
  3074  0105  344A               	retlw	74
  3075  0106  3443               	retlw	67
  3076  0107  347C               	retlw	124
  3077  0108  3475               	retlw	117
  3078  0109  346E               	retlw	110
  3079  010A  3467               	retlw	103
  3080  010B  3410               	retlw	16
  3081  010C  3419               	retlw	25
  3082  010D  3402               	retlw	2
  3083  010E  340B               	retlw	11
  3084  010F  3434               	retlw	52
  3085  0110  343D               	retlw	61
  3086  0111  3426               	retlw	38
  3087  0112  342F               	retlw	47
  3088  0113  3473               	retlw	115
  3089  0114  347A               	retlw	122
  3090  0115  3461               	retlw	97
  3091  0116  3468               	retlw	104
  3092  0117  3457               	retlw	87
  3093  0118  345E               	retlw	94
  3094  0119  3445               	retlw	69
  3095  011A  344C               	retlw	76
  3096  011B  343B               	retlw	59
  3097  011C  3432               	retlw	50
  3098  011D  3429               	retlw	41
  3099  011E  3420               	retlw	32
  3100  011F  341F               	retlw	31
  3101  0120  3416               	retlw	22
  3102  0121  340D               	retlw	13
  3103  0122  3404               	retlw	4
  3104  0123  346A               	retlw	106
  3105  0124  3463               	retlw	99
  3106  0125  3478               	retlw	120
  3107  0126  3471               	retlw	113
  3108  0127  344E               	retlw	78
  3109  0128  3447               	retlw	71
  3110  0129  345C               	retlw	92
  3111  012A  3455               	retlw	85
  3112  012B  3422               	retlw	34
  3113  012C  342B               	retlw	43
  3114  012D  3430               	retlw	48
  3115  012E  3439               	retlw	57
  3116  012F  3406               	retlw	6
  3117  0130  340F               	retlw	15
  3118  0131  3414               	retlw	20
  3119  0132  341D               	retlw	29
  3120  0133  3425               	retlw	37
  3121  0134  342C               	retlw	44
  3122  0135  3437               	retlw	55
  3123  0136  343E               	retlw	62
  3124  0137  3401               	retlw	1
  3125  0138  3408               	retlw	8
  3126  0139  3413               	retlw	19
  3127  013A  341A               	retlw	26
  3128  013B  346D               	retlw	109
  3129  013C  3464               	retlw	100
  3130  013D  347F               	retlw	127
  3131  013E  3476               	retlw	118
  3132  013F  3449               	retlw	73
  3133  0140  3440               	retlw	64
  3134  0141  345B               	retlw	91
  3135  0142  3452               	retlw	82
  3136  0143  343C               	retlw	60
  3137  0144  3435               	retlw	53
  3138  0145  342E               	retlw	46
  3139  0146  3427               	retlw	39
  3140  0147  3418               	retlw	24
  3141  0148  3411               	retlw	17
  3142  0149  340A               	retlw	10
  3143  014A  3403               	retlw	3
  3144  014B  3474               	retlw	116
  3145  014C  347D               	retlw	125
  3146  014D  3466               	retlw	102
  3147  014E  346F               	retlw	111
  3148  014F  3450               	retlw	80
  3149  0150  3459               	retlw	89
  3150  0151  3442               	retlw	66
  3151  0152  344B               	retlw	75
  3152  0153  3417               	retlw	23
  3153  0154  341E               	retlw	30
  3154  0155  3405               	retlw	5
  3155  0156  340C               	retlw	12
  3156  0157  3433               	retlw	51
  3157  0158  343A               	retlw	58
  3158  0159  3421               	retlw	33
  3159  015A  3428               	retlw	40
  3160  015B  345F               	retlw	95
  3161  015C  3456               	retlw	86
  3162  015D  344D               	retlw	77
  3163  015E  3444               	retlw	68
  3164  015F  347B               	retlw	123
  3165  0160  3472               	retlw	114
  3166  0161  3469               	retlw	105
  3167  0162  3460               	retlw	96
  3168  0163  340E               	retlw	14
  3169  0164  3407               	retlw	7
  3170  0165  341C               	retlw	28
  3171  0166  3415               	retlw	21
  3172  0167  342A               	retlw	42
  3173  0168  3423               	retlw	35
  3174  0169  3438               	retlw	56
  3175  016A  3431               	retlw	49
  3176  016B  3446               	retlw	70
  3177  016C  344F               	retlw	79
  3178  016D  3454               	retlw	84
  3179  016E  345D               	retlw	93
  3180  016F  3462               	retlw	98
  3181  0170  346B               	retlw	107
  3182  0171  3470               	retlw	112
  3183  0172  3479               	retlw	121
  3184  0173                     __end_of_CRCTable:	
  3185  000B                     _INTCONbits	set	11
  3186  0011                     _PIR1bits	set	17
  3187  000E                     _PORTCbits	set	14
  3188  008C                     _TRISA	set	140
  3189  008E                     _TRISCbits	set	142
  3190  008D                     _TRISBbits	set	141
  3191  009C                     _OSCSTATbits	set	156
  3192  009B                     _OSCCON	set	155
  3193  0091                     _PIE1bits	set	145
  3194  0477                     _TRISC7	set	1143
  3195  0474                     _TRISC4	set	1140
  3196  0473                     _TRISC3	set	1139
  3197  0472                     _TRISC2	set	1138
  3198  018D                     _ANSELBbits	set	397
  3199  0C73                     _ANSC3	set	3187
  3200  0214                     _SSP1STATbits	set	532
  3201  0211                     _SSP1BUF	set	529
  3202  0212                     _SSP1ADD	set	530
  3203  0215                     _SSP1CON1	set	533
  3204  0214                     _SSP1STAT	set	532
  3205  0215                     _SSP1CON1bits	set	533
  3206  0495                     _T2CON	set	1173
  3207  0497                     _T2CLKCON	set	1175
  3208  0494                     _T2PR	set	1172
  3209  058E                     _DAC1CON0	set	1422
  3210  058F                     _DAC1REFL	set	1423
  3211  0590                     _DAC1REFH	set	1424
  3212  2C68                     _DAC1LD	set	11368
  3213  0E3B                     _SSPDATPPS	set	3643
  3214  0E3A                     _SSPCLKPPS	set	3642
  3215  0EA4                     _RC4PPS	set	3748
  3216  0EA2                     _RC2PPS	set	3746
  3217  0173                     STR_5:	
  3218  0173  3466               	retlw	102	;'f'
  3219  0174  346D               	retlw	109	;'m'
  3220  0175  3474               	retlw	116	;'t'
  3221  0176  3420               	retlw	32	;' '
  3222  0177  3400               	retlw	0
  3223                           
  3224                           	psect	stringtext2
  3225  05D7                     __pstringtext2:	
  3226  05D7                     STR_3:	
  3227  05D7  3457               	retlw	87	;'W'
  3228  05D8  3441               	retlw	65	;'A'
  3229  05D9  3456               	retlw	86	;'V'
  3230  05DA  3445               	retlw	69	;'E'
  3231  05DB  3400               	retlw	0
  3232                           
  3233                           	psect	stringtext3
  3234  05DC                     __pstringtext3:	
  3235  05DC                     STR_1:	
  3236  05DC  3452               	retlw	82	;'R'
  3237  05DD  3449               	retlw	73	;'I'
  3238  05DE  3446               	retlw	70	;'F'
  3239  05DF  3446               	retlw	70	;'F'
  3240  05E0  3400               	retlw	0
  3241                           
  3242                           	psect	stringtext4
  3243  05E1                     __pstringtext4:	
  3244  05E1                     STR_7:	
  3245  05E1  3464               	retlw	100	;'d'
  3246  05E2  3461               	retlw	97	;'a'
  3247  05E3  3474               	retlw	116	;'t'
  3248  05E4  3461               	retlw	97	;'a'
  3249  05E5  3400               	retlw	0
  3250                           
  3251                           	psect	stringtext5
  3252  0000                     __pstringtext5:	
  3253  0173                     
  3254                           ; #config settings
  3255  0000                     
  3256                           	psect	cinit
  3257  0033                     start_initialization:	
  3258  0033                     __initialization:	
  3259                           
  3260                           ; Initialize objects allocated to COMMON
  3261  0033  30EA               	movlw	low __pidataCOMMON
  3262  0034  0084               	movwf	4
  3263  0035  3085               	movlw	(high __pidataCOMMON)| (0+128)
  3264  0036  0085               	movwf	5
  3265  0037  3076               	movlw	low __pdataCOMMON
  3266  0038  0086               	movwf	6
  3267  0039  3000               	movlw	high __pdataCOMMON
  3268  003A  0087               	movwf	7
  3269  003B  3003               	movlw	3
  3270  003C  3185  25C6  3180   	fcall	init_ram
  3271                           
  3272                           ; Initialize objects allocated to BANK0
  3273  003F  30ED               	movlw	low __pidataBANK0
  3274  0040  0084               	movwf	4
  3275  0041  3085               	movlw	(high __pidataBANK0)| (0+128)
  3276  0042  0085               	movwf	5
  3277  0043  3044               	movlw	low __pdataBANK0
  3278  0044  0086               	movwf	6
  3279  0045  3000               	movlw	high __pdataBANK0
  3280  0046  0087               	movwf	7
  3281  0047  3003               	movlw	3
  3282  0048  3185  25C6  3180   	fcall	init_ram
  3283                           
  3284                           ; Initialize objects allocated to BANK1
  3285  004B  30D2               	movlw	low __pidataBANK1
  3286  004C  0084               	movwf	4
  3287  004D  3085               	movlw	(high __pidataBANK1)| (0+128)
  3288  004E  0085               	movwf	5
  3289  004F  30D9               	movlw	low __pdataBANK1
  3290  0050  0086               	movwf	6
  3291  0051  3000               	movlw	high __pdataBANK1
  3292  0052  0087               	movwf	7
  3293  0053  3005               	movlw	5
  3294  0054  3185  25C6  3180   	fcall	init_ram
  3295                           
  3296                           ; Clear objects allocated to COMMON
  3297  0057  01F9               	clrf	__pbssCOMMON& (0+127)
  3298                           
  3299                           ; Clear objects allocated to BANK0
  3300  0058  3039               	movlw	low __pbssBANK0
  3301  0059  0084               	movwf	4
  3302  005A  3000               	movlw	high __pbssBANK0
  3303  005B  0085               	movwf	5
  3304  005C  300B               	movlw	11
  3305  005D  3185  25CC  3180   	fcall	clear_ram0
  3306                           
  3307                           ; Clear objects allocated to BANK1
  3308  0060  30CD               	movlw	low __pbssBANK1
  3309  0061  0084               	movwf	4
  3310  0062  3000               	movlw	high __pbssBANK1
  3311  0063  0085               	movwf	5
  3312  0064  300C               	movlw	12
  3313  0065  3185  25CC  3180   	fcall	clear_ram0
  3314                           
  3315                           ; Clear objects allocated to BANK2
  3316  0068  3020               	movlw	low __pbssBANK2
  3317  0069  0084               	movwf	4
  3318  006A  3001               	movlw	high __pbssBANK2
  3319  006B  0085               	movwf	5
  3320  006C  3040               	movlw	64
  3321  006D  3185  25CC         	fcall	clear_ram0
  3322  006F                     end_of_initialization:	
  3323                           ;End of C runtime variable initialization code
  3324                           
  3325  006F                     __end_of__initialization:	
  3326  006F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3327  0070  0020               	movlb	0
  3328  0071  3181  2978         	ljmp	_main	;jump to C main() function
  3329                           
  3330                           	psect	bssCOMMON
  3331  0079                     __pbssCOMMON:	
  3332  0079                     _global_error:	
  3333  0079                     	ds	1
  3334                           
  3335                           	psect	dataCOMMON
  3336  0076                     __pdataCOMMON:	
  3337  0076                     _state:	
  3338  0076                     	ds	1
  3339  0077                     _readMessage:	
  3340  0077                     	ds	1
  3341  0078                     _GLBL_Resp8:	
  3342  0078                     	ds	1
  3343                           
  3344                           	psect	bssBANK0
  3345  0039                     __pbssBANK0:	
  3346  0039                     _blockIndex:	
  3347  0039                     	ds	2
  3348  003B                     _buffer_read_index:	
  3349  003B                     	ds	2
  3350  003D                     _sdata:	
  3351  003D                     	ds	2
  3352  003F                     _bitsPerSamp:	
  3353  003F                     	ds	2
  3354  0041                     _channels:	
  3355  0041                     	ds	2
  3356  0043                     _samplePending:	
  3357  0043                     	ds	1
  3358                           
  3359                           	psect	dataBANK0
  3360  0044                     __pdataBANK0:	
  3361  0044                     _buffer_write_index:	
  3362  0044                     	ds	2
  3363  0046                     _isPlaying:	
  3364  0046                     	ds	1
  3365                           
  3366                           	psect	bssBANK1
  3367  00CD                     __pbssBANK1:	
  3368  00CD                     _address:	
  3369  00CD                     	ds	4
  3370  00D1                     _filesize:	
  3371  00D1                     	ds	4
  3372  00D5                     _sampRate:	
  3373  00D5                     	ds	4
  3374                           
  3375                           	psect	dataBANK1
  3376  00D9                     __pdataBANK1:	
  3377  00D9                     _GLBL_Resp40:	
  3378  00D9                     	ds	5
  3379                           
  3380                           	psect	bssBANK2
  3381  0120                     __pbssBANK2:	
  3382  0120                     _buffer:	
  3383  0120                     	ds	64
  3384                           
  3385                           	psect	inittext
  3386  05C6                     init_ram:	
  3387  05C6  00FE               	movwf	126
  3388  05C7                     initloop:	
  3389  05C7  0012               	moviw fsr0++
  3390  05C8  001E               	movwi fsr1++
  3391  05C9  0BFE               	decfsz	126,f
  3392  05CA  2DC7               	goto	initloop
  3393  05CB  3400               	retlw	0
  3394                           
  3395                           	psect	clrtext
  3396  05CC                     clear_ram0:	
  3397                           ;	Called with FSR0 containing the base address, and
  3398                           ;	WREG with the size to clear
  3399                           
  3400  05CC  0064               	clrwdt	;clear the watchdog before getting into this loop
  3401  05CD                     clrloop0:	
  3402  05CD  0180               	clrf	0	;clear RAM location pointed to by FSR
  3403  05CE  3101               	addfsr 0,1
  3404  05CF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3405  05D0  2DCD               	goto	clrloop0	;have we reached the end yet?
  3406  05D1  3400               	retlw	0	;all done for this memory range, return
  3407                           
  3408                           	psect	cstackBANK1
  3409  00A0                     __pcstackBANK1:	
  3410  00A0                     openFile@riff:	
  3411                           
  3412                           ; 8 bytes @ 0x0
  3413  00A0                     	ds	8
  3414  00A8                     openFile@response:	
  3415                           
  3416                           ; 1 bytes @ 0x8
  3417  00A8                     	ds	1
  3418  00A9                     openFile@data:	
  3419                           
  3420                           ; 8 bytes @ 0x9
  3421  00A9                     	ds	8
  3422  00B1                     openFile@fmt:	
  3423                           
  3424                           ; 28 bytes @ 0x11
  3425  00B1                     	ds	28
  3426                           
  3427                           	psect	cstackCOMMON
  3428  0070                     __pcstackCOMMON:	
  3429  0070                     ?_SPI_Write:	
  3430  0070                     ?_SD_Read8bitResponse:	
  3431                           ; 1 bytes @ 0x0
  3432                           
  3433  0070                     ?_SD_Check8bitResponse:	
  3434                           ; 1 bytes @ 0x0
  3435                           
  3436  0070                     ?_SD_Read40bitResponse:	
  3437                           ; 1 bytes @ 0x0
  3438                           
  3439  0070                     ?_SPI_Read:	
  3440                           ; 1 bytes @ 0x0
  3441                           
  3442  0070                     ?_DAC_Init:	
  3443                           ; 1 bytes @ 0x0
  3444                           
  3445  0070                     ?_SD_Init:	
  3446                           ; 1 bytes @ 0x0
  3447                           
  3448  0070                     ?_SD_CloseBlock:	
  3449                           ; 1 bytes @ 0x0
  3450                           
  3451  0070                     ?_SPI_Init:	
  3452                           ; 1 bytes @ 0x0
  3453                           
  3454  0070                     ?_error:	
  3455                           ; 1 bytes @ 0x0
  3456                           
  3457  0070                     ?_pulse:	
  3458                           ; 1 bytes @ 0x0
  3459                           
  3460  0070                     ??_pulse:	
  3461                           ; 1 bytes @ 0x0
  3462                           
  3463  0070                     ?_init:	
  3464                           ; 1 bytes @ 0x0
  3465                           
  3466  0070                     ?_isr:	
  3467                           ; 1 bytes @ 0x0
  3468                           
  3469  0070                     ??_isr:	
  3470                           ; 1 bytes @ 0x0
  3471                           
  3472  0070                     ?_main:	
  3473                           ; 1 bytes @ 0x0
  3474                           
  3475                           
  3476                           ; 1 bytes @ 0x0
  3477  0070                     	ds	2
  3478  0072                     isr@level:	
  3479                           
  3480                           ; 2 bytes @ 0x2
  3481  0072                     	ds	2
  3482  0074                     ??_SPI_Write:	
  3483  0074                     ??_SD_Read8bitResponse:	
  3484                           ; 1 bytes @ 0x4
  3485                           
  3486  0074                     ??_SD_Check8bitResponse:	
  3487                           ; 1 bytes @ 0x4
  3488                           
  3489  0074                     ??_SD_Read40bitResponse:	
  3490                           ; 1 bytes @ 0x4
  3491                           
  3492  0074                     ??_SD_Check40bitResponse:	
  3493                           ; 1 bytes @ 0x4
  3494                           
  3495  0074                     ??_SPI_Read:	
  3496                           ; 1 bytes @ 0x4
  3497                           
  3498  0074                     ??_DAC_Init:	
  3499                           ; 1 bytes @ 0x4
  3500                           
  3501  0074                     ??_SD_CloseBlock:	
  3502                           ; 1 bytes @ 0x4
  3503                           
  3504  0074                     ??_SPI_Init:	
  3505                           ; 1 bytes @ 0x4
  3506                           
  3507  0074                     ??_timer_Init:	
  3508                           ; 1 bytes @ 0x4
  3509                           
  3510  0074                     ??_error:	
  3511                           ; 1 bytes @ 0x4
  3512                           
  3513  0074                     ?_fourCCeq:	
  3514                           ; 1 bytes @ 0x4
  3515                           
  3516  0074                     ?_readBytes:	
  3517                           ; 1 bytes @ 0x4
  3518                           
  3519  0074                     SD_Check8bitResponse@Byte:	
  3520                           ; 1 bytes @ 0x4
  3521                           
  3522  0074                     SD_Check40bitResponse@Byte4:	
  3523                           ; 1 bytes @ 0x4
  3524                           
  3525  0074                     SPI_Write@Data_8bit:	
  3526                           ; 1 bytes @ 0x4
  3527                           
  3528  0074                     fourCCeq@b:	
  3529                           ; 1 bytes @ 0x4
  3530                           
  3531  0074                     readBytes@len:	
  3532                           ; 2 bytes @ 0x4
  3533                           
  3534                           
  3535                           ; 2 bytes @ 0x4
  3536  0074                     	ds	1
  3537  0075                     ??_SD_SendCommand:	
  3538  0075                     SD_Read8bitResponse@readMessage:	
  3539                           ; 1 bytes @ 0x5
  3540                           
  3541  0075                     SD_Check8bitResponse@match:	
  3542                           ; 1 bytes @ 0x5
  3543                           
  3544  0075                     SD_Read40bitResponse@readMessage:	
  3545                           ; 1 bytes @ 0x5
  3546                           
  3547  0075                     SD_Check40bitResponse@match:	
  3548                           ; 1 bytes @ 0x5
  3549                           
  3550  0075                     error@e:	
  3551                           ; 1 bytes @ 0x5
  3552                           
  3553                           
  3554                           ; 1 bytes @ 0x5
  3555  0075                     	ds	1
  3556  0076                     ??_init:	
  3557                           
  3558                           	psect	cstackBANK0
  3559  0020                     __pcstackBANK0:	
  3560                           ; 1 bytes @ 0x6
  3561                           
  3562  0020                     ?_SD_SendCommand:	
  3563  0020                     ?_SD_Check40bitResponse:	
  3564                           ; 1 bytes @ 0x0
  3565                           
  3566  0020                     ??_fourCCeq:	
  3567                           ; 1 bytes @ 0x0
  3568                           
  3569  0020                     ??_readBytes:	
  3570                           ; 1 bytes @ 0x0
  3571                           
  3572  0020                     ?_timer_Init:	
  3573                           ; 1 bytes @ 0x0
  3574                           
  3575  0020                     SD_SendCommand@ARG3:	
  3576                           ; 2 bytes @ 0x0
  3577                           
  3578  0020                     SD_Check40bitResponse@Byte3:	
  3579                           ; 1 bytes @ 0x0
  3580                           
  3581  0020                     timer_Init@rate:	
  3582                           ; 1 bytes @ 0x0
  3583                           
  3584                           
  3585                           ; 4 bytes @ 0x0
  3586  0020                     	ds	1
  3587  0021                     SD_SendCommand@ARG2:	
  3588  0021                     SD_Check40bitResponse@Byte2:	
  3589                           ; 1 bytes @ 0x1
  3590                           
  3591                           
  3592                           ; 1 bytes @ 0x1
  3593  0021                     	ds	1
  3594  0022                     SD_SendCommand@ARG1:	
  3595  0022                     SD_Check40bitResponse@Byte1:	
  3596                           ; 1 bytes @ 0x2
  3597                           
  3598  0022                     readBytes@dest:	
  3599                           ; 1 bytes @ 0x2
  3600                           
  3601                           
  3602                           ; 1 bytes @ 0x2
  3603  0022                     	ds	1
  3604  0023                     SD_SendCommand@ARG0:	
  3605  0023                     SD_Check40bitResponse@Byte0:	
  3606                           ; 1 bytes @ 0x3
  3607                           
  3608  0023                     readBytes@i:	
  3609                           ; 1 bytes @ 0x3
  3610                           
  3611                           
  3612                           ; 2 bytes @ 0x3
  3613  0023                     	ds	1
  3614  0024                     SD_SendCommand@CMD_6bit:	
  3615  0024                     fourCCeq@a:	
  3616                           ; 1 bytes @ 0x4
  3617                           
  3618                           
  3619                           ; 1 bytes @ 0x4
  3620  0024                     	ds	1
  3621  0025                     SD_SendCommand@ByteToSend:	
  3622  0025                     fourCCeq@i:	
  3623                           ; 1 bytes @ 0x5
  3624                           
  3625                           
  3626                           ; 1 bytes @ 0x5
  3627  0025                     	ds	1
  3628  0026                     SD_SendCommand@Checksum:	
  3629                           
  3630                           ; 1 bytes @ 0x6
  3631  0026                     	ds	1
  3632  0027                     ??_SD_Init:	
  3633  0027                     ?_SD_OpenBlock:	
  3634                           ; 1 bytes @ 0x7
  3635                           
  3636  0027                     SD_OpenBlock@address:	
  3637                           ; 1 bytes @ 0x7
  3638                           
  3639                           
  3640                           ; 4 bytes @ 0x7
  3641  0027                     	ds	4
  3642  002B                     ??_SD_OpenBlock:	
  3643                           
  3644                           ; 1 bytes @ 0xB
  3645  002B                     	ds	4
  3646  002F                     SD_OpenBlock@a:	
  3647                           
  3648                           ; 4 bytes @ 0xF
  3649  002F                     	ds	4
  3650  0033                     ?_openFile:	
  3651  0033                     openFile@a:	
  3652                           ; 1 bytes @ 0x13
  3653                           
  3654                           
  3655                           ; 4 bytes @ 0x13
  3656  0033                     	ds	4
  3657  0037                     ??_openFile:	
  3658                           
  3659                           ; 1 bytes @ 0x17
  3660  0037                     	ds	1
  3661  0038                     ??_main:	
  3662                           
  3663                           ; 1 bytes @ 0x18
  3664  0038                     	ds	1
  3665                           
  3666                           	psect	maintext
  3667  0178                     __pmaintext:	
  3668 ;;
  3669 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3670 ;;
  3671 ;; *************** function _main *****************
  3672 ;; Defined at:
  3673 ;;		line 127 in file "main.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;		None
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : B1F/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3689 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3690 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3691 ;;Total ram usage:        1 bytes
  3692 ;; Hardware stack levels required when called:    6
  3693 ;; This function calls:
  3694 ;;		_SD_CloseBlock
  3695 ;;		_SD_OpenBlock
  3696 ;;		_SPI_Read
  3697 ;;		_error
  3698 ;;		_init
  3699 ;;		_openFile
  3700 ;;		_timer_Init
  3701 ;; This function is called by:
  3702 ;;		Startup code after reset
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           
  3707                           ;psect for function _main
  3708  0178                     _main:	
  3709                           
  3710                           ;main.c: 129:     init();
  3711                           
  3712                           ;incstack = 0
  3713                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3714  0178  3185  2574  3181   	fcall	_init
  3715                           
  3716                           ;main.c: 132:         address = 0;
  3717  017B  3000               	movlw	0
  3718  017C  0021               	movlb	1	; select bank1
  3719  017D  00D0               	movwf	(_address+3)^(0+128)
  3720  017E  3000               	movlw	0
  3721  017F  00CF               	movwf	(_address+2)^(0+128)
  3722  0180  3000               	movlw	0
  3723  0181  00CE               	movwf	(_address+1)^(0+128)
  3724  0182  3000               	movlw	0
  3725  0183  00CD               	movwf	_address^(0+128)
  3726                           
  3727                           ;main.c: 134:         openFile(address);
  3728  0184  0850               	movf	(_address+3)^(0+128),w
  3729  0185  0020               	movlb	0	; select bank0
  3730  0186  00B6               	movwf	openFile@a+3
  3731  0187  0021               	movlb	1	; select bank1
  3732  0188  084F               	movf	(_address+2)^(0+128),w
  3733  0189  0020               	movlb	0	; select bank0
  3734  018A  00B5               	movwf	openFile@a+2
  3735  018B  0021               	movlb	1	; select bank1
  3736  018C  084E               	movf	(_address+1)^(0+128),w
  3737  018D  0020               	movlb	0	; select bank0
  3738  018E  00B4               	movwf	openFile@a+1
  3739  018F  0021               	movlb	1	; select bank1
  3740  0190  084D               	movf	_address^(0+128),w
  3741  0191  0020               	movlb	0	; select bank0
  3742  0192  00B3               	movwf	openFile@a
  3743  0193  3182  2247  3181   	fcall	_openFile
  3744                           
  3745                           ;main.c: 135:         __nop();
  3746  0196  0000               	nop
  3747                           
  3748                           ;main.c: 136:         if(channels != 2) samplePending = 0;
  3749  0197  3002               	movlw	2
  3750  0198  0020               	movlb	0	; select bank0
  3751  0199  0641               	xorwf	_channels,w
  3752  019A  0442               	iorwf	_channels+1,w
  3753  019B  1D03               	btfss	3,2
  3754  019C  01C3               	clrf	_samplePending
  3755                           
  3756                           ;main.c: 137:         timer_Init(sampRate);
  3757  019D  0021               	movlb	1	; select bank1
  3758  019E  0858               	movf	(_sampRate+3)^(0+128),w
  3759  019F  0020               	movlb	0	; select bank0
  3760  01A0  00A3               	movwf	timer_Init@rate+3
  3761  01A1  0021               	movlb	1	; select bank1
  3762  01A2  0857               	movf	(_sampRate+2)^(0+128),w
  3763  01A3  0020               	movlb	0	; select bank0
  3764  01A4  00A2               	movwf	timer_Init@rate+2
  3765  01A5  0021               	movlb	1	; select bank1
  3766  01A6  0856               	movf	(_sampRate+1)^(0+128),w
  3767  01A7  0020               	movlb	0	; select bank0
  3768  01A8  00A1               	movwf	timer_Init@rate+1
  3769  01A9  0021               	movlb	1	; select bank1
  3770  01AA  0855               	movf	_sampRate^(0+128),w
  3771  01AB  0020               	movlb	0	; select bank0
  3772  01AC  00A0               	movwf	timer_Init@rate
  3773  01AD  3184  2423  3181   	fcall	_timer_Init
  3774  01B0                     l2301:	
  3775                           
  3776                           ;main.c: 141:             if (state == CLOSED && isPlaying) {
  3777  01B0  3003               	movlw	3
  3778  01B1  0676               	xorwf	_state,w
  3779  01B2  1D03               	btfss	3,2
  3780  01B3  29D3               	goto	l2313
  3781                           
  3782                           ;main.c: 142:                 PORTCbits.RC0 = 1;
  3783  01B4  0020               	movlb	0	; select bank0
  3784  01B5  140E               	bsf	14,0	;volatile
  3785                           
  3786                           ;main.c: 143:                 SD_OpenBlock(address);
  3787  01B6  0021               	movlb	1	; select bank1
  3788  01B7  0850               	movf	(_address+3)^(0+128),w
  3789  01B8  0020               	movlb	0	; select bank0
  3790  01B9  00AA               	movwf	SD_OpenBlock@address+3
  3791  01BA  0021               	movlb	1	; select bank1
  3792  01BB  084F               	movf	(_address+2)^(0+128),w
  3793  01BC  0020               	movlb	0	; select bank0
  3794  01BD  00A9               	movwf	SD_OpenBlock@address+2
  3795  01BE  0021               	movlb	1	; select bank1
  3796  01BF  084E               	movf	(_address+1)^(0+128),w
  3797  01C0  0020               	movlb	0	; select bank0
  3798  01C1  00A8               	movwf	SD_OpenBlock@address+1
  3799  01C2  0021               	movlb	1	; select bank1
  3800  01C3  084D               	movf	_address^(0+128),w
  3801  01C4  0020               	movlb	0	; select bank0
  3802  01C5  00A7               	movwf	SD_OpenBlock@address
  3803  01C6  3185  2512  3181   	fcall	_SD_OpenBlock
  3804                           
  3805                           ;main.c: 144:                 state = OPENING;
  3806  01C9  3002               	movlw	2
  3807  01CA  0020               	movlb	0	; select bank0
  3808  01CB  00B8               	movwf	??_main
  3809  01CC  0838               	movf	??_main,w
  3810  01CD  00F6               	movwf	_state
  3811                           
  3812                           ;main.c: 145:                 PORTCbits.RC0 = 0;
  3813  01CE  100E               	bcf	14,0	;volatile
  3814                           
  3815                           ;main.c: 146:                 readMessage = 0xFF;
  3816  01CF  30FF               	movlw	255
  3817  01D0  00B8               	movwf	??_main
  3818  01D1  0838               	movf	??_main,w
  3819  01D2  00F7               	movwf	_readMessage
  3820  01D3                     l2313:	
  3821                           
  3822                           ;main.c: 151:             if (state == OPENING) {
  3823  01D3  3002               	movlw	2
  3824  01D4  0676               	xorwf	_state,w
  3825  01D5  1D03               	btfss	3,2
  3826  01D6  29EF               	goto	l2327
  3827                           
  3828                           ;main.c: 152:                 readMessage = SPI_Read();
  3829  01D7  3185  25B8  3181   	fcall	_SPI_Read
  3830  01DA  0020               	movlb	0	; select bank0
  3831  01DB  00B8               	movwf	??_main
  3832  01DC  0838               	movf	??_main,w
  3833  01DD  00F7               	movwf	_readMessage
  3834                           
  3835                           ;main.c: 153:                 if (readMessage != 0xFF) {
  3836  01DE  0A77               	incf	_readMessage,w
  3837  01DF  1903               	btfsc	3,2
  3838  01E0  29EF               	goto	l2327
  3839                           
  3840                           ;main.c: 154:                     if (readMessage == 0xFE){
  3841  01E1  30FE               	movlw	254
  3842  01E2  0677               	xorwf	_readMessage,w
  3843  01E3  1D03               	btfss	3,2
  3844  01E4  29E7               	goto	l2323
  3845                           
  3846                           ;main.c: 155:                         state = OPEN;
  3847  01E5  01F6               	clrf	_state
  3848                           
  3849                           ;main.c: 156:                     } else {
  3850  01E6  29EF               	goto	l2327
  3851  01E7                     l2323:	
  3852                           
  3853                           ;main.c: 157:                         state = CLOSED;
  3854  01E7  3003               	movlw	3
  3855  01E8  00B8               	movwf	??_main
  3856  01E9  0838               	movf	??_main,w
  3857  01EA  00F6               	movwf	_state
  3858                           
  3859                           ;main.c: 158:                         error(OPEN_BLOCK);
  3860  01EB  3000               	movlw	0
  3861  01EC  3185  25AA  3181   	fcall	_error
  3862  01EF                     l2327:	
  3863                           
  3864                           ;main.c: 163:             if (state == OPEN) {
  3865  01EF  0876               	movf	_state,w
  3866  01F0  1D03               	btfss	3,2
  3867  01F1  29B0               	goto	l2301
  3868                           
  3869                           ;main.c: 164:                 if (blockIndex >= 512) {
  3870  01F2  0020               	movlb	0	; select bank0
  3871  01F3  083A               	movf	_blockIndex+1,w
  3872  01F4  3A80               	xorlw	128
  3873  01F5  00B8               	movwf	??_main
  3874  01F6  3082               	movlw	130
  3875  01F7  0238               	subwf	??_main,w
  3876  01F8  1D03               	skipz
  3877  01F9  29FC               	goto	u1085
  3878  01FA  3000               	movlw	0
  3879  01FB  0239               	subwf	_blockIndex,w
  3880  01FC                     u1085:	
  3881  01FC  1C03               	skipc
  3882  01FD  2A12               	goto	l2339
  3883                           
  3884                           ;main.c: 165:                     SD_CloseBlock();
  3885  01FE  3185  2598  3181   	fcall	_SD_CloseBlock
  3886                           
  3887                           ;main.c: 166:                     ++address;
  3888  0201  3001               	movlw	1
  3889  0202  0021               	movlb	1	; select bank1
  3890  0203  07CD               	addwf	_address^(0+128),f
  3891  0204  3000               	movlw	0
  3892  0205  3DCE               	addwfc	(_address+1)^(0+128),f
  3893  0206  3000               	movlw	0
  3894  0207  3DCF               	addwfc	(_address+2)^(0+128),f
  3895  0208  3000               	movlw	0
  3896  0209  3DD0               	addwfc	(_address+3)^(0+128),f
  3897                           
  3898                           ;main.c: 167:                     blockIndex = 0;
  3899  020A  0020               	movlb	0	; select bank0
  3900  020B  01B9               	clrf	_blockIndex
  3901  020C  01BA               	clrf	_blockIndex+1
  3902                           
  3903                           ;main.c: 168:                     state = CLOSED;
  3904  020D  3003               	movlw	3
  3905  020E  00B8               	movwf	??_main
  3906  020F  0838               	movf	??_main,w
  3907  0210  00F6               	movwf	_state
  3908                           
  3909                           ;main.c: 169:                 } else if (buffer_write_index != buffer_read_index) {
  3910  0211  29B0               	goto	l2301
  3911  0212                     l2339:	
  3912  0212  0020               	movlb	0	; select bank0
  3913  0213  083C               	movf	_buffer_read_index+1,w
  3914  0214  0645               	xorwf	_buffer_write_index+1,w
  3915  0215  1D03               	skipz
  3916  0216  2A19               	goto	u1095
  3917  0217  083B               	movf	_buffer_read_index,w
  3918  0218  0644               	xorwf	_buffer_write_index,w
  3919  0219                     u1095:	
  3920  0219  1903               	skipnz
  3921  021A  29B0               	goto	l2301
  3922                           
  3923                           ;main.c: 194:                     sdata[0] = SPI_Read();
  3924  021B  3185  25B8  3181   	fcall	_SPI_Read
  3925  021E  0020               	movlb	0	; select bank0
  3926  021F  00B8               	movwf	??_main
  3927  0220  0838               	movf	??_main,w
  3928  0221  00BD               	movwf	_sdata
  3929                           
  3930                           ;main.c: 195:                     sdata[1] = SPI_Read();
  3931  0222  3185  25B8  3181   	fcall	_SPI_Read
  3932  0225  0020               	movlb	0	; select bank0
  3933  0226  00B8               	movwf	??_main
  3934  0227  0838               	movf	??_main,w
  3935  0228  00BE               	movwf	_sdata+1
  3936                           
  3937                           ;main.c: 197:                     buffer[ buffer_write_index++ ] = *((short*)sdata);
  3938  0229  303D               	movlw	low (_sdata| 0)
  3939  022A  0086               	movwf	6
  3940  022B  0187               	clrf	7
  3941  022C  3544               	lslf	_buffer_write_index,w
  3942  022D  3E20               	addlw	(low (_buffer| (0+256)))& (0+255)
  3943  022E  0084               	movwf	4
  3944  022F  3001               	movlw	1	; select bank2/3
  3945  0230  0085               	movwf	5
  3946  0231  3F40               	moviw [0]fsr1
  3947  0232  3F80               	movwi [0]fsr0
  3948  0233  3F41               	moviw [1]fsr1
  3949  0234  3F81               	movwi [1]fsr0
  3950  0235  3001               	movlw	1
  3951  0236  07C4               	addwf	_buffer_write_index,f
  3952  0237  3000               	movlw	0
  3953  0238  3DC5               	addwfc	_buffer_write_index+1,f
  3954                           
  3955                           ;main.c: 204:                     if (buffer_write_index >= 32) buffer_write_index = 0;
  3956  0239  3000               	movlw	0
  3957  023A  0245               	subwf	_buffer_write_index+1,w
  3958  023B  3020               	movlw	32
  3959  023C  1903               	skipnz
  3960  023D  0244               	subwf	_buffer_write_index,w
  3961  023E  1C03               	skipc
  3962  023F  2A42               	goto	l2351
  3963  0240  01C4               	clrf	_buffer_write_index
  3964  0241  01C5               	clrf	_buffer_write_index+1
  3965  0242                     l2351:	
  3966                           
  3967                           ;main.c: 205:                     blockIndex += 2;
  3968  0242  3002               	movlw	2
  3969  0243  07B9               	addwf	_blockIndex,f
  3970  0244  3000               	movlw	0
  3971  0245  3DBA               	addwfc	_blockIndex+1,f
  3972                           
  3973                           ;main.c: 208:             }
  3974  0246  29B0               	goto	l2301
  3975  0247                     __end_of_main:	
  3976                           
  3977                           	psect	text1
  3978  0423                     __ptext1:	
  3979 ;; *************** function _timer_Init *****************
  3980 ;; Defined at:
  3981 ;;		line 8 in file "timer.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  rate            4    0[BANK0 ] long 
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;		None
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  2    0[BANK0 ] int 
  3988 ;; Registers used:
  3989 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3995 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3998 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3999 ;;Total ram usage:        4 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; Hardware stack levels required when called:    2
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_main
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           
  4010                           ;psect for function _timer_Init
  4011  0423                     _timer_Init:	
  4012                           
  4013                           ;timer.c: 9:     PIR1bits.TMR2IF = 0;
  4014                           
  4015                           ;incstack = 0
  4016                           ; Regs used in _timer_Init: [wreg-fsr0h+status,2+status,0]
  4017  0423  0020               	movlb	0	; select bank0
  4018  0424  1091               	bcf	17,1	;volatile
  4019                           
  4020                           ;timer.c: 10:     PIE1bits.TMR2IE = 1;
  4021  0425  0021               	movlb	1	; select bank1
  4022  0426  1491               	bsf	17,1	;volatile
  4023                           
  4024                           ;timer.c: 11:     INTCONbits.PEIE = 1;
  4025  0427  170B               	bsf	11,6	;volatile
  4026                           
  4027                           ;timer.c: 12:     INTCONbits.GIE = 1;
  4028  0428  178B               	bsf	11,7	;volatile
  4029                           
  4030                           ;timer.c: 14:     switch (rate) {
  4031  0429  2C4C               	goto	l2201
  4032  042A                     l2175:	
  4033                           
  4034                           ;timer.c: 16:             T2PR = 100;
  4035  042A  3064               	movlw	100
  4036  042B  0029               	movlb	9	; select bank9
  4037  042C  0094               	movwf	20	;volatile
  4038                           
  4039                           ;timer.c: 17:             T2CLKCON = 0x03;
  4040  042D  3003               	movlw	3
  4041  042E  0097               	movwf	23	;volatile
  4042                           
  4043                           ;timer.c: 18:             T2CON = 0x89;
  4044  042F  3089               	movlw	137
  4045  0430  0095               	movwf	21	;volatile
  4046                           
  4047                           ;timer.c: 19:             PIR1bits.TMR2IF = 0;
  4048  0431  0020               	movlb	0	; select bank0
  4049  0432  1091               	bcf	17,1	;volatile
  4050  0433  0008               	return
  4051  0434                     l2183:	
  4052                           
  4053                           ;timer.c: 23:             T2PR = 33;
  4054  0434  3021               	movlw	33
  4055  0435  0029               	movlb	9	; select bank9
  4056  0436  0094               	movwf	20	;volatile
  4057                           
  4058                           ;timer.c: 24:             T2CLKCON = 0x03;
  4059  0437  3003               	movlw	3
  4060  0438  0097               	movwf	23	;volatile
  4061                           
  4062                           ;timer.c: 25:             T2CON = 0x8A;
  4063  0439  308A               	movlw	138
  4064  043A  0095               	movwf	21	;volatile
  4065  043B  0008               	return
  4066  043C                     l2189:	
  4067                           
  4068                           ;timer.c: 29:             T2PR = 111;
  4069  043C  306F               	movlw	111
  4070  043D  0029               	movlb	9	; select bank9
  4071  043E  0094               	movwf	20	;volatile
  4072                           
  4073                           ;timer.c: 30:             T2CLKCON = 0x03;
  4074  043F  3003               	movlw	3
  4075  0440  0097               	movwf	23	;volatile
  4076                           
  4077                           ;timer.c: 31:             T2CON = 0x82;
  4078  0441  3082               	movlw	130
  4079  0442  0095               	movwf	21	;volatile
  4080  0443  0008               	return
  4081  0444                     l2195:	
  4082                           
  4083                           ;timer.c: 35:             T2PR = 100;
  4084  0444  3064               	movlw	100
  4085  0445  0029               	movlb	9	; select bank9
  4086  0446  0094               	movwf	20	;volatile
  4087                           
  4088                           ;timer.c: 36:             T2CLKCON = 0x03;
  4089  0447  3003               	movlw	3
  4090  0448  0097               	movwf	23	;volatile
  4091                           
  4092                           ;timer.c: 37:             T2CON = 0x84;
  4093  0449  3084               	movlw	132
  4094  044A  0095               	movwf	21	;volatile
  4095  044B  0008               	return
  4096  044C                     l2201:	
  4097                           
  4098                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4099                           ; Switch size 1, requested type "simple"
  4100                           ; Number of cases is 1, Range of values is 0 to 0
  4101                           ; switch strategies available:
  4102                           ; Name         Instructions Cycles
  4103                           ; simple_byte            4     3 (average)
  4104                           ; direct_byte            8     6 (fixed)
  4105                           ; jumptable            260     6 (fixed)
  4106                           ;	Chosen strategy is simple_byte
  4107  044C  0020               	movlb	0	; select bank0
  4108  044D  0823               	movf	timer_Init@rate+3,w
  4109  044E  3A00               	xorlw	0	; case 0
  4110  044F  1903               	skipnz
  4111  0450  2C74               	goto	l2475
  4112  0451  2C79               	goto	l127
  4113  0452                     l2473:	
  4114                           
  4115                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  4116                           ; Switch size 1, requested type "simple"
  4117                           ; Number of cases is 4, Range of values is 62 to 187
  4118                           ; switch strategies available:
  4119                           ; Name         Instructions Cycles
  4120                           ; simple_byte           13     7 (average)
  4121                           ; direct_byte          261     9 (fixed)
  4122                           ; jumptable            263     9 (fixed)
  4123                           ;	Chosen strategy is simple_byte
  4124  0452  0821               	movf	timer_Init@rate+1,w
  4125  0453  3A3E               	xorlw	62	; case 62
  4126  0454  1903               	skipnz
  4127  0455  2C60               	goto	l2477
  4128  0456  3A43               	xorlw	67	; case 125
  4129  0457  1903               	skipnz
  4130  0458  2C65               	goto	l2479
  4131  0459  3AD1               	xorlw	209	; case 172
  4132  045A  1903               	skipnz
  4133  045B  2C6A               	goto	l2481
  4134  045C  3A17               	xorlw	23	; case 187
  4135  045D  1903               	skipnz
  4136  045E  2C6F               	goto	l2483
  4137  045F  2C79               	goto	l127
  4138  0460                     l2477:	
  4139                           
  4140                           ; Switch size 1, requested type "simple"
  4141                           ; Number of cases is 1, Range of values is 128 to 128
  4142                           ; switch strategies available:
  4143                           ; Name         Instructions Cycles
  4144                           ; simple_byte            4     3 (average)
  4145                           ; direct_byte           11     9 (fixed)
  4146                           ; jumptable            263     9 (fixed)
  4147                           ;	Chosen strategy is simple_byte
  4148  0460  0820               	movf	timer_Init@rate,w
  4149  0461  3A80               	xorlw	128	; case 128
  4150  0462  1903               	skipnz
  4151  0463  2C2A               	goto	l2175
  4152  0464  2C79               	goto	l127
  4153  0465                     l2479:	
  4154                           
  4155                           ; Switch size 1, requested type "simple"
  4156                           ; Number of cases is 1, Range of values is 0 to 0
  4157                           ; switch strategies available:
  4158                           ; Name         Instructions Cycles
  4159                           ; simple_byte            4     3 (average)
  4160                           ; direct_byte            8     6 (fixed)
  4161                           ; jumptable            260     6 (fixed)
  4162                           ;	Chosen strategy is simple_byte
  4163  0465  0820               	movf	timer_Init@rate,w
  4164  0466  3A00               	xorlw	0	; case 0
  4165  0467  1903               	skipnz
  4166  0468  2C44               	goto	l2195
  4167  0469  2C79               	goto	l127
  4168  046A                     l2481:	
  4169                           
  4170                           ; Switch size 1, requested type "simple"
  4171                           ; Number of cases is 1, Range of values is 68 to 68
  4172                           ; switch strategies available:
  4173                           ; Name         Instructions Cycles
  4174                           ; simple_byte            4     3 (average)
  4175                           ; direct_byte           11     9 (fixed)
  4176                           ; jumptable            263     9 (fixed)
  4177                           ;	Chosen strategy is simple_byte
  4178  046A  0820               	movf	timer_Init@rate,w
  4179  046B  3A44               	xorlw	68	; case 68
  4180  046C  1903               	skipnz
  4181  046D  2C34               	goto	l2183
  4182  046E  2C79               	goto	l127
  4183  046F                     l2483:	
  4184                           
  4185                           ; Switch size 1, requested type "simple"
  4186                           ; Number of cases is 1, Range of values is 128 to 128
  4187                           ; switch strategies available:
  4188                           ; Name         Instructions Cycles
  4189                           ; simple_byte            4     3 (average)
  4190                           ; direct_byte           11     9 (fixed)
  4191                           ; jumptable            263     9 (fixed)
  4192                           ;	Chosen strategy is simple_byte
  4193  046F  0820               	movf	timer_Init@rate,w
  4194  0470  3A80               	xorlw	128	; case 128
  4195  0471  1903               	skipnz
  4196  0472  2C3C               	goto	l2189
  4197  0473  2C79               	goto	l127
  4198  0474                     l2475:	
  4199                           
  4200                           ; Switch size 1, requested type "simple"
  4201                           ; Number of cases is 1, Range of values is 0 to 0
  4202                           ; switch strategies available:
  4203                           ; Name         Instructions Cycles
  4204                           ; simple_byte            4     3 (average)
  4205                           ; direct_byte            8     6 (fixed)
  4206                           ; jumptable            260     6 (fixed)
  4207                           ;	Chosen strategy is simple_byte
  4208  0474  0822               	movf	timer_Init@rate+2,w
  4209  0475  3A00               	xorlw	0	; case 0
  4210  0476  1903               	skipnz
  4211  0477  2C52               	goto	l2473
  4212  0478  2C79               	goto	l127
  4213  0479                     l127:	
  4214  0479  0008               	return
  4215  047A                     __end_of_timer_Init:	
  4216                           
  4217                           	psect	text2
  4218  0247                     __ptext2:	
  4219 ;; *************** function _openFile *****************
  4220 ;; Defined at:
  4221 ;;		line 82 in file "main.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;  a               4   19[BANK0 ] long 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  data            8    9[BANK1 ] struct .
  4226 ;;  fmt            28   17[BANK1 ] struct .
  4227 ;;  riff            8    0[BANK1 ] struct .
  4228 ;;  response        1    8[BANK1 ] unsigned char 
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  1    wreg      void 
  4231 ;; Registers used:
  4232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4238 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4239 ;;      Locals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4240 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4241 ;;      Totals:         0       5      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4242 ;;Total ram usage:       50 bytes
  4243 ;; Hardware stack levels used:    1
  4244 ;; Hardware stack levels required when called:    5
  4245 ;; This function calls:
  4246 ;;		_SD_OpenBlock
  4247 ;;		_SPI_Read
  4248 ;;		_error
  4249 ;;		_fourCCeq
  4250 ;;		_readBytes
  4251 ;; This function is called by:
  4252 ;;		_main
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           
  4257                           ;psect for function _openFile
  4258  0247                     _openFile:	
  4259                           
  4260                           ;main.c: 83:     SD_OpenBlock(a);
  4261                           
  4262                           ;incstack = 0
  4263                           ; Regs used in _openFile: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4264  0247  0020               	movlb	0	; select bank0
  4265  0248  0836               	movf	openFile@a+3,w
  4266  0249  00AA               	movwf	SD_OpenBlock@address+3
  4267  024A  0835               	movf	openFile@a+2,w
  4268  024B  00A9               	movwf	SD_OpenBlock@address+2
  4269  024C  0834               	movf	openFile@a+1,w
  4270  024D  00A8               	movwf	SD_OpenBlock@address+1
  4271  024E  0833               	movf	openFile@a,w
  4272  024F  00A7               	movwf	SD_OpenBlock@address
  4273  0250  3185  2512  3182   	fcall	_SD_OpenBlock
  4274                           
  4275                           ;main.c: 84:     state = OPEN;
  4276  0253  01F6               	clrf	_state
  4277                           
  4278                           ;main.c: 85:     char response = 0xFF;
  4279  0254  30FF               	movlw	255
  4280  0255                     L1:	
  4281  0255  0020               	movlb	0	; select bank0
  4282  0256  00B7               	movwf	??_openFile
  4283  0257  0837               	movf	??_openFile,w
  4284  0258  0021               	movlb	1	; select bank1
  4285  0259  00A8               	movwf	openFile@response^(0+128)
  4286  025A  0A28               	incf	openFile@response^(0+128),w
  4287  025B  1D03               	btfss	3,2
  4288  025C  2A61               	goto	l2245
  4289                           
  4290                           ;main.c: 86:     while (response == 0xFF) response = SPI_Read();
  4291  025D  3185  25B8  3182   	fcall	_SPI_Read
  4292  0260  2A55               	goto	L1
  4293  0261                     l2245:	
  4294                           
  4295                           ;main.c: 87:     if (response != 0xFE) error(OPEN_BLOCK);
  4296  0261  30FE               	movlw	254
  4297  0262  0628               	xorwf	openFile@response^(0+128),w
  4298  0263  1903               	btfsc	3,2
  4299  0264  2A69               	goto	l2249
  4300  0265  3000               	movlw	0
  4301  0266  3185  25AA  3182   	fcall	_error
  4302  0269                     l2249:	
  4303                           
  4304                           ;main.c: 89:     {;main.c: 90:         RiffTag riff;;main.c: 91:         readBytes((char
      +                          *)&riff, sizeof(riff));;
  4305  0269  3008               	movlw	8
  4306  026A  00F4               	movwf	readBytes@len
  4307  026B  3000               	movlw	0
  4308  026C  00F5               	movwf	readBytes@len+1
  4309  026D  30A0               	movlw	(low (openFile@riff| 0))& (0+255)
  4310  026E  3184  247A  3182   	fcall	_readBytes
  4311                           
  4312                           ;main.c: 92:         if (!fourCCeq(riff.ckID, "RIFF")) error(RIFF_HEADER);
  4313  0271  30DC               	movlw	low (STR_1| (0+32768))
  4314  0272  00F4               	movwf	fourCCeq@b
  4315  0273  3085               	movlw	high (STR_1| (0+32768))
  4316  0274  00F5               	movwf	fourCCeq@b+1
  4317  0275  30A0               	movlw	(low (openFile@riff| 0))& (0+255)
  4318  0276  3184  24EC  3182   	fcall	_fourCCeq
  4319  0279  3A00               	xorlw	0
  4320  027A  1D03               	skipz
  4321  027B  2A80               	goto	l2255
  4322  027C  3001               	movlw	1
  4323  027D  3185  25AA  3182   	fcall	_error
  4324  0280                     l2255:	
  4325                           
  4326                           ;main.c: 93:     }{;main.c: 94:         FmtChunk fmt;;main.c: 95:         readBytes((cha
      +                          r*)&fmt, sizeof(fmt));;
  4327  0280  301C               	movlw	28
  4328  0281  00F4               	movwf	readBytes@len
  4329  0282  3000               	movlw	0
  4330  0283  00F5               	movwf	readBytes@len+1
  4331  0284  30B1               	movlw	(low (openFile@fmt| 0))& (0+255)
  4332  0285  3184  247A  3182   	fcall	_readBytes
  4333                           
  4334                           ;main.c: 96:         if (!fourCCeq(fmt.WAVEID, "WAVE")) error(WAVE_HEADER);
  4335  0288  30D7               	movlw	low (STR_3| (0+32768))
  4336  0289  00F4               	movwf	fourCCeq@b
  4337  028A  3085               	movlw	high (STR_3| (0+32768))
  4338  028B  00F5               	movwf	fourCCeq@b+1
  4339  028C  30B1               	movlw	(low (openFile@fmt| 0))& (0+255)
  4340  028D  3184  24EC  3182   	fcall	_fourCCeq
  4341  0290  3A00               	xorlw	0
  4342  0291  1D03               	skipz
  4343  0292  2A97               	goto	l2261
  4344  0293  3002               	movlw	2
  4345  0294  3185  25AA  3182   	fcall	_error
  4346  0297                     l2261:	
  4347                           
  4348                           ;main.c: 97:         if (!fourCCeq(fmt.fmtHeader.ckID, "fmt ")) error(FMT_HEADER);
  4349  0297  3073               	movlw	low (STR_5| (0+32768))
  4350  0298  00F4               	movwf	fourCCeq@b
  4351  0299  3081               	movlw	high (STR_5| (0+32768))
  4352  029A  00F5               	movwf	fourCCeq@b+1
  4353  029B  30B5               	movlw	(low ((openFile@fmt| 0+4)))& (0+255)
  4354  029C  3184  24EC  3182   	fcall	_fourCCeq
  4355  029F  3A00               	xorlw	0
  4356  02A0  1D03               	skipz
  4357  02A1  2AA6               	goto	l2265
  4358  02A2  3003               	movlw	3
  4359  02A3  3185  25AA  3182   	fcall	_error
  4360  02A6                     l2265:	
  4361                           
  4362                           ;main.c: 98:         if (fmt.formatTag != 0x0001) error(CODEC);
  4363  02A6  0021               	movlb	1	; select bank1
  4364  02A7  033D               	decf	(openFile@fmt^(0+128)+12),w
  4365  02A8  043E               	iorwf	((openFile@fmt+1)^(0+128)+12),w
  4366  02A9  1903               	btfsc	3,2
  4367  02AA  2AAF               	goto	l2269
  4368  02AB  3004               	movlw	4
  4369  02AC  3185  25AA  3182   	fcall	_error
  4370  02AF                     l2269:	
  4371                           
  4372                           ;main.c: 99:         if (fmt.bitsPerSamp != 16) error(BIT_DEPTH);
  4373  02AF  3010               	movlw	16
  4374  02B0  0021               	movlb	1	; select bank1
  4375  02B1  064B               	xorwf	(openFile@fmt^(0+128)+26),w
  4376  02B2  044C               	iorwf	((openFile@fmt+1)^(0+128)+26),w
  4377  02B3  1903               	btfsc	3,2
  4378  02B4  2AB9               	goto	l2273
  4379  02B5  3005               	movlw	5
  4380  02B6  3185  25AA  3182   	fcall	_error
  4381  02B9                     l2273:	
  4382                           
  4383                           ;main.c: 101:         channels = fmt.channels;
  4384  02B9  0021               	movlb	1	; select bank1
  4385  02BA  0840               	movf	((openFile@fmt+1)^(0+128)+14),w
  4386  02BB  0020               	movlb	0	; select bank0
  4387  02BC  00C2               	movwf	_channels+1
  4388  02BD  0021               	movlb	1	; select bank1
  4389  02BE  083F               	movf	(openFile@fmt^(0+128)+14),w
  4390  02BF  0020               	movlb	0	; select bank0
  4391  02C0  00C1               	movwf	_channels
  4392                           
  4393                           ;main.c: 102:         sampRate = fmt.sampRate;
  4394  02C1  3010               	movlw	16
  4395  02C2  3EB1               	addlw	(low (openFile@fmt| 0))& (0+255)
  4396  02C3  0086               	movwf	6
  4397  02C4  0187               	clrf	7
  4398  02C5  3F40               	moviw [0]fsr1
  4399  02C6  0021               	movlb	1	; select bank1
  4400  02C7  00D5               	movwf	_sampRate^(0+128)
  4401  02C8  3F41               	moviw [1]fsr1
  4402  02C9  00D6               	movwf	(_sampRate+1)^(0+128)
  4403  02CA  3F42               	moviw [2]fsr1
  4404  02CB  00D7               	movwf	(_sampRate+2)^(0+128)
  4405  02CC  3F43               	moviw [3]fsr1
  4406  02CD  00D8               	movwf	(_sampRate+3)^(0+128)
  4407                           
  4408                           ;main.c: 104:     }{;main.c: 105:         RiffTag data;;main.c: 106:         readBytes((
      +                          char*)&data, sizeof(data));;
  4409  02CE  3008               	movlw	8
  4410  02CF  00F4               	movwf	readBytes@len
  4411  02D0  3000               	movlw	0
  4412  02D1  00F5               	movwf	readBytes@len+1
  4413  02D2  30A9               	movlw	(low (openFile@data| 0))& (0+255)
  4414  02D3  3184  247A  3182   	fcall	_readBytes
  4415                           
  4416                           ;main.c: 107:         if (!fourCCeq(data.ckID, "data")) error(DATA_HEADER);
  4417  02D6  30E1               	movlw	low (STR_7| (0+32768))
  4418  02D7  00F4               	movwf	fourCCeq@b
  4419  02D8  3085               	movlw	high (STR_7| (0+32768))
  4420  02D9  00F5               	movwf	fourCCeq@b+1
  4421  02DA  30A9               	movlw	(low (openFile@data| 0))& (0+255)
  4422  02DB  3184  24EC  3182   	fcall	_fourCCeq
  4423  02DE  3A00               	xorlw	0
  4424  02DF  1D03               	skipz
  4425  02E0  2AE4               	goto	l2283
  4426  02E1  3006               	movlw	6
  4427  02E2  3185  25AA         	fcall	_error
  4428  02E4                     l2283:	
  4429                           
  4430                           ;main.c: 108:         filesize = data.ckSize;
  4431  02E4  3004               	movlw	4
  4432  02E5  3EA9               	addlw	(low (openFile@data| 0))& (0+255)
  4433  02E6  0086               	movwf	6
  4434  02E7  0187               	clrf	7
  4435  02E8  3F40               	moviw [0]fsr1
  4436  02E9  0021               	movlb	1	; select bank1
  4437  02EA  00D1               	movwf	_filesize^(0+128)
  4438  02EB  3F41               	moviw [1]fsr1
  4439  02EC  00D2               	movwf	(_filesize+1)^(0+128)
  4440  02ED  3F42               	moviw [2]fsr1
  4441  02EE  00D3               	movwf	(_filesize+2)^(0+128)
  4442  02EF  3F43               	moviw [3]fsr1
  4443  02F0  00D4               	movwf	(_filesize+3)^(0+128)
  4444                           
  4445                           ;main.c: 109:     };main.c: 110:         __nop();
  4446  02F1  0000               	nop
  4447  02F2  0008               	return
  4448  02F3                     __end_of_openFile:	
  4449                           
  4450                           	psect	text3
  4451  047A                     __ptext3:	
  4452 ;; *************** function _readBytes *****************
  4453 ;; Defined at:
  4454 ;;		line 68 in file "main.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  dest            1    wreg     PTR unsigned char 
  4457 ;;		 -> openFile@data(8), openFile@fmt(28), openFile@riff(8), 
  4458 ;;  len             2    4[COMMON] int 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  dest            1    2[BANK0 ] PTR unsigned char 
  4461 ;;		 -> openFile@data(8), openFile@fmt(28), openFile@riff(8), 
  4462 ;;  i               2    3[BANK0 ] int 
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      void 
  4465 ;; Registers used:
  4466 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4473 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4474 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4475 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4476 ;;Total ram usage:        7 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; Hardware stack levels required when called:    4
  4479 ;; This function calls:
  4480 ;;		_SD_CloseBlock
  4481 ;;		_SPI_Read
  4482 ;; This function is called by:
  4483 ;;		_openFile
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           
  4488                           ;psect for function _readBytes
  4489  047A                     _readBytes:	
  4490                           
  4491                           ;incstack = 0
  4492                           ; Regs used in _readBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4493                           ;readBytes@dest stored from wreg
  4494  047A  0020               	movlb	0	; select bank0
  4495  047B  00A2               	movwf	readBytes@dest
  4496                           
  4497                           ;main.c: 69:     for (int i=0; i<len; i++) {
  4498  047C  01A3               	clrf	readBytes@i
  4499  047D  01A4               	clrf	readBytes@i+1
  4500  047E                     l2171:	
  4501  047E  0824               	movf	readBytes@i+1,w
  4502  047F  3A80               	xorlw	128
  4503  0480  00A0               	movwf	??_readBytes
  4504  0481  0875               	movf	readBytes@len+1,w
  4505  0482  3A80               	xorlw	128
  4506  0483  0220               	subwf	??_readBytes,w
  4507  0484  1D03               	skipz
  4508  0485  2C88               	goto	u925
  4509  0486  0874               	movf	readBytes@len,w
  4510  0487  0223               	subwf	readBytes@i,w
  4511  0488                     u925:	
  4512  0488  1803               	btfsc	3,0
  4513  0489  0008               	return
  4514                           
  4515                           ;main.c: 70:         dest[i] = SPI_Read();
  4516  048A  3185  25B8  3184   	fcall	_SPI_Read
  4517  048D  0020               	movlb	0	; select bank0
  4518  048E  00A0               	movwf	??_readBytes
  4519  048F  0823               	movf	readBytes@i,w
  4520  0490  0722               	addwf	readBytes@dest,w
  4521  0491  00A1               	movwf	??_readBytes+1
  4522  0492  0821               	movf	??_readBytes+1,w
  4523  0493  0086               	movwf	6
  4524  0494  0187               	clrf	7
  4525  0495  0820               	movf	??_readBytes,w
  4526  0496  0081               	movwf	1
  4527                           
  4528                           ;main.c: 71:         ++blockIndex;
  4529  0497  3001               	movlw	1
  4530  0498  07B9               	addwf	_blockIndex,f
  4531  0499  3000               	movlw	0
  4532  049A  3DBA               	addwfc	_blockIndex+1,f
  4533                           
  4534                           ;main.c: 72:         if (blockIndex >= 512) {
  4535  049B  083A               	movf	_blockIndex+1,w
  4536  049C  3A80               	xorlw	128
  4537  049D  00A0               	movwf	??_readBytes
  4538  049E  3082               	movlw	130
  4539  049F  0220               	subwf	??_readBytes,w
  4540  04A0  1D03               	skipz
  4541  04A1  2CA4               	goto	u915
  4542  04A2  3000               	movlw	0
  4543  04A3  0239               	subwf	_blockIndex,w
  4544  04A4                     u915:	
  4545  04A4  1C03               	skipc
  4546  04A5  2CB9               	goto	l2169
  4547                           
  4548                           ;main.c: 73:             SD_CloseBlock();
  4549  04A6  3185  2598  3184   	fcall	_SD_CloseBlock
  4550                           
  4551                           ;main.c: 74:             ++address;
  4552  04A9  3001               	movlw	1
  4553  04AA  0021               	movlb	1	; select bank1
  4554  04AB  07CD               	addwf	_address^(0+128),f
  4555  04AC  3000               	movlw	0
  4556  04AD  3DCE               	addwfc	(_address+1)^(0+128),f
  4557  04AE  3000               	movlw	0
  4558  04AF  3DCF               	addwfc	(_address+2)^(0+128),f
  4559  04B0  3000               	movlw	0
  4560  04B1  3DD0               	addwfc	(_address+3)^(0+128),f
  4561                           
  4562                           ;main.c: 75:             blockIndex = 0;
  4563  04B2  0020               	movlb	0	; select bank0
  4564  04B3  01B9               	clrf	_blockIndex
  4565  04B4  01BA               	clrf	_blockIndex+1
  4566                           
  4567                           ;main.c: 76:             state = CLOSED;
  4568  04B5  3003               	movlw	3
  4569  04B6  00A0               	movwf	??_readBytes
  4570  04B7  0820               	movf	??_readBytes,w
  4571  04B8  00F6               	movwf	_state
  4572  04B9                     l2169:	
  4573                           
  4574                           ;main.c: 78:     }
  4575  04B9  3001               	movlw	1
  4576  04BA  0020               	movlb	0	; select bank0
  4577  04BB  07A3               	addwf	readBytes@i,f
  4578  04BC  3000               	movlw	0
  4579  04BD  3DA4               	addwfc	readBytes@i+1,f
  4580  04BE  2C7E               	goto	l2171
  4581  04BF                     __end_of_readBytes:	
  4582                           
  4583                           	psect	text4
  4584  0598                     __ptext4:	
  4585 ;; *************** function _SD_CloseBlock *****************
  4586 ;; Defined at:
  4587 ;;		line 275 in file "SD.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;		None
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;		None
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  1    wreg      _Bool 
  4594 ;; Registers used:
  4595 ;;		wreg, status,2, status,0, pclath, cstack
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4605 ;;Total ram usage:        0 bytes
  4606 ;; Hardware stack levels used:    1
  4607 ;; Hardware stack levels required when called:    3
  4608 ;; This function calls:
  4609 ;;		_SPI_Read
  4610 ;; This function is called by:
  4611 ;;		_readBytes
  4612 ;;		_main
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           
  4617                           ;psect for function _SD_CloseBlock
  4618  0598                     _SD_CloseBlock:	
  4619                           
  4620                           ;SD.c: 277:     SPI_Read();
  4621                           
  4622                           ;incstack = 0
  4623                           ; Regs used in _SD_CloseBlock: [wreg+status,2+status,0+pclath+cstack]
  4624  0598  3185  25B8  3185   	fcall	_SPI_Read
  4625                           
  4626                           ;SD.c: 278:     SPI_Read();
  4627  059B  3185  25B8  3185   	fcall	_SPI_Read
  4628                           
  4629                           ;SD.c: 280:     SPI_Read();
  4630  059E  3185  25B8         	fcall	_SPI_Read
  4631  05A0  0008               	return
  4632  05A1                     __end_of_SD_CloseBlock:	
  4633                           
  4634                           	psect	text5
  4635  04EC                     __ptext5:	
  4636 ;; *************** function _fourCCeq *****************
  4637 ;; Defined at:
  4638 ;;		line 44 in file "main.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;  a               1    wreg     PTR unsigned char 
  4641 ;;		 -> openFile@data(8), fmt.fmtHeader(8), openFile@fmt(28), openFile@riff(8), 
  4642 ;;  b               2    4[COMMON] PTR unsigned char 
  4643 ;;		 -> STR_8(5), STR_6(5), STR_4(5), STR_2(5), 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  a               1    4[BANK0 ] PTR unsigned char 
  4646 ;;		 -> openFile@data(8), fmt.fmtHeader(8), openFile@fmt(28), openFile@riff(8), 
  4647 ;;  i               1    5[BANK0 ] unsigned char 
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  1    wreg      _Bool 
  4650 ;; Registers used:
  4651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4658 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4659 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4660 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4661 ;;Total ram usage:        8 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; Hardware stack levels required when called:    2
  4664 ;; This function calls:
  4665 ;;		Nothing
  4666 ;; This function is called by:
  4667 ;;		_openFile
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           
  4672                           ;psect for function _fourCCeq
  4673  04EC                     _fourCCeq:	
  4674                           
  4675                           ;incstack = 0
  4676                           ; Regs used in _fourCCeq: [wreg-fsr1h+status,2+status,0+pclath]
  4677                           ;fourCCeq@a stored from wreg
  4678  04EC  0020               	movlb	0	; select bank0
  4679  04ED  00A4               	movwf	fourCCeq@a
  4680                           
  4681                           ;main.c: 45:     for (char i=0; i<4; i++) {
  4682  04EE  01A5               	clrf	fourCCeq@i
  4683  04EF                     l2139:	
  4684                           
  4685                           ;main.c: 46:         if (a[i] != b[i]) return 0;
  4686  04EF  0875               	movf	fourCCeq@b+1,w
  4687  04F0  00A1               	movwf	??_fourCCeq+1
  4688  04F1  0874               	movf	fourCCeq@b,w
  4689  04F2  00A0               	movwf	??_fourCCeq
  4690  04F3  0825               	movf	fourCCeq@i,w
  4691  04F4  0720               	addwf	??_fourCCeq,w
  4692  04F5  0084               	movwf	4
  4693  04F6  0821               	movf	??_fourCCeq+1,w
  4694  04F7  1803               	skipnc
  4695  04F8  0A21               	incf	??_fourCCeq+1,w
  4696  04F9  0085               	movwf	5
  4697  04FA  0800               	movf	0,w	;code access
  4698  04FB  00A2               	movwf	??_fourCCeq+2
  4699  04FC  0825               	movf	fourCCeq@i,w
  4700  04FD  0724               	addwf	fourCCeq@a,w
  4701  04FE  00A3               	movwf	??_fourCCeq+3
  4702  04FF  0823               	movf	??_fourCCeq+3,w
  4703  0500  0086               	movwf	6
  4704  0501  0187               	clrf	7
  4705  0502  0801               	movf	1,w
  4706  0503  0622               	xorwf	??_fourCCeq+2,w
  4707  0504  1903               	skipnz
  4708  0505  2D08               	goto	l2145
  4709  0506  3000               	movlw	0
  4710  0507  0008               	return
  4711  0508                     l2145:	
  4712                           
  4713                           ;main.c: 47:     }
  4714  0508  3001               	movlw	1
  4715  0509  00A0               	movwf	??_fourCCeq
  4716  050A  0820               	movf	??_fourCCeq,w
  4717  050B  07A5               	addwf	fourCCeq@i,f
  4718  050C  3004               	movlw	4
  4719  050D  0225               	subwf	fourCCeq@i,w
  4720  050E  1C03               	skipc
  4721  050F  2CEF               	goto	l2139
  4722                           
  4723                           ;main.c: 48:     return 1;
  4724  0510  3001               	movlw	1
  4725  0511  0008               	return
  4726  0512                     __end_of_fourCCeq:	
  4727                           
  4728                           	psect	text6
  4729  05AA                     __ptext6:	
  4730 ;; *************** function _error *****************
  4731 ;; Defined at:
  4732 ;;		line 17 in file "./error.h"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;  e               1    wreg     enum E12100
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;  e               1    5[COMMON] enum E12100
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      void 
  4739 ;; Registers used:
  4740 ;;		wreg
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4747 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4748 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4749 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4750 ;;Total ram usage:        2 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; Hardware stack levels required when called:    2
  4753 ;; This function calls:
  4754 ;;		Nothing
  4755 ;; This function is called by:
  4756 ;;		_openFile
  4757 ;;		_main
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           
  4762                           ;psect for function _error
  4763  05AA                     _error:	
  4764                           
  4765                           ;incstack = 0
  4766                           ; Regs used in _error: [wreg]
  4767                           ;error@e stored from wreg
  4768  05AA  00F5               	movwf	error@e
  4769                           
  4770                           ;./error.h: 19:     global_error = e;
  4771  05AB  0875               	movf	error@e,w
  4772  05AC  00F4               	movwf	??_error
  4773  05AD  0874               	movf	??_error,w
  4774  05AE  00F9               	movwf	_global_error
  4775                           
  4776                           ;./error.h: 20:     __nop();
  4777  05AF  0000               	nop
  4778  05B0  0008               	return
  4779  05B1                     __end_of_error:	
  4780                           
  4781                           	psect	text7
  4782  0512                     __ptext7:	
  4783 ;; *************** function _SD_OpenBlock *****************
  4784 ;; Defined at:
  4785 ;;		line 256 in file "SD.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  address         4    7[BANK0 ] long 
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  a               4   15[BANK0 ] struct .
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      _Bool 
  4792 ;; Registers used:
  4793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4799 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4800 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4801 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4802 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4803 ;;Total ram usage:       12 bytes
  4804 ;; Hardware stack levels used:    1
  4805 ;; Hardware stack levels required when called:    4
  4806 ;; This function calls:
  4807 ;;		_SD_Check8bitResponse
  4808 ;;		_SD_Read8bitResponse
  4809 ;;		_SD_SendCommand
  4810 ;; This function is called by:
  4811 ;;		_openFile
  4812 ;;		_main
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           
  4817                           ;psect for function _SD_OpenBlock
  4818  0512                     _SD_OpenBlock:	
  4819                           
  4820                           ;SD.c: 260:     BlockAddress a = *((BlockAddress*)(&address));
  4821                           
  4822                           ;incstack = 0
  4823                           ; Regs used in _SD_OpenBlock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4824  0512  0020               	movlb	0	; select bank0
  4825  0513  082A               	movf	SD_OpenBlock@address+3,w
  4826  0514  00B2               	movwf	SD_OpenBlock@a+3
  4827  0515  0829               	movf	SD_OpenBlock@address+2,w
  4828  0516  00B1               	movwf	SD_OpenBlock@a+2
  4829  0517  0828               	movf	SD_OpenBlock@address+1,w
  4830  0518  00B0               	movwf	SD_OpenBlock@a+1
  4831  0519  0827               	movf	SD_OpenBlock@address,w
  4832  051A  00AF               	movwf	SD_OpenBlock@a
  4833                           
  4834                           ;SD.c: 262:     SD_SendCommand(17, a.a3, a.a2, a.a1, a.a0);
  4835  051B  0832               	movf	SD_OpenBlock@a+3,w
  4836  051C  00AB               	movwf	??_SD_OpenBlock
  4837  051D  082B               	movf	??_SD_OpenBlock,w
  4838  051E  00A0               	movwf	SD_SendCommand@ARG3
  4839  051F  0831               	movf	SD_OpenBlock@a+2,w
  4840  0520  00AC               	movwf	??_SD_OpenBlock+1
  4841  0521  082C               	movf	??_SD_OpenBlock+1,w
  4842  0522  00A1               	movwf	SD_SendCommand@ARG2
  4843  0523  0830               	movf	SD_OpenBlock@a+1,w
  4844  0524  00AD               	movwf	??_SD_OpenBlock+2
  4845  0525  082D               	movf	??_SD_OpenBlock+2,w
  4846  0526  00A2               	movwf	SD_SendCommand@ARG1
  4847  0527  082F               	movf	SD_OpenBlock@a,w
  4848  0528  00AE               	movwf	??_SD_OpenBlock+3
  4849  0529  082E               	movf	??_SD_OpenBlock+3,w
  4850  052A  00A3               	movwf	SD_SendCommand@ARG0
  4851  052B  3011               	movlw	17
  4852  052C  3182  22F3  3185   	fcall	_SD_SendCommand
  4853                           
  4854                           ;SD.c: 265:     SD_Read8bitResponse();
  4855  052F  3185  2588  3185   	fcall	_SD_Read8bitResponse
  4856                           
  4857                           ;SD.c: 268:     if(SD_Check8bitResponse(0x00) == 0) return 0;
  4858  0532  3000               	movlw	0
  4859  0533  3185  25A1         	fcall	_SD_Check8bitResponse
  4860  0535  0008               	return
  4861  0536                     __end_of_SD_OpenBlock:	
  4862                           
  4863                           	psect	text8
  4864  0574                     __ptext8:	
  4865 ;; *************** function _init *****************
  4866 ;; Defined at:
  4867 ;;		line 51 in file "main.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;		None
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;		None
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  1    wreg      void 
  4874 ;; Registers used:
  4875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4885 ;;Total ram usage:        0 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; Hardware stack levels required when called:    5
  4888 ;; This function calls:
  4889 ;;		_DAC_Init
  4890 ;;		_SD_Init
  4891 ;;		_SPI_Init
  4892 ;; This function is called by:
  4893 ;;		_main
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           
  4898                           ;psect for function _init
  4899  0574                     _init:	
  4900                           
  4901                           ;main.c: 53:     OSCCON = 0xF4;
  4902                           
  4903                           ;incstack = 0
  4904                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4905  0574  30F4               	movlw	244
  4906  0575  0021               	movlb	1	; select bank1
  4907  0576  009B               	movwf	27	;volatile
  4908  0577                     l219:	
  4909                           ;main.c: 54:     while(OSCSTATbits.HFIOFR == 0);
  4910                           
  4911  0577  1E1C               	btfss	28,4	;volatile
  4912  0578  2D77               	goto	l219
  4913                           
  4914                           ;main.c: 56:     TRISBbits.TRISB1 = 1;
  4915  0579  148D               	bsf	13,1	;volatile
  4916                           
  4917                           ;main.c: 57:     ANSELBbits.ANSB1 = 0;
  4918  057A  0023               	movlb	3	; select bank3
  4919  057B  108D               	bcf	13,1	;volatile
  4920                           
  4921                           ;main.c: 59:     TRISCbits.TRISC0 = 0;
  4922  057C  0021               	movlb	1	; select bank1
  4923  057D  100E               	bcf	14,0	;volatile
  4924                           
  4925                           ;main.c: 60:     TRISCbits.TRISC1 = 0;
  4926  057E  108E               	bcf	14,1	;volatile
  4927                           
  4928                           ;main.c: 63:     SPI_Init();
  4929  057F  3185  2557  3185   	fcall	_SPI_Init
  4930                           
  4931                           ;main.c: 64:     SD_Init();
  4932  0582  3183  2392  3185   	fcall	_SD_Init
  4933                           
  4934                           ;main.c: 65:     DAC_Init();
  4935  0585  3185  25BF         	fcall	_DAC_Init
  4936  0587  0008               	return
  4937  0588                     __end_of_init:	
  4938                           
  4939                           	psect	text9
  4940  0557                     __ptext9:	
  4941 ;; *************** function _SPI_Init *****************
  4942 ;; Defined at:
  4943 ;;		line 7 in file "SPI.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;		None
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;		None
  4948 ;; Return value:  Size  Location     Type
  4949 ;;                  1    wreg      void 
  4950 ;; Registers used:
  4951 ;;		wreg, status,2
  4952 ;; Tracked objects:
  4953 ;;		On entry : 0/0
  4954 ;;		On exit  : 0/0
  4955 ;;		Unchanged: 0/0
  4956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4961 ;;Total ram usage:        0 bytes
  4962 ;; Hardware stack levels used:    1
  4963 ;; Hardware stack levels required when called:    2
  4964 ;; This function calls:
  4965 ;;		Nothing
  4966 ;; This function is called by:
  4967 ;;		_init
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           
  4972                           ;psect for function _SPI_Init
  4973  0557                     _SPI_Init:	
  4974                           
  4975                           ;SPI.c: 9:     TRISC2 = 0;
  4976                           
  4977                           ;incstack = 0
  4978                           ; Regs used in _SPI_Init: [wreg+status,2]
  4979  0557  0021               	movlb	1	; select bank1
  4980  0558  110E               	bcf	14,2	;volatile
  4981                           
  4982                           ;SPI.c: 10:     RC2PPS = 0x21;
  4983  0559  3021               	movlw	33
  4984  055A  003D               	movlb	29	; select bank29
  4985  055B  00A2               	movwf	34	;volatile
  4986                           
  4987                           ;SPI.c: 11:     SSPCLKPPS = 0x12;
  4988  055C  3012               	movlw	18
  4989  055D  003C               	movlb	28	; select bank28
  4990  055E  00BA               	movwf	58	;volatile
  4991                           
  4992                           ;SPI.c: 14:     TRISC3 = 1;
  4993  055F  0021               	movlb	1	; select bank1
  4994  0560  158E               	bsf	14,3	;volatile
  4995                           
  4996                           ;SPI.c: 15:     ANSC3 = 0;
  4997  0561  0023               	movlb	3	; select bank3
  4998  0562  118E               	bcf	14,3	;volatile
  4999                           
  5000                           ;SPI.c: 16:     SSPDATPPS = 0x13;
  5001  0563  3013               	movlw	19
  5002  0564  003C               	movlb	28	; select bank28
  5003  0565  00BB               	movwf	59	;volatile
  5004                           
  5005                           ;SPI.c: 19:     TRISC4 = 0;
  5006  0566  0021               	movlb	1	; select bank1
  5007  0567  120E               	bcf	14,4	;volatile
  5008                           
  5009                           ;SPI.c: 20:     RC4PPS = 0x23;
  5010  0568  3023               	movlw	35
  5011  0569  003D               	movlb	29	; select bank29
  5012  056A  00A4               	movwf	36	;volatile
  5013                           
  5014                           ;SPI.c: 23:     TRISC7 = 0;
  5015  056B  0021               	movlb	1	; select bank1
  5016  056C  138E               	bcf	14,7	;volatile
  5017                           
  5018                           ;SPI.c: 26:     SSP1STAT = 0x80;
  5019  056D  3080               	movlw	128
  5020  056E  0024               	movlb	4	; select bank4
  5021  056F  0094               	movwf	20	;volatile
  5022                           
  5023                           ;SPI.c: 29:     SSP1CON1 = 0x30;
  5024  0570  3030               	movlw	48
  5025  0571  0095               	movwf	21	;volatile
  5026                           
  5027                           ;SPI.c: 32:     SSP1ADD = 0x00;
  5028  0572  0192               	clrf	18	;volatile
  5029  0573  0008               	return
  5030  0574                     __end_of_SPI_Init:	
  5031                           
  5032                           	psect	text10
  5033  0392                     __ptext10:	
  5034 ;; *************** function _SD_Init *****************
  5035 ;; Defined at:
  5036 ;;		line 11 in file "SD.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;		None
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;		None
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1    wreg      void 
  5043 ;; Registers used:
  5044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5052 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5053 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5054 ;;Total ram usage:        1 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; Hardware stack levels required when called:    4
  5057 ;; This function calls:
  5058 ;;		_SD_Check40bitResponse
  5059 ;;		_SD_Check8bitResponse
  5060 ;;		_SD_Read40bitResponse
  5061 ;;		_SD_Read8bitResponse
  5062 ;;		_SD_SendCommand
  5063 ;;		_SPI_Write
  5064 ;; This function is called by:
  5065 ;;		_init
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           
  5070                           ;psect for function _SD_Init
  5071  0392                     _SD_Init:	
  5072                           
  5073                           ;SD.c: 14:     { PORTCbits.RC7 = 1; SSP1CON1bits.WCOL = 0; };
  5074                           
  5075                           ;incstack = 0
  5076                           ; Regs used in _SD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5077  0392  0020               	movlb	0	; select bank0
  5078  0393  178E               	bsf	14,7	;volatile
  5079  0394  0024               	movlb	4	; select bank4
  5080  0395  1395               	bcf	21,7	;volatile
  5081                           
  5082                           ;SD.c: 16:     SPI_Write(0xFF);
  5083  0396  30FF               	movlw	255
  5084  0397  3185  25B1  3183   	fcall	_SPI_Write
  5085                           
  5086                           ;SD.c: 17:     SPI_Write(0xFF);
  5087  039A  30FF               	movlw	255
  5088  039B  3185  25B1  3183   	fcall	_SPI_Write
  5089                           
  5090                           ;SD.c: 18:     SPI_Write(0xFF);
  5091  039E  30FF               	movlw	255
  5092  039F  3185  25B1  3183   	fcall	_SPI_Write
  5093                           
  5094                           ;SD.c: 19:     SPI_Write(0xFF);
  5095  03A2  30FF               	movlw	255
  5096  03A3  3185  25B1  3183   	fcall	_SPI_Write
  5097                           
  5098                           ;SD.c: 20:     SPI_Write(0xFF);
  5099  03A6  30FF               	movlw	255
  5100  03A7  3185  25B1  3183   	fcall	_SPI_Write
  5101                           
  5102                           ;SD.c: 21:     SPI_Write(0xFF);
  5103  03AA  30FF               	movlw	255
  5104  03AB  3185  25B1  3183   	fcall	_SPI_Write
  5105                           
  5106                           ;SD.c: 22:     SPI_Write(0xFF);
  5107  03AE  30FF               	movlw	255
  5108  03AF  3185  25B1  3183   	fcall	_SPI_Write
  5109                           
  5110                           ;SD.c: 23:     SPI_Write(0xFF);
  5111  03B2  30FF               	movlw	255
  5112  03B3  3185  25B1  3183   	fcall	_SPI_Write
  5113                           
  5114                           ;SD.c: 24:     SPI_Write(0xFF);
  5115  03B6  30FF               	movlw	255
  5116  03B7  3185  25B1  3183   	fcall	_SPI_Write
  5117                           
  5118                           ;SD.c: 25:     SPI_Write(0xFF);
  5119  03BA  30FF               	movlw	255
  5120  03BB  3185  25B1  3183   	fcall	_SPI_Write
  5121                           
  5122                           ;SD.c: 27:     { PORTCbits.RC7 = 0; SSP1CON1bits.WCOL = 0; };
  5123  03BE  0020               	movlb	0	; select bank0
  5124  03BF  138E               	bcf	14,7	;volatile
  5125  03C0  0024               	movlb	4	; select bank4
  5126  03C1  1395               	bcf	21,7	;volatile
  5127  03C2                     l2095:	
  5128                           
  5129                           ;SD.c: 34:         SD_SendCommand(0, 0x00, 0x00, 0x00, 0x00);
  5130  03C2  0020               	movlb	0	; select bank0
  5131  03C3  01A0               	clrf	SD_SendCommand@ARG3
  5132  03C4  01A1               	clrf	SD_SendCommand@ARG2
  5133  03C5  01A2               	clrf	SD_SendCommand@ARG1
  5134  03C6  01A3               	clrf	SD_SendCommand@ARG0
  5135  03C7  3000               	movlw	0
  5136  03C8  3182  22F3  3183   	fcall	_SD_SendCommand
  5137                           
  5138                           ;SD.c: 35:         SD_Read8bitResponse();
  5139  03CB  3185  2588  3183   	fcall	_SD_Read8bitResponse
  5140  03CE  0000               	nop	;# 
  5141                           
  5142                           ;SD.c: 37:     } while (SD_Check8bitResponse(0x01) == 0);
  5143  03CF  3001               	movlw	1
  5144  03D0  3185  25A1  3183   	fcall	_SD_Check8bitResponse
  5145  03D3  3A00               	xorlw	0
  5146  03D4  1903               	skipnz
  5147  03D5  2BC2               	goto	l2095
  5148  03D6                     l2101:	
  5149                           
  5150                           ;SD.c: 44:         SD_SendCommand(8, 0x00, 0x00, 0x01, 0xAA);
  5151  03D6  0020               	movlb	0	; select bank0
  5152  03D7  01A0               	clrf	SD_SendCommand@ARG3
  5153  03D8  01A1               	clrf	SD_SendCommand@ARG2
  5154  03D9  01A2               	clrf	SD_SendCommand@ARG1
  5155  03DA  0AA2               	incf	SD_SendCommand@ARG1,f
  5156  03DB  30AA               	movlw	170
  5157  03DC  00A7               	movwf	??_SD_Init
  5158  03DD  0827               	movf	??_SD_Init,w
  5159  03DE  00A3               	movwf	SD_SendCommand@ARG0
  5160  03DF  3008               	movlw	8
  5161  03E0  3182  22F3  3183   	fcall	_SD_SendCommand
  5162                           
  5163                           ;SD.c: 45:         SD_Read40bitResponse();
  5164  03E3  3184  24BF  3183   	fcall	_SD_Read40bitResponse
  5165  03E6  0000               	nop	;# 
  5166                           
  5167                           ;SD.c: 47:     } while (SD_Check40bitResponse(0x01, 0x00, 0x00, 0x01, 0xAA) == 0);
  5168  03E7  0020               	movlb	0	; select bank0
  5169  03E8  01A0               	clrf	SD_Check40bitResponse@Byte3
  5170  03E9  01A1               	clrf	SD_Check40bitResponse@Byte2
  5171  03EA  01A2               	clrf	SD_Check40bitResponse@Byte1
  5172  03EB  0AA2               	incf	SD_Check40bitResponse@Byte1,f
  5173  03EC  30AA               	movlw	170
  5174  03ED  00A7               	movwf	??_SD_Init
  5175  03EE  0827               	movf	??_SD_Init,w
  5176  03EF  00A3               	movwf	SD_Check40bitResponse@Byte0
  5177  03F0  3001               	movlw	1
  5178  03F1  3185  2536  3183   	fcall	_SD_Check40bitResponse
  5179  03F4  3A00               	xorlw	0
  5180  03F5  1903               	skipnz
  5181  03F6  2BD6               	goto	l2101
  5182  03F7                     l2107:	
  5183                           
  5184                           ;SD.c: 55:             SD_SendCommand(55, 0x00, 0x00, 0x00, 0x00);
  5185  03F7  0020               	movlb	0	; select bank0
  5186  03F8  01A0               	clrf	SD_SendCommand@ARG3
  5187  03F9  01A1               	clrf	SD_SendCommand@ARG2
  5188  03FA  01A2               	clrf	SD_SendCommand@ARG1
  5189  03FB  01A3               	clrf	SD_SendCommand@ARG0
  5190  03FC  3037               	movlw	55
  5191  03FD  3182  22F3  3183   	fcall	_SD_SendCommand
  5192                           
  5193                           ;SD.c: 56:             SD_Read8bitResponse();
  5194  0400  3185  2588  3183   	fcall	_SD_Read8bitResponse
  5195  0403  0000               	nop	;# 
  5196                           
  5197                           ;SD.c: 58:         } while (SD_Check8bitResponse(0x01) == 0);
  5198  0404  3001               	movlw	1
  5199  0405  3185  25A1  3183   	fcall	_SD_Check8bitResponse
  5200  0408  3A00               	xorlw	0
  5201  0409  1903               	skipnz
  5202  040A  2BF7               	goto	l2107
  5203                           
  5204                           ;SD.c: 65:         SD_SendCommand(41, 0x40, 0x00, 0x00, 0x00);
  5205  040B  3040               	movlw	64
  5206  040C  0020               	movlb	0	; select bank0
  5207  040D  00A7               	movwf	??_SD_Init
  5208  040E  0827               	movf	??_SD_Init,w
  5209  040F  00A0               	movwf	SD_SendCommand@ARG3
  5210  0410  01A1               	clrf	SD_SendCommand@ARG2
  5211  0411  01A2               	clrf	SD_SendCommand@ARG1
  5212  0412  01A3               	clrf	SD_SendCommand@ARG0
  5213  0413  3029               	movlw	41
  5214  0414  3182  22F3  3183   	fcall	_SD_SendCommand
  5215                           
  5216                           ;SD.c: 66:         SD_Read8bitResponse();
  5217  0417  3185  2588  3183   	fcall	_SD_Read8bitResponse
  5218  041A  0000               	nop	;# 
  5219                           
  5220                           ;SD.c: 68:     } while (SD_Check8bitResponse(0x00) == 0);
  5221  041B  3000               	movlw	0
  5222  041C  3185  25A1  3183   	fcall	_SD_Check8bitResponse
  5223  041F  3A00               	xorlw	0
  5224  0420  1D03               	btfss	3,2
  5225  0421  0008               	return
  5226  0422  2BF7               	goto	l2107
  5227  0423                     __end_of_SD_Init:	
  5228                           
  5229                           	psect	text11
  5230  02F3                     __ptext11:	
  5231 ;; *************** function _SD_SendCommand *****************
  5232 ;; Defined at:
  5233 ;;		line 77 in file "SD.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;  CMD_6bit        1    wreg     unsigned char 
  5236 ;;  ARG3            1    0[BANK0 ] unsigned char 
  5237 ;;  ARG2            1    1[BANK0 ] unsigned char 
  5238 ;;  ARG1            1    2[BANK0 ] unsigned char 
  5239 ;;  ARG0            1    3[BANK0 ] unsigned char 
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;  CMD_6bit        1    4[BANK0 ] unsigned char 
  5242 ;;  Checksum        1    6[BANK0 ] unsigned char 
  5243 ;;  ByteToSend      1    5[BANK0 ] unsigned char 
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  1    wreg      void 
  5246 ;; Registers used:
  5247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5253 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5254 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5255 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5256 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5257 ;;Total ram usage:        8 bytes
  5258 ;; Hardware stack levels used:    1
  5259 ;; Hardware stack levels required when called:    3
  5260 ;; This function calls:
  5261 ;;		_SPI_Write
  5262 ;; This function is called by:
  5263 ;;		_SD_Init
  5264 ;;		_SD_OpenBlock
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           
  5269                           ;psect for function _SD_SendCommand
  5270  02F3                     _SD_SendCommand:	
  5271                           
  5272                           ;incstack = 0
  5273                           ; Regs used in _SD_SendCommand: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5274                           ;SD_SendCommand@CMD_6bit stored from wreg
  5275  02F3  0020               	movlb	0	; select bank0
  5276  02F4  00A4               	movwf	SD_SendCommand@CMD_6bit
  5277                           
  5278                           ;SD.c: 79:     char Checksum = 0x00;
  5279  02F5  01A6               	clrf	SD_SendCommand@Checksum
  5280                           
  5281                           ;SD.c: 82:     ByteToSend = (CMD_6bit & 0x3F) | 0x40;
  5282  02F6  0824               	movf	SD_SendCommand@CMD_6bit,w
  5283  02F7  393F               	andlw	63
  5284  02F8  3840               	iorlw	64
  5285  02F9  00F5               	movwf	??_SD_SendCommand
  5286  02FA  0875               	movf	??_SD_SendCommand,w
  5287  02FB  00A5               	movwf	SD_SendCommand@ByteToSend
  5288                           
  5289                           ;SD.c: 83:     SPI_Write(ByteToSend);
  5290  02FC  0825               	movf	SD_SendCommand@ByteToSend,w
  5291  02FD  3185  25B1  3182   	fcall	_SPI_Write
  5292                           
  5293                           ;SD.c: 84:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5294  0300  0020               	movlb	0	; select bank0
  5295  0301  3526               	lslf	SD_SendCommand@Checksum,w
  5296  0302  00F5               	movwf	??_SD_SendCommand
  5297  0303  0875               	movf	??_SD_SendCommand,w
  5298  0304  00A6               	movwf	SD_SendCommand@Checksum
  5299  0305  0826               	movf	SD_SendCommand@Checksum,w
  5300  0306  0625               	xorwf	SD_SendCommand@ByteToSend,w
  5301  0307  00F5               	movwf	??_SD_SendCommand
  5302  0308  0875               	movf	??_SD_SendCommand,w
  5303  0309  00A6               	movwf	SD_SendCommand@Checksum
  5304  030A  0826               	movf	SD_SendCommand@Checksum,w
  5305  030B  3E73               	addlw	low (_CRCTable| (0+32768))
  5306  030C  0084               	movwf	4
  5307  030D  3080               	movlw	high (_CRCTable| (0+32768))
  5308  030E  1803               	skipnc
  5309  030F  3E01               	addlw	1
  5310  0310  0085               	movwf	5
  5311  0311  0800               	movf	0,w	;code access
  5312  0312  00F5               	movwf	??_SD_SendCommand
  5313  0313  0875               	movf	??_SD_SendCommand,w
  5314  0314  00A6               	movwf	SD_SendCommand@Checksum
  5315                           
  5316                           ;SD.c: 87:     ByteToSend = ARG3;
  5317  0315  0820               	movf	SD_SendCommand@ARG3,w
  5318  0316  00F5               	movwf	??_SD_SendCommand
  5319  0317  0875               	movf	??_SD_SendCommand,w
  5320  0318  00A5               	movwf	SD_SendCommand@ByteToSend
  5321                           
  5322                           ;SD.c: 88:     SPI_Write(ByteToSend);
  5323  0319  0825               	movf	SD_SendCommand@ByteToSend,w
  5324  031A  3185  25B1  3182   	fcall	_SPI_Write
  5325                           
  5326                           ;SD.c: 89:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5327  031D  0020               	movlb	0	; select bank0
  5328  031E  3526               	lslf	SD_SendCommand@Checksum,w
  5329  031F  00F5               	movwf	??_SD_SendCommand
  5330  0320  0875               	movf	??_SD_SendCommand,w
  5331  0321  00A6               	movwf	SD_SendCommand@Checksum
  5332  0322  0826               	movf	SD_SendCommand@Checksum,w
  5333  0323  0625               	xorwf	SD_SendCommand@ByteToSend,w
  5334  0324  00F5               	movwf	??_SD_SendCommand
  5335  0325  0875               	movf	??_SD_SendCommand,w
  5336  0326  00A6               	movwf	SD_SendCommand@Checksum
  5337  0327  0826               	movf	SD_SendCommand@Checksum,w
  5338  0328  3E73               	addlw	low (_CRCTable| (0+32768))
  5339  0329  0084               	movwf	4
  5340  032A  3080               	movlw	high (_CRCTable| (0+32768))
  5341  032B  1803               	skipnc
  5342  032C  3E01               	addlw	1
  5343  032D  0085               	movwf	5
  5344  032E  0800               	movf	0,w	;code access
  5345  032F  00F5               	movwf	??_SD_SendCommand
  5346  0330  0875               	movf	??_SD_SendCommand,w
  5347  0331  00A6               	movwf	SD_SendCommand@Checksum
  5348                           
  5349                           ;SD.c: 91:     ByteToSend = ARG2;
  5350  0332  0821               	movf	SD_SendCommand@ARG2,w
  5351  0333  00F5               	movwf	??_SD_SendCommand
  5352  0334  0875               	movf	??_SD_SendCommand,w
  5353  0335  00A5               	movwf	SD_SendCommand@ByteToSend
  5354                           
  5355                           ;SD.c: 92:     SPI_Write(ByteToSend);
  5356  0336  0825               	movf	SD_SendCommand@ByteToSend,w
  5357  0337  3185  25B1  3182   	fcall	_SPI_Write
  5358                           
  5359                           ;SD.c: 93:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5360  033A  0020               	movlb	0	; select bank0
  5361  033B  3526               	lslf	SD_SendCommand@Checksum,w
  5362  033C  00F5               	movwf	??_SD_SendCommand
  5363  033D  0875               	movf	??_SD_SendCommand,w
  5364  033E  00A6               	movwf	SD_SendCommand@Checksum
  5365  033F  0826               	movf	SD_SendCommand@Checksum,w
  5366  0340  0625               	xorwf	SD_SendCommand@ByteToSend,w
  5367  0341  00F5               	movwf	??_SD_SendCommand
  5368  0342  0875               	movf	??_SD_SendCommand,w
  5369  0343  00A6               	movwf	SD_SendCommand@Checksum
  5370  0344  0826               	movf	SD_SendCommand@Checksum,w
  5371  0345  3E73               	addlw	low (_CRCTable| (0+32768))
  5372  0346  0084               	movwf	4
  5373  0347  3080               	movlw	high (_CRCTable| (0+32768))
  5374  0348  1803               	skipnc
  5375  0349  3E01               	addlw	1
  5376  034A  0085               	movwf	5
  5377  034B  0800               	movf	0,w	;code access
  5378  034C  00F5               	movwf	??_SD_SendCommand
  5379  034D  0875               	movf	??_SD_SendCommand,w
  5380  034E  00A6               	movwf	SD_SendCommand@Checksum
  5381                           
  5382                           ;SD.c: 95:     ByteToSend = ARG1;
  5383  034F  0822               	movf	SD_SendCommand@ARG1,w
  5384  0350  00F5               	movwf	??_SD_SendCommand
  5385  0351  0875               	movf	??_SD_SendCommand,w
  5386  0352  00A5               	movwf	SD_SendCommand@ByteToSend
  5387                           
  5388                           ;SD.c: 96:     SPI_Write(ByteToSend);
  5389  0353  0825               	movf	SD_SendCommand@ByteToSend,w
  5390  0354  3185  25B1  3182   	fcall	_SPI_Write
  5391                           
  5392                           ;SD.c: 97:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5393  0357  0020               	movlb	0	; select bank0
  5394  0358  3526               	lslf	SD_SendCommand@Checksum,w
  5395  0359  00F5               	movwf	??_SD_SendCommand
  5396  035A  0875               	movf	??_SD_SendCommand,w
  5397  035B  00A6               	movwf	SD_SendCommand@Checksum
  5398  035C  0826               	movf	SD_SendCommand@Checksum,w
  5399  035D  0625               	xorwf	SD_SendCommand@ByteToSend,w
  5400  035E  00F5               	movwf	??_SD_SendCommand
  5401  035F  0875               	movf	??_SD_SendCommand,w
  5402  0360  00A6               	movwf	SD_SendCommand@Checksum
  5403  0361  0826               	movf	SD_SendCommand@Checksum,w
  5404  0362  3E73               	addlw	low (_CRCTable| (0+32768))
  5405  0363  0084               	movwf	4
  5406  0364  3080               	movlw	high (_CRCTable| (0+32768))
  5407  0365  1803               	skipnc
  5408  0366  3E01               	addlw	1
  5409  0367  0085               	movwf	5
  5410  0368  0800               	movf	0,w	;code access
  5411  0369  00F5               	movwf	??_SD_SendCommand
  5412  036A  0875               	movf	??_SD_SendCommand,w
  5413  036B  00A6               	movwf	SD_SendCommand@Checksum
  5414                           
  5415                           ;SD.c: 99:     ByteToSend = ARG0;
  5416  036C  0823               	movf	SD_SendCommand@ARG0,w
  5417  036D  00F5               	movwf	??_SD_SendCommand
  5418  036E  0875               	movf	??_SD_SendCommand,w
  5419  036F  00A5               	movwf	SD_SendCommand@ByteToSend
  5420                           
  5421                           ;SD.c: 100:     SPI_Write(ByteToSend);
  5422  0370  0825               	movf	SD_SendCommand@ByteToSend,w
  5423  0371  3185  25B1  3182   	fcall	_SPI_Write
  5424                           
  5425                           ;SD.c: 101:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum =
      +                           CRCTable[Checksum]; };
  5426  0374  0020               	movlb	0	; select bank0
  5427  0375  3526               	lslf	SD_SendCommand@Checksum,w
  5428  0376  00F5               	movwf	??_SD_SendCommand
  5429  0377  0875               	movf	??_SD_SendCommand,w
  5430  0378  00A6               	movwf	SD_SendCommand@Checksum
  5431  0379  0826               	movf	SD_SendCommand@Checksum,w
  5432  037A  0625               	xorwf	SD_SendCommand@ByteToSend,w
  5433  037B  00F5               	movwf	??_SD_SendCommand
  5434  037C  0875               	movf	??_SD_SendCommand,w
  5435  037D  00A6               	movwf	SD_SendCommand@Checksum
  5436  037E  0826               	movf	SD_SendCommand@Checksum,w
  5437  037F  3E73               	addlw	low (_CRCTable| (0+32768))
  5438  0380  0084               	movwf	4
  5439  0381  3080               	movlw	high (_CRCTable| (0+32768))
  5440  0382  1803               	skipnc
  5441  0383  3E01               	addlw	1
  5442  0384  0085               	movwf	5
  5443  0385  0800               	movf	0,w	;code access
  5444  0386  00F5               	movwf	??_SD_SendCommand
  5445  0387  0875               	movf	??_SD_SendCommand,w
  5446  0388  00A6               	movwf	SD_SendCommand@Checksum
  5447                           
  5448                           ;SD.c: 104:     ByteToSend = (Checksum << 1) | 0x01;
  5449  0389  1403               	setc
  5450  038A  0D26               	rlf	SD_SendCommand@Checksum,w
  5451  038B  00F5               	movwf	??_SD_SendCommand
  5452  038C  0875               	movf	??_SD_SendCommand,w
  5453  038D  00A5               	movwf	SD_SendCommand@ByteToSend
  5454                           
  5455                           ;SD.c: 105:     SPI_Write(ByteToSend);
  5456  038E  0825               	movf	SD_SendCommand@ByteToSend,w
  5457  038F  3185  25B1         	fcall	_SPI_Write
  5458  0391  0008               	return
  5459  0392                     __end_of_SD_SendCommand:	
  5460                           
  5461                           	psect	text12
  5462  05B1                     __ptext12:	
  5463 ;; *************** function _SPI_Write *****************
  5464 ;; Defined at:
  5465 ;;		line 38 in file "SPI.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  Data_8bit       1    wreg     unsigned char 
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  Data_8bit       1    4[COMMON] unsigned char 
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		wreg
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5480 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5482 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5483 ;;Total ram usage:        1 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:    2
  5486 ;; This function calls:
  5487 ;;		Nothing
  5488 ;; This function is called by:
  5489 ;;		_SD_Init
  5490 ;;		_SD_SendCommand
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494                           
  5495                           ;psect for function _SPI_Write
  5496  05B1                     _SPI_Write:	
  5497                           
  5498                           ;incstack = 0
  5499                           ; Regs used in _SPI_Write: [wreg]
  5500                           ;SPI_Write@Data_8bit stored from wreg
  5501  05B1  00F4               	movwf	SPI_Write@Data_8bit
  5502                           
  5503                           ;SPI.c: 39:     SSP1BUF = Data_8bit;
  5504  05B2  0874               	movf	SPI_Write@Data_8bit,w
  5505  05B3  0024               	movlb	4	; select bank4
  5506  05B4  0091               	movwf	17	;volatile
  5507  05B5                     l101:	
  5508                           ;SPI.c: 40:     while(SSP1STATbits.BF == 0);
  5509                           
  5510  05B5  1814               	btfsc	20,0	;volatile
  5511  05B6  0008               	return
  5512  05B7  2DB5               	goto	l101
  5513  05B8                     __end_of_SPI_Write:	
  5514                           
  5515                           	psect	text13
  5516  0588                     __ptext13:	
  5517 ;; *************** function _SD_Read8bitResponse *****************
  5518 ;; Defined at:
  5519 ;;		line 112 in file "SD.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;		None
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;  readMessage     1    5[COMMON] unsigned char 
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  1    wreg      void 
  5526 ;; Registers used:
  5527 ;;		wreg, status,2, status,0, pclath, cstack
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5535 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5536 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5537 ;;Total ram usage:        2 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; Hardware stack levels required when called:    3
  5540 ;; This function calls:
  5541 ;;		_SPI_Read
  5542 ;; This function is called by:
  5543 ;;		_SD_Init
  5544 ;;		_SD_OpenBlock
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           
  5549                           ;psect for function _SD_Read8bitResponse
  5550  0588                     _SD_Read8bitResponse:	
  5551  0588                     l2017:	
  5552                           ;incstack = 0
  5553                           ; Regs used in _SD_Read8bitResponse: [wreg+status,2+status,0+pclath+cstack]
  5554                           
  5555  0588  3185  25B8  3185   	fcall	_SPI_Read
  5556  058B  00F4               	movwf	??_SD_Read8bitResponse
  5557  058C  0874               	movf	??_SD_Read8bitResponse,w
  5558  058D  00F5               	movwf	SD_Read8bitResponse@readMessage
  5559  058E  0A75               	incf	SD_Read8bitResponse@readMessage,w
  5560  058F  1903               	btfsc	3,2
  5561  0590  2D88               	goto	l2017
  5562                           
  5563                           ;SD.c: 121:     GLBL_Resp8 = readMessage;
  5564  0591  0875               	movf	SD_Read8bitResponse@readMessage,w
  5565  0592  00F4               	movwf	??_SD_Read8bitResponse
  5566  0593  0874               	movf	??_SD_Read8bitResponse,w
  5567  0594  00F8               	movwf	_GLBL_Resp8
  5568                           
  5569                           ;SD.c: 124:     SPI_Read();
  5570  0595  3185  25B8         	fcall	_SPI_Read
  5571  0597  0008               	return
  5572  0598                     __end_of_SD_Read8bitResponse:	
  5573                           
  5574                           	psect	text14
  5575  04BF                     __ptext14:	
  5576 ;; *************** function _SD_Read40bitResponse *****************
  5577 ;; Defined at:
  5578 ;;		line 141 in file "SD.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;		None
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;  readMessage     1    5[COMMON] unsigned char 
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  1    wreg      void 
  5585 ;; Registers used:
  5586 ;;		wreg, status,2, status,0, pclath, cstack
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5593 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5594 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5595 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5596 ;;Total ram usage:        2 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; Hardware stack levels required when called:    3
  5599 ;; This function calls:
  5600 ;;		_SPI_Read
  5601 ;; This function is called by:
  5602 ;;		_SD_Init
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606                           
  5607                           ;psect for function _SD_Read40bitResponse
  5608  04BF                     _SD_Read40bitResponse:	
  5609  04BF                     l2039:	
  5610                           ;incstack = 0
  5611                           ; Regs used in _SD_Read40bitResponse: [wreg+status,2+status,0+pclath+cstack]
  5612                           
  5613  04BF  3185  25B8  3184   	fcall	_SPI_Read
  5614  04C2  00F4               	movwf	??_SD_Read40bitResponse
  5615  04C3  0874               	movf	??_SD_Read40bitResponse,w
  5616  04C4  00F5               	movwf	SD_Read40bitResponse@readMessage
  5617  04C5  0A75               	incf	SD_Read40bitResponse@readMessage,w
  5618  04C6  1903               	btfsc	3,2
  5619  04C7  2CBF               	goto	l2039
  5620                           
  5621                           ;SD.c: 150:     GLBL_Resp40[0] = readMessage;
  5622  04C8  0875               	movf	SD_Read40bitResponse@readMessage,w
  5623  04C9  00F4               	movwf	??_SD_Read40bitResponse
  5624  04CA  0874               	movf	??_SD_Read40bitResponse,w
  5625  04CB  0021               	movlb	1	; select bank1
  5626  04CC  00D9               	movwf	_GLBL_Resp40^(0+128)
  5627                           
  5628                           ;SD.c: 151:     GLBL_Resp40[1] = SPI_Read();
  5629  04CD  3185  25B8  3184   	fcall	_SPI_Read
  5630  04D0  00F4               	movwf	??_SD_Read40bitResponse
  5631  04D1  0874               	movf	??_SD_Read40bitResponse,w
  5632  04D2  0021               	movlb	1	; select bank1
  5633  04D3  00DA               	movwf	(_GLBL_Resp40^(0+128)+1)
  5634                           
  5635                           ;SD.c: 152:     GLBL_Resp40[2] = SPI_Read();
  5636  04D4  3185  25B8  3184   	fcall	_SPI_Read
  5637  04D7  00F4               	movwf	??_SD_Read40bitResponse
  5638  04D8  0874               	movf	??_SD_Read40bitResponse,w
  5639  04D9  0021               	movlb	1	; select bank1
  5640  04DA  00DB               	movwf	(_GLBL_Resp40^(0+128)+2)
  5641                           
  5642                           ;SD.c: 153:     GLBL_Resp40[3] = SPI_Read();
  5643  04DB  3185  25B8  3184   	fcall	_SPI_Read
  5644  04DE  00F4               	movwf	??_SD_Read40bitResponse
  5645  04DF  0874               	movf	??_SD_Read40bitResponse,w
  5646  04E0  0021               	movlb	1	; select bank1
  5647  04E1  00DC               	movwf	(_GLBL_Resp40^(0+128)+3)
  5648                           
  5649                           ;SD.c: 154:     GLBL_Resp40[4] = SPI_Read();
  5650  04E2  3185  25B8  3184   	fcall	_SPI_Read
  5651  04E5  00F4               	movwf	??_SD_Read40bitResponse
  5652  04E6  0874               	movf	??_SD_Read40bitResponse,w
  5653  04E7  0021               	movlb	1	; select bank1
  5654  04E8  00DD               	movwf	(_GLBL_Resp40^(0+128)+4)
  5655                           
  5656                           ;SD.c: 157:     SPI_Read();
  5657  04E9  3185  25B8         	fcall	_SPI_Read
  5658  04EB  0008               	return
  5659  04EC                     __end_of_SD_Read40bitResponse:	
  5660                           
  5661                           	psect	text15
  5662  05B8                     __ptext15:	
  5663 ;; *************** function _SPI_Read *****************
  5664 ;; Defined at:
  5665 ;;		line 46 in file "SPI.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;		None
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;		None
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  1    wreg      unsigned char 
  5672 ;; Registers used:
  5673 ;;		wreg
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5683 ;;Total ram usage:        0 bytes
  5684 ;; Hardware stack levels used:    1
  5685 ;; Hardware stack levels required when called:    2
  5686 ;; This function calls:
  5687 ;;		Nothing
  5688 ;; This function is called by:
  5689 ;;		_SD_Read8bitResponse
  5690 ;;		_SD_Read40bitResponse
  5691 ;;		_SD_CloseBlock
  5692 ;;		_readBytes
  5693 ;;		_openFile
  5694 ;;		_main
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           
  5699                           ;psect for function _SPI_Read
  5700  05B8                     _SPI_Read:	
  5701                           
  5702                           ;SPI.c: 47:     SSP1BUF = 0xFF;
  5703                           
  5704                           ;incstack = 0
  5705                           ; Regs used in _SPI_Read: [wreg]
  5706  05B8  30FF               	movlw	255
  5707  05B9  0024               	movlb	4	; select bank4
  5708  05BA  0091               	movwf	17	;volatile
  5709  05BB                     l107:	
  5710                           ;SPI.c: 48:     while(SSP1STATbits.BF == 0);
  5711                           
  5712  05BB  1C14               	btfss	20,0	;volatile
  5713  05BC  2DBB               	goto	l107
  5714                           
  5715                           ;SPI.c: 49:     return SSP1BUF;
  5716  05BD  0811               	movf	17,w	;volatile
  5717  05BE  0008               	return
  5718  05BF                     __end_of_SPI_Read:	
  5719                           
  5720                           	psect	text16
  5721  05A1                     __ptext16:	
  5722 ;; *************** function _SD_Check8bitResponse *****************
  5723 ;; Defined at:
  5724 ;;		line 132 in file "SD.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  Byte            1    wreg     unsigned char 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;  Byte            1    4[COMMON] unsigned char 
  5729 ;;  match           1    5[COMMON] _Bool 
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  1    wreg      _Bool 
  5732 ;; Registers used:
  5733 ;;		wreg, status,2
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5740 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5742 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5743 ;;Total ram usage:        2 bytes
  5744 ;; Hardware stack levels used:    1
  5745 ;; Hardware stack levels required when called:    2
  5746 ;; This function calls:
  5747 ;;		Nothing
  5748 ;; This function is called by:
  5749 ;;		_SD_Init
  5750 ;;		_SD_OpenBlock
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           
  5755                           ;psect for function _SD_Check8bitResponse
  5756  05A1                     _SD_Check8bitResponse:	
  5757                           
  5758                           ;incstack = 0
  5759                           ; Regs used in _SD_Check8bitResponse: [wreg+status,2]
  5760                           ;SD_Check8bitResponse@Byte stored from wreg
  5761  05A1  00F4               	movwf	SD_Check8bitResponse@Byte
  5762                           
  5763                           ;SD.c: 133:     _Bool match = 1;
  5764  05A2  01F5               	clrf	SD_Check8bitResponse@match
  5765  05A3  0AF5               	incf	SD_Check8bitResponse@match,f
  5766                           
  5767                           ;SD.c: 134:     if (Byte != GLBL_Resp8) match = 0;
  5768  05A4  0874               	movf	SD_Check8bitResponse@Byte,w
  5769  05A5  0678               	xorwf	_GLBL_Resp8,w
  5770  05A6  1D03               	btfss	3,2
  5771  05A7  01F5               	clrf	SD_Check8bitResponse@match
  5772                           
  5773                           ;SD.c: 135:     return match;
  5774  05A8  0875               	movf	SD_Check8bitResponse@match,w
  5775  05A9  0008               	return
  5776  05AA                     __end_of_SD_Check8bitResponse:	
  5777                           
  5778                           	psect	text17
  5779  0536                     __ptext17:	
  5780 ;; *************** function _SD_Check40bitResponse *****************
  5781 ;; Defined at:
  5782 ;;		line 166 in file "SD.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;  Byte4           1    wreg     unsigned char 
  5785 ;;  Byte3           1    0[BANK0 ] unsigned char 
  5786 ;;  Byte2           1    1[BANK0 ] unsigned char 
  5787 ;;  Byte1           1    2[BANK0 ] unsigned char 
  5788 ;;  Byte0           1    3[BANK0 ] unsigned char 
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;  Byte4           1    4[COMMON] unsigned char 
  5791 ;;  match           1    5[COMMON] _Bool 
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  1    wreg      _Bool 
  5794 ;; Registers used:
  5795 ;;		wreg, status,2
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5801 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5802 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5804 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5805 ;;Total ram usage:        6 bytes
  5806 ;; Hardware stack levels used:    1
  5807 ;; Hardware stack levels required when called:    2
  5808 ;; This function calls:
  5809 ;;		Nothing
  5810 ;; This function is called by:
  5811 ;;		_SD_Init
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           
  5816                           ;psect for function _SD_Check40bitResponse
  5817  0536                     _SD_Check40bitResponse:	
  5818                           
  5819                           ;incstack = 0
  5820                           ; Regs used in _SD_Check40bitResponse: [wreg+status,2]
  5821                           ;SD_Check40bitResponse@Byte4 stored from wreg
  5822  0536  00F4               	movwf	SD_Check40bitResponse@Byte4
  5823                           
  5824                           ;SD.c: 167:     _Bool match = 1;
  5825  0537  01F5               	clrf	SD_Check40bitResponse@match
  5826  0538  0AF5               	incf	SD_Check40bitResponse@match,f
  5827                           
  5828                           ;SD.c: 168:     if (Byte4 != GLBL_Resp40[0]) match = 0;
  5829  0539  0021               	movlb	1	; select bank1
  5830  053A  0859               	movf	_GLBL_Resp40^(0+128),w
  5831  053B  0674               	xorwf	SD_Check40bitResponse@Byte4,w
  5832  053C  1D03               	btfss	3,2
  5833  053D  01F5               	clrf	SD_Check40bitResponse@match
  5834                           
  5835                           ;SD.c: 169:     if (Byte3 != GLBL_Resp40[1]) match = 0;
  5836  053E  085A               	movf	(_GLBL_Resp40^(0+128)+1),w
  5837  053F  0020               	movlb	0	; select bank0
  5838  0540  0620               	xorwf	SD_Check40bitResponse@Byte3,w
  5839  0541  1D03               	btfss	3,2
  5840  0542  01F5               	clrf	SD_Check40bitResponse@match
  5841                           
  5842                           ;SD.c: 170:     if (Byte2 != GLBL_Resp40[2]) match = 0;
  5843  0543  0021               	movlb	1	; select bank1
  5844  0544  085B               	movf	(_GLBL_Resp40^(0+128)+2),w
  5845  0545  0020               	movlb	0	; select bank0
  5846  0546  0621               	xorwf	SD_Check40bitResponse@Byte2,w
  5847  0547  1D03               	btfss	3,2
  5848  0548  01F5               	clrf	SD_Check40bitResponse@match
  5849                           
  5850                           ;SD.c: 171:     if (Byte1 != GLBL_Resp40[3]) match = 0;
  5851  0549  0021               	movlb	1	; select bank1
  5852  054A  085C               	movf	(_GLBL_Resp40^(0+128)+3),w
  5853  054B  0020               	movlb	0	; select bank0
  5854  054C  0622               	xorwf	SD_Check40bitResponse@Byte1,w
  5855  054D  1D03               	btfss	3,2
  5856  054E  01F5               	clrf	SD_Check40bitResponse@match
  5857                           
  5858                           ;SD.c: 172:     if (Byte0 != GLBL_Resp40[4]) match = 0;
  5859  054F  0021               	movlb	1	; select bank1
  5860  0550  085D               	movf	(_GLBL_Resp40^(0+128)+4),w
  5861  0551  0020               	movlb	0	; select bank0
  5862  0552  0623               	xorwf	SD_Check40bitResponse@Byte0,w
  5863  0553  1D03               	btfss	3,2
  5864  0554  01F5               	clrf	SD_Check40bitResponse@match
  5865                           
  5866                           ;SD.c: 173:     return match;
  5867  0555  0875               	movf	SD_Check40bitResponse@match,w
  5868  0556  0008               	return
  5869  0557                     __end_of_SD_Check40bitResponse:	
  5870                           
  5871                           	psect	text18
  5872  05BF                     __ptext18:	
  5873 ;; *************** function _DAC_Init *****************
  5874 ;; Defined at:
  5875 ;;		line 30 in file "DAC.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;		None
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;		None
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  1    wreg      void 
  5882 ;; Registers used:
  5883 ;;		wreg
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5893 ;;Total ram usage:        0 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:    2
  5896 ;; This function calls:
  5897 ;;		Nothing
  5898 ;; This function is called by:
  5899 ;;		_init
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           
  5904                           ;psect for function _DAC_Init
  5905  05BF                     _DAC_Init:	
  5906                           
  5907                           ;DAC.c: 31:     TRISA = 0xFB;
  5908                           
  5909                           ;incstack = 0
  5910                           ; Regs used in _DAC_Init: [wreg]
  5911  05BF  30FB               	movlw	251
  5912  05C0  0021               	movlb	1	; select bank1
  5913  05C1  008C               	movwf	12	;volatile
  5914                           
  5915                           ;DAC.c: 32:     DAC1CON0 = 0xE0;
  5916  05C2  30E0               	movlw	224
  5917  05C3  002B               	movlb	11	; select bank11
  5918  05C4  008E               	movwf	14	;volatile
  5919  05C5  0008               	return
  5920  05C6                     __end_of_DAC_Init:	
  5921                           
  5922                           	psect	intentry
  5923  0004                     __pintentry:	
  5924 ;; *************** function _isr *****************
  5925 ;; Defined at:
  5926 ;;		line 114 in file "main.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;		None
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;  level           2    2[COMMON] short 
  5931 ;; Return value:  Size  Location     Type
  5932 ;;                  1    wreg      void 
  5933 ;; Registers used:
  5934 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5941 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5942 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5943 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5944 ;;Total ram usage:        4 bytes
  5945 ;; Hardware stack levels used:    1
  5946 ;; Hardware stack levels required when called:    1
  5947 ;; This function calls:
  5948 ;;		_pulse
  5949 ;; This function is called by:
  5950 ;;		Interrupt level 1
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954  0004                     _isr:	
  5955                           
  5956                           ;incstack = 0
  5957  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5958                           
  5959                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5960  0005  3180               	pagesel	$
  5961                           
  5962                           ;main.c: 115:     PIR1bits.TMR2IF = 0;
  5963  0006  0020               	movlb	0	; select bank0
  5964  0007  1091               	bcf	17,1	;volatile
  5965                           
  5966                           ;main.c: 116:     PORTCbits.RC0 = 1;
  5967  0008  140E               	bsf	14,0	;volatile
  5968                           
  5969                           ;main.c: 118:     short level = buffer[buffer_read_index++] - 0x8000;
  5970  0009  353B               	lslf	_buffer_read_index,w
  5971  000A  3E20               	addlw	(low (_buffer| (0+256)))& (0+255)
  5972  000B  0086               	movwf	6
  5973  000C  3001               	movlw	1	; select bank2/3
  5974  000D  0087               	movwf	7
  5975  000E  3F40               	moviw [0]fsr1
  5976  000F  00F0               	movwf	??_isr
  5977  0010  3F41               	moviw [1]fsr1
  5978  0011  00F1               	movwf	??_isr+1
  5979  0012  0870               	movf	??_isr,w
  5980  0013  3E00               	addlw	0
  5981  0014  00F2               	movwf	isr@level
  5982  0015  3080               	movlw	128
  5983  0016  3D71               	addwfc	??_isr+1,w
  5984  0017  00F3               	movwf	isr@level+1
  5985  0018  3001               	movlw	1
  5986  0019  07BB               	addwf	_buffer_read_index,f
  5987  001A  3000               	movlw	0
  5988  001B  3DBC               	addwfc	_buffer_read_index+1,f
  5989                           
  5990                           ;main.c: 119:     DAC1REFH = (level & 0xff00) >> 8;
  5991  001C  0873               	movf	isr@level+1,w
  5992  001D  002B               	movlb	11	; select bank11
  5993  001E  0090               	movwf	16	;volatile
  5994                           
  5995                           ;main.c: 120:     DAC1REFL = (level & 0x00C0) << 8;
  5996  001F  018F               	clrf	15	;volatile
  5997                           
  5998                           ;main.c: 121:     DAC1LD = 1;
  5999  0020  140D               	bsf	13,0	;volatile
  6000                           
  6001                           ;main.c: 122:     pulse();
  6002  0021  3185  25E6  3180   	fcall	_pulse
  6003                           
  6004                           ;main.c: 123:     if (buffer_read_index >= 32) buffer_read_index = 0;
  6005  0024  3000               	movlw	0
  6006  0025  0020               	movlb	0	; select bank0
  6007  0026  023C               	subwf	_buffer_read_index+1,w
  6008  0027  3020               	movlw	32
  6009  0028  1903               	skipnz
  6010  0029  023B               	subwf	_buffer_read_index,w
  6011  002A  1C03               	skipc
  6012  002B  282E               	goto	i1l1763
  6013  002C  01BB               	clrf	_buffer_read_index
  6014  002D  01BC               	clrf	_buffer_read_index+1
  6015  002E                     i1l1763:	
  6016                           
  6017                           ;main.c: 124:     PORTCbits.RC0 = 0;
  6018  002E  100E               	bcf	14,0	;volatile
  6019  002F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6020  0030  0009               	retfie
  6021  0031                     __end_of_isr:	
  6022                           
  6023                           	psect	text20
  6024  05E6                     __ptext20:	
  6025 ;; *************** function _pulse *****************
  6026 ;; Defined at:
  6027 ;;		line 39 in file "main.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;		None
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;		None
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  1    wreg      void 
  6034 ;; Registers used:
  6035 ;;		None
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/0
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6045 ;;Total ram usage:        0 bytes
  6046 ;; Hardware stack levels used:    1
  6047 ;; This function calls:
  6048 ;;		Nothing
  6049 ;; This function is called by:
  6050 ;;		_isr
  6051 ;; This function uses a non-reentrant model
  6052 ;;
  6053                           
  6054                           
  6055                           ;psect for function _pulse
  6056  05E6                     _pulse:	
  6057                           
  6058                           ;main.c: 40:     PORTCbits.RC0 = 1;
  6059                           
  6060                           ;incstack = 0
  6061                           ; Regs used in _pulse: []
  6062  05E6  0020               	movlb	0	; select bank0
  6063  05E7  140E               	bsf	14,0	;volatile
  6064                           
  6065                           ;main.c: 41:     PORTCbits.RC0 = 0;
  6066  05E8  100E               	bcf	14,0	;volatile
  6067  05E9  0008               	return
  6068  05EA                     __end_of_pulse:	
  6069  007E                     btemp	set	126	;btemp
  6070  007E                     int$flags	set	126
  6071  007E                     wtemp0	set	126


Data Sizes:
    Strings     20
    Constant    256
    Data        11
    BSS         88
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     25      39
    BANK1            80     45      62
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    readBytes@dest	PTR unsigned char  size(1) Largest target is 28
		 -> openFile@data(BANK1[8]), openFile@fmt(BANK1[28]), openFile@riff(BANK1[8]), 

    fourCCeq@b	PTR unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), STR_6(CODE[5]), STR_4(CODE[5]), STR_2(CODE[5]), 

    fourCCeq@a	PTR unsigned char  size(1) Largest target is 28
		 -> openFile@data(BANK1[8]), fmt.fmtHeader(BANK0[8]), openFile@fmt(BANK1[28]), openFile@riff(BANK1[8]), 


Critical Paths under _main in COMMON

    _main->_error
    _openFile->_error
    _openFile->_fourCCeq
    _openFile->_readBytes
    _SD_OpenBlock->_SD_Check8bitResponse
    _SD_OpenBlock->_SD_Read8bitResponse
    _SD_OpenBlock->_SD_SendCommand
    _SD_Init->_SD_Check40bitResponse
    _SD_Init->_SD_Check8bitResponse
    _SD_Init->_SD_Read40bitResponse
    _SD_Init->_SD_Read8bitResponse
    _SD_Init->_SD_SendCommand
    _SD_SendCommand->_SPI_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_openFile
    _openFile->_SD_OpenBlock
    _SD_OpenBlock->_SD_SendCommand
    _init->_SD_Init
    _SD_Init->_SD_SendCommand

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_openFile

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   12431
                                             24 BANK0      1     1      0
                      _SD_CloseBlock
                       _SD_OpenBlock
                           _SPI_Read
                              _error
                               _init
                           _openFile
                         _timer_Init
 ---------------------------------------------------------------------------------
 (1) _timer_Init                                           4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _openFile                                            50    46      4    5213
                                             19 BANK0      5     1      4
                                              0 BANK1     45    45      0
                       _SD_OpenBlock
                           _SPI_Read
                              _error
                           _fourCCeq
                          _readBytes
 ---------------------------------------------------------------------------------
 (2) _readBytes                                            7     5      2     508
                                              4 COMMON     2     0      2
                                              0 BANK0      5     5      0
                      _SD_CloseBlock
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SD_CloseBlock                                        0     0      0       0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (2) _fourCCeq                                             8     6      2     696
                                              4 COMMON     2     0      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _error                                                2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SD_OpenBlock                                        12     8      4    3375
                                              7 BANK0     12     8      4
               _SD_Check8bitResponse
                _SD_Read8bitResponse
                     _SD_SendCommand
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    3691
                           _DAC_Init
                            _SD_Init
                           _SPI_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SD_Init                                              1     1      0    3691
                                              7 BANK0      1     1      0
              _SD_Check40bitResponse
               _SD_Check8bitResponse
               _SD_Read40bitResponse
                _SD_Read8bitResponse
                     _SD_SendCommand
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SD_SendCommand                                       8     4      4    2892
                                              5 COMMON     1     1      0
                                              0 BANK0      7     3      4
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (4) _SPI_Write                                            1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SD_Read8bitResponse                                  2     2      0      68
                                              4 COMMON     2     2      0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SD_Read40bitResponse                                 2     2      0      68
                                              4 COMMON     2     2      0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SPI_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SD_Check8bitResponse                                 2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _SD_Check40bitResponse                                6     2      4     564
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _DAC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0      23
                                              0 COMMON     4     4      0
                              _pulse
 ---------------------------------------------------------------------------------
 (6) _pulse                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SD_CloseBlock
     _SPI_Read
   _SD_OpenBlock
     _SD_Check8bitResponse
     _SD_Read8bitResponse
       _SPI_Read
     _SD_SendCommand
       _SPI_Write
   _SPI_Read
   _error
   _init
     _DAC_Init
     _SD_Init
       _SD_Check40bitResponse
       _SD_Check8bitResponse
       _SD_Read40bitResponse
         _SPI_Read
       _SD_Read8bitResponse
         _SPI_Read
       _SD_SendCommand
         _SPI_Write
       _SPI_Write
     _SPI_Init
   _openFile
     _SD_OpenBlock
       _SD_Check8bitResponse
       _SD_Read8bitResponse
         _SPI_Read
       _SD_SendCommand
         _SPI_Write
     _SPI_Read
     _error
     _fourCCeq
     _readBytes
       _SD_CloseBlock
         _SPI_Read
       _SPI_Read
   _timer_Init

 _isr (ROOT)
   _pulse

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BIGRAM             3F0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITCOMMON            E      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
COMMON               E      6       A       3       71.4%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
STACK                0      0       0       4        0.0%
BANK0               50     19      27       5       48.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK0            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     2D      3E       8       77.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
ABS                  0      0      AF      13        0.0%
BITBANK4            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK5            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK6            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK7            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK8            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK9            50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9               50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK10           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITBANK11           50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
DATA                 0      0      AF      30        0.0%
BITBANK12           30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12              30      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK13           50      0       0      33        0.0%
BANK13              50      0       0      34        0.0%
BITBANK14           50      0       0      35        0.0%
BANK14              50      0       0      36        0.0%
BITBANK15           50      0       0      37        0.0%
BANK15              50      0       0      38        0.0%
BITBANK16           50      0       0      39        0.0%
BANK16              50      0       0      40        0.0%
BITBANK17           50      0       0      41        0.0%
BANK17              50      0       0      42        0.0%
BITBANK18           50      0       0      43        0.0%
BANK18              50      0       0      44        0.0%
BITBANK19           50      0       0      45        0.0%
BANK19              50      0       0      46        0.0%
BITBANK20           50      0       0      47        0.0%
BANK20              50      0       0      48        0.0%
BITBANK21           50      0       0      49        0.0%
BANK21              50      0       0      50        0.0%
BITBANK22           50      0       0      51        0.0%
BANK22              50      0       0      52        0.0%
BITBANK23           50      0       0      53        0.0%
BANK23              50      0       0      54        0.0%
BITBANK24           50      0       0      55        0.0%
BANK24              50      0       0      56        0.0%
BITBANK25           20      0       0      57        0.0%
BANK25              20      0       0      58        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 02 14:59:21 2019

            SD_OpenBlock@address 0027                              l101 05B5                              l107 05BB  
                            l127 0479                              l219 0577                              u915 04A4  
                            u925 0488                              _isr 0004                              wreg 0009  
         ??_SD_Check8bitResponse 0074                  ?_SD_SendCommand 0020                             l2101 03D6  
                           l2017 0588                             l2201 044C                             l2107 03F7  
                           l2301 01B0                             l2039 04BF                             l2145 0508  
                           l2313 01D3                             l2139 04EF                             l2171 047E  
                           l2323 01E7                             l2261 0297                             l2245 0261  
                           l2095 03C2                             l2255 0280                             l2183 0434  
                           l2175 042A                             l2351 0242                             l2327 01EF  
                           l2169 04B9                             l2273 02B9                             l2265 02A6  
                           l2249 0269                             l2283 02E4                             l2195 0444  
                           l2339 0212                             l2269 02AF                             l2189 043C  
                           l2481 046A                             l2473 0452                             l2483 046F  
                           l2475 0474                             l2477 0460                             l2479 0465  
                           ?_isr 0070                             STR_1 05DC                             STR_2 05DC  
                           STR_3 05D7                             STR_4 05D7                             STR_5 0173  
                           STR_6 0173                             STR_7 05E1                             STR_8 05E1  
                           u1085 01FC                             u1095 0219                             _T2PR 0494  
                           _main 0178                             _init 0574                  __end_of_SD_Init 0423  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                 __end_of_DAC_Init 05C6                             start 0031  
  __size_of_SD_Read40bitResponse 002D                  ??_SD_CloseBlock 0074     __size_of_SD_Read8bitResponse 0010  
               __end_of_CRCTable 0173                            ??_isr 0070                    __CFG_PLLEN$ON 0000  
                          ?_main 0070                            ?_init 0070                    __CFG_WDTE$OFF 0000  
                          _ANSC3 0C73                            _T2CON 0495                            _TRISA 008C  
                          _error 05AA                            _sdata 003D                            _state 0076  
                          _pulse 05E6                 __end_of_SPI_Init 0574                 __end_of_SPI_Read 05BF  
                          status 0003                            wtemp0 007E               __size_of_SPI_Write 0007  
                __initialization 0033                     __end_of_main 0247                     __end_of_init 0588  
             _buffer_write_index 0044                           ??_main 0038                           ??_init 0076  
       SD_Check8bitResponse@Byte 0074                           _DAC1LD 2C68                           ?_error 0070  
                      ??_SD_Init 0027                           ?_pulse 0070                           _RC2PPS 0EA2  
                         _RC4PPS 0EA4                           i1l1763 002E                           _OSCCON 009B  
                         _TRISC2 0472                           _TRISC3 0473                           _TRISC4 0474  
                         _TRISC7 0477                    SD_OpenBlock@a 002F                 __end_of_fourCCeq 0512  
                         _buffer 0120         SD_SendCommand@ByteToSend 0025                 __end_of_openFile 02F3  
              __end_of_SPI_Write 05B8                           error@e 0075                     __pdataCOMMON 0076  
                      ?_DAC_Init 0070          __end_of__initialization 006F   __size_of_SD_Check40bitResponse 0021  
  __end_of_SD_Check40bitResponse 0557                   __pcstackCOMMON 0070                     __pidataBANK0 05ED  
                   __pidataBANK1 05D2                    __end_of_error 05B1                    __end_of_pulse 05EA  
                      ?_SPI_Init 0070                        ?_SPI_Read 0070                 ??_SD_SendCommand 0075  
                     ??_DAC_Init 0074              _SD_Read8bitResponse 0588                          ??_error 0074  
                        ??_pulse 0070                       __pbssBANK0 0039                       __pbssBANK1 00CD  
                     __pbssBANK2 0120               __size_of_readBytes 0045                       __pmaintext 0178  
           ?_SD_Read8bitResponse 0070                       _blockIndex 0039                      openFile@fmt 00B1  
                     __pintentry 0004                       ??_SPI_Init 0074                       ??_SPI_Read 0074  
   __end_of_SD_Read40bitResponse 04EC                          _SSP1ADD 0212                          _SSP1BUF 0211  
                        _SD_Init 0392    __size_of_SD_Check8bitResponse 0009                        ?_fourCCeq 0074  
                   readBytes@len 0074                        ?_openFile 0033            ??_SD_Read8bitResponse 0074  
          __end_of_SD_CloseBlock 05A1                          _address 00CD                          __ptext1 0423  
                        __ptext2 0247                          __ptext3 047A                          __ptext4 0598  
                        __ptext5 04EC                          __ptext6 05AA                          __ptext7 0512  
                        __ptext8 0574                          __ptext9 0557                __end_of_readBytes 04BF  
                   __size_of_isr 002D                          clrloop0 05CD             end_of_initialization 006F  
                     ??_fourCCeq 0020       SD_Check40bitResponse@Byte0 0023       SD_Check40bitResponse@Byte1 0022  
     SD_Check40bitResponse@Byte2 0021       SD_Check40bitResponse@Byte3 0020       SD_Check40bitResponse@Byte4 0074  
                        init_ram 05C6                          initloop 05C7       SD_Check40bitResponse@match 0075  
                     ??_openFile 0037                       _timer_Init 0423                        _PORTCbits 000E  
                      _SSPDATPPS 0E3B                        _SSPCLKPPS 0E3A                 __CFG_FOSC$INTOSC 0000  
                      _TRISBbits 008D                        _TRISCbits 008E                        _SPI_Write 05B1  
              __size_of_DAC_Init 0007                    ?_SD_OpenBlock 0027  SD_Read40bitResponse@readMessage 0075  
           _SD_Read40bitResponse 04BF                     _global_error 0079                    __pidataCOMMON 05EA  
              __size_of_SPI_Init 001D                __size_of_SPI_Read 0007              start_initialization 0033  
             SPI_Write@Data_8bit 0074                      __end_of_isr 0031                       ?_SPI_Write 0070  
                 ??_SD_OpenBlock 002B            ?_SD_Read40bitResponse 0070                    _samplePending 0043  
                     readBytes@i 0023            _SD_Check40bitResponse 0536                      __pdataBANK0 0044  
                    __pdataBANK1 00D9                      ?_timer_Init 0020                      __pbssCOMMON 0079  
                      ___latbits 0003                    __pcstackBANK0 0020                    __pcstackBANK1 00A0  
                       ?_SD_Init 0070                __size_of_fourCCeq 0026                __size_of_openFile 00AC  
   __end_of_SD_Check8bitResponse 05AA                     openFile@data 00A9                     openFile@riff 00A0  
                       _DAC1CON0 058E                         _DAC1REFH 0590                         _DAC1REFL 058F  
                      _isPlaying 0046                      _bitsPerSamp 003F                      _GLBL_Resp40 00D9  
                       _DAC_Init 05BF                      ??_SPI_Write 0074                        _readBytes 047A  
                 __size_of_error 0007                         _T2CLKCON 0497                   __size_of_pulse 0004  
                       _CRCTable 0073          __size_of_SD_SendCommand 009F              __size_of_timer_Init 0057  
         ??_SD_Read40bitResponse 0074      __end_of_SD_Read8bitResponse 0598                        clear_ram0 05CC  
                       _PIE1bits 0091           SD_SendCommand@CMD_6bit 0024                         _PIR1bits 0011  
         ?_SD_Check40bitResponse 0020                         _SSP1CON1 0215                         _SSP1STAT 0214  
           __end_of_SD_OpenBlock 0536                         _SPI_Init 0557                         _SPI_Read 05B8  
                     ?_readBytes 0074           __size_of_SD_CloseBlock 0009                 __size_of_SD_Init 0091  
                      fourCCeq@a 0024                        fourCCeq@b 0074                        fourCCeq@i 0025  
                  readBytes@dest 0022           SD_SendCommand@Checksum 0026                      _readMessage 0077  
                     _ANSELBbits 018D                         _channels 0041                        openFile@a 0033  
                       __ptext10 0392                         __ptext11 02F3                         __ptext20 05E6  
                       __ptext12 05B1                         __ptext13 0588                         __ptext14 04BF  
                       __ptext15 05B8                         __ptext16 05A1                         __ptext17 0536  
                       __ptext18 05BF                     _SSP1CON1bits 0215                         _filesize 00D1  
           _SD_Check8bitResponse 05A1                         _fourCCeq 04EC                       _GLBL_Resp8 0078  
                  __size_of_main 00CF                    __size_of_init 0014               SD_SendCommand@ARG0 0023  
             SD_SendCommand@ARG1 0022               SD_SendCommand@ARG2 0021               SD_SendCommand@ARG3 0020  
                       _sampRate 00D5                         _openFile 0247                         int$flags 007E  
                  _SD_CloseBlock 0598                     ??_timer_Init 0074                     _SSP1STATbits 0214  
                    _OSCSTATbits 009C                 openFile@response 00A8   SD_Read8bitResponse@readMessage 0075  
                     _INTCONbits 000B                         isr@level 0072                      ??_readBytes 0020  
          ?_SD_Check8bitResponse 0070                         intlevel1 0000                   _SD_SendCommand 02F3  
      SD_Check8bitResponse@match 0075               __end_of_timer_Init 047A                   timer_Init@rate 0020  
          __size_of_SD_OpenBlock 0024                   ?_SD_CloseBlock 0070                _buffer_read_index 003B  
                  __pstringtext1 0073                    __pstringtext2 05D7                    __pstringtext3 05DC  
                  __pstringtext4 05E1                    __pstringtext5 0000           __end_of_SD_SendCommand 0392  
                   _SD_OpenBlock 0512          ??_SD_Check40bitResponse 0074  
