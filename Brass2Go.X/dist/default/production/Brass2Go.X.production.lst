

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Apr 04 23:03:02 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1778
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.05
    46                           ; Generated 20/12/2018 GMT
    47                           ; 
    48                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F1778 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  0111                     	;# 
   135  0112                     	;# 
   136  0113                     	;# 
   137  0114                     	;# 
   138  0115                     	;# 
   139  0116                     	;# 
   140  0117                     	;# 
   141  0118                     	;# 
   142  0119                     	;# 
   143  011A                     	;# 
   144  011B                     	;# 
   145  011C                     	;# 
   146  011D                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  018E                     	;# 
   150  0191                     	;# 
   151  0191                     	;# 
   152  0192                     	;# 
   153  0193                     	;# 
   154  0193                     	;# 
   155  0194                     	;# 
   156  0195                     	;# 
   157  0196                     	;# 
   158  0197                     	;# 
   159  0199                     	;# 
   160  0199                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019A                     	;# 
   164  019A                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019C                     	;# 
   173  019D                     	;# 
   174  019D                     	;# 
   175  019D                     	;# 
   176  019E                     	;# 
   177  019E                     	;# 
   178  019E                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  020C                     	;# 
   185  020D                     	;# 
   186  020E                     	;# 
   187  0210                     	;# 
   188  0211                     	;# 
   189  0211                     	;# 
   190  0212                     	;# 
   191  0212                     	;# 
   192  0213                     	;# 
   193  0213                     	;# 
   194  0214                     	;# 
   195  0214                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0216                     	;# 
   201  0216                     	;# 
   202  0217                     	;# 
   203  0217                     	;# 
   204  021B                     	;# 
   205  021C                     	;# 
   206  021D                     	;# 
   207  021E                     	;# 
   208  021F                     	;# 
   209  028C                     	;# 
   210  028D                     	;# 
   211  028E                     	;# 
   212  0291                     	;# 
   213  0291                     	;# 
   214  0292                     	;# 
   215  0293                     	;# 
   216  0294                     	;# 
   217  0295                     	;# 
   218  0295                     	;# 
   219  0296                     	;# 
   220  0297                     	;# 
   221  0298                     	;# 
   222  0299                     	;# 
   223  0299                     	;# 
   224  029A                     	;# 
   225  029B                     	;# 
   226  029C                     	;# 
   227  029E                     	;# 
   228  029F                     	;# 
   229  030C                     	;# 
   230  030D                     	;# 
   231  030E                     	;# 
   232  0315                     	;# 
   233  0316                     	;# 
   234  0317                     	;# 
   235  0318                     	;# 
   236  0319                     	;# 
   237  031B                     	;# 
   238  031C                     	;# 
   239  031D                     	;# 
   240  031E                     	;# 
   241  031F                     	;# 
   242  038C                     	;# 
   243  038D                     	;# 
   244  038E                     	;# 
   245  0390                     	;# 
   246  0391                     	;# 
   247  0392                     	;# 
   248  0393                     	;# 
   249  0394                     	;# 
   250  0395                     	;# 
   251  0396                     	;# 
   252  0397                     	;# 
   253  0398                     	;# 
   254  0399                     	;# 
   255  039D                     	;# 
   256  039E                     	;# 
   257  039F                     	;# 
   258  040D                     	;# 
   259  040F                     	;# 
   260  040F                     	;# 
   261  0410                     	;# 
   262  0411                     	;# 
   263  0412                     	;# 
   264  0413                     	;# 
   265  0413                     	;# 
   266  0414                     	;# 
   267  0414                     	;# 
   268  0415                     	;# 
   269  0416                     	;# 
   270  0417                     	;# 
   271  0418                     	;# 
   272  041A                     	;# 
   273  041A                     	;# 
   274  041B                     	;# 
   275  041B                     	;# 
   276  041C                     	;# 
   277  041D                     	;# 
   278  041E                     	;# 
   279  041F                     	;# 
   280  048E                     	;# 
   281  048E                     	;# 
   282  048F                     	;# 
   283  0490                     	;# 
   284  0491                     	;# 
   285  0492                     	;# 
   286  0493                     	;# 
   287  0493                     	;# 
   288  0494                     	;# 
   289  0494                     	;# 
   290  0495                     	;# 
   291  0496                     	;# 
   292  0497                     	;# 
   293  0498                     	;# 
   294  049A                     	;# 
   295  049A                     	;# 
   296  049B                     	;# 
   297  049B                     	;# 
   298  049C                     	;# 
   299  049D                     	;# 
   300  049E                     	;# 
   301  049F                     	;# 
   302  050F                     	;# 
   303  0510                     	;# 
   304  0511                     	;# 
   305  0512                     	;# 
   306  0513                     	;# 
   307  0514                     	;# 
   308  0515                     	;# 
   309  0516                     	;# 
   310  0517                     	;# 
   311  0518                     	;# 
   312  0519                     	;# 
   313  051A                     	;# 
   314  058D                     	;# 
   315  058E                     	;# 
   316  058F                     	;# 
   317  058F                     	;# 
   318  058F                     	;# 
   319  0590                     	;# 
   320  0590                     	;# 
   321  0591                     	;# 
   322  0592                     	;# 
   323  0592                     	;# 
   324  0592                     	;# 
   325  0593                     	;# 
   326  0593                     	;# 
   327  0594                     	;# 
   328  0595                     	;# 
   329  0595                     	;# 
   330  0596                     	;# 
   331  0597                     	;# 
   332  0597                     	;# 
   333  0598                     	;# 
   334  0599                     	;# 
   335  0599                     	;# 
   336  0599                     	;# 
   337  059A                     	;# 
   338  059A                     	;# 
   339  059E                     	;# 
   340  059F                     	;# 
   341  059F                     	;# 
   342  0614                     	;# 
   343  0614                     	;# 
   344  0615                     	;# 
   345  0616                     	;# 
   346  0617                     	;# 
   347  0617                     	;# 
   348  0618                     	;# 
   349  0619                     	;# 
   350  061A                     	;# 
   351  061A                     	;# 
   352  061B                     	;# 
   353  061C                     	;# 
   354  068D                     	;# 
   355  068E                     	;# 
   356  068F                     	;# 
   357  0690                     	;# 
   358  0691                     	;# 
   359  0692                     	;# 
   360  0693                     	;# 
   361  0694                     	;# 
   362  0695                     	;# 
   363  0696                     	;# 
   364  0697                     	;# 
   365  0698                     	;# 
   366  0699                     	;# 
   367  069A                     	;# 
   368  069B                     	;# 
   369  069C                     	;# 
   370  069D                     	;# 
   371  069E                     	;# 
   372  069F                     	;# 
   373  070D                     	;# 
   374  070E                     	;# 
   375  070F                     	;# 
   376  0710                     	;# 
   377  0711                     	;# 
   378  0712                     	;# 
   379  0713                     	;# 
   380  0714                     	;# 
   381  0715                     	;# 
   382  0716                     	;# 
   383  0717                     	;# 
   384  0718                     	;# 
   385  0719                     	;# 
   386  071A                     	;# 
   387  071B                     	;# 
   388  071C                     	;# 
   389  071D                     	;# 
   390  071E                     	;# 
   391  071F                     	;# 
   392  078E                     	;# 
   393  078F                     	;# 
   394  0790                     	;# 
   395  0791                     	;# 
   396  0792                     	;# 
   397  0793                     	;# 
   398  0794                     	;# 
   399  0795                     	;# 
   400  0796                     	;# 
   401  0797                     	;# 
   402  0798                     	;# 
   403  0799                     	;# 
   404  079A                     	;# 
   405  079B                     	;# 
   406  079C                     	;# 
   407  079D                     	;# 
   408  079E                     	;# 
   409  079F                     	;# 
   410  080D                     	;# 
   411  080E                     	;# 
   412  080F                     	;# 
   413  0810                     	;# 
   414  0811                     	;# 
   415  0812                     	;# 
   416  0813                     	;# 
   417  0814                     	;# 
   418  0815                     	;# 
   419  0816                     	;# 
   420  0817                     	;# 
   421  0818                     	;# 
   422  0819                     	;# 
   423  081A                     	;# 
   424  081B                     	;# 
   425  081C                     	;# 
   426  081D                     	;# 
   427  081E                     	;# 
   428  081F                     	;# 
   429  090C                     	;# 
   430  090D                     	;# 
   431  090E                     	;# 
   432  090F                     	;# 
   433  0910                     	;# 
   434  0911                     	;# 
   435  0912                     	;# 
   436  0913                     	;# 
   437  0914                     	;# 
   438  0915                     	;# 
   439  0916                     	;# 
   440  0917                     	;# 
   441  0D8E                     	;# 
   442  0D8F                     	;# 
   443  0D90                     	;# 
   444  0D91                     	;# 
   445  0D91                     	;# 
   446  0D92                     	;# 
   447  0D93                     	;# 
   448  0D93                     	;# 
   449  0D94                     	;# 
   450  0D95                     	;# 
   451  0D95                     	;# 
   452  0D96                     	;# 
   453  0D97                     	;# 
   454  0D97                     	;# 
   455  0D98                     	;# 
   456  0D99                     	;# 
   457  0D99                     	;# 
   458  0D9A                     	;# 
   459  0D9B                     	;# 
   460  0D9C                     	;# 
   461  0D9C                     	;# 
   462  0D9D                     	;# 
   463  0D9D                     	;# 
   464  0D9E                     	;# 
   465  0D9F                     	;# 
   466  0DA0                     	;# 
   467  0DA1                     	;# 
   468  0DA1                     	;# 
   469  0DA2                     	;# 
   470  0DA3                     	;# 
   471  0DA3                     	;# 
   472  0DA4                     	;# 
   473  0DA5                     	;# 
   474  0DA5                     	;# 
   475  0DA6                     	;# 
   476  0DA7                     	;# 
   477  0DA7                     	;# 
   478  0DA8                     	;# 
   479  0DA9                     	;# 
   480  0DA9                     	;# 
   481  0DAA                     	;# 
   482  0DAB                     	;# 
   483  0DAC                     	;# 
   484  0DAC                     	;# 
   485  0DAD                     	;# 
   486  0DAD                     	;# 
   487  0DAE                     	;# 
   488  0DAF                     	;# 
   489  0DB0                     	;# 
   490  0DB1                     	;# 
   491  0DB1                     	;# 
   492  0DB2                     	;# 
   493  0DB3                     	;# 
   494  0DB3                     	;# 
   495  0DB4                     	;# 
   496  0DB5                     	;# 
   497  0DB5                     	;# 
   498  0DB6                     	;# 
   499  0DB7                     	;# 
   500  0DB7                     	;# 
   501  0DB8                     	;# 
   502  0DB9                     	;# 
   503  0DB9                     	;# 
   504  0DBA                     	;# 
   505  0DBB                     	;# 
   506  0DBC                     	;# 
   507  0DBC                     	;# 
   508  0DBD                     	;# 
   509  0DBD                     	;# 
   510  0DBE                     	;# 
   511  0DBF                     	;# 
   512  0DC0                     	;# 
   513  0E0C                     	;# 
   514  0E0D                     	;# 
   515  0E0E                     	;# 
   516  0E0F                     	;# 
   517  0E10                     	;# 
   518  0E11                     	;# 
   519  0E12                     	;# 
   520  0E13                     	;# 
   521  0E14                     	;# 
   522  0E15                     	;# 
   523  0E15                     	;# 
   524  0E15                     	;# 
   525  0E16                     	;# 
   526  0E16                     	;# 
   527  0E16                     	;# 
   528  0E17                     	;# 
   529  0E17                     	;# 
   530  0E17                     	;# 
   531  0E18                     	;# 
   532  0E18                     	;# 
   533  0E18                     	;# 
   534  0E19                     	;# 
   535  0E1A                     	;# 
   536  0E1B                     	;# 
   537  0E1D                     	;# 
   538  0E1E                     	;# 
   539  0E1F                     	;# 
   540  0E21                     	;# 
   541  0E22                     	;# 
   542  0E23                     	;# 
   543  0E24                     	;# 
   544  0E25                     	;# 
   545  0E26                     	;# 
   546  0E27                     	;# 
   547  0E28                     	;# 
   548  0E29                     	;# 
   549  0E2D                     	;# 
   550  0E2E                     	;# 
   551  0E2F                     	;# 
   552  0E30                     	;# 
   553  0E31                     	;# 
   554  0E32                     	;# 
   555  0E35                     	;# 
   556  0E36                     	;# 
   557  0E37                     	;# 
   558  0E38                     	;# 
   559  0E39                     	;# 
   560  0E3A                     	;# 
   561  0E3B                     	;# 
   562  0E3C                     	;# 
   563  0E3D                     	;# 
   564  0E3E                     	;# 
   565  0E90                     	;# 
   566  0E91                     	;# 
   567  0E92                     	;# 
   568  0E93                     	;# 
   569  0E94                     	;# 
   570  0E95                     	;# 
   571  0E96                     	;# 
   572  0E97                     	;# 
   573  0E98                     	;# 
   574  0E99                     	;# 
   575  0E9A                     	;# 
   576  0E9B                     	;# 
   577  0E9C                     	;# 
   578  0E9D                     	;# 
   579  0E9E                     	;# 
   580  0E9F                     	;# 
   581  0EA0                     	;# 
   582  0EA1                     	;# 
   583  0EA2                     	;# 
   584  0EA3                     	;# 
   585  0EA4                     	;# 
   586  0EA5                     	;# 
   587  0EA6                     	;# 
   588  0EA7                     	;# 
   589  0F0F                     	;# 
   590  0F10                     	;# 
   591  0F11                     	;# 
   592  0F12                     	;# 
   593  0F13                     	;# 
   594  0F14                     	;# 
   595  0F15                     	;# 
   596  0F16                     	;# 
   597  0F17                     	;# 
   598  0F18                     	;# 
   599  0F19                     	;# 
   600  0F1A                     	;# 
   601  0F1B                     	;# 
   602  0F1C                     	;# 
   603  0F1D                     	;# 
   604  0F1E                     	;# 
   605  0F1F                     	;# 
   606  0F20                     	;# 
   607  0F21                     	;# 
   608  0F22                     	;# 
   609  0F23                     	;# 
   610  0F24                     	;# 
   611  0F25                     	;# 
   612  0F26                     	;# 
   613  0F27                     	;# 
   614  0F28                     	;# 
   615  0F29                     	;# 
   616  0F2A                     	;# 
   617  0F2B                     	;# 
   618  0F2C                     	;# 
   619  0F2D                     	;# 
   620  0F2E                     	;# 
   621  0F2F                     	;# 
   622  0F30                     	;# 
   623  0F31                     	;# 
   624  0F32                     	;# 
   625  0F33                     	;# 
   626  0F34                     	;# 
   627  0F35                     	;# 
   628  0F36                     	;# 
   629  0F37                     	;# 
   630  0FE4                     	;# 
   631  0FE5                     	;# 
   632  0FE6                     	;# 
   633  0FE7                     	;# 
   634  0FE8                     	;# 
   635  0FE9                     	;# 
   636  0FEA                     	;# 
   637  0FEB                     	;# 
   638  0FED                     	;# 
   639  0FEE                     	;# 
   640  0FEF                     	;# 
   641  0000                     	;# 
   642  0001                     	;# 
   643  0002                     	;# 
   644  0003                     	;# 
   645  0004                     	;# 
   646  0005                     	;# 
   647  0006                     	;# 
   648  0007                     	;# 
   649  0008                     	;# 
   650  0009                     	;# 
   651  000A                     	;# 
   652  000B                     	;# 
   653  000C                     	;# 
   654  000D                     	;# 
   655  000E                     	;# 
   656  0010                     	;# 
   657  0011                     	;# 
   658  0012                     	;# 
   659  0013                     	;# 
   660  0014                     	;# 
   661  0015                     	;# 
   662  0016                     	;# 
   663  0017                     	;# 
   664  0018                     	;# 
   665  0018                     	;# 
   666  0019                     	;# 
   667  001A                     	;# 
   668  001B                     	;# 
   669  001C                     	;# 
   670  001C                     	;# 
   671  001D                     	;# 
   672  001E                     	;# 
   673  001F                     	;# 
   674  008C                     	;# 
   675  008D                     	;# 
   676  008E                     	;# 
   677  0090                     	;# 
   678  0091                     	;# 
   679  0092                     	;# 
   680  0093                     	;# 
   681  0094                     	;# 
   682  0095                     	;# 
   683  0096                     	;# 
   684  0097                     	;# 
   685  0098                     	;# 
   686  0099                     	;# 
   687  009A                     	;# 
   688  009B                     	;# 
   689  009C                     	;# 
   690  009D                     	;# 
   691  009E                     	;# 
   692  009F                     	;# 
   693  010C                     	;# 
   694  010D                     	;# 
   695  010E                     	;# 
   696  0111                     	;# 
   697  0112                     	;# 
   698  0113                     	;# 
   699  0114                     	;# 
   700  0115                     	;# 
   701  0116                     	;# 
   702  0117                     	;# 
   703  0118                     	;# 
   704  0119                     	;# 
   705  011A                     	;# 
   706  011B                     	;# 
   707  011C                     	;# 
   708  011D                     	;# 
   709  018C                     	;# 
   710  018D                     	;# 
   711  018E                     	;# 
   712  0191                     	;# 
   713  0191                     	;# 
   714  0192                     	;# 
   715  0193                     	;# 
   716  0193                     	;# 
   717  0194                     	;# 
   718  0195                     	;# 
   719  0196                     	;# 
   720  0197                     	;# 
   721  0199                     	;# 
   722  0199                     	;# 
   723  0199                     	;# 
   724  019A                     	;# 
   725  019A                     	;# 
   726  019A                     	;# 
   727  019B                     	;# 
   728  019B                     	;# 
   729  019B                     	;# 
   730  019B                     	;# 
   731  019B                     	;# 
   732  019C                     	;# 
   733  019C                     	;# 
   734  019C                     	;# 
   735  019D                     	;# 
   736  019D                     	;# 
   737  019D                     	;# 
   738  019E                     	;# 
   739  019E                     	;# 
   740  019E                     	;# 
   741  019F                     	;# 
   742  019F                     	;# 
   743  019F                     	;# 
   744  019F                     	;# 
   745  019F                     	;# 
   746  020C                     	;# 
   747  020D                     	;# 
   748  020E                     	;# 
   749  0210                     	;# 
   750  0211                     	;# 
   751  0211                     	;# 
   752  0212                     	;# 
   753  0212                     	;# 
   754  0213                     	;# 
   755  0213                     	;# 
   756  0214                     	;# 
   757  0214                     	;# 
   758  0215                     	;# 
   759  0215                     	;# 
   760  0215                     	;# 
   761  0215                     	;# 
   762  0216                     	;# 
   763  0216                     	;# 
   764  0217                     	;# 
   765  0217                     	;# 
   766  021B                     	;# 
   767  021C                     	;# 
   768  021D                     	;# 
   769  021E                     	;# 
   770  021F                     	;# 
   771  028C                     	;# 
   772  028D                     	;# 
   773  028E                     	;# 
   774  0291                     	;# 
   775  0291                     	;# 
   776  0292                     	;# 
   777  0293                     	;# 
   778  0294                     	;# 
   779  0295                     	;# 
   780  0295                     	;# 
   781  0296                     	;# 
   782  0297                     	;# 
   783  0298                     	;# 
   784  0299                     	;# 
   785  0299                     	;# 
   786  029A                     	;# 
   787  029B                     	;# 
   788  029C                     	;# 
   789  029E                     	;# 
   790  029F                     	;# 
   791  030C                     	;# 
   792  030D                     	;# 
   793  030E                     	;# 
   794  0315                     	;# 
   795  0316                     	;# 
   796  0317                     	;# 
   797  0318                     	;# 
   798  0319                     	;# 
   799  031B                     	;# 
   800  031C                     	;# 
   801  031D                     	;# 
   802  031E                     	;# 
   803  031F                     	;# 
   804  038C                     	;# 
   805  038D                     	;# 
   806  038E                     	;# 
   807  0390                     	;# 
   808  0391                     	;# 
   809  0392                     	;# 
   810  0393                     	;# 
   811  0394                     	;# 
   812  0395                     	;# 
   813  0396                     	;# 
   814  0397                     	;# 
   815  0398                     	;# 
   816  0399                     	;# 
   817  039D                     	;# 
   818  039E                     	;# 
   819  039F                     	;# 
   820  040D                     	;# 
   821  040F                     	;# 
   822  040F                     	;# 
   823  0410                     	;# 
   824  0411                     	;# 
   825  0412                     	;# 
   826  0413                     	;# 
   827  0413                     	;# 
   828  0414                     	;# 
   829  0414                     	;# 
   830  0415                     	;# 
   831  0416                     	;# 
   832  0417                     	;# 
   833  0418                     	;# 
   834  041A                     	;# 
   835  041A                     	;# 
   836  041B                     	;# 
   837  041B                     	;# 
   838  041C                     	;# 
   839  041D                     	;# 
   840  041E                     	;# 
   841  041F                     	;# 
   842  048E                     	;# 
   843  048E                     	;# 
   844  048F                     	;# 
   845  0490                     	;# 
   846  0491                     	;# 
   847  0492                     	;# 
   848  0493                     	;# 
   849  0493                     	;# 
   850  0494                     	;# 
   851  0494                     	;# 
   852  0495                     	;# 
   853  0496                     	;# 
   854  0497                     	;# 
   855  0498                     	;# 
   856  049A                     	;# 
   857  049A                     	;# 
   858  049B                     	;# 
   859  049B                     	;# 
   860  049C                     	;# 
   861  049D                     	;# 
   862  049E                     	;# 
   863  049F                     	;# 
   864  050F                     	;# 
   865  0510                     	;# 
   866  0511                     	;# 
   867  0512                     	;# 
   868  0513                     	;# 
   869  0514                     	;# 
   870  0515                     	;# 
   871  0516                     	;# 
   872  0517                     	;# 
   873  0518                     	;# 
   874  0519                     	;# 
   875  051A                     	;# 
   876  058D                     	;# 
   877  058E                     	;# 
   878  058F                     	;# 
   879  058F                     	;# 
   880  058F                     	;# 
   881  0590                     	;# 
   882  0590                     	;# 
   883  0591                     	;# 
   884  0592                     	;# 
   885  0592                     	;# 
   886  0592                     	;# 
   887  0593                     	;# 
   888  0593                     	;# 
   889  0594                     	;# 
   890  0595                     	;# 
   891  0595                     	;# 
   892  0596                     	;# 
   893  0597                     	;# 
   894  0597                     	;# 
   895  0598                     	;# 
   896  0599                     	;# 
   897  0599                     	;# 
   898  0599                     	;# 
   899  059A                     	;# 
   900  059A                     	;# 
   901  059E                     	;# 
   902  059F                     	;# 
   903  059F                     	;# 
   904  0614                     	;# 
   905  0614                     	;# 
   906  0615                     	;# 
   907  0616                     	;# 
   908  0617                     	;# 
   909  0617                     	;# 
   910  0618                     	;# 
   911  0619                     	;# 
   912  061A                     	;# 
   913  061A                     	;# 
   914  061B                     	;# 
   915  061C                     	;# 
   916  068D                     	;# 
   917  068E                     	;# 
   918  068F                     	;# 
   919  0690                     	;# 
   920  0691                     	;# 
   921  0692                     	;# 
   922  0693                     	;# 
   923  0694                     	;# 
   924  0695                     	;# 
   925  0696                     	;# 
   926  0697                     	;# 
   927  0698                     	;# 
   928  0699                     	;# 
   929  069A                     	;# 
   930  069B                     	;# 
   931  069C                     	;# 
   932  069D                     	;# 
   933  069E                     	;# 
   934  069F                     	;# 
   935  070D                     	;# 
   936  070E                     	;# 
   937  070F                     	;# 
   938  0710                     	;# 
   939  0711                     	;# 
   940  0712                     	;# 
   941  0713                     	;# 
   942  0714                     	;# 
   943  0715                     	;# 
   944  0716                     	;# 
   945  0717                     	;# 
   946  0718                     	;# 
   947  0719                     	;# 
   948  071A                     	;# 
   949  071B                     	;# 
   950  071C                     	;# 
   951  071D                     	;# 
   952  071E                     	;# 
   953  071F                     	;# 
   954  078E                     	;# 
   955  078F                     	;# 
   956  0790                     	;# 
   957  0791                     	;# 
   958  0792                     	;# 
   959  0793                     	;# 
   960  0794                     	;# 
   961  0795                     	;# 
   962  0796                     	;# 
   963  0797                     	;# 
   964  0798                     	;# 
   965  0799                     	;# 
   966  079A                     	;# 
   967  079B                     	;# 
   968  079C                     	;# 
   969  079D                     	;# 
   970  079E                     	;# 
   971  079F                     	;# 
   972  080D                     	;# 
   973  080E                     	;# 
   974  080F                     	;# 
   975  0810                     	;# 
   976  0811                     	;# 
   977  0812                     	;# 
   978  0813                     	;# 
   979  0814                     	;# 
   980  0815                     	;# 
   981  0816                     	;# 
   982  0817                     	;# 
   983  0818                     	;# 
   984  0819                     	;# 
   985  081A                     	;# 
   986  081B                     	;# 
   987  081C                     	;# 
   988  081D                     	;# 
   989  081E                     	;# 
   990  081F                     	;# 
   991  090C                     	;# 
   992  090D                     	;# 
   993  090E                     	;# 
   994  090F                     	;# 
   995  0910                     	;# 
   996  0911                     	;# 
   997  0912                     	;# 
   998  0913                     	;# 
   999  0914                     	;# 
  1000  0915                     	;# 
  1001  0916                     	;# 
  1002  0917                     	;# 
  1003  0D8E                     	;# 
  1004  0D8F                     	;# 
  1005  0D90                     	;# 
  1006  0D91                     	;# 
  1007  0D91                     	;# 
  1008  0D92                     	;# 
  1009  0D93                     	;# 
  1010  0D93                     	;# 
  1011  0D94                     	;# 
  1012  0D95                     	;# 
  1013  0D95                     	;# 
  1014  0D96                     	;# 
  1015  0D97                     	;# 
  1016  0D97                     	;# 
  1017  0D98                     	;# 
  1018  0D99                     	;# 
  1019  0D99                     	;# 
  1020  0D9A                     	;# 
  1021  0D9B                     	;# 
  1022  0D9C                     	;# 
  1023  0D9C                     	;# 
  1024  0D9D                     	;# 
  1025  0D9D                     	;# 
  1026  0D9E                     	;# 
  1027  0D9F                     	;# 
  1028  0DA0                     	;# 
  1029  0DA1                     	;# 
  1030  0DA1                     	;# 
  1031  0DA2                     	;# 
  1032  0DA3                     	;# 
  1033  0DA3                     	;# 
  1034  0DA4                     	;# 
  1035  0DA5                     	;# 
  1036  0DA5                     	;# 
  1037  0DA6                     	;# 
  1038  0DA7                     	;# 
  1039  0DA7                     	;# 
  1040  0DA8                     	;# 
  1041  0DA9                     	;# 
  1042  0DA9                     	;# 
  1043  0DAA                     	;# 
  1044  0DAB                     	;# 
  1045  0DAC                     	;# 
  1046  0DAC                     	;# 
  1047  0DAD                     	;# 
  1048  0DAD                     	;# 
  1049  0DAE                     	;# 
  1050  0DAF                     	;# 
  1051  0DB0                     	;# 
  1052  0DB1                     	;# 
  1053  0DB1                     	;# 
  1054  0DB2                     	;# 
  1055  0DB3                     	;# 
  1056  0DB3                     	;# 
  1057  0DB4                     	;# 
  1058  0DB5                     	;# 
  1059  0DB5                     	;# 
  1060  0DB6                     	;# 
  1061  0DB7                     	;# 
  1062  0DB7                     	;# 
  1063  0DB8                     	;# 
  1064  0DB9                     	;# 
  1065  0DB9                     	;# 
  1066  0DBA                     	;# 
  1067  0DBB                     	;# 
  1068  0DBC                     	;# 
  1069  0DBC                     	;# 
  1070  0DBD                     	;# 
  1071  0DBD                     	;# 
  1072  0DBE                     	;# 
  1073  0DBF                     	;# 
  1074  0DC0                     	;# 
  1075  0E0C                     	;# 
  1076  0E0D                     	;# 
  1077  0E0E                     	;# 
  1078  0E0F                     	;# 
  1079  0E10                     	;# 
  1080  0E11                     	;# 
  1081  0E12                     	;# 
  1082  0E13                     	;# 
  1083  0E14                     	;# 
  1084  0E15                     	;# 
  1085  0E15                     	;# 
  1086  0E15                     	;# 
  1087  0E16                     	;# 
  1088  0E16                     	;# 
  1089  0E16                     	;# 
  1090  0E17                     	;# 
  1091  0E17                     	;# 
  1092  0E17                     	;# 
  1093  0E18                     	;# 
  1094  0E18                     	;# 
  1095  0E18                     	;# 
  1096  0E19                     	;# 
  1097  0E1A                     	;# 
  1098  0E1B                     	;# 
  1099  0E1D                     	;# 
  1100  0E1E                     	;# 
  1101  0E1F                     	;# 
  1102  0E21                     	;# 
  1103  0E22                     	;# 
  1104  0E23                     	;# 
  1105  0E24                     	;# 
  1106  0E25                     	;# 
  1107  0E26                     	;# 
  1108  0E27                     	;# 
  1109  0E28                     	;# 
  1110  0E29                     	;# 
  1111  0E2D                     	;# 
  1112  0E2E                     	;# 
  1113  0E2F                     	;# 
  1114  0E30                     	;# 
  1115  0E31                     	;# 
  1116  0E32                     	;# 
  1117  0E35                     	;# 
  1118  0E36                     	;# 
  1119  0E37                     	;# 
  1120  0E38                     	;# 
  1121  0E39                     	;# 
  1122  0E3A                     	;# 
  1123  0E3B                     	;# 
  1124  0E3C                     	;# 
  1125  0E3D                     	;# 
  1126  0E3E                     	;# 
  1127  0E90                     	;# 
  1128  0E91                     	;# 
  1129  0E92                     	;# 
  1130  0E93                     	;# 
  1131  0E94                     	;# 
  1132  0E95                     	;# 
  1133  0E96                     	;# 
  1134  0E97                     	;# 
  1135  0E98                     	;# 
  1136  0E99                     	;# 
  1137  0E9A                     	;# 
  1138  0E9B                     	;# 
  1139  0E9C                     	;# 
  1140  0E9D                     	;# 
  1141  0E9E                     	;# 
  1142  0E9F                     	;# 
  1143  0EA0                     	;# 
  1144  0EA1                     	;# 
  1145  0EA2                     	;# 
  1146  0EA3                     	;# 
  1147  0EA4                     	;# 
  1148  0EA5                     	;# 
  1149  0EA6                     	;# 
  1150  0EA7                     	;# 
  1151  0F0F                     	;# 
  1152  0F10                     	;# 
  1153  0F11                     	;# 
  1154  0F12                     	;# 
  1155  0F13                     	;# 
  1156  0F14                     	;# 
  1157  0F15                     	;# 
  1158  0F16                     	;# 
  1159  0F17                     	;# 
  1160  0F18                     	;# 
  1161  0F19                     	;# 
  1162  0F1A                     	;# 
  1163  0F1B                     	;# 
  1164  0F1C                     	;# 
  1165  0F1D                     	;# 
  1166  0F1E                     	;# 
  1167  0F1F                     	;# 
  1168  0F20                     	;# 
  1169  0F21                     	;# 
  1170  0F22                     	;# 
  1171  0F23                     	;# 
  1172  0F24                     	;# 
  1173  0F25                     	;# 
  1174  0F26                     	;# 
  1175  0F27                     	;# 
  1176  0F28                     	;# 
  1177  0F29                     	;# 
  1178  0F2A                     	;# 
  1179  0F2B                     	;# 
  1180  0F2C                     	;# 
  1181  0F2D                     	;# 
  1182  0F2E                     	;# 
  1183  0F2F                     	;# 
  1184  0F30                     	;# 
  1185  0F31                     	;# 
  1186  0F32                     	;# 
  1187  0F33                     	;# 
  1188  0F34                     	;# 
  1189  0F35                     	;# 
  1190  0F36                     	;# 
  1191  0F37                     	;# 
  1192  0FE4                     	;# 
  1193  0FE5                     	;# 
  1194  0FE6                     	;# 
  1195  0FE7                     	;# 
  1196  0FE8                     	;# 
  1197  0FE9                     	;# 
  1198  0FEA                     	;# 
  1199  0FEB                     	;# 
  1200  0FED                     	;# 
  1201  0FEE                     	;# 
  1202  0FEF                     	;# 
  1203  0000                     	;# 
  1204  0001                     	;# 
  1205  0002                     	;# 
  1206  0003                     	;# 
  1207  0004                     	;# 
  1208  0005                     	;# 
  1209  0006                     	;# 
  1210  0007                     	;# 
  1211  0008                     	;# 
  1212  0009                     	;# 
  1213  000A                     	;# 
  1214  000B                     	;# 
  1215  000C                     	;# 
  1216  000D                     	;# 
  1217  000E                     	;# 
  1218  0010                     	;# 
  1219  0011                     	;# 
  1220  0012                     	;# 
  1221  0013                     	;# 
  1222  0014                     	;# 
  1223  0015                     	;# 
  1224  0016                     	;# 
  1225  0017                     	;# 
  1226  0018                     	;# 
  1227  0018                     	;# 
  1228  0019                     	;# 
  1229  001A                     	;# 
  1230  001B                     	;# 
  1231  001C                     	;# 
  1232  001C                     	;# 
  1233  001D                     	;# 
  1234  001E                     	;# 
  1235  001F                     	;# 
  1236  008C                     	;# 
  1237  008D                     	;# 
  1238  008E                     	;# 
  1239  0090                     	;# 
  1240  0091                     	;# 
  1241  0092                     	;# 
  1242  0093                     	;# 
  1243  0094                     	;# 
  1244  0095                     	;# 
  1245  0096                     	;# 
  1246  0097                     	;# 
  1247  0098                     	;# 
  1248  0099                     	;# 
  1249  009A                     	;# 
  1250  009B                     	;# 
  1251  009C                     	;# 
  1252  009D                     	;# 
  1253  009E                     	;# 
  1254  009F                     	;# 
  1255  010C                     	;# 
  1256  010D                     	;# 
  1257  010E                     	;# 
  1258  0111                     	;# 
  1259  0112                     	;# 
  1260  0113                     	;# 
  1261  0114                     	;# 
  1262  0115                     	;# 
  1263  0116                     	;# 
  1264  0117                     	;# 
  1265  0118                     	;# 
  1266  0119                     	;# 
  1267  011A                     	;# 
  1268  011B                     	;# 
  1269  011C                     	;# 
  1270  011D                     	;# 
  1271  018C                     	;# 
  1272  018D                     	;# 
  1273  018E                     	;# 
  1274  0191                     	;# 
  1275  0191                     	;# 
  1276  0192                     	;# 
  1277  0193                     	;# 
  1278  0193                     	;# 
  1279  0194                     	;# 
  1280  0195                     	;# 
  1281  0196                     	;# 
  1282  0197                     	;# 
  1283  0199                     	;# 
  1284  0199                     	;# 
  1285  0199                     	;# 
  1286  019A                     	;# 
  1287  019A                     	;# 
  1288  019A                     	;# 
  1289  019B                     	;# 
  1290  019B                     	;# 
  1291  019B                     	;# 
  1292  019B                     	;# 
  1293  019B                     	;# 
  1294  019C                     	;# 
  1295  019C                     	;# 
  1296  019C                     	;# 
  1297  019D                     	;# 
  1298  019D                     	;# 
  1299  019D                     	;# 
  1300  019E                     	;# 
  1301  019E                     	;# 
  1302  019E                     	;# 
  1303  019F                     	;# 
  1304  019F                     	;# 
  1305  019F                     	;# 
  1306  019F                     	;# 
  1307  019F                     	;# 
  1308  020C                     	;# 
  1309  020D                     	;# 
  1310  020E                     	;# 
  1311  0210                     	;# 
  1312  0211                     	;# 
  1313  0211                     	;# 
  1314  0212                     	;# 
  1315  0212                     	;# 
  1316  0213                     	;# 
  1317  0213                     	;# 
  1318  0214                     	;# 
  1319  0214                     	;# 
  1320  0215                     	;# 
  1321  0215                     	;# 
  1322  0215                     	;# 
  1323  0215                     	;# 
  1324  0216                     	;# 
  1325  0216                     	;# 
  1326  0217                     	;# 
  1327  0217                     	;# 
  1328  021B                     	;# 
  1329  021C                     	;# 
  1330  021D                     	;# 
  1331  021E                     	;# 
  1332  021F                     	;# 
  1333  028C                     	;# 
  1334  028D                     	;# 
  1335  028E                     	;# 
  1336  0291                     	;# 
  1337  0291                     	;# 
  1338  0292                     	;# 
  1339  0293                     	;# 
  1340  0294                     	;# 
  1341  0295                     	;# 
  1342  0295                     	;# 
  1343  0296                     	;# 
  1344  0297                     	;# 
  1345  0298                     	;# 
  1346  0299                     	;# 
  1347  0299                     	;# 
  1348  029A                     	;# 
  1349  029B                     	;# 
  1350  029C                     	;# 
  1351  029E                     	;# 
  1352  029F                     	;# 
  1353  030C                     	;# 
  1354  030D                     	;# 
  1355  030E                     	;# 
  1356  0315                     	;# 
  1357  0316                     	;# 
  1358  0317                     	;# 
  1359  0318                     	;# 
  1360  0319                     	;# 
  1361  031B                     	;# 
  1362  031C                     	;# 
  1363  031D                     	;# 
  1364  031E                     	;# 
  1365  031F                     	;# 
  1366  038C                     	;# 
  1367  038D                     	;# 
  1368  038E                     	;# 
  1369  0390                     	;# 
  1370  0391                     	;# 
  1371  0392                     	;# 
  1372  0393                     	;# 
  1373  0394                     	;# 
  1374  0395                     	;# 
  1375  0396                     	;# 
  1376  0397                     	;# 
  1377  0398                     	;# 
  1378  0399                     	;# 
  1379  039D                     	;# 
  1380  039E                     	;# 
  1381  039F                     	;# 
  1382  040D                     	;# 
  1383  040F                     	;# 
  1384  040F                     	;# 
  1385  0410                     	;# 
  1386  0411                     	;# 
  1387  0412                     	;# 
  1388  0413                     	;# 
  1389  0413                     	;# 
  1390  0414                     	;# 
  1391  0414                     	;# 
  1392  0415                     	;# 
  1393  0416                     	;# 
  1394  0417                     	;# 
  1395  0418                     	;# 
  1396  041A                     	;# 
  1397  041A                     	;# 
  1398  041B                     	;# 
  1399  041B                     	;# 
  1400  041C                     	;# 
  1401  041D                     	;# 
  1402  041E                     	;# 
  1403  041F                     	;# 
  1404  048E                     	;# 
  1405  048E                     	;# 
  1406  048F                     	;# 
  1407  0490                     	;# 
  1408  0491                     	;# 
  1409  0492                     	;# 
  1410  0493                     	;# 
  1411  0493                     	;# 
  1412  0494                     	;# 
  1413  0494                     	;# 
  1414  0495                     	;# 
  1415  0496                     	;# 
  1416  0497                     	;# 
  1417  0498                     	;# 
  1418  049A                     	;# 
  1419  049A                     	;# 
  1420  049B                     	;# 
  1421  049B                     	;# 
  1422  049C                     	;# 
  1423  049D                     	;# 
  1424  049E                     	;# 
  1425  049F                     	;# 
  1426  050F                     	;# 
  1427  0510                     	;# 
  1428  0511                     	;# 
  1429  0512                     	;# 
  1430  0513                     	;# 
  1431  0514                     	;# 
  1432  0515                     	;# 
  1433  0516                     	;# 
  1434  0517                     	;# 
  1435  0518                     	;# 
  1436  0519                     	;# 
  1437  051A                     	;# 
  1438  058D                     	;# 
  1439  058E                     	;# 
  1440  058F                     	;# 
  1441  058F                     	;# 
  1442  058F                     	;# 
  1443  0590                     	;# 
  1444  0590                     	;# 
  1445  0591                     	;# 
  1446  0592                     	;# 
  1447  0592                     	;# 
  1448  0592                     	;# 
  1449  0593                     	;# 
  1450  0593                     	;# 
  1451  0594                     	;# 
  1452  0595                     	;# 
  1453  0595                     	;# 
  1454  0596                     	;# 
  1455  0597                     	;# 
  1456  0597                     	;# 
  1457  0598                     	;# 
  1458  0599                     	;# 
  1459  0599                     	;# 
  1460  0599                     	;# 
  1461  059A                     	;# 
  1462  059A                     	;# 
  1463  059E                     	;# 
  1464  059F                     	;# 
  1465  059F                     	;# 
  1466  0614                     	;# 
  1467  0614                     	;# 
  1468  0615                     	;# 
  1469  0616                     	;# 
  1470  0617                     	;# 
  1471  0617                     	;# 
  1472  0618                     	;# 
  1473  0619                     	;# 
  1474  061A                     	;# 
  1475  061A                     	;# 
  1476  061B                     	;# 
  1477  061C                     	;# 
  1478  068D                     	;# 
  1479  068E                     	;# 
  1480  068F                     	;# 
  1481  0690                     	;# 
  1482  0691                     	;# 
  1483  0692                     	;# 
  1484  0693                     	;# 
  1485  0694                     	;# 
  1486  0695                     	;# 
  1487  0696                     	;# 
  1488  0697                     	;# 
  1489  0698                     	;# 
  1490  0699                     	;# 
  1491  069A                     	;# 
  1492  069B                     	;# 
  1493  069C                     	;# 
  1494  069D                     	;# 
  1495  069E                     	;# 
  1496  069F                     	;# 
  1497  070D                     	;# 
  1498  070E                     	;# 
  1499  070F                     	;# 
  1500  0710                     	;# 
  1501  0711                     	;# 
  1502  0712                     	;# 
  1503  0713                     	;# 
  1504  0714                     	;# 
  1505  0715                     	;# 
  1506  0716                     	;# 
  1507  0717                     	;# 
  1508  0718                     	;# 
  1509  0719                     	;# 
  1510  071A                     	;# 
  1511  071B                     	;# 
  1512  071C                     	;# 
  1513  071D                     	;# 
  1514  071E                     	;# 
  1515  071F                     	;# 
  1516  078E                     	;# 
  1517  078F                     	;# 
  1518  0790                     	;# 
  1519  0791                     	;# 
  1520  0792                     	;# 
  1521  0793                     	;# 
  1522  0794                     	;# 
  1523  0795                     	;# 
  1524  0796                     	;# 
  1525  0797                     	;# 
  1526  0798                     	;# 
  1527  0799                     	;# 
  1528  079A                     	;# 
  1529  079B                     	;# 
  1530  079C                     	;# 
  1531  079D                     	;# 
  1532  079E                     	;# 
  1533  079F                     	;# 
  1534  080D                     	;# 
  1535  080E                     	;# 
  1536  080F                     	;# 
  1537  0810                     	;# 
  1538  0811                     	;# 
  1539  0812                     	;# 
  1540  0813                     	;# 
  1541  0814                     	;# 
  1542  0815                     	;# 
  1543  0816                     	;# 
  1544  0817                     	;# 
  1545  0818                     	;# 
  1546  0819                     	;# 
  1547  081A                     	;# 
  1548  081B                     	;# 
  1549  081C                     	;# 
  1550  081D                     	;# 
  1551  081E                     	;# 
  1552  081F                     	;# 
  1553  090C                     	;# 
  1554  090D                     	;# 
  1555  090E                     	;# 
  1556  090F                     	;# 
  1557  0910                     	;# 
  1558  0911                     	;# 
  1559  0912                     	;# 
  1560  0913                     	;# 
  1561  0914                     	;# 
  1562  0915                     	;# 
  1563  0916                     	;# 
  1564  0917                     	;# 
  1565  0D8E                     	;# 
  1566  0D8F                     	;# 
  1567  0D90                     	;# 
  1568  0D91                     	;# 
  1569  0D91                     	;# 
  1570  0D92                     	;# 
  1571  0D93                     	;# 
  1572  0D93                     	;# 
  1573  0D94                     	;# 
  1574  0D95                     	;# 
  1575  0D95                     	;# 
  1576  0D96                     	;# 
  1577  0D97                     	;# 
  1578  0D97                     	;# 
  1579  0D98                     	;# 
  1580  0D99                     	;# 
  1581  0D99                     	;# 
  1582  0D9A                     	;# 
  1583  0D9B                     	;# 
  1584  0D9C                     	;# 
  1585  0D9C                     	;# 
  1586  0D9D                     	;# 
  1587  0D9D                     	;# 
  1588  0D9E                     	;# 
  1589  0D9F                     	;# 
  1590  0DA0                     	;# 
  1591  0DA1                     	;# 
  1592  0DA1                     	;# 
  1593  0DA2                     	;# 
  1594  0DA3                     	;# 
  1595  0DA3                     	;# 
  1596  0DA4                     	;# 
  1597  0DA5                     	;# 
  1598  0DA5                     	;# 
  1599  0DA6                     	;# 
  1600  0DA7                     	;# 
  1601  0DA7                     	;# 
  1602  0DA8                     	;# 
  1603  0DA9                     	;# 
  1604  0DA9                     	;# 
  1605  0DAA                     	;# 
  1606  0DAB                     	;# 
  1607  0DAC                     	;# 
  1608  0DAC                     	;# 
  1609  0DAD                     	;# 
  1610  0DAD                     	;# 
  1611  0DAE                     	;# 
  1612  0DAF                     	;# 
  1613  0DB0                     	;# 
  1614  0DB1                     	;# 
  1615  0DB1                     	;# 
  1616  0DB2                     	;# 
  1617  0DB3                     	;# 
  1618  0DB3                     	;# 
  1619  0DB4                     	;# 
  1620  0DB5                     	;# 
  1621  0DB5                     	;# 
  1622  0DB6                     	;# 
  1623  0DB7                     	;# 
  1624  0DB7                     	;# 
  1625  0DB8                     	;# 
  1626  0DB9                     	;# 
  1627  0DB9                     	;# 
  1628  0DBA                     	;# 
  1629  0DBB                     	;# 
  1630  0DBC                     	;# 
  1631  0DBC                     	;# 
  1632  0DBD                     	;# 
  1633  0DBD                     	;# 
  1634  0DBE                     	;# 
  1635  0DBF                     	;# 
  1636  0DC0                     	;# 
  1637  0E0C                     	;# 
  1638  0E0D                     	;# 
  1639  0E0E                     	;# 
  1640  0E0F                     	;# 
  1641  0E10                     	;# 
  1642  0E11                     	;# 
  1643  0E12                     	;# 
  1644  0E13                     	;# 
  1645  0E14                     	;# 
  1646  0E15                     	;# 
  1647  0E15                     	;# 
  1648  0E15                     	;# 
  1649  0E16                     	;# 
  1650  0E16                     	;# 
  1651  0E16                     	;# 
  1652  0E17                     	;# 
  1653  0E17                     	;# 
  1654  0E17                     	;# 
  1655  0E18                     	;# 
  1656  0E18                     	;# 
  1657  0E18                     	;# 
  1658  0E19                     	;# 
  1659  0E1A                     	;# 
  1660  0E1B                     	;# 
  1661  0E1D                     	;# 
  1662  0E1E                     	;# 
  1663  0E1F                     	;# 
  1664  0E21                     	;# 
  1665  0E22                     	;# 
  1666  0E23                     	;# 
  1667  0E24                     	;# 
  1668  0E25                     	;# 
  1669  0E26                     	;# 
  1670  0E27                     	;# 
  1671  0E28                     	;# 
  1672  0E29                     	;# 
  1673  0E2D                     	;# 
  1674  0E2E                     	;# 
  1675  0E2F                     	;# 
  1676  0E30                     	;# 
  1677  0E31                     	;# 
  1678  0E32                     	;# 
  1679  0E35                     	;# 
  1680  0E36                     	;# 
  1681  0E37                     	;# 
  1682  0E38                     	;# 
  1683  0E39                     	;# 
  1684  0E3A                     	;# 
  1685  0E3B                     	;# 
  1686  0E3C                     	;# 
  1687  0E3D                     	;# 
  1688  0E3E                     	;# 
  1689  0E90                     	;# 
  1690  0E91                     	;# 
  1691  0E92                     	;# 
  1692  0E93                     	;# 
  1693  0E94                     	;# 
  1694  0E95                     	;# 
  1695  0E96                     	;# 
  1696  0E97                     	;# 
  1697  0E98                     	;# 
  1698  0E99                     	;# 
  1699  0E9A                     	;# 
  1700  0E9B                     	;# 
  1701  0E9C                     	;# 
  1702  0E9D                     	;# 
  1703  0E9E                     	;# 
  1704  0E9F                     	;# 
  1705  0EA0                     	;# 
  1706  0EA1                     	;# 
  1707  0EA2                     	;# 
  1708  0EA3                     	;# 
  1709  0EA4                     	;# 
  1710  0EA5                     	;# 
  1711  0EA6                     	;# 
  1712  0EA7                     	;# 
  1713  0F0F                     	;# 
  1714  0F10                     	;# 
  1715  0F11                     	;# 
  1716  0F12                     	;# 
  1717  0F13                     	;# 
  1718  0F14                     	;# 
  1719  0F15                     	;# 
  1720  0F16                     	;# 
  1721  0F17                     	;# 
  1722  0F18                     	;# 
  1723  0F19                     	;# 
  1724  0F1A                     	;# 
  1725  0F1B                     	;# 
  1726  0F1C                     	;# 
  1727  0F1D                     	;# 
  1728  0F1E                     	;# 
  1729  0F1F                     	;# 
  1730  0F20                     	;# 
  1731  0F21                     	;# 
  1732  0F22                     	;# 
  1733  0F23                     	;# 
  1734  0F24                     	;# 
  1735  0F25                     	;# 
  1736  0F26                     	;# 
  1737  0F27                     	;# 
  1738  0F28                     	;# 
  1739  0F29                     	;# 
  1740  0F2A                     	;# 
  1741  0F2B                     	;# 
  1742  0F2C                     	;# 
  1743  0F2D                     	;# 
  1744  0F2E                     	;# 
  1745  0F2F                     	;# 
  1746  0F30                     	;# 
  1747  0F31                     	;# 
  1748  0F32                     	;# 
  1749  0F33                     	;# 
  1750  0F34                     	;# 
  1751  0F35                     	;# 
  1752  0F36                     	;# 
  1753  0F37                     	;# 
  1754  0FE4                     	;# 
  1755  0FE5                     	;# 
  1756  0FE6                     	;# 
  1757  0FE7                     	;# 
  1758  0FE8                     	;# 
  1759  0FE9                     	;# 
  1760  0FEA                     	;# 
  1761  0FEB                     	;# 
  1762  0FED                     	;# 
  1763  0FEE                     	;# 
  1764  0FEF                     	;# 
  1765  0000                     	;# 
  1766  0001                     	;# 
  1767  0002                     	;# 
  1768  0003                     	;# 
  1769  0004                     	;# 
  1770  0005                     	;# 
  1771  0006                     	;# 
  1772  0007                     	;# 
  1773  0008                     	;# 
  1774  0009                     	;# 
  1775  000A                     	;# 
  1776  000B                     	;# 
  1777  000C                     	;# 
  1778  000D                     	;# 
  1779  000E                     	;# 
  1780  0010                     	;# 
  1781  0011                     	;# 
  1782  0012                     	;# 
  1783  0013                     	;# 
  1784  0014                     	;# 
  1785  0015                     	;# 
  1786  0016                     	;# 
  1787  0017                     	;# 
  1788  0018                     	;# 
  1789  0018                     	;# 
  1790  0019                     	;# 
  1791  001A                     	;# 
  1792  001B                     	;# 
  1793  001C                     	;# 
  1794  001C                     	;# 
  1795  001D                     	;# 
  1796  001E                     	;# 
  1797  001F                     	;# 
  1798  008C                     	;# 
  1799  008D                     	;# 
  1800  008E                     	;# 
  1801  0090                     	;# 
  1802  0091                     	;# 
  1803  0092                     	;# 
  1804  0093                     	;# 
  1805  0094                     	;# 
  1806  0095                     	;# 
  1807  0096                     	;# 
  1808  0097                     	;# 
  1809  0098                     	;# 
  1810  0099                     	;# 
  1811  009A                     	;# 
  1812  009B                     	;# 
  1813  009C                     	;# 
  1814  009D                     	;# 
  1815  009E                     	;# 
  1816  009F                     	;# 
  1817  010C                     	;# 
  1818  010D                     	;# 
  1819  010E                     	;# 
  1820  0111                     	;# 
  1821  0112                     	;# 
  1822  0113                     	;# 
  1823  0114                     	;# 
  1824  0115                     	;# 
  1825  0116                     	;# 
  1826  0117                     	;# 
  1827  0118                     	;# 
  1828  0119                     	;# 
  1829  011A                     	;# 
  1830  011B                     	;# 
  1831  011C                     	;# 
  1832  011D                     	;# 
  1833  018C                     	;# 
  1834  018D                     	;# 
  1835  018E                     	;# 
  1836  0191                     	;# 
  1837  0191                     	;# 
  1838  0192                     	;# 
  1839  0193                     	;# 
  1840  0193                     	;# 
  1841  0194                     	;# 
  1842  0195                     	;# 
  1843  0196                     	;# 
  1844  0197                     	;# 
  1845  0199                     	;# 
  1846  0199                     	;# 
  1847  0199                     	;# 
  1848  019A                     	;# 
  1849  019A                     	;# 
  1850  019A                     	;# 
  1851  019B                     	;# 
  1852  019B                     	;# 
  1853  019B                     	;# 
  1854  019B                     	;# 
  1855  019B                     	;# 
  1856  019C                     	;# 
  1857  019C                     	;# 
  1858  019C                     	;# 
  1859  019D                     	;# 
  1860  019D                     	;# 
  1861  019D                     	;# 
  1862  019E                     	;# 
  1863  019E                     	;# 
  1864  019E                     	;# 
  1865  019F                     	;# 
  1866  019F                     	;# 
  1867  019F                     	;# 
  1868  019F                     	;# 
  1869  019F                     	;# 
  1870  020C                     	;# 
  1871  020D                     	;# 
  1872  020E                     	;# 
  1873  0210                     	;# 
  1874  0211                     	;# 
  1875  0211                     	;# 
  1876  0212                     	;# 
  1877  0212                     	;# 
  1878  0213                     	;# 
  1879  0213                     	;# 
  1880  0214                     	;# 
  1881  0214                     	;# 
  1882  0215                     	;# 
  1883  0215                     	;# 
  1884  0215                     	;# 
  1885  0215                     	;# 
  1886  0216                     	;# 
  1887  0216                     	;# 
  1888  0217                     	;# 
  1889  0217                     	;# 
  1890  021B                     	;# 
  1891  021C                     	;# 
  1892  021D                     	;# 
  1893  021E                     	;# 
  1894  021F                     	;# 
  1895  028C                     	;# 
  1896  028D                     	;# 
  1897  028E                     	;# 
  1898  0291                     	;# 
  1899  0291                     	;# 
  1900  0292                     	;# 
  1901  0293                     	;# 
  1902  0294                     	;# 
  1903  0295                     	;# 
  1904  0295                     	;# 
  1905  0296                     	;# 
  1906  0297                     	;# 
  1907  0298                     	;# 
  1908  0299                     	;# 
  1909  0299                     	;# 
  1910  029A                     	;# 
  1911  029B                     	;# 
  1912  029C                     	;# 
  1913  029E                     	;# 
  1914  029F                     	;# 
  1915  030C                     	;# 
  1916  030D                     	;# 
  1917  030E                     	;# 
  1918  0315                     	;# 
  1919  0316                     	;# 
  1920  0317                     	;# 
  1921  0318                     	;# 
  1922  0319                     	;# 
  1923  031B                     	;# 
  1924  031C                     	;# 
  1925  031D                     	;# 
  1926  031E                     	;# 
  1927  031F                     	;# 
  1928  038C                     	;# 
  1929  038D                     	;# 
  1930  038E                     	;# 
  1931  0390                     	;# 
  1932  0391                     	;# 
  1933  0392                     	;# 
  1934  0393                     	;# 
  1935  0394                     	;# 
  1936  0395                     	;# 
  1937  0396                     	;# 
  1938  0397                     	;# 
  1939  0398                     	;# 
  1940  0399                     	;# 
  1941  039D                     	;# 
  1942  039E                     	;# 
  1943  039F                     	;# 
  1944  040D                     	;# 
  1945  040F                     	;# 
  1946  040F                     	;# 
  1947  0410                     	;# 
  1948  0411                     	;# 
  1949  0412                     	;# 
  1950  0413                     	;# 
  1951  0413                     	;# 
  1952  0414                     	;# 
  1953  0414                     	;# 
  1954  0415                     	;# 
  1955  0416                     	;# 
  1956  0417                     	;# 
  1957  0418                     	;# 
  1958  041A                     	;# 
  1959  041A                     	;# 
  1960  041B                     	;# 
  1961  041B                     	;# 
  1962  041C                     	;# 
  1963  041D                     	;# 
  1964  041E                     	;# 
  1965  041F                     	;# 
  1966  048E                     	;# 
  1967  048E                     	;# 
  1968  048F                     	;# 
  1969  0490                     	;# 
  1970  0491                     	;# 
  1971  0492                     	;# 
  1972  0493                     	;# 
  1973  0493                     	;# 
  1974  0494                     	;# 
  1975  0494                     	;# 
  1976  0495                     	;# 
  1977  0496                     	;# 
  1978  0497                     	;# 
  1979  0498                     	;# 
  1980  049A                     	;# 
  1981  049A                     	;# 
  1982  049B                     	;# 
  1983  049B                     	;# 
  1984  049C                     	;# 
  1985  049D                     	;# 
  1986  049E                     	;# 
  1987  049F                     	;# 
  1988  050F                     	;# 
  1989  0510                     	;# 
  1990  0511                     	;# 
  1991  0512                     	;# 
  1992  0513                     	;# 
  1993  0514                     	;# 
  1994  0515                     	;# 
  1995  0516                     	;# 
  1996  0517                     	;# 
  1997  0518                     	;# 
  1998  0519                     	;# 
  1999  051A                     	;# 
  2000  058D                     	;# 
  2001  058E                     	;# 
  2002  058F                     	;# 
  2003  058F                     	;# 
  2004  058F                     	;# 
  2005  0590                     	;# 
  2006  0590                     	;# 
  2007  0591                     	;# 
  2008  0592                     	;# 
  2009  0592                     	;# 
  2010  0592                     	;# 
  2011  0593                     	;# 
  2012  0593                     	;# 
  2013  0594                     	;# 
  2014  0595                     	;# 
  2015  0595                     	;# 
  2016  0596                     	;# 
  2017  0597                     	;# 
  2018  0597                     	;# 
  2019  0598                     	;# 
  2020  0599                     	;# 
  2021  0599                     	;# 
  2022  0599                     	;# 
  2023  059A                     	;# 
  2024  059A                     	;# 
  2025  059E                     	;# 
  2026  059F                     	;# 
  2027  059F                     	;# 
  2028  0614                     	;# 
  2029  0614                     	;# 
  2030  0615                     	;# 
  2031  0616                     	;# 
  2032  0617                     	;# 
  2033  0617                     	;# 
  2034  0618                     	;# 
  2035  0619                     	;# 
  2036  061A                     	;# 
  2037  061A                     	;# 
  2038  061B                     	;# 
  2039  061C                     	;# 
  2040  068D                     	;# 
  2041  068E                     	;# 
  2042  068F                     	;# 
  2043  0690                     	;# 
  2044  0691                     	;# 
  2045  0692                     	;# 
  2046  0693                     	;# 
  2047  0694                     	;# 
  2048  0695                     	;# 
  2049  0696                     	;# 
  2050  0697                     	;# 
  2051  0698                     	;# 
  2052  0699                     	;# 
  2053  069A                     	;# 
  2054  069B                     	;# 
  2055  069C                     	;# 
  2056  069D                     	;# 
  2057  069E                     	;# 
  2058  069F                     	;# 
  2059  070D                     	;# 
  2060  070E                     	;# 
  2061  070F                     	;# 
  2062  0710                     	;# 
  2063  0711                     	;# 
  2064  0712                     	;# 
  2065  0713                     	;# 
  2066  0714                     	;# 
  2067  0715                     	;# 
  2068  0716                     	;# 
  2069  0717                     	;# 
  2070  0718                     	;# 
  2071  0719                     	;# 
  2072  071A                     	;# 
  2073  071B                     	;# 
  2074  071C                     	;# 
  2075  071D                     	;# 
  2076  071E                     	;# 
  2077  071F                     	;# 
  2078  078E                     	;# 
  2079  078F                     	;# 
  2080  0790                     	;# 
  2081  0791                     	;# 
  2082  0792                     	;# 
  2083  0793                     	;# 
  2084  0794                     	;# 
  2085  0795                     	;# 
  2086  0796                     	;# 
  2087  0797                     	;# 
  2088  0798                     	;# 
  2089  0799                     	;# 
  2090  079A                     	;# 
  2091  079B                     	;# 
  2092  079C                     	;# 
  2093  079D                     	;# 
  2094  079E                     	;# 
  2095  079F                     	;# 
  2096  080D                     	;# 
  2097  080E                     	;# 
  2098  080F                     	;# 
  2099  0810                     	;# 
  2100  0811                     	;# 
  2101  0812                     	;# 
  2102  0813                     	;# 
  2103  0814                     	;# 
  2104  0815                     	;# 
  2105  0816                     	;# 
  2106  0817                     	;# 
  2107  0818                     	;# 
  2108  0819                     	;# 
  2109  081A                     	;# 
  2110  081B                     	;# 
  2111  081C                     	;# 
  2112  081D                     	;# 
  2113  081E                     	;# 
  2114  081F                     	;# 
  2115  090C                     	;# 
  2116  090D                     	;# 
  2117  090E                     	;# 
  2118  090F                     	;# 
  2119  0910                     	;# 
  2120  0911                     	;# 
  2121  0912                     	;# 
  2122  0913                     	;# 
  2123  0914                     	;# 
  2124  0915                     	;# 
  2125  0916                     	;# 
  2126  0917                     	;# 
  2127  0D8E                     	;# 
  2128  0D8F                     	;# 
  2129  0D90                     	;# 
  2130  0D91                     	;# 
  2131  0D91                     	;# 
  2132  0D92                     	;# 
  2133  0D93                     	;# 
  2134  0D93                     	;# 
  2135  0D94                     	;# 
  2136  0D95                     	;# 
  2137  0D95                     	;# 
  2138  0D96                     	;# 
  2139  0D97                     	;# 
  2140  0D97                     	;# 
  2141  0D98                     	;# 
  2142  0D99                     	;# 
  2143  0D99                     	;# 
  2144  0D9A                     	;# 
  2145  0D9B                     	;# 
  2146  0D9C                     	;# 
  2147  0D9C                     	;# 
  2148  0D9D                     	;# 
  2149  0D9D                     	;# 
  2150  0D9E                     	;# 
  2151  0D9F                     	;# 
  2152  0DA0                     	;# 
  2153  0DA1                     	;# 
  2154  0DA1                     	;# 
  2155  0DA2                     	;# 
  2156  0DA3                     	;# 
  2157  0DA3                     	;# 
  2158  0DA4                     	;# 
  2159  0DA5                     	;# 
  2160  0DA5                     	;# 
  2161  0DA6                     	;# 
  2162  0DA7                     	;# 
  2163  0DA7                     	;# 
  2164  0DA8                     	;# 
  2165  0DA9                     	;# 
  2166  0DA9                     	;# 
  2167  0DAA                     	;# 
  2168  0DAB                     	;# 
  2169  0DAC                     	;# 
  2170  0DAC                     	;# 
  2171  0DAD                     	;# 
  2172  0DAD                     	;# 
  2173  0DAE                     	;# 
  2174  0DAF                     	;# 
  2175  0DB0                     	;# 
  2176  0DB1                     	;# 
  2177  0DB1                     	;# 
  2178  0DB2                     	;# 
  2179  0DB3                     	;# 
  2180  0DB3                     	;# 
  2181  0DB4                     	;# 
  2182  0DB5                     	;# 
  2183  0DB5                     	;# 
  2184  0DB6                     	;# 
  2185  0DB7                     	;# 
  2186  0DB7                     	;# 
  2187  0DB8                     	;# 
  2188  0DB9                     	;# 
  2189  0DB9                     	;# 
  2190  0DBA                     	;# 
  2191  0DBB                     	;# 
  2192  0DBC                     	;# 
  2193  0DBC                     	;# 
  2194  0DBD                     	;# 
  2195  0DBD                     	;# 
  2196  0DBE                     	;# 
  2197  0DBF                     	;# 
  2198  0DC0                     	;# 
  2199  0E0C                     	;# 
  2200  0E0D                     	;# 
  2201  0E0E                     	;# 
  2202  0E0F                     	;# 
  2203  0E10                     	;# 
  2204  0E11                     	;# 
  2205  0E12                     	;# 
  2206  0E13                     	;# 
  2207  0E14                     	;# 
  2208  0E15                     	;# 
  2209  0E15                     	;# 
  2210  0E15                     	;# 
  2211  0E16                     	;# 
  2212  0E16                     	;# 
  2213  0E16                     	;# 
  2214  0E17                     	;# 
  2215  0E17                     	;# 
  2216  0E17                     	;# 
  2217  0E18                     	;# 
  2218  0E18                     	;# 
  2219  0E18                     	;# 
  2220  0E19                     	;# 
  2221  0E1A                     	;# 
  2222  0E1B                     	;# 
  2223  0E1D                     	;# 
  2224  0E1E                     	;# 
  2225  0E1F                     	;# 
  2226  0E21                     	;# 
  2227  0E22                     	;# 
  2228  0E23                     	;# 
  2229  0E24                     	;# 
  2230  0E25                     	;# 
  2231  0E26                     	;# 
  2232  0E27                     	;# 
  2233  0E28                     	;# 
  2234  0E29                     	;# 
  2235  0E2D                     	;# 
  2236  0E2E                     	;# 
  2237  0E2F                     	;# 
  2238  0E30                     	;# 
  2239  0E31                     	;# 
  2240  0E32                     	;# 
  2241  0E35                     	;# 
  2242  0E36                     	;# 
  2243  0E37                     	;# 
  2244  0E38                     	;# 
  2245  0E39                     	;# 
  2246  0E3A                     	;# 
  2247  0E3B                     	;# 
  2248  0E3C                     	;# 
  2249  0E3D                     	;# 
  2250  0E3E                     	;# 
  2251  0E90                     	;# 
  2252  0E91                     	;# 
  2253  0E92                     	;# 
  2254  0E93                     	;# 
  2255  0E94                     	;# 
  2256  0E95                     	;# 
  2257  0E96                     	;# 
  2258  0E97                     	;# 
  2259  0E98                     	;# 
  2260  0E99                     	;# 
  2261  0E9A                     	;# 
  2262  0E9B                     	;# 
  2263  0E9C                     	;# 
  2264  0E9D                     	;# 
  2265  0E9E                     	;# 
  2266  0E9F                     	;# 
  2267  0EA0                     	;# 
  2268  0EA1                     	;# 
  2269  0EA2                     	;# 
  2270  0EA3                     	;# 
  2271  0EA4                     	;# 
  2272  0EA5                     	;# 
  2273  0EA6                     	;# 
  2274  0EA7                     	;# 
  2275  0F0F                     	;# 
  2276  0F10                     	;# 
  2277  0F11                     	;# 
  2278  0F12                     	;# 
  2279  0F13                     	;# 
  2280  0F14                     	;# 
  2281  0F15                     	;# 
  2282  0F16                     	;# 
  2283  0F17                     	;# 
  2284  0F18                     	;# 
  2285  0F19                     	;# 
  2286  0F1A                     	;# 
  2287  0F1B                     	;# 
  2288  0F1C                     	;# 
  2289  0F1D                     	;# 
  2290  0F1E                     	;# 
  2291  0F1F                     	;# 
  2292  0F20                     	;# 
  2293  0F21                     	;# 
  2294  0F22                     	;# 
  2295  0F23                     	;# 
  2296  0F24                     	;# 
  2297  0F25                     	;# 
  2298  0F26                     	;# 
  2299  0F27                     	;# 
  2300  0F28                     	;# 
  2301  0F29                     	;# 
  2302  0F2A                     	;# 
  2303  0F2B                     	;# 
  2304  0F2C                     	;# 
  2305  0F2D                     	;# 
  2306  0F2E                     	;# 
  2307  0F2F                     	;# 
  2308  0F30                     	;# 
  2309  0F31                     	;# 
  2310  0F32                     	;# 
  2311  0F33                     	;# 
  2312  0F34                     	;# 
  2313  0F35                     	;# 
  2314  0F36                     	;# 
  2315  0F37                     	;# 
  2316  0FE4                     	;# 
  2317  0FE5                     	;# 
  2318  0FE6                     	;# 
  2319  0FE7                     	;# 
  2320  0FE8                     	;# 
  2321  0FE9                     	;# 
  2322  0FEA                     	;# 
  2323  0FEB                     	;# 
  2324  0FED                     	;# 
  2325  0FEE                     	;# 
  2326  0FEF                     	;# 
  2327  0000                     	;# 
  2328  0001                     	;# 
  2329  0002                     	;# 
  2330  0003                     	;# 
  2331  0004                     	;# 
  2332  0005                     	;# 
  2333  0006                     	;# 
  2334  0007                     	;# 
  2335  0008                     	;# 
  2336  0009                     	;# 
  2337  000A                     	;# 
  2338  000B                     	;# 
  2339  000C                     	;# 
  2340  000D                     	;# 
  2341  000E                     	;# 
  2342  0010                     	;# 
  2343  0011                     	;# 
  2344  0012                     	;# 
  2345  0013                     	;# 
  2346  0014                     	;# 
  2347  0015                     	;# 
  2348  0016                     	;# 
  2349  0017                     	;# 
  2350  0018                     	;# 
  2351  0018                     	;# 
  2352  0019                     	;# 
  2353  001A                     	;# 
  2354  001B                     	;# 
  2355  001C                     	;# 
  2356  001C                     	;# 
  2357  001D                     	;# 
  2358  001E                     	;# 
  2359  001F                     	;# 
  2360  008C                     	;# 
  2361  008D                     	;# 
  2362  008E                     	;# 
  2363  0090                     	;# 
  2364  0091                     	;# 
  2365  0092                     	;# 
  2366  0093                     	;# 
  2367  0094                     	;# 
  2368  0095                     	;# 
  2369  0096                     	;# 
  2370  0097                     	;# 
  2371  0098                     	;# 
  2372  0099                     	;# 
  2373  009A                     	;# 
  2374  009B                     	;# 
  2375  009C                     	;# 
  2376  009D                     	;# 
  2377  009E                     	;# 
  2378  009F                     	;# 
  2379  010C                     	;# 
  2380  010D                     	;# 
  2381  010E                     	;# 
  2382  0111                     	;# 
  2383  0112                     	;# 
  2384  0113                     	;# 
  2385  0114                     	;# 
  2386  0115                     	;# 
  2387  0116                     	;# 
  2388  0117                     	;# 
  2389  0118                     	;# 
  2390  0119                     	;# 
  2391  011A                     	;# 
  2392  011B                     	;# 
  2393  011C                     	;# 
  2394  011D                     	;# 
  2395  018C                     	;# 
  2396  018D                     	;# 
  2397  018E                     	;# 
  2398  0191                     	;# 
  2399  0191                     	;# 
  2400  0192                     	;# 
  2401  0193                     	;# 
  2402  0193                     	;# 
  2403  0194                     	;# 
  2404  0195                     	;# 
  2405  0196                     	;# 
  2406  0197                     	;# 
  2407  0199                     	;# 
  2408  0199                     	;# 
  2409  0199                     	;# 
  2410  019A                     	;# 
  2411  019A                     	;# 
  2412  019A                     	;# 
  2413  019B                     	;# 
  2414  019B                     	;# 
  2415  019B                     	;# 
  2416  019B                     	;# 
  2417  019B                     	;# 
  2418  019C                     	;# 
  2419  019C                     	;# 
  2420  019C                     	;# 
  2421  019D                     	;# 
  2422  019D                     	;# 
  2423  019D                     	;# 
  2424  019E                     	;# 
  2425  019E                     	;# 
  2426  019E                     	;# 
  2427  019F                     	;# 
  2428  019F                     	;# 
  2429  019F                     	;# 
  2430  019F                     	;# 
  2431  019F                     	;# 
  2432  020C                     	;# 
  2433  020D                     	;# 
  2434  020E                     	;# 
  2435  0210                     	;# 
  2436  0211                     	;# 
  2437  0211                     	;# 
  2438  0212                     	;# 
  2439  0212                     	;# 
  2440  0213                     	;# 
  2441  0213                     	;# 
  2442  0214                     	;# 
  2443  0214                     	;# 
  2444  0215                     	;# 
  2445  0215                     	;# 
  2446  0215                     	;# 
  2447  0215                     	;# 
  2448  0216                     	;# 
  2449  0216                     	;# 
  2450  0217                     	;# 
  2451  0217                     	;# 
  2452  021B                     	;# 
  2453  021C                     	;# 
  2454  021D                     	;# 
  2455  021E                     	;# 
  2456  021F                     	;# 
  2457  028C                     	;# 
  2458  028D                     	;# 
  2459  028E                     	;# 
  2460  0291                     	;# 
  2461  0291                     	;# 
  2462  0292                     	;# 
  2463  0293                     	;# 
  2464  0294                     	;# 
  2465  0295                     	;# 
  2466  0295                     	;# 
  2467  0296                     	;# 
  2468  0297                     	;# 
  2469  0298                     	;# 
  2470  0299                     	;# 
  2471  0299                     	;# 
  2472  029A                     	;# 
  2473  029B                     	;# 
  2474  029C                     	;# 
  2475  029E                     	;# 
  2476  029F                     	;# 
  2477  030C                     	;# 
  2478  030D                     	;# 
  2479  030E                     	;# 
  2480  0315                     	;# 
  2481  0316                     	;# 
  2482  0317                     	;# 
  2483  0318                     	;# 
  2484  0319                     	;# 
  2485  031B                     	;# 
  2486  031C                     	;# 
  2487  031D                     	;# 
  2488  031E                     	;# 
  2489  031F                     	;# 
  2490  038C                     	;# 
  2491  038D                     	;# 
  2492  038E                     	;# 
  2493  0390                     	;# 
  2494  0391                     	;# 
  2495  0392                     	;# 
  2496  0393                     	;# 
  2497  0394                     	;# 
  2498  0395                     	;# 
  2499  0396                     	;# 
  2500  0397                     	;# 
  2501  0398                     	;# 
  2502  0399                     	;# 
  2503  039D                     	;# 
  2504  039E                     	;# 
  2505  039F                     	;# 
  2506  040D                     	;# 
  2507  040F                     	;# 
  2508  040F                     	;# 
  2509  0410                     	;# 
  2510  0411                     	;# 
  2511  0412                     	;# 
  2512  0413                     	;# 
  2513  0413                     	;# 
  2514  0414                     	;# 
  2515  0414                     	;# 
  2516  0415                     	;# 
  2517  0416                     	;# 
  2518  0417                     	;# 
  2519  0418                     	;# 
  2520  041A                     	;# 
  2521  041A                     	;# 
  2522  041B                     	;# 
  2523  041B                     	;# 
  2524  041C                     	;# 
  2525  041D                     	;# 
  2526  041E                     	;# 
  2527  041F                     	;# 
  2528  048E                     	;# 
  2529  048E                     	;# 
  2530  048F                     	;# 
  2531  0490                     	;# 
  2532  0491                     	;# 
  2533  0492                     	;# 
  2534  0493                     	;# 
  2535  0493                     	;# 
  2536  0494                     	;# 
  2537  0494                     	;# 
  2538  0495                     	;# 
  2539  0496                     	;# 
  2540  0497                     	;# 
  2541  0498                     	;# 
  2542  049A                     	;# 
  2543  049A                     	;# 
  2544  049B                     	;# 
  2545  049B                     	;# 
  2546  049C                     	;# 
  2547  049D                     	;# 
  2548  049E                     	;# 
  2549  049F                     	;# 
  2550  050F                     	;# 
  2551  0510                     	;# 
  2552  0511                     	;# 
  2553  0512                     	;# 
  2554  0513                     	;# 
  2555  0514                     	;# 
  2556  0515                     	;# 
  2557  0516                     	;# 
  2558  0517                     	;# 
  2559  0518                     	;# 
  2560  0519                     	;# 
  2561  051A                     	;# 
  2562  058D                     	;# 
  2563  058E                     	;# 
  2564  058F                     	;# 
  2565  058F                     	;# 
  2566  058F                     	;# 
  2567  0590                     	;# 
  2568  0590                     	;# 
  2569  0591                     	;# 
  2570  0592                     	;# 
  2571  0592                     	;# 
  2572  0592                     	;# 
  2573  0593                     	;# 
  2574  0593                     	;# 
  2575  0594                     	;# 
  2576  0595                     	;# 
  2577  0595                     	;# 
  2578  0596                     	;# 
  2579  0597                     	;# 
  2580  0597                     	;# 
  2581  0598                     	;# 
  2582  0599                     	;# 
  2583  0599                     	;# 
  2584  0599                     	;# 
  2585  059A                     	;# 
  2586  059A                     	;# 
  2587  059E                     	;# 
  2588  059F                     	;# 
  2589  059F                     	;# 
  2590  0614                     	;# 
  2591  0614                     	;# 
  2592  0615                     	;# 
  2593  0616                     	;# 
  2594  0617                     	;# 
  2595  0617                     	;# 
  2596  0618                     	;# 
  2597  0619                     	;# 
  2598  061A                     	;# 
  2599  061A                     	;# 
  2600  061B                     	;# 
  2601  061C                     	;# 
  2602  068D                     	;# 
  2603  068E                     	;# 
  2604  068F                     	;# 
  2605  0690                     	;# 
  2606  0691                     	;# 
  2607  0692                     	;# 
  2608  0693                     	;# 
  2609  0694                     	;# 
  2610  0695                     	;# 
  2611  0696                     	;# 
  2612  0697                     	;# 
  2613  0698                     	;# 
  2614  0699                     	;# 
  2615  069A                     	;# 
  2616  069B                     	;# 
  2617  069C                     	;# 
  2618  069D                     	;# 
  2619  069E                     	;# 
  2620  069F                     	;# 
  2621  070D                     	;# 
  2622  070E                     	;# 
  2623  070F                     	;# 
  2624  0710                     	;# 
  2625  0711                     	;# 
  2626  0712                     	;# 
  2627  0713                     	;# 
  2628  0714                     	;# 
  2629  0715                     	;# 
  2630  0716                     	;# 
  2631  0717                     	;# 
  2632  0718                     	;# 
  2633  0719                     	;# 
  2634  071A                     	;# 
  2635  071B                     	;# 
  2636  071C                     	;# 
  2637  071D                     	;# 
  2638  071E                     	;# 
  2639  071F                     	;# 
  2640  078E                     	;# 
  2641  078F                     	;# 
  2642  0790                     	;# 
  2643  0791                     	;# 
  2644  0792                     	;# 
  2645  0793                     	;# 
  2646  0794                     	;# 
  2647  0795                     	;# 
  2648  0796                     	;# 
  2649  0797                     	;# 
  2650  0798                     	;# 
  2651  0799                     	;# 
  2652  079A                     	;# 
  2653  079B                     	;# 
  2654  079C                     	;# 
  2655  079D                     	;# 
  2656  079E                     	;# 
  2657  079F                     	;# 
  2658  080D                     	;# 
  2659  080E                     	;# 
  2660  080F                     	;# 
  2661  0810                     	;# 
  2662  0811                     	;# 
  2663  0812                     	;# 
  2664  0813                     	;# 
  2665  0814                     	;# 
  2666  0815                     	;# 
  2667  0816                     	;# 
  2668  0817                     	;# 
  2669  0818                     	;# 
  2670  0819                     	;# 
  2671  081A                     	;# 
  2672  081B                     	;# 
  2673  081C                     	;# 
  2674  081D                     	;# 
  2675  081E                     	;# 
  2676  081F                     	;# 
  2677  090C                     	;# 
  2678  090D                     	;# 
  2679  090E                     	;# 
  2680  090F                     	;# 
  2681  0910                     	;# 
  2682  0911                     	;# 
  2683  0912                     	;# 
  2684  0913                     	;# 
  2685  0914                     	;# 
  2686  0915                     	;# 
  2687  0916                     	;# 
  2688  0917                     	;# 
  2689  0D8E                     	;# 
  2690  0D8F                     	;# 
  2691  0D90                     	;# 
  2692  0D91                     	;# 
  2693  0D91                     	;# 
  2694  0D92                     	;# 
  2695  0D93                     	;# 
  2696  0D93                     	;# 
  2697  0D94                     	;# 
  2698  0D95                     	;# 
  2699  0D95                     	;# 
  2700  0D96                     	;# 
  2701  0D97                     	;# 
  2702  0D97                     	;# 
  2703  0D98                     	;# 
  2704  0D99                     	;# 
  2705  0D99                     	;# 
  2706  0D9A                     	;# 
  2707  0D9B                     	;# 
  2708  0D9C                     	;# 
  2709  0D9C                     	;# 
  2710  0D9D                     	;# 
  2711  0D9D                     	;# 
  2712  0D9E                     	;# 
  2713  0D9F                     	;# 
  2714  0DA0                     	;# 
  2715  0DA1                     	;# 
  2716  0DA1                     	;# 
  2717  0DA2                     	;# 
  2718  0DA3                     	;# 
  2719  0DA3                     	;# 
  2720  0DA4                     	;# 
  2721  0DA5                     	;# 
  2722  0DA5                     	;# 
  2723  0DA6                     	;# 
  2724  0DA7                     	;# 
  2725  0DA7                     	;# 
  2726  0DA8                     	;# 
  2727  0DA9                     	;# 
  2728  0DA9                     	;# 
  2729  0DAA                     	;# 
  2730  0DAB                     	;# 
  2731  0DAC                     	;# 
  2732  0DAC                     	;# 
  2733  0DAD                     	;# 
  2734  0DAD                     	;# 
  2735  0DAE                     	;# 
  2736  0DAF                     	;# 
  2737  0DB0                     	;# 
  2738  0DB1                     	;# 
  2739  0DB1                     	;# 
  2740  0DB2                     	;# 
  2741  0DB3                     	;# 
  2742  0DB3                     	;# 
  2743  0DB4                     	;# 
  2744  0DB5                     	;# 
  2745  0DB5                     	;# 
  2746  0DB6                     	;# 
  2747  0DB7                     	;# 
  2748  0DB7                     	;# 
  2749  0DB8                     	;# 
  2750  0DB9                     	;# 
  2751  0DB9                     	;# 
  2752  0DBA                     	;# 
  2753  0DBB                     	;# 
  2754  0DBC                     	;# 
  2755  0DBC                     	;# 
  2756  0DBD                     	;# 
  2757  0DBD                     	;# 
  2758  0DBE                     	;# 
  2759  0DBF                     	;# 
  2760  0DC0                     	;# 
  2761  0E0C                     	;# 
  2762  0E0D                     	;# 
  2763  0E0E                     	;# 
  2764  0E0F                     	;# 
  2765  0E10                     	;# 
  2766  0E11                     	;# 
  2767  0E12                     	;# 
  2768  0E13                     	;# 
  2769  0E14                     	;# 
  2770  0E15                     	;# 
  2771  0E15                     	;# 
  2772  0E15                     	;# 
  2773  0E16                     	;# 
  2774  0E16                     	;# 
  2775  0E16                     	;# 
  2776  0E17                     	;# 
  2777  0E17                     	;# 
  2778  0E17                     	;# 
  2779  0E18                     	;# 
  2780  0E18                     	;# 
  2781  0E18                     	;# 
  2782  0E19                     	;# 
  2783  0E1A                     	;# 
  2784  0E1B                     	;# 
  2785  0E1D                     	;# 
  2786  0E1E                     	;# 
  2787  0E1F                     	;# 
  2788  0E21                     	;# 
  2789  0E22                     	;# 
  2790  0E23                     	;# 
  2791  0E24                     	;# 
  2792  0E25                     	;# 
  2793  0E26                     	;# 
  2794  0E27                     	;# 
  2795  0E28                     	;# 
  2796  0E29                     	;# 
  2797  0E2D                     	;# 
  2798  0E2E                     	;# 
  2799  0E2F                     	;# 
  2800  0E30                     	;# 
  2801  0E31                     	;# 
  2802  0E32                     	;# 
  2803  0E35                     	;# 
  2804  0E36                     	;# 
  2805  0E37                     	;# 
  2806  0E38                     	;# 
  2807  0E39                     	;# 
  2808  0E3A                     	;# 
  2809  0E3B                     	;# 
  2810  0E3C                     	;# 
  2811  0E3D                     	;# 
  2812  0E3E                     	;# 
  2813  0E90                     	;# 
  2814  0E91                     	;# 
  2815  0E92                     	;# 
  2816  0E93                     	;# 
  2817  0E94                     	;# 
  2818  0E95                     	;# 
  2819  0E96                     	;# 
  2820  0E97                     	;# 
  2821  0E98                     	;# 
  2822  0E99                     	;# 
  2823  0E9A                     	;# 
  2824  0E9B                     	;# 
  2825  0E9C                     	;# 
  2826  0E9D                     	;# 
  2827  0E9E                     	;# 
  2828  0E9F                     	;# 
  2829  0EA0                     	;# 
  2830  0EA1                     	;# 
  2831  0EA2                     	;# 
  2832  0EA3                     	;# 
  2833  0EA4                     	;# 
  2834  0EA5                     	;# 
  2835  0EA6                     	;# 
  2836  0EA7                     	;# 
  2837  0F0F                     	;# 
  2838  0F10                     	;# 
  2839  0F11                     	;# 
  2840  0F12                     	;# 
  2841  0F13                     	;# 
  2842  0F14                     	;# 
  2843  0F15                     	;# 
  2844  0F16                     	;# 
  2845  0F17                     	;# 
  2846  0F18                     	;# 
  2847  0F19                     	;# 
  2848  0F1A                     	;# 
  2849  0F1B                     	;# 
  2850  0F1C                     	;# 
  2851  0F1D                     	;# 
  2852  0F1E                     	;# 
  2853  0F1F                     	;# 
  2854  0F20                     	;# 
  2855  0F21                     	;# 
  2856  0F22                     	;# 
  2857  0F23                     	;# 
  2858  0F24                     	;# 
  2859  0F25                     	;# 
  2860  0F26                     	;# 
  2861  0F27                     	;# 
  2862  0F28                     	;# 
  2863  0F29                     	;# 
  2864  0F2A                     	;# 
  2865  0F2B                     	;# 
  2866  0F2C                     	;# 
  2867  0F2D                     	;# 
  2868  0F2E                     	;# 
  2869  0F2F                     	;# 
  2870  0F30                     	;# 
  2871  0F31                     	;# 
  2872  0F32                     	;# 
  2873  0F33                     	;# 
  2874  0F34                     	;# 
  2875  0F35                     	;# 
  2876  0F36                     	;# 
  2877  0F37                     	;# 
  2878  0FE4                     	;# 
  2879  0FE5                     	;# 
  2880  0FE6                     	;# 
  2881  0FE7                     	;# 
  2882  0FE8                     	;# 
  2883  0FE9                     	;# 
  2884  0FEA                     	;# 
  2885  0FEB                     	;# 
  2886  0FED                     	;# 
  2887  0FEE                     	;# 
  2888  0FEF                     	;# 
  2889                           
  2890                           	psect	idataCOMMON
  2891  0625                     __pidataCOMMON:	
  2892                           
  2893                           ;initializer for _buffer_write_index
  2894  0625  3401               	retlw	1
  2895  0626  3400               	retlw	0
  2896                           
  2897                           ;initializer for _state
  2898  0627  3403               	retlw	3
  2899                           
  2900                           	psect	idataBANK0
  2901  0628                     __pidataBANK0:	
  2902                           
  2903                           ;initializer for _isPlaying
  2904  0628  3401               	retlw	1
  2905                           
  2906                           ;initializer for _readMessage
  2907  0629  34FF               	retlw	255
  2908                           
  2909                           ;initializer for _GLBL_Resp8
  2910  062A  34FF               	retlw	255
  2911                           
  2912                           	psect	idataBANK1
  2913  0611                     __pidataBANK1:	
  2914                           
  2915                           ;initializer for _GLBL_Resp40
  2916  0611  34FF               	retlw	255
  2917  0612  34FF               	retlw	255
  2918  0613  34FF               	retlw	255
  2919  0614  34FF               	retlw	255
  2920  0615  34FF               	retlw	255
  2921                           
  2922                           	psect	stringtext1
  2923  0070                     __pstringtext1:	
  2924  0070                     _CRCTable:	
  2925  0070  3400               	retlw	0
  2926  0071  3409               	retlw	9
  2927  0072  3412               	retlw	18
  2928  0073  341B               	retlw	27
  2929  0074  3424               	retlw	36
  2930  0075  342D               	retlw	45
  2931  0076  3436               	retlw	54
  2932  0077  343F               	retlw	63
  2933  0078  3448               	retlw	72
  2934  0079  3441               	retlw	65
  2935  007A  345A               	retlw	90
  2936  007B  3453               	retlw	83
  2937  007C  346C               	retlw	108
  2938  007D  3465               	retlw	101
  2939  007E  347E               	retlw	126
  2940  007F  3477               	retlw	119
  2941  0080  3419               	retlw	25
  2942  0081  3410               	retlw	16
  2943  0082  340B               	retlw	11
  2944  0083  3402               	retlw	2
  2945  0084  343D               	retlw	61
  2946  0085  3434               	retlw	52
  2947  0086  342F               	retlw	47
  2948  0087  3426               	retlw	38
  2949  0088  3451               	retlw	81
  2950  0089  3458               	retlw	88
  2951  008A  3443               	retlw	67
  2952  008B  344A               	retlw	74
  2953  008C  3475               	retlw	117
  2954  008D  347C               	retlw	124
  2955  008E  3467               	retlw	103
  2956  008F  346E               	retlw	110
  2957  0090  3432               	retlw	50
  2958  0091  343B               	retlw	59
  2959  0092  3420               	retlw	32
  2960  0093  3429               	retlw	41
  2961  0094  3416               	retlw	22
  2962  0095  341F               	retlw	31
  2963  0096  3404               	retlw	4
  2964  0097  340D               	retlw	13
  2965  0098  347A               	retlw	122
  2966  0099  3473               	retlw	115
  2967  009A  3468               	retlw	104
  2968  009B  3461               	retlw	97
  2969  009C  345E               	retlw	94
  2970  009D  3457               	retlw	87
  2971  009E  344C               	retlw	76
  2972  009F  3445               	retlw	69
  2973  00A0  342B               	retlw	43
  2974  00A1  3422               	retlw	34
  2975  00A2  3439               	retlw	57
  2976  00A3  3430               	retlw	48
  2977  00A4  340F               	retlw	15
  2978  00A5  3406               	retlw	6
  2979  00A6  341D               	retlw	29
  2980  00A7  3414               	retlw	20
  2981  00A8  3463               	retlw	99
  2982  00A9  346A               	retlw	106
  2983  00AA  3471               	retlw	113
  2984  00AB  3478               	retlw	120
  2985  00AC  3447               	retlw	71
  2986  00AD  344E               	retlw	78
  2987  00AE  3455               	retlw	85
  2988  00AF  345C               	retlw	92
  2989  00B0  3464               	retlw	100
  2990  00B1  346D               	retlw	109
  2991  00B2  3476               	retlw	118
  2992  00B3  347F               	retlw	127
  2993  00B4  3440               	retlw	64
  2994  00B5  3449               	retlw	73
  2995  00B6  3452               	retlw	82
  2996  00B7  345B               	retlw	91
  2997  00B8  342C               	retlw	44
  2998  00B9  3425               	retlw	37
  2999  00BA  343E               	retlw	62
  3000  00BB  3437               	retlw	55
  3001  00BC  3408               	retlw	8
  3002  00BD  3401               	retlw	1
  3003  00BE  341A               	retlw	26
  3004  00BF  3413               	retlw	19
  3005  00C0  347D               	retlw	125
  3006  00C1  3474               	retlw	116
  3007  00C2  346F               	retlw	111
  3008  00C3  3466               	retlw	102
  3009  00C4  3459               	retlw	89
  3010  00C5  3450               	retlw	80
  3011  00C6  344B               	retlw	75
  3012  00C7  3442               	retlw	66
  3013  00C8  3435               	retlw	53
  3014  00C9  343C               	retlw	60
  3015  00CA  3427               	retlw	39
  3016  00CB  342E               	retlw	46
  3017  00CC  3411               	retlw	17
  3018  00CD  3418               	retlw	24
  3019  00CE  3403               	retlw	3
  3020  00CF  340A               	retlw	10
  3021  00D0  3456               	retlw	86
  3022  00D1  345F               	retlw	95
  3023  00D2  3444               	retlw	68
  3024  00D3  344D               	retlw	77
  3025  00D4  3472               	retlw	114
  3026  00D5  347B               	retlw	123
  3027  00D6  3460               	retlw	96
  3028  00D7  3469               	retlw	105
  3029  00D8  341E               	retlw	30
  3030  00D9  3417               	retlw	23
  3031  00DA  340C               	retlw	12
  3032  00DB  3405               	retlw	5
  3033  00DC  343A               	retlw	58
  3034  00DD  3433               	retlw	51
  3035  00DE  3428               	retlw	40
  3036  00DF  3421               	retlw	33
  3037  00E0  344F               	retlw	79
  3038  00E1  3446               	retlw	70
  3039  00E2  345D               	retlw	93
  3040  00E3  3454               	retlw	84
  3041  00E4  346B               	retlw	107
  3042  00E5  3462               	retlw	98
  3043  00E6  3479               	retlw	121
  3044  00E7  3470               	retlw	112
  3045  00E8  3407               	retlw	7
  3046  00E9  340E               	retlw	14
  3047  00EA  3415               	retlw	21
  3048  00EB  341C               	retlw	28
  3049  00EC  3423               	retlw	35
  3050  00ED  342A               	retlw	42
  3051  00EE  3431               	retlw	49
  3052  00EF  3438               	retlw	56
  3053  00F0  3441               	retlw	65
  3054  00F1  3448               	retlw	72
  3055  00F2  3453               	retlw	83
  3056  00F3  345A               	retlw	90
  3057  00F4  3465               	retlw	101
  3058  00F5  346C               	retlw	108
  3059  00F6  3477               	retlw	119
  3060  00F7  347E               	retlw	126
  3061  00F8  3409               	retlw	9
  3062  00F9  3400               	retlw	0
  3063  00FA  341B               	retlw	27
  3064  00FB  3412               	retlw	18
  3065  00FC  342D               	retlw	45
  3066  00FD  3424               	retlw	36
  3067  00FE  343F               	retlw	63
  3068  00FF  3436               	retlw	54
  3069  0100  3458               	retlw	88
  3070  0101  3451               	retlw	81
  3071  0102  344A               	retlw	74
  3072  0103  3443               	retlw	67
  3073  0104  347C               	retlw	124
  3074  0105  3475               	retlw	117
  3075  0106  346E               	retlw	110
  3076  0107  3467               	retlw	103
  3077  0108  3410               	retlw	16
  3078  0109  3419               	retlw	25
  3079  010A  3402               	retlw	2
  3080  010B  340B               	retlw	11
  3081  010C  3434               	retlw	52
  3082  010D  343D               	retlw	61
  3083  010E  3426               	retlw	38
  3084  010F  342F               	retlw	47
  3085  0110  3473               	retlw	115
  3086  0111  347A               	retlw	122
  3087  0112  3461               	retlw	97
  3088  0113  3468               	retlw	104
  3089  0114  3457               	retlw	87
  3090  0115  345E               	retlw	94
  3091  0116  3445               	retlw	69
  3092  0117  344C               	retlw	76
  3093  0118  343B               	retlw	59
  3094  0119  3432               	retlw	50
  3095  011A  3429               	retlw	41
  3096  011B  3420               	retlw	32
  3097  011C  341F               	retlw	31
  3098  011D  3416               	retlw	22
  3099  011E  340D               	retlw	13
  3100  011F  3404               	retlw	4
  3101  0120  346A               	retlw	106
  3102  0121  3463               	retlw	99
  3103  0122  3478               	retlw	120
  3104  0123  3471               	retlw	113
  3105  0124  344E               	retlw	78
  3106  0125  3447               	retlw	71
  3107  0126  345C               	retlw	92
  3108  0127  3455               	retlw	85
  3109  0128  3422               	retlw	34
  3110  0129  342B               	retlw	43
  3111  012A  3430               	retlw	48
  3112  012B  3439               	retlw	57
  3113  012C  3406               	retlw	6
  3114  012D  340F               	retlw	15
  3115  012E  3414               	retlw	20
  3116  012F  341D               	retlw	29
  3117  0130  3425               	retlw	37
  3118  0131  342C               	retlw	44
  3119  0132  3437               	retlw	55
  3120  0133  343E               	retlw	62
  3121  0134  3401               	retlw	1
  3122  0135  3408               	retlw	8
  3123  0136  3413               	retlw	19
  3124  0137  341A               	retlw	26
  3125  0138  346D               	retlw	109
  3126  0139  3464               	retlw	100
  3127  013A  347F               	retlw	127
  3128  013B  3476               	retlw	118
  3129  013C  3449               	retlw	73
  3130  013D  3440               	retlw	64
  3131  013E  345B               	retlw	91
  3132  013F  3452               	retlw	82
  3133  0140  343C               	retlw	60
  3134  0141  3435               	retlw	53
  3135  0142  342E               	retlw	46
  3136  0143  3427               	retlw	39
  3137  0144  3418               	retlw	24
  3138  0145  3411               	retlw	17
  3139  0146  340A               	retlw	10
  3140  0147  3403               	retlw	3
  3141  0148  3474               	retlw	116
  3142  0149  347D               	retlw	125
  3143  014A  3466               	retlw	102
  3144  014B  346F               	retlw	111
  3145  014C  3450               	retlw	80
  3146  014D  3459               	retlw	89
  3147  014E  3442               	retlw	66
  3148  014F  344B               	retlw	75
  3149  0150  3417               	retlw	23
  3150  0151  341E               	retlw	30
  3151  0152  3405               	retlw	5
  3152  0153  340C               	retlw	12
  3153  0154  3433               	retlw	51
  3154  0155  343A               	retlw	58
  3155  0156  3421               	retlw	33
  3156  0157  3428               	retlw	40
  3157  0158  345F               	retlw	95
  3158  0159  3456               	retlw	86
  3159  015A  344D               	retlw	77
  3160  015B  3444               	retlw	68
  3161  015C  347B               	retlw	123
  3162  015D  3472               	retlw	114
  3163  015E  3469               	retlw	105
  3164  015F  3460               	retlw	96
  3165  0160  340E               	retlw	14
  3166  0161  3407               	retlw	7
  3167  0162  341C               	retlw	28
  3168  0163  3415               	retlw	21
  3169  0164  342A               	retlw	42
  3170  0165  3423               	retlw	35
  3171  0166  3438               	retlw	56
  3172  0167  3431               	retlw	49
  3173  0168  3446               	retlw	70
  3174  0169  344F               	retlw	79
  3175  016A  3454               	retlw	84
  3176  016B  345D               	retlw	93
  3177  016C  3462               	retlw	98
  3178  016D  346B               	retlw	107
  3179  016E  3470               	retlw	112
  3180  016F  3479               	retlw	121
  3181  0170                     __end_of_CRCTable:	
  3182  000B                     _INTCONbits	set	11
  3183  0011                     _PIR1bits	set	17
  3184  000E                     _PORTCbits	set	14
  3185  008C                     _TRISA	set	140
  3186  009C                     _OSCSTATbits	set	156
  3187  009B                     _OSCCON	set	155
  3188  0091                     _PIE1bits	set	145
  3189  0476                     _TRISC6	set	1142
  3190  0468                     _TRISB0	set	1128
  3191  0471                     _TRISC1	set	1137
  3192  0470                     _TRISC0	set	1136
  3193  0469                     _TRISB1	set	1129
  3194  0477                     _TRISC7	set	1143
  3195  0474                     _TRISC4	set	1140
  3196  0473                     _TRISC3	set	1139
  3197  0472                     _TRISC2	set	1138
  3198  0C69                     _ANSB1	set	3177
  3199  0C73                     _ANSC3	set	3187
  3200  0214                     _SSP1STATbits	set	532
  3201  0211                     _SSP1BUF	set	529
  3202  0212                     _SSP1ADD	set	530
  3203  0215                     _SSP1CON1	set	533
  3204  0214                     _SSP1STAT	set	532
  3205  0215                     _SSP1CON1bits	set	533
  3206  0495                     _T2CON	set	1173
  3207  0497                     _T2CLKCON	set	1175
  3208  0494                     _T2PR	set	1172
  3209  058E                     _DAC1CON0	set	1422
  3210  058F                     _DAC1REFL	set	1423
  3211  0590                     _DAC1REFH	set	1424
  3212  2C68                     _DAC1LD	set	11368
  3213  0E3B                     _SSPDATPPS	set	3643
  3214  0E3A                     _SSPCLKPPS	set	3642
  3215  0EA4                     _RC4PPS	set	3748
  3216  0EA2                     _RC2PPS	set	3746
  3217  0170                     STR_5:	
  3218  0170  3466               	retlw	102	;'f'
  3219  0171  346D               	retlw	109	;'m'
  3220  0172  3474               	retlw	116	;'t'
  3221  0173  3420               	retlw	32	;' '
  3222  0174  3400               	retlw	0
  3223                           
  3224                           	psect	stringtext2
  3225  0616                     __pstringtext2:	
  3226  0616                     STR_3:	
  3227  0616  3457               	retlw	87	;'W'
  3228  0617  3441               	retlw	65	;'A'
  3229  0618  3456               	retlw	86	;'V'
  3230  0619  3445               	retlw	69	;'E'
  3231  061A  3400               	retlw	0
  3232                           
  3233                           	psect	stringtext3
  3234  061B                     __pstringtext3:	
  3235  061B                     STR_1:	
  3236  061B  3452               	retlw	82	;'R'
  3237  061C  3449               	retlw	73	;'I'
  3238  061D  3446               	retlw	70	;'F'
  3239  061E  3446               	retlw	70	;'F'
  3240  061F  3400               	retlw	0
  3241                           
  3242                           	psect	stringtext4
  3243  0620                     __pstringtext4:	
  3244  0620                     STR_7:	
  3245  0620  3464               	retlw	100	;'d'
  3246  0621  3461               	retlw	97	;'a'
  3247  0622  3474               	retlw	116	;'t'
  3248  0623  3461               	retlw	97	;'a'
  3249  0624  3400               	retlw	0
  3250                           
  3251                           	psect	stringtext5
  3252  0000                     __pstringtext5:	
  3253  0170                     
  3254                           ; #config settings
  3255  0000                     
  3256                           	psect	cinit
  3257  0031                     start_initialization:	
  3258  0031                     __initialization:	
  3259                           
  3260                           ; Initialize objects allocated to COMMON
  3261  0031  3025               	movlw	low __pidataCOMMON
  3262  0032  0084               	movwf	4
  3263  0033  3086               	movlw	(high __pidataCOMMON)| (0+128)
  3264  0034  0085               	movwf	5
  3265  0035  3078               	movlw	low __pdataCOMMON
  3266  0036  0086               	movwf	6
  3267  0037  3000               	movlw	high __pdataCOMMON
  3268  0038  0087               	movwf	7
  3269  0039  3003               	movlw	3
  3270  003A  3186  2605  3180   	fcall	init_ram
  3271                           
  3272                           ; Initialize objects allocated to BANK0
  3273  003D  3028               	movlw	low __pidataBANK0
  3274  003E  0084               	movwf	4
  3275  003F  3086               	movlw	(high __pidataBANK0)| (0+128)
  3276  0040  0085               	movwf	5
  3277  0041  306D               	movlw	low __pdataBANK0
  3278  0042  0086               	movwf	6
  3279  0043  3000               	movlw	high __pdataBANK0
  3280  0044  0087               	movwf	7
  3281  0045  3003               	movlw	3
  3282  0046  3186  2605  3180   	fcall	init_ram
  3283                           
  3284                           ; Initialize objects allocated to BANK1
  3285  0049  3011               	movlw	low __pidataBANK1
  3286  004A  0084               	movwf	4
  3287  004B  3086               	movlw	(high __pidataBANK1)| (0+128)
  3288  004C  0085               	movwf	5
  3289  004D  30B2               	movlw	low __pdataBANK1
  3290  004E  0086               	movwf	6
  3291  004F  3000               	movlw	high __pdataBANK1
  3292  0050  0087               	movwf	7
  3293  0051  3005               	movlw	5
  3294  0052  3186  2605  3180   	fcall	init_ram
  3295                           
  3296                           ; Clear objects allocated to BANK0
  3297  0055  3065               	movlw	low __pbssBANK0
  3298  0056  0084               	movwf	4
  3299  0057  3000               	movlw	high __pbssBANK0
  3300  0058  0085               	movwf	5
  3301  0059  3008               	movlw	8
  3302  005A  3186  260B  3180   	fcall	clear_ram0
  3303                           
  3304                           ; Clear objects allocated to BANK1
  3305  005D  30A0               	movlw	low __pbssBANK1
  3306  005E  0084               	movwf	4
  3307  005F  3000               	movlw	high __pbssBANK1
  3308  0060  0085               	movwf	5
  3309  0061  3012               	movlw	18
  3310  0062  3186  260B  3180   	fcall	clear_ram0
  3311                           
  3312                           ; Clear objects allocated to BANK2
  3313  0065  3020               	movlw	low __pbssBANK2
  3314  0066  0084               	movwf	4
  3315  0067  3001               	movlw	high __pbssBANK2
  3316  0068  0085               	movwf	5
  3317  0069  3040               	movlw	64
  3318  006A  3186  260B         	fcall	clear_ram0
  3319  006C                     end_of_initialization:	
  3320                           ;End of C runtime variable initialization code
  3321                           
  3322  006C                     __end_of__initialization:	
  3323  006C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3324  006D  0020               	movlb	0
  3325  006E  3181  2975         	ljmp	_main	;jump to C main() function
  3326                           
  3327                           	psect	dataCOMMON
  3328  0078                     __pdataCOMMON:	
  3329  0078                     _buffer_write_index:	
  3330  0078                     	ds	2
  3331  007A                     _state:	
  3332  007A                     	ds	1
  3333                           
  3334                           	psect	bssBANK0
  3335  0065                     __pbssBANK0:	
  3336  0065                     _sdata:	
  3337  0065                     	ds	4
  3338  0069                     _buffer_read_index:	
  3339  0069                     	ds	2
  3340  006B                     _samplePending:	
  3341  006B                     	ds	1
  3342  006C                     _global_error:	
  3343  006C                     	ds	1
  3344                           
  3345                           	psect	dataBANK0
  3346  006D                     __pdataBANK0:	
  3347  006D                     _isPlaying:	
  3348  006D                     	ds	1
  3349  006E                     _readMessage:	
  3350  006E                     	ds	1
  3351  006F                     _GLBL_Resp8:	
  3352  006F                     	ds	1
  3353                           
  3354                           	psect	bssBANK1
  3355  00A0                     __pbssBANK1:	
  3356  00A0                     _address:	
  3357  00A0                     	ds	4
  3358  00A4                     _filesize:	
  3359  00A4                     	ds	4
  3360  00A8                     _sampRate:	
  3361  00A8                     	ds	4
  3362  00AC                     _blockIndex:	
  3363  00AC                     	ds	2
  3364  00AE                     _bitsPerSamp:	
  3365  00AE                     	ds	2
  3366  00B0                     _channels:	
  3367  00B0                     	ds	2
  3368                           
  3369                           	psect	dataBANK1
  3370  00B2                     __pdataBANK1:	
  3371  00B2                     _GLBL_Resp40:	
  3372  00B2                     	ds	5
  3373                           
  3374                           	psect	bssBANK2
  3375  0120                     __pbssBANK2:	
  3376  0120                     _buffer:	
  3377  0120                     	ds	64
  3378                           
  3379                           	psect	inittext
  3380  0605                     init_ram:	
  3381  0605  00FE               	movwf	126
  3382  0606                     initloop:	
  3383  0606  0012               	moviw fsr0++
  3384  0607  001E               	movwi fsr1++
  3385  0608  0BFE               	decfsz	126,f
  3386  0609  2E06               	goto	initloop
  3387  060A  3400               	retlw	0
  3388                           
  3389                           	psect	clrtext
  3390  060B                     clear_ram0:	
  3391                           ;	Called with FSR0 containing the base address, and
  3392                           ;	WREG with the size to clear
  3393                           
  3394  060B  0064               	clrwdt	;clear the watchdog before getting into this loop
  3395  060C                     clrloop0:	
  3396  060C  0180               	clrf	0	;clear RAM location pointed to by FSR
  3397  060D  3101               	addfsr 0,1
  3398  060E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3399  060F  2E0C               	goto	clrloop0	;have we reached the end yet?
  3400  0610  3400               	retlw	0	;all done for this memory range, return
  3401                           
  3402                           	psect	cstackCOMMON
  3403  0070                     __pcstackCOMMON:	
  3404  0070                     ?_SPI_Write:	
  3405  0070                     ?_SD_Read8bitResponse:	
  3406                           ; 1 bytes @ 0x0
  3407                           
  3408  0070                     ?_SD_Check8bitResponse:	
  3409                           ; 1 bytes @ 0x0
  3410                           
  3411  0070                     ?_SD_Read40bitResponse:	
  3412                           ; 1 bytes @ 0x0
  3413                           
  3414  0070                     ?_SPI_Read:	
  3415                           ; 1 bytes @ 0x0
  3416                           
  3417  0070                     ?_DAC_Init:	
  3418                           ; 1 bytes @ 0x0
  3419                           
  3420  0070                     ?_SD_Init:	
  3421                           ; 1 bytes @ 0x0
  3422                           
  3423  0070                     ?_SD_CloseBlock:	
  3424                           ; 1 bytes @ 0x0
  3425                           
  3426  0070                     ?_SPI_Init:	
  3427                           ; 1 bytes @ 0x0
  3428                           
  3429  0070                     ?_error:	
  3430                           ; 1 bytes @ 0x0
  3431                           
  3432  0070                     ?_init:	
  3433                           ; 1 bytes @ 0x0
  3434                           
  3435  0070                     ?_isr:	
  3436                           ; 1 bytes @ 0x0
  3437                           
  3438  0070                     ??_isr:	
  3439                           ; 1 bytes @ 0x0
  3440                           
  3441  0070                     ?_main:	
  3442                           ; 1 bytes @ 0x0
  3443                           
  3444                           
  3445                           ; 1 bytes @ 0x0
  3446  0070                     	ds	1
  3447  0071                     isr@level:	
  3448                           
  3449                           ; 2 bytes @ 0x1
  3450  0071                     	ds	2
  3451  0073                     ??_SPI_Write:	
  3452  0073                     ??_SD_Read8bitResponse:	
  3453                           ; 1 bytes @ 0x3
  3454                           
  3455  0073                     ??_SD_Check8bitResponse:	
  3456                           ; 1 bytes @ 0x3
  3457                           
  3458  0073                     ??_SD_Read40bitResponse:	
  3459                           ; 1 bytes @ 0x3
  3460                           
  3461  0073                     ?_SD_Check40bitResponse:	
  3462                           ; 1 bytes @ 0x3
  3463                           
  3464  0073                     ??_SPI_Read:	
  3465                           ; 1 bytes @ 0x3
  3466                           
  3467  0073                     ??_DAC_Init:	
  3468                           ; 1 bytes @ 0x3
  3469                           
  3470  0073                     ??_SD_CloseBlock:	
  3471                           ; 1 bytes @ 0x3
  3472                           
  3473  0073                     ??_SPI_Init:	
  3474                           ; 1 bytes @ 0x3
  3475                           
  3476  0073                     ??_error:	
  3477                           ; 1 bytes @ 0x3
  3478                           
  3479  0073                     ?_fourCCeq:	
  3480                           ; 1 bytes @ 0x3
  3481                           
  3482  0073                     ?_readBytes:	
  3483                           ; 1 bytes @ 0x3
  3484                           
  3485  0073                     ?_timer_Init:	
  3486                           ; 1 bytes @ 0x3
  3487                           
  3488  0073                     SD_Check8bitResponse@Byte:	
  3489                           ; 2 bytes @ 0x3
  3490                           
  3491  0073                     SD_Check40bitResponse@Byte3:	
  3492                           ; 1 bytes @ 0x3
  3493                           
  3494  0073                     SPI_Write@Data_8bit:	
  3495                           ; 1 bytes @ 0x3
  3496                           
  3497  0073                     fourCCeq@b:	
  3498                           ; 1 bytes @ 0x3
  3499                           
  3500  0073                     readBytes@len:	
  3501                           ; 2 bytes @ 0x3
  3502                           
  3503  0073                     timer_Init@rate:	
  3504                           ; 2 bytes @ 0x3
  3505                           
  3506                           
  3507                           ; 4 bytes @ 0x3
  3508  0073                     	ds	1
  3509  0074                     ?_SD_SendCommand:	
  3510  0074                     SD_SendCommand@ARG3:	
  3511                           ; 1 bytes @ 0x4
  3512                           
  3513  0074                     SD_Read8bitResponse@readMessage:	
  3514                           ; 1 bytes @ 0x4
  3515                           
  3516  0074                     SD_Check8bitResponse@match:	
  3517                           ; 1 bytes @ 0x4
  3518                           
  3519  0074                     SD_Read40bitResponse@readMessage:	
  3520                           ; 1 bytes @ 0x4
  3521                           
  3522  0074                     SD_Check40bitResponse@Byte2:	
  3523                           ; 1 bytes @ 0x4
  3524                           
  3525  0074                     error@e:	
  3526                           ; 1 bytes @ 0x4
  3527                           
  3528                           
  3529                           ; 1 bytes @ 0x4
  3530  0074                     	ds	1
  3531  0075                     ??_readBytes:	
  3532  0075                     SD_SendCommand@ARG2:	
  3533                           ; 1 bytes @ 0x5
  3534                           
  3535  0075                     SD_Check40bitResponse@Byte1:	
  3536                           ; 1 bytes @ 0x5
  3537                           
  3538  0075                     fourCCeq@a:	
  3539                           ; 1 bytes @ 0x5
  3540                           
  3541                           
  3542                           ; 1 bytes @ 0x5
  3543  0075                     	ds	1
  3544  0076                     SD_SendCommand@ARG1:	
  3545  0076                     SD_Check40bitResponse@Byte0:	
  3546                           ; 1 bytes @ 0x6
  3547                           
  3548  0076                     fourCCeq@i:	
  3549                           ; 1 bytes @ 0x6
  3550                           
  3551                           
  3552                           ; 1 bytes @ 0x6
  3553  0076                     	ds	1
  3554  0077                     ??_SD_Check40bitResponse:	
  3555  0077                     ??_timer_Init:	
  3556                           ; 1 bytes @ 0x7
  3557                           
  3558  0077                     SD_SendCommand@ARG0:	
  3559                           ; 1 bytes @ 0x7
  3560                           
  3561                           
  3562                           ; 1 bytes @ 0x7
  3563  0077                     	ds	1
  3564  0078                     ??_init:	
  3565                           
  3566                           	psect	cstackBANK0
  3567  0020                     __pcstackBANK0:	
  3568                           ; 1 bytes @ 0x8
  3569                           
  3570  0020                     ??_SD_SendCommand:	
  3571  0020                     ??_fourCCeq:	
  3572                           ; 1 bytes @ 0x0
  3573                           
  3574  0020                     SD_Check40bitResponse@Byte4:	
  3575                           ; 1 bytes @ 0x0
  3576                           
  3577  0020                     readBytes@dest:	
  3578                           ; 1 bytes @ 0x0
  3579                           
  3580                           
  3581                           ; 1 bytes @ 0x0
  3582  0020                     	ds	1
  3583  0021                     SD_SendCommand@CMD_6bit:	
  3584  0021                     SD_Check40bitResponse@match:	
  3585                           ; 1 bytes @ 0x1
  3586                           
  3587  0021                     readBytes@i:	
  3588                           ; 1 bytes @ 0x1
  3589                           
  3590                           
  3591                           ; 2 bytes @ 0x1
  3592  0021                     	ds	1
  3593  0022                     SD_SendCommand@ByteToSend:	
  3594                           
  3595                           ; 1 bytes @ 0x2
  3596  0022                     	ds	1
  3597  0023                     SD_SendCommand@Checksum:	
  3598                           
  3599                           ; 1 bytes @ 0x3
  3600  0023                     	ds	1
  3601  0024                     ??_SD_Init:	
  3602  0024                     ?_SD_OpenStream:	
  3603                           ; 1 bytes @ 0x4
  3604                           
  3605  0024                     SD_OpenStream@address:	
  3606                           ; 1 bytes @ 0x4
  3607                           
  3608                           
  3609                           ; 4 bytes @ 0x4
  3610  0024                     	ds	4
  3611  0028                     ??_SD_OpenStream:	
  3612                           
  3613                           ; 1 bytes @ 0x8
  3614  0028                     	ds	4
  3615  002C                     SD_OpenStream@a:	
  3616                           
  3617                           ; 4 bytes @ 0xC
  3618  002C                     	ds	4
  3619  0030                     ?_openFile:	
  3620  0030                     openFile@a:	
  3621                           ; 1 bytes @ 0x10
  3622                           
  3623                           
  3624                           ; 4 bytes @ 0x10
  3625  0030                     	ds	4
  3626  0034                     ??_openFile:	
  3627                           
  3628                           ; 1 bytes @ 0x14
  3629  0034                     	ds	1
  3630  0035                     openFile@riff:	
  3631                           
  3632                           ; 8 bytes @ 0x15
  3633  0035                     	ds	8
  3634  003D                     openFile@response:	
  3635                           
  3636                           ; 1 bytes @ 0x1D
  3637  003D                     	ds	1
  3638  003E                     openFile@data:	
  3639                           
  3640                           ; 8 bytes @ 0x1E
  3641  003E                     	ds	8
  3642  0046                     openFile@fmt:	
  3643                           
  3644                           ; 28 bytes @ 0x26
  3645  0046                     	ds	28
  3646  0062                     ??_main:	
  3647                           
  3648                           ; 1 bytes @ 0x42
  3649  0062                     	ds	3
  3650                           
  3651                           	psect	maintext
  3652  0175                     __pmaintext:	
  3653 ;;
  3654 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3655 ;;
  3656 ;; *************** function _main *****************
  3657 ;; Defined at:
  3658 ;;		line 137 in file "main.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;		None
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;		None
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  1    wreg      void 
  3665 ;; Registers used:
  3666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3667 ;; Tracked objects:
  3668 ;;		On entry : B1F/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3674 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3675 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3676 ;;Total ram usage:        3 bytes
  3677 ;; Hardware stack levels required when called:    5
  3678 ;; This function calls:
  3679 ;;		_SPI_Read
  3680 ;;		_error
  3681 ;;		_init
  3682 ;;		_openFile
  3683 ;;		_timer_Init
  3684 ;; This function is called by:
  3685 ;;		Startup code after reset
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           
  3690                           ;psect for function _main
  3691  0175                     _main:	
  3692                           
  3693                           ;main.c: 138:     init();
  3694                           
  3695                           ;incstack = 0
  3696                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3697  0175  3185  25AC  3181   	fcall	_init
  3698  0178                     l2424:	
  3699                           
  3700                           ;main.c: 142:         address = 0;
  3701  0178  3000               	movlw	0
  3702  0179  0021               	movlb	1	; select bank1
  3703  017A  00A3               	movwf	(_address+3)^(0+128)
  3704  017B  3000               	movlw	0
  3705  017C  00A2               	movwf	(_address+2)^(0+128)
  3706  017D  3000               	movlw	0
  3707  017E  00A1               	movwf	(_address+1)^(0+128)
  3708  017F  3000               	movlw	0
  3709  0180  00A0               	movwf	_address^(0+128)
  3710                           
  3711                           ;main.c: 144:         openFile(address);
  3712  0181  0823               	movf	(_address+3)^(0+128),w
  3713  0182  0020               	movlb	0	; select bank0
  3714  0183  00B3               	movwf	openFile@a+3
  3715  0184  0021               	movlb	1	; select bank1
  3716  0185  0822               	movf	(_address+2)^(0+128),w
  3717  0186  0020               	movlb	0	; select bank0
  3718  0187  00B2               	movwf	openFile@a+2
  3719  0188  0021               	movlb	1	; select bank1
  3720  0189  0821               	movf	(_address+1)^(0+128),w
  3721  018A  0020               	movlb	0	; select bank0
  3722  018B  00B1               	movwf	openFile@a+1
  3723  018C  0021               	movlb	1	; select bank1
  3724  018D  0820               	movf	_address^(0+128),w
  3725  018E  0020               	movlb	0	; select bank0
  3726  018F  00B0               	movwf	openFile@a
  3727  0190  3182  226C  3181   	fcall	_openFile
  3728                           
  3729                           ;main.c: 145:         if(channels != 2) samplePending = 0;
  3730  0193  3002               	movlw	2
  3731  0194  0021               	movlb	1	; select bank1
  3732  0195  0630               	xorwf	_channels^(0+128),w
  3733  0196  0431               	iorwf	(_channels+1)^(0+128),w
  3734  0197  1903               	btfsc	3,2
  3735  0198  299B               	goto	l2432
  3736  0199  0020               	movlb	0	; select bank0
  3737  019A  01EB               	clrf	_samplePending
  3738  019B                     l2432:	
  3739                           
  3740                           ;main.c: 146:         timer_Init(sampRate);
  3741  019B  0021               	movlb	1	; select bank1
  3742  019C  082B               	movf	(_sampRate+3)^(0+128),w
  3743  019D  00F6               	movwf	timer_Init@rate+3
  3744  019E  082A               	movf	(_sampRate+2)^(0+128),w
  3745  019F  00F5               	movwf	timer_Init@rate+2
  3746  01A0  0829               	movf	(_sampRate+1)^(0+128),w
  3747  01A1  00F4               	movwf	timer_Init@rate+1
  3748  01A2  0828               	movf	_sampRate^(0+128),w
  3749  01A3  00F3               	movwf	timer_Init@rate
  3750  01A4  3184  2444  3181   	fcall	_timer_Init
  3751  01A7                     l2488:	
  3752                           ;main.c: 148:         while(state == OPEN) {
  3753                           
  3754                           
  3755                           ;main.c: 148:         while(state == OPEN) {
  3756  01A7  087A               	movf	_state,w
  3757  01A8  1D03               	btfss	3,2
  3758  01A9  2978               	goto	l2424
  3759                           
  3760                           ;main.c: 174:             if (state == OPEN) {
  3761  01AA  087A               	movf	_state,w
  3762  01AB  1D03               	btfss	3,2
  3763  01AC  29A7               	goto	l2488
  3764                           
  3765                           ;main.c: 175:                 if (blockIndex >= 512) {
  3766  01AD  0021               	movlb	1	; select bank1
  3767  01AE  082D               	movf	(_blockIndex+1)^(0+128),w
  3768  01AF  3A80               	xorlw	128
  3769  01B0  0020               	movlb	0	; select bank0
  3770  01B1  00E2               	movwf	??_main
  3771  01B2  3082               	movlw	130
  3772  01B3  0262               	subwf	??_main,w
  3773  01B4  1D03               	skipz
  3774  01B5  29B9               	goto	u1105
  3775  01B6  3000               	movlw	0
  3776  01B7  0021               	movlb	1	; select bank1
  3777  01B8  022C               	subwf	_blockIndex^(0+128),w
  3778  01B9                     u1105:	
  3779  01B9  1C03               	skipc
  3780  01BA  29CB               	goto	l278
  3781                           
  3782                           ;main.c: 178:                     blockIndex = 0;
  3783  01BB  0021               	movlb	1	; select bank1
  3784  01BC  01AC               	clrf	_blockIndex^(0+128)
  3785  01BD  01AD               	clrf	(_blockIndex+1)^(0+128)
  3786                           
  3787                           ;main.c: 179:                     SPI_Read();
  3788  01BE  3185  25F7  3181   	fcall	_SPI_Read
  3789                           
  3790                           ;main.c: 180:                     SPI_Read();
  3791  01C1  3185  25F7  3181   	fcall	_SPI_Read
  3792                           
  3793                           ;main.c: 181:                     SPI_Read();
  3794  01C4  3185  25F7  3181   	fcall	_SPI_Read
  3795                           
  3796                           ;main.c: 182:                     SPI_Read();
  3797  01C7  3185  25F7  3181   	fcall	_SPI_Read
  3798                           
  3799                           ;main.c: 185:                 } else {
  3800  01CA  29A7               	goto	l2488
  3801  01CB                     l278:	
  3802                           
  3803                           ;main.c: 186:                     PIE1bits.TMR2IE = 0;
  3804  01CB  0021               	movlb	1	; select bank1
  3805  01CC  1091               	bcf	17,1	;volatile
  3806                           
  3807                           ;main.c: 187:                     if (buffer_write_index != buffer_read_index) {
  3808  01CD  0020               	movlb	0	; select bank0
  3809  01CE  086A               	movf	_buffer_read_index+1,w
  3810  01CF  0679               	xorwf	_buffer_write_index+1,w
  3811  01D0  1D03               	skipz
  3812  01D1  29D4               	goto	u1115
  3813  01D2  0869               	movf	_buffer_read_index,w
  3814  01D3  0678               	xorwf	_buffer_write_index,w
  3815  01D4                     u1115:	
  3816  01D4  1903               	skipnz
  3817  01D5  2A69               	goto	l280
  3818                           
  3819                           ;main.c: 188:                         PIE1bits.TMR2IE = 1;
  3820  01D6  0021               	movlb	1	; select bank1
  3821  01D7  1491               	bsf	17,1	;volatile
  3822                           
  3823                           ;main.c: 189:                         switch (channels) {
  3824  01D8  2A4D               	goto	l2480
  3825  01D9                     l2452:	
  3826                           
  3827                           ;main.c: 191:                                 sdata.bytes[0] = SPI_Read();
  3828  01D9  3185  25F7  3181   	fcall	_SPI_Read
  3829  01DC  0020               	movlb	0	; select bank0
  3830  01DD  00E2               	movwf	??_main
  3831  01DE  0862               	movf	??_main,w
  3832  01DF  00E5               	movwf	_sdata
  3833                           
  3834                           ;main.c: 192:                                 sdata.bytes[1] = SPI_Read();
  3835  01E0  3185  25F7  3181   	fcall	_SPI_Read
  3836  01E3  0020               	movlb	0	; select bank0
  3837  01E4  00E2               	movwf	??_main
  3838  01E5  0862               	movf	??_main,w
  3839  01E6  00E6               	movwf	_sdata+1
  3840                           
  3841                           ;main.c: 193:                                 buffer[ buffer_write_index++ ].mono16 = sd
      +                          ata.mono16 - 0x8000;
  3842  01E7  0865               	movf	_sdata,w
  3843  01E8  3E00               	addlw	0
  3844  01E9  00E2               	movwf	??_main
  3845  01EA  3080               	movlw	128
  3846  01EB  3D66               	addwfc	_sdata+1,w
  3847  01EC  00E3               	movwf	??_main+1
  3848  01ED  0878               	movf	_buffer_write_index,w
  3849  01EE  00E4               	movwf	??_main+2
  3850  01EF  3001               	movlw	1
  3851  01F0                     u1125:	
  3852  01F0  35E4               	lslf	??_main+2,f
  3853  01F1  3EFF               	addlw	-1
  3854  01F2  1D03               	skipz
  3855  01F3  29F0               	goto	u1125
  3856  01F4  3564               	lslf	??_main+2,w
  3857  01F5  3E20               	addlw	(low (_buffer| (0+256)))& (0+255)
  3858  01F6  0086               	movwf	6
  3859  01F7  3001               	movlw	1	; select bank2/3
  3860  01F8  0087               	movwf	7
  3861  01F9  0862               	movf	??_main,w
  3862  01FA  3FC0               	movwi [0]fsr1
  3863  01FB  0863               	movf	??_main+1,w
  3864  01FC  3FC1               	movwi [1]fsr1
  3865  01FD  3001               	movlw	1
  3866  01FE  07F8               	addwf	_buffer_write_index,f
  3867  01FF  3000               	movlw	0
  3868  0200  3DF9               	addwfc	_buffer_write_index+1,f
  3869                           
  3870                           ;main.c: 194:                                 __nop();
  3871  0201  0000               	nop
  3872                           
  3873                           ;main.c: 195:                             break;
  3874  0202  2A5A               	goto	l2482
  3875  0203                     l2460:	
  3876                           
  3877                           ;main.c: 197:                                 if (samplePending) {
  3878  0203  0020               	movlb	0	; select bank0
  3879  0204  086B               	movf	_samplePending,w
  3880  0205  1903               	btfsc	3,2
  3881  0206  2A33               	goto	l2472
  3882                           
  3883                           ;main.c: 198:                                     sdata.bytes[2] = SPI_Read();
  3884  0207  3185  25F7  3181   	fcall	_SPI_Read
  3885  020A  0020               	movlb	0	; select bank0
  3886  020B  00E2               	movwf	??_main
  3887  020C  0862               	movf	??_main,w
  3888  020D  00E7               	movwf	_sdata+2
  3889                           
  3890                           ;main.c: 199:                                     sdata.bytes[3] = SPI_Read();
  3891  020E  3185  25F7  3181   	fcall	_SPI_Read
  3892  0211  0020               	movlb	0	; select bank0
  3893  0212  00E2               	movwf	??_main
  3894  0213  0862               	movf	??_main,w
  3895  0214  00E8               	movwf	_sdata+3
  3896                           
  3897                           ;main.c: 200:                                     sdata.stereo16.right -= 0x8000;
  3898  0215  3000               	movlw	0
  3899  0216  07E7               	addwf	_sdata+2,f
  3900  0217  3080               	movlw	128
  3901  0218  3DE8               	addwfc	_sdata+3,f
  3902                           
  3903                           ;main.c: 201:                                     buffer[ buffer_write_index++ ] = sdata
      +                          ;
  3904  0219  0878               	movf	_buffer_write_index,w
  3905  021A  00E2               	movwf	??_main
  3906  021B  3001               	movlw	1
  3907  021C                     u1145:	
  3908  021C  35E2               	lslf	??_main,f
  3909  021D  3EFF               	addlw	-1
  3910  021E  1D03               	skipz
  3911  021F  2A1C               	goto	u1145
  3912  0220  3562               	lslf	??_main,w
  3913  0221  3E20               	addlw	(low (_buffer| (0+256)))& (0+255)
  3914  0222  0086               	movwf	6
  3915  0223  3001               	movlw	1	; select bank2/3
  3916  0224  0087               	movwf	7
  3917  0225  0865               	movf	_sdata,w
  3918  0226  3FC0               	movwi [0]fsr1
  3919  0227  0866               	movf	_sdata+1,w
  3920  0228  3FC1               	movwi [1]fsr1
  3921  0229  0867               	movf	_sdata+2,w
  3922  022A  3FC2               	movwi [2]fsr1
  3923  022B  0868               	movf	_sdata+3,w
  3924  022C  3FC3               	movwi [3]fsr1
  3925  022D  3001               	movlw	1
  3926  022E  07F8               	addwf	_buffer_write_index,f
  3927  022F  3000               	movlw	0
  3928  0230  3DF9               	addwfc	_buffer_write_index+1,f
  3929                           
  3930                           ;main.c: 202:                                     samplePending = 0;
  3931  0231  01EB               	clrf	_samplePending
  3932                           
  3933                           ;main.c: 203:                                 } else {
  3934  0232  2A5A               	goto	l2482
  3935  0233                     l2472:	
  3936                           
  3937                           ;main.c: 204:                                     sdata.bytes[0] = SPI_Read();
  3938  0233  3185  25F7  3181   	fcall	_SPI_Read
  3939  0236  0020               	movlb	0	; select bank0
  3940  0237  00E2               	movwf	??_main
  3941  0238  0862               	movf	??_main,w
  3942  0239  00E5               	movwf	_sdata
  3943                           
  3944                           ;main.c: 205:                                     sdata.bytes[1] = SPI_Read();
  3945  023A  3185  25F7  3181   	fcall	_SPI_Read
  3946  023D  0020               	movlb	0	; select bank0
  3947  023E  00E2               	movwf	??_main
  3948  023F  0862               	movf	??_main,w
  3949  0240  00E6               	movwf	_sdata+1
  3950                           
  3951                           ;main.c: 206:                                     sdata.stereo16.left -= 0x8000;
  3952  0241  3000               	movlw	0
  3953  0242  07E5               	addwf	_sdata,f
  3954  0243  3080               	movlw	128
  3955  0244  3DE6               	addwfc	_sdata+1,f
  3956                           
  3957                           ;main.c: 207:                                     samplePending = 1;
  3958  0245  01EB               	clrf	_samplePending
  3959  0246  0AEB               	incf	_samplePending,f
  3960  0247  2A5A               	goto	l2482
  3961  0248                     l2478:	
  3962                           
  3963                           ;main.c: 211:                                 error(CHANNELS);
  3964  0248  3007               	movlw	7
  3965  0249  3185  25E8  3181   	fcall	_error
  3966                           
  3967                           ;main.c: 212:                         }
  3968  024C  2A5A               	goto	l2482
  3969  024D                     l2480:	
  3970                           
  3971                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3972                           ; Switch size 1, requested type "simple"
  3973                           ; Number of cases is 1, Range of values is 0 to 0
  3974                           ; switch strategies available:
  3975                           ; Name         Instructions Cycles
  3976                           ; simple_byte            4     3 (average)
  3977                           ; direct_byte            8     6 (fixed)
  3978                           ; jumptable            260     6 (fixed)
  3979                           ;	Chosen strategy is simple_byte
  3980  024D  0831               	movf	(_channels+1)^(0+128),w
  3981  024E  3A00               	xorlw	0	; case 0
  3982  024F  1903               	skipnz
  3983  0250  2A52               	goto	l2666
  3984  0251  2A48               	goto	l2478
  3985  0252                     l2666:	
  3986                           
  3987                           ; Switch size 1, requested type "simple"
  3988                           ; Number of cases is 2, Range of values is 1 to 2
  3989                           ; switch strategies available:
  3990                           ; Name         Instructions Cycles
  3991                           ; simple_byte            7     4 (average)
  3992                           ; direct_byte           13     9 (fixed)
  3993                           ; jumptable            263     9 (fixed)
  3994                           ;	Chosen strategy is simple_byte
  3995  0252  0830               	movf	_channels^(0+128),w
  3996  0253  3A01               	xorlw	1	; case 1
  3997  0254  1903               	skipnz
  3998  0255  29D9               	goto	l2452
  3999  0256  3A03               	xorlw	3	; case 2
  4000  0257  1903               	skipnz
  4001  0258  2A03               	goto	l2460
  4002  0259  2A48               	goto	l2478
  4003  025A                     l2482:	
  4004                           
  4005                           ;main.c: 223:                         if (buffer_write_index >= 16) buffer_write_index =
      +                           0;
  4006  025A  3000               	movlw	0
  4007  025B  0279               	subwf	_buffer_write_index+1,w
  4008  025C  3010               	movlw	16
  4009  025D  1903               	skipnz
  4010  025E  0278               	subwf	_buffer_write_index,w
  4011  025F  1C03               	skipc
  4012  0260  2A63               	goto	l2486
  4013  0261  01F8               	clrf	_buffer_write_index
  4014  0262  01F9               	clrf	_buffer_write_index+1
  4015  0263                     l2486:	
  4016                           
  4017                           ;main.c: 224:                         blockIndex += 2;
  4018  0263  3002               	movlw	2
  4019  0264  0021               	movlb	1	; select bank1
  4020  0265  07AC               	addwf	_blockIndex^(0+128),f
  4021  0266  3000               	movlw	0
  4022  0267  3DAD               	addwfc	(_blockIndex+1)^(0+128),f
  4023                           
  4024                           ;main.c: 226:                     } else PIE1bits.TMR2IE = 1;
  4025  0268  29A7               	goto	l2488
  4026  0269                     l280:	
  4027  0269  0021               	movlb	1	; select bank1
  4028  026A  1491               	bsf	17,1	;volatile
  4029  026B  29A7               	goto	l2488
  4030  026C                     __end_of_main:	
  4031                           
  4032                           	psect	text1
  4033  0444                     __ptext1:	
  4034 ;; *************** function _timer_Init *****************
  4035 ;; Defined at:
  4036 ;;		line 8 in file "timer.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  rate            4    3[COMMON] long 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;		None
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  2    3[COMMON] int 
  4043 ;; Registers used:
  4044 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4050 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4053 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4054 ;;Total ram usage:        4 bytes
  4055 ;; Hardware stack levels used:    1
  4056 ;; Hardware stack levels required when called:    1
  4057 ;; This function calls:
  4058 ;;		Nothing
  4059 ;; This function is called by:
  4060 ;;		_main
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           
  4065                           ;psect for function _timer_Init
  4066  0444                     _timer_Init:	
  4067                           
  4068                           ;timer.c: 9:     PIR1bits.TMR2IF = 0;
  4069                           
  4070                           ;incstack = 0
  4071                           ; Regs used in _timer_Init: [wreg-fsr0h+status,2+status,0]
  4072  0444  0020               	movlb	0	; select bank0
  4073  0445  1091               	bcf	17,1	;volatile
  4074                           
  4075                           ;timer.c: 10:     PIE1bits.TMR2IE = 1;
  4076  0446  0021               	movlb	1	; select bank1
  4077  0447  1491               	bsf	17,1	;volatile
  4078                           
  4079                           ;timer.c: 11:     INTCONbits.PEIE = 1;
  4080  0448  170B               	bsf	11,6	;volatile
  4081                           
  4082                           ;timer.c: 12:     INTCONbits.GIE = 1;
  4083  0449  178B               	bsf	11,7	;volatile
  4084                           
  4085                           ;timer.c: 14:     switch (rate) {
  4086  044A  2C75               	goto	l1764
  4087  044B                     l1736:	
  4088                           
  4089                           ;timer.c: 16:             T2PR = 100;
  4090  044B  3064               	movlw	100
  4091  044C  0029               	movlb	9	; select bank9
  4092  044D  0094               	movwf	20	;volatile
  4093                           
  4094                           ;timer.c: 17:             T2CLKCON = 0x03;
  4095  044E  3003               	movlw	3
  4096  044F  0097               	movwf	23	;volatile
  4097                           
  4098                           ;timer.c: 18:             T2CON = 0x89;
  4099  0450  3089               	movlw	137
  4100  0451  0095               	movwf	21	;volatile
  4101                           
  4102                           ;timer.c: 19:             PIR1bits.TMR2IF = 0;
  4103  0452  0020               	movlb	0	; select bank0
  4104  0453  1091               	bcf	17,1	;volatile
  4105  0454  0008               	return
  4106  0455                     l1744:	
  4107                           
  4108                           ;timer.c: 23:             T2PR = 32;
  4109  0455  3020               	movlw	32
  4110  0456  0029               	movlb	9	; select bank9
  4111  0457  0094               	movwf	20	;volatile
  4112                           
  4113                           ;timer.c: 24:             T2CLKCON = 0x03;
  4114  0458  3003               	movlw	3
  4115  0459  0097               	movwf	23	;volatile
  4116                           
  4117                           ;timer.c: 25:             T2CON = 0x8A;
  4118  045A  308A               	movlw	138
  4119  045B  0095               	movwf	21	;volatile
  4120  045C  0008               	return
  4121  045D                     l1750:	
  4122                           
  4123                           ;timer.c: 29:             T2PR = 111;
  4124  045D  306F               	movlw	111
  4125  045E  0029               	movlb	9	; select bank9
  4126  045F  0094               	movwf	20	;volatile
  4127                           
  4128                           ;timer.c: 30:             T2CLKCON = 0x03;
  4129  0460  3003               	movlw	3
  4130  0461  0097               	movwf	23	;volatile
  4131                           
  4132                           ;timer.c: 31:             T2CON = 0x82;
  4133  0462  3082               	movlw	130
  4134  0463  0095               	movwf	21	;volatile
  4135  0464  0008               	return
  4136  0465                     l1756:	
  4137                           
  4138                           ;timer.c: 35:             T2PR = 100;
  4139  0465  3064               	movlw	100
  4140  0466  0029               	movlb	9	; select bank9
  4141  0467  0094               	movwf	20	;volatile
  4142                           
  4143                           ;timer.c: 36:             T2CLKCON = 0x03;
  4144  0468  3003               	movlw	3
  4145  0469  0097               	movwf	23	;volatile
  4146                           
  4147                           ;timer.c: 37:             T2CON = 0x84;
  4148  046A  3084               	movlw	132
  4149  046B  0095               	movwf	21	;volatile
  4150                           
  4151                           ;timer.c: 38:         break;
  4152  046C  0008               	return
  4153  046D                     l1758:	
  4154                           
  4155                           ;timer.c: 40:             T2PR = 65;
  4156  046D  3041               	movlw	65
  4157  046E  0029               	movlb	9	; select bank9
  4158  046F  0094               	movwf	20	;volatile
  4159                           
  4160                           ;timer.c: 41:             T2CLKCON = 0x03;
  4161  0470  3003               	movlw	3
  4162  0471  0097               	movwf	23	;volatile
  4163                           
  4164                           ;timer.c: 42:             T2CON = 0x8A;
  4165  0472  308A               	movlw	138
  4166  0473  0095               	movwf	21	;volatile
  4167  0474  0008               	return
  4168  0475                     l1764:	
  4169                           
  4170                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4171                           ; Switch size 1, requested type "simple"
  4172                           ; Number of cases is 1, Range of values is 0 to 0
  4173                           ; switch strategies available:
  4174                           ; Name         Instructions Cycles
  4175                           ; simple_byte            4     3 (average)
  4176                           ; direct_byte            8     6 (fixed)
  4177                           ; jumptable            260     6 (fixed)
  4178                           ;	Chosen strategy is simple_byte
  4179  0475  0876               	movf	timer_Init@rate+3,w
  4180  0476  3A00               	xorlw	0	; case 0
  4181  0477  1903               	skipnz
  4182  0478  2CA4               	goto	l2670
  4183  0479  2CA9               	goto	l138
  4184  047A                     l2668:	
  4185                           
  4186                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
  4187                           ; Switch size 1, requested type "simple"
  4188                           ; Number of cases is 5, Range of values is 62 to 187
  4189                           ; switch strategies available:
  4190                           ; Name         Instructions Cycles
  4191                           ; simple_byte           16     9 (average)
  4192                           ; direct_byte          261     9 (fixed)
  4193                           ; jumptable            263     9 (fixed)
  4194                           ;	Chosen strategy is simple_byte
  4195  047A  0874               	movf	timer_Init@rate+1,w
  4196  047B  3A3E               	xorlw	62	; case 62
  4197  047C  1903               	skipnz
  4198  047D  2C8B               	goto	l2672
  4199  047E  3A68               	xorlw	104	; case 86
  4200  047F  1903               	skipnz
  4201  0480  2C90               	goto	l2674
  4202  0481  3A2B               	xorlw	43	; case 125
  4203  0482  1903               	skipnz
  4204  0483  2C95               	goto	l2676
  4205  0484  3AD1               	xorlw	209	; case 172
  4206  0485  1903               	skipnz
  4207  0486  2C9A               	goto	l2678
  4208  0487  3A17               	xorlw	23	; case 187
  4209  0488  1903               	skipnz
  4210  0489  2C9F               	goto	l2680
  4211  048A  2CA9               	goto	l138
  4212  048B                     l2672:	
  4213                           
  4214                           ; Switch size 1, requested type "simple"
  4215                           ; Number of cases is 1, Range of values is 128 to 128
  4216                           ; switch strategies available:
  4217                           ; Name         Instructions Cycles
  4218                           ; simple_byte            4     3 (average)
  4219                           ; direct_byte           11     9 (fixed)
  4220                           ; jumptable            263     9 (fixed)
  4221                           ;	Chosen strategy is simple_byte
  4222  048B  0873               	movf	timer_Init@rate,w
  4223  048C  3A80               	xorlw	128	; case 128
  4224  048D  1903               	skipnz
  4225  048E  2C4B               	goto	l1736
  4226  048F  2CA9               	goto	l138
  4227  0490                     l2674:	
  4228                           
  4229                           ; Switch size 1, requested type "simple"
  4230                           ; Number of cases is 1, Range of values is 34 to 34
  4231                           ; switch strategies available:
  4232                           ; Name         Instructions Cycles
  4233                           ; simple_byte            4     3 (average)
  4234                           ; direct_byte           11     9 (fixed)
  4235                           ; jumptable            263     9 (fixed)
  4236                           ;	Chosen strategy is simple_byte
  4237  0490  0873               	movf	timer_Init@rate,w
  4238  0491  3A22               	xorlw	34	; case 34
  4239  0492  1903               	skipnz
  4240  0493  2C6D               	goto	l1758
  4241  0494  2CA9               	goto	l138
  4242  0495                     l2676:	
  4243                           
  4244                           ; Switch size 1, requested type "simple"
  4245                           ; Number of cases is 1, Range of values is 0 to 0
  4246                           ; switch strategies available:
  4247                           ; Name         Instructions Cycles
  4248                           ; simple_byte            4     3 (average)
  4249                           ; direct_byte            8     6 (fixed)
  4250                           ; jumptable            260     6 (fixed)
  4251                           ;	Chosen strategy is simple_byte
  4252  0495  0873               	movf	timer_Init@rate,w
  4253  0496  3A00               	xorlw	0	; case 0
  4254  0497  1903               	skipnz
  4255  0498  2C65               	goto	l1756
  4256  0499  2CA9               	goto	l138
  4257  049A                     l2678:	
  4258                           
  4259                           ; Switch size 1, requested type "simple"
  4260                           ; Number of cases is 1, Range of values is 68 to 68
  4261                           ; switch strategies available:
  4262                           ; Name         Instructions Cycles
  4263                           ; simple_byte            4     3 (average)
  4264                           ; direct_byte           11     9 (fixed)
  4265                           ; jumptable            263     9 (fixed)
  4266                           ;	Chosen strategy is simple_byte
  4267  049A  0873               	movf	timer_Init@rate,w
  4268  049B  3A44               	xorlw	68	; case 68
  4269  049C  1903               	skipnz
  4270  049D  2C55               	goto	l1744
  4271  049E  2CA9               	goto	l138
  4272  049F                     l2680:	
  4273                           
  4274                           ; Switch size 1, requested type "simple"
  4275                           ; Number of cases is 1, Range of values is 128 to 128
  4276                           ; switch strategies available:
  4277                           ; Name         Instructions Cycles
  4278                           ; simple_byte            4     3 (average)
  4279                           ; direct_byte           11     9 (fixed)
  4280                           ; jumptable            263     9 (fixed)
  4281                           ;	Chosen strategy is simple_byte
  4282  049F  0873               	movf	timer_Init@rate,w
  4283  04A0  3A80               	xorlw	128	; case 128
  4284  04A1  1903               	skipnz
  4285  04A2  2C5D               	goto	l1750
  4286  04A3  2CA9               	goto	l138
  4287  04A4                     l2670:	
  4288                           
  4289                           ; Switch size 1, requested type "simple"
  4290                           ; Number of cases is 1, Range of values is 0 to 0
  4291                           ; switch strategies available:
  4292                           ; Name         Instructions Cycles
  4293                           ; simple_byte            4     3 (average)
  4294                           ; direct_byte            8     6 (fixed)
  4295                           ; jumptable            260     6 (fixed)
  4296                           ;	Chosen strategy is simple_byte
  4297  04A4  0875               	movf	timer_Init@rate+2,w
  4298  04A5  3A00               	xorlw	0	; case 0
  4299  04A6  1903               	skipnz
  4300  04A7  2C7A               	goto	l2668
  4301  04A8  2CA9               	goto	l138
  4302  04A9                     l138:	
  4303  04A9  0008               	return
  4304  04AA                     __end_of_timer_Init:	
  4305                           
  4306                           	psect	text2
  4307  026C                     __ptext2:	
  4308 ;; *************** function _openFile *****************
  4309 ;; Defined at:
  4310 ;;		line 69 in file "main.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  a               4   16[BANK0 ] long 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  data            8   30[BANK0 ] struct .
  4315 ;;  fmt            28   38[BANK0 ] struct .
  4316 ;;  riff            8   21[BANK0 ] struct .
  4317 ;;  response        1   29[BANK0 ] unsigned char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      void 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4327 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4328 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4329 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4330 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4331 ;;Total ram usage:       50 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    4
  4334 ;; This function calls:
  4335 ;;		_SD_OpenStream
  4336 ;;		_SPI_Read
  4337 ;;		_error
  4338 ;;		_fourCCeq
  4339 ;;		_readBytes
  4340 ;; This function is called by:
  4341 ;;		_main
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           
  4346                           ;psect for function _openFile
  4347  026C                     _openFile:	
  4348                           
  4349                           ;main.c: 70:     SD_OpenStream(a);
  4350                           
  4351                           ;incstack = 0
  4352                           ; Regs used in _openFile: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4353  026C  0020               	movlb	0	; select bank0
  4354  026D  0833               	movf	openFile@a+3,w
  4355  026E  00A7               	movwf	SD_OpenStream@address+3
  4356  026F  0832               	movf	openFile@a+2,w
  4357  0270  00A6               	movwf	SD_OpenStream@address+2
  4358  0271  0831               	movf	openFile@a+1,w
  4359  0272  00A5               	movwf	SD_OpenStream@address+1
  4360  0273  0830               	movf	openFile@a,w
  4361  0274  00A4               	movwf	SD_OpenStream@address
  4362  0275  3185  256B  3182   	fcall	_SD_OpenStream
  4363                           
  4364                           ;main.c: 71:     state = OPEN;
  4365  0278  01FA               	clrf	_state
  4366                           
  4367                           ;main.c: 72:     char response = 0xFF;
  4368  0279  30FF               	movlw	255
  4369  027A                     L1:	
  4370  027A  0020               	movlb	0	; select bank0
  4371  027B  00B4               	movwf	??_openFile
  4372  027C  0834               	movf	??_openFile,w
  4373  027D  00BD               	movwf	openFile@response
  4374  027E  0A3D               	incf	openFile@response,w
  4375  027F  1D03               	btfss	3,2
  4376  0280  2A85               	goto	l2352
  4377                           
  4378                           ;main.c: 73:     while (response == 0xFF) response = SPI_Read();
  4379  0281  3185  25F7  3182   	fcall	_SPI_Read
  4380  0284  2A7A               	goto	L1
  4381  0285                     l2352:	
  4382                           
  4383                           ;main.c: 74:     if (response != 0xFE) error(OPEN_BLOCK);
  4384  0285  30FE               	movlw	254
  4385  0286  063D               	xorwf	openFile@response,w
  4386  0287  1903               	btfsc	3,2
  4387  0288  2A8D               	goto	l2356
  4388  0289  3000               	movlw	0
  4389  028A  3185  25E8  3182   	fcall	_error
  4390  028D                     l2356:	
  4391                           
  4392                           ;main.c: 76:     {;main.c: 77:         RiffTag riff;;main.c: 78:         readBytes((char
      +                          *)&riff, sizeof(riff));;
  4393  028D  3008               	movlw	8
  4394  028E  00F3               	movwf	readBytes@len
  4395  028F  3000               	movlw	0
  4396  0290  00F4               	movwf	readBytes@len+1
  4397  0291  3035               	movlw	(low (openFile@riff| 0))& (0+255)
  4398  0292  3184  24AA  3182   	fcall	_readBytes
  4399                           
  4400                           ;main.c: 79:         if (!fourCCeq(riff.ckID, "RIFF")) error(RIFF_HEADER);
  4401  0295  301B               	movlw	low (STR_1| (0+32768))
  4402  0296  00F3               	movwf	fourCCeq@b
  4403  0297  3086               	movlw	high (STR_1| (0+32768))
  4404  0298  00F4               	movwf	fourCCeq@b+1
  4405  0299  3035               	movlw	(low (openFile@riff| 0))& (0+255)
  4406  029A  3185  2545  3182   	fcall	_fourCCeq
  4407  029D  3A00               	xorlw	0
  4408  029E  1D03               	skipz
  4409  029F  2AA4               	goto	l2362
  4410  02A0  3001               	movlw	1
  4411  02A1  3185  25E8  3182   	fcall	_error
  4412  02A4                     l2362:	
  4413                           
  4414                           ;main.c: 80:     }{;main.c: 81:         FmtChunk fmt;;main.c: 82:         readBytes((cha
      +                          r*)&fmt, sizeof(fmt));;
  4415  02A4  301C               	movlw	28
  4416  02A5  00F3               	movwf	readBytes@len
  4417  02A6  3000               	movlw	0
  4418  02A7  00F4               	movwf	readBytes@len+1
  4419  02A8  3046               	movlw	(low (openFile@fmt| 0))& (0+255)
  4420  02A9  3184  24AA  3182   	fcall	_readBytes
  4421                           
  4422                           ;main.c: 83:         if (!fourCCeq(fmt.WAVEID, "WAVE")) error(WAVE_HEADER);
  4423  02AC  3016               	movlw	low (STR_3| (0+32768))
  4424  02AD  00F3               	movwf	fourCCeq@b
  4425  02AE  3086               	movlw	high (STR_3| (0+32768))
  4426  02AF  00F4               	movwf	fourCCeq@b+1
  4427  02B0  3046               	movlw	(low (openFile@fmt| 0))& (0+255)
  4428  02B1  3185  2545  3182   	fcall	_fourCCeq
  4429  02B4  3A00               	xorlw	0
  4430  02B5  1D03               	skipz
  4431  02B6  2ABB               	goto	l2368
  4432  02B7  3002               	movlw	2
  4433  02B8  3185  25E8  3182   	fcall	_error
  4434  02BB                     l2368:	
  4435                           
  4436                           ;main.c: 84:         if (!fourCCeq(fmt.fmtHeader.ckID, "fmt ")) error(FMT_HEADER);
  4437  02BB  3070               	movlw	low (STR_5| (0+32768))
  4438  02BC  00F3               	movwf	fourCCeq@b
  4439  02BD  3081               	movlw	high (STR_5| (0+32768))
  4440  02BE  00F4               	movwf	fourCCeq@b+1
  4441  02BF  304A               	movlw	(low ((openFile@fmt| 0+4)))& (0+255)
  4442  02C0  3185  2545  3182   	fcall	_fourCCeq
  4443  02C3  3A00               	xorlw	0
  4444  02C4  1D03               	skipz
  4445  02C5  2ACA               	goto	l2372
  4446  02C6  3003               	movlw	3
  4447  02C7  3185  25E8  3182   	fcall	_error
  4448  02CA                     l2372:	
  4449                           
  4450                           ;main.c: 85:         if (fmt.formatTag != 0x0001) error(CODEC);
  4451  02CA  0020               	movlb	0	; select bank0
  4452  02CB  0352               	decf	openFile@fmt+12,w
  4453  02CC  0453               	iorwf	openFile@fmt+13,w
  4454  02CD  1903               	btfsc	3,2
  4455  02CE  2AD3               	goto	l2376
  4456  02CF  3004               	movlw	4
  4457  02D0  3185  25E8  3182   	fcall	_error
  4458  02D3                     l2376:	
  4459                           
  4460                           ;main.c: 86:         if (fmt.bitsPerSamp != 16) error(BIT_DEPTH);
  4461  02D3  3010               	movlw	16
  4462  02D4  0020               	movlb	0	; select bank0
  4463  02D5  0660               	xorwf	openFile@fmt+26,w
  4464  02D6  0461               	iorwf	openFile@fmt+27,w
  4465  02D7  1903               	btfsc	3,2
  4466  02D8  2ADD               	goto	l2380
  4467  02D9  3005               	movlw	5
  4468  02DA  3185  25E8  3182   	fcall	_error
  4469  02DD                     l2380:	
  4470                           
  4471                           ;main.c: 88:         channels = fmt.channels;
  4472  02DD  0020               	movlb	0	; select bank0
  4473  02DE  0855               	movf	openFile@fmt+15,w
  4474  02DF  0021               	movlb	1	; select bank1
  4475  02E0  00B1               	movwf	(_channels+1)^(0+128)
  4476  02E1  0020               	movlb	0	; select bank0
  4477  02E2  0854               	movf	openFile@fmt+14,w
  4478  02E3  0021               	movlb	1	; select bank1
  4479  02E4  00B0               	movwf	_channels^(0+128)
  4480                           
  4481                           ;main.c: 89:         sampRate = fmt.sampRate;
  4482  02E5  3010               	movlw	16
  4483  02E6  3E46               	addlw	(low (openFile@fmt| 0))& (0+255)
  4484  02E7  0086               	movwf	6
  4485  02E8  0187               	clrf	7
  4486  02E9  3F40               	moviw [0]fsr1
  4487  02EA  00A8               	movwf	_sampRate^(0+128)
  4488  02EB  3F41               	moviw [1]fsr1
  4489  02EC  00A9               	movwf	(_sampRate+1)^(0+128)
  4490  02ED  3F42               	moviw [2]fsr1
  4491  02EE  00AA               	movwf	(_sampRate+2)^(0+128)
  4492  02EF  3F43               	moviw [3]fsr1
  4493  02F0  00AB               	movwf	(_sampRate+3)^(0+128)
  4494                           
  4495                           ;main.c: 91:     }{;main.c: 92:         RiffTag data;;main.c: 93:         readBytes((cha
      +                          r*)&data, sizeof(data));;
  4496  02F1  3008               	movlw	8
  4497  02F2  00F3               	movwf	readBytes@len
  4498  02F3  3000               	movlw	0
  4499  02F4  00F4               	movwf	readBytes@len+1
  4500  02F5  303E               	movlw	(low (openFile@data| 0))& (0+255)
  4501  02F6  3184  24AA  3182   	fcall	_readBytes
  4502                           
  4503                           ;main.c: 94:         if (!fourCCeq(data.ckID, "data")) error(DATA_HEADER);
  4504  02F9  3020               	movlw	low (STR_7| (0+32768))
  4505  02FA  00F3               	movwf	fourCCeq@b
  4506  02FB  3086               	movlw	high (STR_7| (0+32768))
  4507  02FC  00F4               	movwf	fourCCeq@b+1
  4508  02FD  303E               	movlw	(low (openFile@data| 0))& (0+255)
  4509  02FE  3185  2545  3182   	fcall	_fourCCeq
  4510  0301  3A00               	xorlw	0
  4511  0302  1D03               	skipz
  4512  0303  2B07               	goto	l2390
  4513  0304  3006               	movlw	6
  4514  0305  3185  25E8         	fcall	_error
  4515  0307                     l2390:	
  4516                           
  4517                           ;main.c: 95:         filesize = data.ckSize;
  4518  0307  3004               	movlw	4
  4519  0308  3E3E               	addlw	(low (openFile@data| 0))& (0+255)
  4520  0309  0086               	movwf	6
  4521  030A  0187               	clrf	7
  4522  030B  3F40               	moviw [0]fsr1
  4523  030C  0021               	movlb	1	; select bank1
  4524  030D  00A4               	movwf	_filesize^(0+128)
  4525  030E  3F41               	moviw [1]fsr1
  4526  030F  00A5               	movwf	(_filesize+1)^(0+128)
  4527  0310  3F42               	moviw [2]fsr1
  4528  0311  00A6               	movwf	(_filesize+2)^(0+128)
  4529  0312  3F43               	moviw [3]fsr1
  4530  0313  00A7               	movwf	(_filesize+3)^(0+128)
  4531                           
  4532                           ;main.c: 96:     };main.c: 97:         __nop();
  4533  0314  0000               	nop
  4534  0315  0008               	return
  4535  0316                     __end_of_openFile:	
  4536                           
  4537                           	psect	text3
  4538  04AA                     __ptext3:	
  4539 ;; *************** function _readBytes *****************
  4540 ;; Defined at:
  4541 ;;		line 55 in file "main.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  dest            1    wreg     PTR unsigned char 
  4544 ;;		 -> openFile@data(8), openFile@fmt(28), openFile@riff(8), 
  4545 ;;  len             2    3[COMMON] int 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  dest            1    0[BANK0 ] PTR unsigned char 
  4548 ;;		 -> openFile@data(8), openFile@fmt(28), openFile@riff(8), 
  4549 ;;  i               2    1[BANK0 ] int 
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      void 
  4552 ;; Registers used:
  4553 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4560 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4561 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4562 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4563 ;;Total ram usage:        7 bytes
  4564 ;; Hardware stack levels used:    1
  4565 ;; Hardware stack levels required when called:    3
  4566 ;; This function calls:
  4567 ;;		_SD_CloseBlock
  4568 ;;		_SPI_Read
  4569 ;; This function is called by:
  4570 ;;		_openFile
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           
  4575                           ;psect for function _readBytes
  4576  04AA                     _readBytes:	
  4577                           
  4578                           ;incstack = 0
  4579                           ; Regs used in _readBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4580                           ;readBytes@dest stored from wreg
  4581  04AA  0020               	movlb	0	; select bank0
  4582  04AB  00A0               	movwf	readBytes@dest
  4583                           
  4584                           ;main.c: 56:     for (int i=0; i<len; i++) {
  4585  04AC  01A1               	clrf	readBytes@i
  4586  04AD  01A2               	clrf	readBytes@i+1
  4587  04AE                     l2340:	
  4588  04AE  0822               	movf	readBytes@i+1,w
  4589  04AF  3A80               	xorlw	128
  4590  04B0  00F5               	movwf	??_readBytes
  4591  04B1  0874               	movf	readBytes@len+1,w
  4592  04B2  3A80               	xorlw	128
  4593  04B3  0275               	subwf	??_readBytes,w
  4594  04B4  1D03               	skipz
  4595  04B5  2CB8               	goto	u965
  4596  04B6  0873               	movf	readBytes@len,w
  4597  04B7  0221               	subwf	readBytes@i,w
  4598  04B8                     u965:	
  4599  04B8  1803               	btfsc	3,0
  4600  04B9  0008               	return
  4601                           
  4602                           ;main.c: 57:         dest[i] = SPI_Read();
  4603  04BA  3185  25F7  3184   	fcall	_SPI_Read
  4604  04BD  00F5               	movwf	??_readBytes
  4605  04BE  0020               	movlb	0	; select bank0
  4606  04BF  0821               	movf	readBytes@i,w
  4607  04C0  0720               	addwf	readBytes@dest,w
  4608  04C1  00F6               	movwf	??_readBytes+1
  4609  04C2  0876               	movf	??_readBytes+1,w
  4610  04C3  0086               	movwf	6
  4611  04C4  0187               	clrf	7
  4612  04C5  0875               	movf	??_readBytes,w
  4613  04C6  0081               	movwf	1
  4614                           
  4615                           ;main.c: 58:         ++blockIndex;
  4616  04C7  3001               	movlw	1
  4617  04C8  0021               	movlb	1	; select bank1
  4618  04C9  07AC               	addwf	_blockIndex^(0+128),f
  4619  04CA  3000               	movlw	0
  4620  04CB  3DAD               	addwfc	(_blockIndex+1)^(0+128),f
  4621                           
  4622                           ;main.c: 59:         if (blockIndex >= 512) {
  4623  04CC  082D               	movf	(_blockIndex+1)^(0+128),w
  4624  04CD  3A80               	xorlw	128
  4625  04CE  00F5               	movwf	??_readBytes
  4626  04CF  3082               	movlw	130
  4627  04D0  0275               	subwf	??_readBytes,w
  4628  04D1  1D03               	skipz
  4629  04D2  2CD5               	goto	u955
  4630  04D3  3000               	movlw	0
  4631  04D4  022C               	subwf	_blockIndex^(0+128),w
  4632  04D5                     u955:	
  4633  04D5  1C03               	skipc
  4634  04D6  2CE9               	goto	l2338
  4635                           
  4636                           ;main.c: 60:             SD_CloseBlock();
  4637  04D7  3185  25DF  3184   	fcall	_SD_CloseBlock
  4638                           
  4639                           ;main.c: 61:             ++address;
  4640  04DA  3001               	movlw	1
  4641  04DB  0021               	movlb	1	; select bank1
  4642  04DC  07A0               	addwf	_address^(0+128),f
  4643  04DD  3000               	movlw	0
  4644  04DE  3DA1               	addwfc	(_address+1)^(0+128),f
  4645  04DF  3000               	movlw	0
  4646  04E0  3DA2               	addwfc	(_address+2)^(0+128),f
  4647  04E1  3000               	movlw	0
  4648  04E2  3DA3               	addwfc	(_address+3)^(0+128),f
  4649                           
  4650                           ;main.c: 62:             blockIndex = 0;
  4651  04E3  01AC               	clrf	_blockIndex^(0+128)
  4652  04E4  01AD               	clrf	(_blockIndex+1)^(0+128)
  4653                           
  4654                           ;main.c: 63:             state = CLOSED;
  4655  04E5  3003               	movlw	3
  4656  04E6  00F5               	movwf	??_readBytes
  4657  04E7  0875               	movf	??_readBytes,w
  4658  04E8  00FA               	movwf	_state
  4659  04E9                     l2338:	
  4660                           
  4661                           ;main.c: 65:     }
  4662  04E9  3001               	movlw	1
  4663  04EA  0020               	movlb	0	; select bank0
  4664  04EB  07A1               	addwf	readBytes@i,f
  4665  04EC  3000               	movlw	0
  4666  04ED  3DA2               	addwfc	readBytes@i+1,f
  4667  04EE  2CAE               	goto	l2340
  4668  04EF                     __end_of_readBytes:	
  4669                           
  4670                           	psect	text4
  4671  05DF                     __ptext4:	
  4672 ;; *************** function _SD_CloseBlock *****************
  4673 ;; Defined at:
  4674 ;;		line 275 in file "SD.c"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;		None
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;		None
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  1    wreg      _Bool 
  4681 ;; Registers used:
  4682 ;;		wreg, status,2, status,0, pclath, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4692 ;;Total ram usage:        0 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    2
  4695 ;; This function calls:
  4696 ;;		_SPI_Read
  4697 ;; This function is called by:
  4698 ;;		_readBytes
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           
  4703                           ;psect for function _SD_CloseBlock
  4704  05DF                     _SD_CloseBlock:	
  4705                           
  4706                           ;SD.c: 277:     SPI_Read();
  4707                           
  4708                           ;incstack = 0
  4709                           ; Regs used in _SD_CloseBlock: [wreg+status,2+status,0+pclath+cstack]
  4710  05DF  3185  25F7  3185   	fcall	_SPI_Read
  4711                           
  4712                           ;SD.c: 278:     SPI_Read();
  4713  05E2  3185  25F7  3185   	fcall	_SPI_Read
  4714                           
  4715                           ;SD.c: 280:     SPI_Read();
  4716  05E5  3185  25F7         	fcall	_SPI_Read
  4717  05E7  0008               	return
  4718  05E8                     __end_of_SD_CloseBlock:	
  4719                           
  4720                           	psect	text5
  4721  0545                     __ptext5:	
  4722 ;; *************** function _fourCCeq *****************
  4723 ;; Defined at:
  4724 ;;		line 48 in file "main.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;  a               1    wreg     PTR unsigned char 
  4727 ;;		 -> openFile@data(8), fmt.fmtHeader(8), openFile@fmt(28), openFile@riff(8), 
  4728 ;;  b               2    3[COMMON] PTR unsigned char 
  4729 ;;		 -> STR_8(5), STR_6(5), STR_4(5), STR_2(5), 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  a               1    5[COMMON] PTR unsigned char 
  4732 ;;		 -> openFile@data(8), fmt.fmtHeader(8), openFile@fmt(28), openFile@riff(8), 
  4733 ;;  i               1    6[COMMON] unsigned char 
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      _Bool 
  4736 ;; Registers used:
  4737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4744 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4745 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4746 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4747 ;;Total ram usage:        8 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; Hardware stack levels required when called:    1
  4750 ;; This function calls:
  4751 ;;		Nothing
  4752 ;; This function is called by:
  4753 ;;		_openFile
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           
  4758                           ;psect for function _fourCCeq
  4759  0545                     _fourCCeq:	
  4760                           
  4761                           ;incstack = 0
  4762                           ; Regs used in _fourCCeq: [wreg-fsr1h+status,2+status,0+pclath]
  4763                           ;fourCCeq@a stored from wreg
  4764  0545  00F5               	movwf	fourCCeq@a
  4765                           
  4766                           ;main.c: 49:     for (char i=0; i<4; i++) {
  4767  0546  01F6               	clrf	fourCCeq@i
  4768  0547                     l2308:	
  4769                           
  4770                           ;main.c: 50:         if (a[i] != b[i]) return 0;
  4771  0547  0874               	movf	fourCCeq@b+1,w
  4772  0548  0020               	movlb	0	; select bank0
  4773  0549  00A1               	movwf	??_fourCCeq+1
  4774  054A  0873               	movf	fourCCeq@b,w
  4775  054B  00A0               	movwf	??_fourCCeq
  4776  054C  0876               	movf	fourCCeq@i,w
  4777  054D  0720               	addwf	??_fourCCeq,w
  4778  054E  0084               	movwf	4
  4779  054F  0821               	movf	??_fourCCeq+1,w
  4780  0550  1803               	skipnc
  4781  0551  0A21               	incf	??_fourCCeq+1,w
  4782  0552  0085               	movwf	5
  4783  0553  0800               	movf	0,w	;code access
  4784  0554  00A2               	movwf	??_fourCCeq+2
  4785  0555  0876               	movf	fourCCeq@i,w
  4786  0556  0775               	addwf	fourCCeq@a,w
  4787  0557  00A3               	movwf	??_fourCCeq+3
  4788  0558  0823               	movf	??_fourCCeq+3,w
  4789  0559  0086               	movwf	6
  4790  055A  0187               	clrf	7
  4791  055B  0801               	movf	1,w
  4792  055C  0622               	xorwf	??_fourCCeq+2,w
  4793  055D  1903               	skipnz
  4794  055E  2D61               	goto	l2314
  4795  055F  3000               	movlw	0
  4796  0560  0008               	return
  4797  0561                     l2314:	
  4798                           
  4799                           ;main.c: 51:     }
  4800  0561  3001               	movlw	1
  4801  0562  00A0               	movwf	??_fourCCeq
  4802  0563  0820               	movf	??_fourCCeq,w
  4803  0564  07F6               	addwf	fourCCeq@i,f
  4804  0565  3004               	movlw	4
  4805  0566  0276               	subwf	fourCCeq@i,w
  4806  0567  1C03               	skipc
  4807  0568  2D47               	goto	l2308
  4808                           
  4809                           ;main.c: 52:     return 1;
  4810  0569  3001               	movlw	1
  4811  056A  0008               	return
  4812  056B                     __end_of_fourCCeq:	
  4813                           
  4814                           	psect	text6
  4815  05E8                     __ptext6:	
  4816 ;; *************** function _error *****************
  4817 ;; Defined at:
  4818 ;;		line 17 in file "./error.h"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  e               1    wreg     enum E12103
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  e               1    4[COMMON] enum E12103
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  1    wreg      void 
  4825 ;; Registers used:
  4826 ;;		wreg
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4833 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4836 ;;Total ram usage:        2 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    1
  4839 ;; This function calls:
  4840 ;;		Nothing
  4841 ;; This function is called by:
  4842 ;;		_openFile
  4843 ;;		_main
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           
  4848                           ;psect for function _error
  4849  05E8                     _error:	
  4850                           
  4851                           ;incstack = 0
  4852                           ; Regs used in _error: [wreg]
  4853                           ;error@e stored from wreg
  4854  05E8  00F4               	movwf	error@e
  4855                           
  4856                           ;./error.h: 19:     global_error = e;
  4857  05E9  0874               	movf	error@e,w
  4858  05EA  00F3               	movwf	??_error
  4859  05EB  0873               	movf	??_error,w
  4860  05EC  0020               	movlb	0	; select bank0
  4861  05ED  00EC               	movwf	_global_error
  4862                           
  4863                           ;./error.h: 20:     __nop();
  4864  05EE  0000               	nop
  4865  05EF  0008               	return
  4866  05F0                     __end_of_error:	
  4867                           
  4868                           	psect	text7
  4869  056B                     __ptext7:	
  4870 ;; *************** function _SD_OpenStream *****************
  4871 ;; Defined at:
  4872 ;;		line 284 in file "SD.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  address         4    4[BANK0 ] long 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;  a               4   12[BANK0 ] struct .
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  1    wreg      _Bool 
  4879 ;; Registers used:
  4880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4886 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4887 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4888 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4889 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4890 ;;Total ram usage:       12 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; Hardware stack levels required when called:    3
  4893 ;; This function calls:
  4894 ;;		_SD_Check8bitResponse
  4895 ;;		_SD_Read8bitResponse
  4896 ;;		_SD_SendCommand
  4897 ;; This function is called by:
  4898 ;;		_openFile
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           
  4902                           
  4903                           ;psect for function _SD_OpenStream
  4904  056B                     _SD_OpenStream:	
  4905                           
  4906                           ;SD.c: 288:     BlockAddress a = *((BlockAddress*)(&address));
  4907                           
  4908                           ;incstack = 0
  4909                           ; Regs used in _SD_OpenStream: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4910  056B  0020               	movlb	0	; select bank0
  4911  056C  0827               	movf	SD_OpenStream@address+3,w
  4912  056D  00AF               	movwf	SD_OpenStream@a+3
  4913  056E  0826               	movf	SD_OpenStream@address+2,w
  4914  056F  00AE               	movwf	SD_OpenStream@a+2
  4915  0570  0825               	movf	SD_OpenStream@address+1,w
  4916  0571  00AD               	movwf	SD_OpenStream@a+1
  4917  0572  0824               	movf	SD_OpenStream@address,w
  4918  0573  00AC               	movwf	SD_OpenStream@a
  4919                           
  4920                           ;SD.c: 290:     SD_SendCommand(18, a.a3, a.a2, a.a1, a.a0);
  4921  0574  082F               	movf	SD_OpenStream@a+3,w
  4922  0575  00A8               	movwf	??_SD_OpenStream
  4923  0576  0828               	movf	??_SD_OpenStream,w
  4924  0577  00F4               	movwf	SD_SendCommand@ARG3
  4925  0578  082E               	movf	SD_OpenStream@a+2,w
  4926  0579  00A9               	movwf	??_SD_OpenStream+1
  4927  057A  0829               	movf	??_SD_OpenStream+1,w
  4928  057B  00F5               	movwf	SD_SendCommand@ARG2
  4929  057C  082D               	movf	SD_OpenStream@a+1,w
  4930  057D  00AA               	movwf	??_SD_OpenStream+2
  4931  057E  082A               	movf	??_SD_OpenStream+2,w
  4932  057F  00F6               	movwf	SD_SendCommand@ARG1
  4933  0580  082C               	movf	SD_OpenStream@a,w
  4934  0581  00AB               	movwf	??_SD_OpenStream+3
  4935  0582  082B               	movf	??_SD_OpenStream+3,w
  4936  0583  00F7               	movwf	SD_SendCommand@ARG0
  4937  0584  3012               	movlw	18
  4938  0585  3183  2316  3185   	fcall	_SD_SendCommand
  4939                           
  4940                           ;SD.c: 293:     SD_Read8bitResponse();
  4941  0588  3185  25C4  3185   	fcall	_SD_Read8bitResponse
  4942                           
  4943                           ;SD.c: 296:     if(SD_Check8bitResponse(0x00) == 0) return 0;
  4944  058B  3000               	movlw	0
  4945  058C  3185  25D5         	fcall	_SD_Check8bitResponse
  4946  058E  0008               	return
  4947  058F                     __end_of_SD_OpenStream:	
  4948                           
  4949                           	psect	text8
  4950  05AC                     __ptext8:	
  4951 ;; *************** function _init *****************
  4952 ;; Defined at:
  4953 ;;		line 101 in file "main.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;		None
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;		None
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      void 
  4960 ;; Registers used:
  4961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4971 ;;Total ram usage:        0 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    4
  4974 ;; This function calls:
  4975 ;;		_DAC_Init
  4976 ;;		_SD_Init
  4977 ;;		_SPI_Init
  4978 ;; This function is called by:
  4979 ;;		_main
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           
  4984                           ;psect for function _init
  4985  05AC                     _init:	
  4986                           
  4987                           ;main.c: 103:     OSCCON = 0xF4;
  4988                           
  4989                           ;incstack = 0
  4990                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4991  05AC  30F4               	movlw	244
  4992  05AD  0021               	movlb	1	; select bank1
  4993  05AE  009B               	movwf	27	;volatile
  4994  05AF                     l259:	
  4995                           ;main.c: 104:     while(OSCSTATbits.HFIOFR == 0);
  4996                           
  4997  05AF  1E1C               	btfss	28,4	;volatile
  4998  05B0  2DAF               	goto	l259
  4999                           
  5000                           ;main.c: 106:     TRISB1 = 1;
  5001  05B1  148D               	bsf	13,1	;volatile
  5002                           
  5003                           ;main.c: 107:     ANSB1 = 0;
  5004  05B2  0023               	movlb	3	; select bank3
  5005  05B3  108D               	bcf	13,1	;volatile
  5006                           
  5007                           ;main.c: 109:     TRISC0 = 0;
  5008  05B4  0021               	movlb	1	; select bank1
  5009  05B5  100E               	bcf	14,0	;volatile
  5010                           
  5011                           ;main.c: 110:     TRISC1 = 0;
  5012  05B6  108E               	bcf	14,1	;volatile
  5013                           
  5014                           ;main.c: 111:     TRISB0 = 0;
  5015  05B7  100D               	bcf	13,0	;volatile
  5016                           
  5017                           ;main.c: 112:     TRISC6 = 0;
  5018  05B8  130E               	bcf	14,6	;volatile
  5019                           
  5020                           ;main.c: 114:     PORTCbits.RC6 = 1;
  5021  05B9  0020               	movlb	0	; select bank0
  5022  05BA  170E               	bsf	14,6	;volatile
  5023                           
  5024                           ;main.c: 117:     SPI_Init();
  5025  05BB  3185  258F  3185   	fcall	_SPI_Init
  5026                           
  5027                           ;main.c: 118:     SD_Init();
  5028  05BE  3183  23B5  3185   	fcall	_SD_Init
  5029                           
  5030                           ;main.c: 119:     DAC_Init();
  5031  05C1  3185  25FE         	fcall	_DAC_Init
  5032  05C3  0008               	return
  5033  05C4                     __end_of_init:	
  5034                           
  5035                           	psect	text9
  5036  058F                     __ptext9:	
  5037 ;; *************** function _SPI_Init *****************
  5038 ;; Defined at:
  5039 ;;		line 7 in file "SPI.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;		None
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;		None
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  1    wreg      void 
  5046 ;; Registers used:
  5047 ;;		wreg, status,2
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5057 ;;Total ram usage:        0 bytes
  5058 ;; Hardware stack levels used:    1
  5059 ;; Hardware stack levels required when called:    1
  5060 ;; This function calls:
  5061 ;;		Nothing
  5062 ;; This function is called by:
  5063 ;;		_init
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           
  5068                           ;psect for function _SPI_Init
  5069  058F                     _SPI_Init:	
  5070                           
  5071                           ;SPI.c: 9:     TRISC2 = 0;
  5072                           
  5073                           ;incstack = 0
  5074                           ; Regs used in _SPI_Init: [wreg+status,2]
  5075  058F  0021               	movlb	1	; select bank1
  5076  0590  110E               	bcf	14,2	;volatile
  5077                           
  5078                           ;SPI.c: 10:     RC2PPS = 0x21;
  5079  0591  3021               	movlw	33
  5080  0592  003D               	movlb	29	; select bank29
  5081  0593  00A2               	movwf	34	;volatile
  5082                           
  5083                           ;SPI.c: 11:     SSPCLKPPS = 0x12;
  5084  0594  3012               	movlw	18
  5085  0595  003C               	movlb	28	; select bank28
  5086  0596  00BA               	movwf	58	;volatile
  5087                           
  5088                           ;SPI.c: 14:     TRISC3 = 1;
  5089  0597  0021               	movlb	1	; select bank1
  5090  0598  158E               	bsf	14,3	;volatile
  5091                           
  5092                           ;SPI.c: 15:     ANSC3 = 0;
  5093  0599  0023               	movlb	3	; select bank3
  5094  059A  118E               	bcf	14,3	;volatile
  5095                           
  5096                           ;SPI.c: 16:     SSPDATPPS = 0x13;
  5097  059B  3013               	movlw	19
  5098  059C  003C               	movlb	28	; select bank28
  5099  059D  00BB               	movwf	59	;volatile
  5100                           
  5101                           ;SPI.c: 19:     TRISC4 = 0;
  5102  059E  0021               	movlb	1	; select bank1
  5103  059F  120E               	bcf	14,4	;volatile
  5104                           
  5105                           ;SPI.c: 20:     RC4PPS = 0x23;
  5106  05A0  3023               	movlw	35
  5107  05A1  003D               	movlb	29	; select bank29
  5108  05A2  00A4               	movwf	36	;volatile
  5109                           
  5110                           ;SPI.c: 23:     TRISC7 = 0;
  5111  05A3  0021               	movlb	1	; select bank1
  5112  05A4  138E               	bcf	14,7	;volatile
  5113                           
  5114                           ;SPI.c: 26:     SSP1STAT = 0x80;
  5115  05A5  3080               	movlw	128
  5116  05A6  0024               	movlb	4	; select bank4
  5117  05A7  0094               	movwf	20	;volatile
  5118                           
  5119                           ;SPI.c: 29:     SSP1CON1 = 0x30;
  5120  05A8  3030               	movlw	48
  5121  05A9  0095               	movwf	21	;volatile
  5122                           
  5123                           ;SPI.c: 32:     SSP1ADD = 0x00;
  5124  05AA  0192               	clrf	18	;volatile
  5125  05AB  0008               	return
  5126  05AC                     __end_of_SPI_Init:	
  5127                           
  5128                           	psect	text10
  5129  03B5                     __ptext10:	
  5130 ;; *************** function _SD_Init *****************
  5131 ;; Defined at:
  5132 ;;		line 11 in file "SD.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;		None
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;		None
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      void 
  5139 ;; Registers used:
  5140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5148 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5149 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5150 ;;Total ram usage:        1 bytes
  5151 ;; Hardware stack levels used:    1
  5152 ;; Hardware stack levels required when called:    3
  5153 ;; This function calls:
  5154 ;;		_SD_Check40bitResponse
  5155 ;;		_SD_Check8bitResponse
  5156 ;;		_SD_Read40bitResponse
  5157 ;;		_SD_Read8bitResponse
  5158 ;;		_SD_SendCommand
  5159 ;;		_SPI_Write
  5160 ;; This function is called by:
  5161 ;;		_init
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           
  5166                           ;psect for function _SD_Init
  5167  03B5                     _SD_Init:	
  5168                           
  5169                           ;SD.c: 14:     { PORTCbits.RC7 = 1; SSP1CON1bits.WCOL = 0; };
  5170                           
  5171                           ;incstack = 0
  5172                           ; Regs used in _SD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5173  03B5  0020               	movlb	0	; select bank0
  5174  03B6  178E               	bsf	14,7	;volatile
  5175  03B7  0024               	movlb	4	; select bank4
  5176  03B8  1395               	bcf	21,7	;volatile
  5177                           
  5178                           ;SD.c: 16:     SPI_Write(0xFF);
  5179  03B9  30FF               	movlw	255
  5180  03BA  3185  25F0  3183   	fcall	_SPI_Write
  5181                           
  5182                           ;SD.c: 17:     SPI_Write(0xFF);
  5183  03BD  30FF               	movlw	255
  5184  03BE  3185  25F0  3183   	fcall	_SPI_Write
  5185                           
  5186                           ;SD.c: 18:     SPI_Write(0xFF);
  5187  03C1  30FF               	movlw	255
  5188  03C2  3185  25F0  3183   	fcall	_SPI_Write
  5189                           
  5190                           ;SD.c: 19:     SPI_Write(0xFF);
  5191  03C5  30FF               	movlw	255
  5192  03C6  3185  25F0  3183   	fcall	_SPI_Write
  5193                           
  5194                           ;SD.c: 20:     SPI_Write(0xFF);
  5195  03C9  30FF               	movlw	255
  5196  03CA  3185  25F0  3183   	fcall	_SPI_Write
  5197                           
  5198                           ;SD.c: 21:     SPI_Write(0xFF);
  5199  03CD  30FF               	movlw	255
  5200  03CE  3185  25F0  3183   	fcall	_SPI_Write
  5201                           
  5202                           ;SD.c: 22:     SPI_Write(0xFF);
  5203  03D1  30FF               	movlw	255
  5204  03D2  3185  25F0  3183   	fcall	_SPI_Write
  5205                           
  5206                           ;SD.c: 23:     SPI_Write(0xFF);
  5207  03D5  30FF               	movlw	255
  5208  03D6  3185  25F0  3183   	fcall	_SPI_Write
  5209                           
  5210                           ;SD.c: 24:     SPI_Write(0xFF);
  5211  03D9  30FF               	movlw	255
  5212  03DA  3185  25F0  3183   	fcall	_SPI_Write
  5213                           
  5214                           ;SD.c: 25:     SPI_Write(0xFF);
  5215  03DD  30FF               	movlw	255
  5216  03DE  3185  25F0  3183   	fcall	_SPI_Write
  5217                           
  5218                           ;SD.c: 27:     { PORTCbits.RC7 = 0; SSP1CON1bits.WCOL = 0; };
  5219  03E1  0020               	movlb	0	; select bank0
  5220  03E2  138E               	bcf	14,7	;volatile
  5221  03E3  0024               	movlb	4	; select bank4
  5222  03E4  1395               	bcf	21,7	;volatile
  5223  03E5                     l2268:	
  5224                           
  5225                           ;SD.c: 34:         SD_SendCommand(0, 0x00, 0x00, 0x00, 0x00);
  5226  03E5  01F4               	clrf	SD_SendCommand@ARG3
  5227  03E6  01F5               	clrf	SD_SendCommand@ARG2
  5228  03E7  01F6               	clrf	SD_SendCommand@ARG1
  5229  03E8  01F7               	clrf	SD_SendCommand@ARG0
  5230  03E9  3000               	movlw	0
  5231  03EA  3183  2316  3183   	fcall	_SD_SendCommand
  5232                           
  5233                           ;SD.c: 35:         SD_Read8bitResponse();
  5234  03ED  3185  25C4  3183   	fcall	_SD_Read8bitResponse
  5235  03F0  0000               	nop	;# 
  5236                           
  5237                           ;SD.c: 37:     } while (SD_Check8bitResponse(0x01) == 0);
  5238  03F1  3001               	movlw	1
  5239  03F2  3185  25D5  3183   	fcall	_SD_Check8bitResponse
  5240  03F5  3A00               	xorlw	0
  5241  03F6  1903               	skipnz
  5242  03F7  2BE5               	goto	l2268
  5243  03F8                     l2274:	
  5244                           
  5245                           ;SD.c: 44:         SD_SendCommand(8, 0x00, 0x00, 0x01, 0xAA);
  5246  03F8  01F4               	clrf	SD_SendCommand@ARG3
  5247  03F9  01F5               	clrf	SD_SendCommand@ARG2
  5248  03FA  01F6               	clrf	SD_SendCommand@ARG1
  5249  03FB  0AF6               	incf	SD_SendCommand@ARG1,f
  5250  03FC  30AA               	movlw	170
  5251  03FD  0020               	movlb	0	; select bank0
  5252  03FE  00A4               	movwf	??_SD_Init
  5253  03FF  0824               	movf	??_SD_Init,w
  5254  0400  00F7               	movwf	SD_SendCommand@ARG0
  5255  0401  3008               	movlw	8
  5256  0402  3183  2316  3183   	fcall	_SD_SendCommand
  5257                           
  5258                           ;SD.c: 45:         SD_Read40bitResponse();
  5259  0405  3184  24EF  3183   	fcall	_SD_Read40bitResponse
  5260  0408  0000               	nop	;# 
  5261                           
  5262                           ;SD.c: 47:     } while (SD_Check40bitResponse(0x01, 0x00, 0x00, 0x01, 0xAA) == 0);
  5263  0409  01F3               	clrf	SD_Check40bitResponse@Byte3
  5264  040A  01F4               	clrf	SD_Check40bitResponse@Byte2
  5265  040B  01F5               	clrf	SD_Check40bitResponse@Byte1
  5266  040C  0AF5               	incf	SD_Check40bitResponse@Byte1,f
  5267  040D  30AA               	movlw	170
  5268  040E  0020               	movlb	0	; select bank0
  5269  040F  00A4               	movwf	??_SD_Init
  5270  0410  0824               	movf	??_SD_Init,w
  5271  0411  00F6               	movwf	SD_Check40bitResponse@Byte0
  5272  0412  3001               	movlw	1
  5273  0413  3185  251C  3183   	fcall	_SD_Check40bitResponse
  5274  0416  3A00               	xorlw	0
  5275  0417  1903               	skipnz
  5276  0418  2BF8               	goto	l2274
  5277  0419                     l2280:	
  5278                           
  5279                           ;SD.c: 55:             SD_SendCommand(55, 0x00, 0x00, 0x00, 0x00);
  5280  0419  01F4               	clrf	SD_SendCommand@ARG3
  5281  041A  01F5               	clrf	SD_SendCommand@ARG2
  5282  041B  01F6               	clrf	SD_SendCommand@ARG1
  5283  041C  01F7               	clrf	SD_SendCommand@ARG0
  5284  041D  3037               	movlw	55
  5285  041E  3183  2316  3183   	fcall	_SD_SendCommand
  5286                           
  5287                           ;SD.c: 56:             SD_Read8bitResponse();
  5288  0421  3185  25C4  3183   	fcall	_SD_Read8bitResponse
  5289  0424  0000               	nop	;# 
  5290                           
  5291                           ;SD.c: 58:         } while (SD_Check8bitResponse(0x01) == 0);
  5292  0425  3001               	movlw	1
  5293  0426  3185  25D5  3183   	fcall	_SD_Check8bitResponse
  5294  0429  3A00               	xorlw	0
  5295  042A  1903               	skipnz
  5296  042B  2C19               	goto	l2280
  5297                           
  5298                           ;SD.c: 65:         SD_SendCommand(41, 0x40, 0x00, 0x00, 0x00);
  5299  042C  3040               	movlw	64
  5300  042D  0020               	movlb	0	; select bank0
  5301  042E  00A4               	movwf	??_SD_Init
  5302  042F  0824               	movf	??_SD_Init,w
  5303  0430  00F4               	movwf	SD_SendCommand@ARG3
  5304  0431  01F5               	clrf	SD_SendCommand@ARG2
  5305  0432  01F6               	clrf	SD_SendCommand@ARG1
  5306  0433  01F7               	clrf	SD_SendCommand@ARG0
  5307  0434  3029               	movlw	41
  5308  0435  3183  2316  3183   	fcall	_SD_SendCommand
  5309                           
  5310                           ;SD.c: 66:         SD_Read8bitResponse();
  5311  0438  3185  25C4  3183   	fcall	_SD_Read8bitResponse
  5312  043B  0000               	nop	;# 
  5313                           
  5314                           ;SD.c: 68:     } while (SD_Check8bitResponse(0x00) == 0);
  5315  043C  3000               	movlw	0
  5316  043D  3185  25D5  3183   	fcall	_SD_Check8bitResponse
  5317  0440  3A00               	xorlw	0
  5318  0441  1D03               	btfss	3,2
  5319  0442  0008               	return
  5320  0443  2C19               	goto	l2280
  5321  0444                     __end_of_SD_Init:	
  5322                           
  5323                           	psect	text11
  5324  0316                     __ptext11:	
  5325 ;; *************** function _SD_SendCommand *****************
  5326 ;; Defined at:
  5327 ;;		line 77 in file "SD.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;  CMD_6bit        1    wreg     unsigned char 
  5330 ;;  ARG3            1    4[COMMON] unsigned char 
  5331 ;;  ARG2            1    5[COMMON] unsigned char 
  5332 ;;  ARG1            1    6[COMMON] unsigned char 
  5333 ;;  ARG0            1    7[COMMON] unsigned char 
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;  CMD_6bit        1    1[BANK0 ] unsigned char 
  5336 ;;  Checksum        1    3[BANK0 ] unsigned char 
  5337 ;;  ByteToSend      1    2[BANK0 ] unsigned char 
  5338 ;; Return value:  Size  Location     Type
  5339 ;;                  1    wreg      void 
  5340 ;; Registers used:
  5341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5347 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5348 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5349 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5350 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5351 ;;Total ram usage:        8 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; Hardware stack levels required when called:    2
  5354 ;; This function calls:
  5355 ;;		_SPI_Write
  5356 ;; This function is called by:
  5357 ;;		_SD_Init
  5358 ;;		_SD_OpenStream
  5359 ;;		_SD_OpenBlock
  5360 ;;		_SD_CloseStream
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           
  5365                           ;psect for function _SD_SendCommand
  5366  0316                     _SD_SendCommand:	
  5367                           
  5368                           ;incstack = 0
  5369                           ; Regs used in _SD_SendCommand: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5370                           ;SD_SendCommand@CMD_6bit stored from wreg
  5371  0316  0020               	movlb	0	; select bank0
  5372  0317  00A1               	movwf	SD_SendCommand@CMD_6bit
  5373                           
  5374                           ;SD.c: 79:     char Checksum = 0x00;
  5375  0318  01A3               	clrf	SD_SendCommand@Checksum
  5376                           
  5377                           ;SD.c: 82:     ByteToSend = (CMD_6bit & 0x3F) | 0x40;
  5378  0319  0821               	movf	SD_SendCommand@CMD_6bit,w
  5379  031A  393F               	andlw	63
  5380  031B  3840               	iorlw	64
  5381  031C  00A0               	movwf	??_SD_SendCommand
  5382  031D  0820               	movf	??_SD_SendCommand,w
  5383  031E  00A2               	movwf	SD_SendCommand@ByteToSend
  5384                           
  5385                           ;SD.c: 83:     SPI_Write(ByteToSend);
  5386  031F  0822               	movf	SD_SendCommand@ByteToSend,w
  5387  0320  3185  25F0  3183   	fcall	_SPI_Write
  5388                           
  5389                           ;SD.c: 84:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5390  0323  0020               	movlb	0	; select bank0
  5391  0324  3523               	lslf	SD_SendCommand@Checksum,w
  5392  0325  00A0               	movwf	??_SD_SendCommand
  5393  0326  0820               	movf	??_SD_SendCommand,w
  5394  0327  00A3               	movwf	SD_SendCommand@Checksum
  5395  0328  0823               	movf	SD_SendCommand@Checksum,w
  5396  0329  0622               	xorwf	SD_SendCommand@ByteToSend,w
  5397  032A  00A0               	movwf	??_SD_SendCommand
  5398  032B  0820               	movf	??_SD_SendCommand,w
  5399  032C  00A3               	movwf	SD_SendCommand@Checksum
  5400  032D  0823               	movf	SD_SendCommand@Checksum,w
  5401  032E  3E70               	addlw	low (_CRCTable| (0+32768))
  5402  032F  0084               	movwf	4
  5403  0330  3080               	movlw	high (_CRCTable| (0+32768))
  5404  0331  1803               	skipnc
  5405  0332  3E01               	addlw	1
  5406  0333  0085               	movwf	5
  5407  0334  0800               	movf	0,w	;code access
  5408  0335  00A0               	movwf	??_SD_SendCommand
  5409  0336  0820               	movf	??_SD_SendCommand,w
  5410  0337  00A3               	movwf	SD_SendCommand@Checksum
  5411                           
  5412                           ;SD.c: 87:     ByteToSend = ARG3;
  5413  0338  0874               	movf	SD_SendCommand@ARG3,w
  5414  0339  00A0               	movwf	??_SD_SendCommand
  5415  033A  0820               	movf	??_SD_SendCommand,w
  5416  033B  00A2               	movwf	SD_SendCommand@ByteToSend
  5417                           
  5418                           ;SD.c: 88:     SPI_Write(ByteToSend);
  5419  033C  0822               	movf	SD_SendCommand@ByteToSend,w
  5420  033D  3185  25F0  3183   	fcall	_SPI_Write
  5421                           
  5422                           ;SD.c: 89:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5423  0340  0020               	movlb	0	; select bank0
  5424  0341  3523               	lslf	SD_SendCommand@Checksum,w
  5425  0342  00A0               	movwf	??_SD_SendCommand
  5426  0343  0820               	movf	??_SD_SendCommand,w
  5427  0344  00A3               	movwf	SD_SendCommand@Checksum
  5428  0345  0823               	movf	SD_SendCommand@Checksum,w
  5429  0346  0622               	xorwf	SD_SendCommand@ByteToSend,w
  5430  0347  00A0               	movwf	??_SD_SendCommand
  5431  0348  0820               	movf	??_SD_SendCommand,w
  5432  0349  00A3               	movwf	SD_SendCommand@Checksum
  5433  034A  0823               	movf	SD_SendCommand@Checksum,w
  5434  034B  3E70               	addlw	low (_CRCTable| (0+32768))
  5435  034C  0084               	movwf	4
  5436  034D  3080               	movlw	high (_CRCTable| (0+32768))
  5437  034E  1803               	skipnc
  5438  034F  3E01               	addlw	1
  5439  0350  0085               	movwf	5
  5440  0351  0800               	movf	0,w	;code access
  5441  0352  00A0               	movwf	??_SD_SendCommand
  5442  0353  0820               	movf	??_SD_SendCommand,w
  5443  0354  00A3               	movwf	SD_SendCommand@Checksum
  5444                           
  5445                           ;SD.c: 91:     ByteToSend = ARG2;
  5446  0355  0875               	movf	SD_SendCommand@ARG2,w
  5447  0356  00A0               	movwf	??_SD_SendCommand
  5448  0357  0820               	movf	??_SD_SendCommand,w
  5449  0358  00A2               	movwf	SD_SendCommand@ByteToSend
  5450                           
  5451                           ;SD.c: 92:     SPI_Write(ByteToSend);
  5452  0359  0822               	movf	SD_SendCommand@ByteToSend,w
  5453  035A  3185  25F0  3183   	fcall	_SPI_Write
  5454                           
  5455                           ;SD.c: 93:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5456  035D  0020               	movlb	0	; select bank0
  5457  035E  3523               	lslf	SD_SendCommand@Checksum,w
  5458  035F  00A0               	movwf	??_SD_SendCommand
  5459  0360  0820               	movf	??_SD_SendCommand,w
  5460  0361  00A3               	movwf	SD_SendCommand@Checksum
  5461  0362  0823               	movf	SD_SendCommand@Checksum,w
  5462  0363  0622               	xorwf	SD_SendCommand@ByteToSend,w
  5463  0364  00A0               	movwf	??_SD_SendCommand
  5464  0365  0820               	movf	??_SD_SendCommand,w
  5465  0366  00A3               	movwf	SD_SendCommand@Checksum
  5466  0367  0823               	movf	SD_SendCommand@Checksum,w
  5467  0368  3E70               	addlw	low (_CRCTable| (0+32768))
  5468  0369  0084               	movwf	4
  5469  036A  3080               	movlw	high (_CRCTable| (0+32768))
  5470  036B  1803               	skipnc
  5471  036C  3E01               	addlw	1
  5472  036D  0085               	movwf	5
  5473  036E  0800               	movf	0,w	;code access
  5474  036F  00A0               	movwf	??_SD_SendCommand
  5475  0370  0820               	movf	??_SD_SendCommand,w
  5476  0371  00A3               	movwf	SD_SendCommand@Checksum
  5477                           
  5478                           ;SD.c: 95:     ByteToSend = ARG1;
  5479  0372  0876               	movf	SD_SendCommand@ARG1,w
  5480  0373  00A0               	movwf	??_SD_SendCommand
  5481  0374  0820               	movf	??_SD_SendCommand,w
  5482  0375  00A2               	movwf	SD_SendCommand@ByteToSend
  5483                           
  5484                           ;SD.c: 96:     SPI_Write(ByteToSend);
  5485  0376  0822               	movf	SD_SendCommand@ByteToSend,w
  5486  0377  3185  25F0  3183   	fcall	_SPI_Write
  5487                           
  5488                           ;SD.c: 97:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum = 
      +                          CRCTable[Checksum]; };
  5489  037A  0020               	movlb	0	; select bank0
  5490  037B  3523               	lslf	SD_SendCommand@Checksum,w
  5491  037C  00A0               	movwf	??_SD_SendCommand
  5492  037D  0820               	movf	??_SD_SendCommand,w
  5493  037E  00A3               	movwf	SD_SendCommand@Checksum
  5494  037F  0823               	movf	SD_SendCommand@Checksum,w
  5495  0380  0622               	xorwf	SD_SendCommand@ByteToSend,w
  5496  0381  00A0               	movwf	??_SD_SendCommand
  5497  0382  0820               	movf	??_SD_SendCommand,w
  5498  0383  00A3               	movwf	SD_SendCommand@Checksum
  5499  0384  0823               	movf	SD_SendCommand@Checksum,w
  5500  0385  3E70               	addlw	low (_CRCTable| (0+32768))
  5501  0386  0084               	movwf	4
  5502  0387  3080               	movlw	high (_CRCTable| (0+32768))
  5503  0388  1803               	skipnc
  5504  0389  3E01               	addlw	1
  5505  038A  0085               	movwf	5
  5506  038B  0800               	movf	0,w	;code access
  5507  038C  00A0               	movwf	??_SD_SendCommand
  5508  038D  0820               	movf	??_SD_SendCommand,w
  5509  038E  00A3               	movwf	SD_SendCommand@Checksum
  5510                           
  5511                           ;SD.c: 99:     ByteToSend = ARG0;
  5512  038F  0877               	movf	SD_SendCommand@ARG0,w
  5513  0390  00A0               	movwf	??_SD_SendCommand
  5514  0391  0820               	movf	??_SD_SendCommand,w
  5515  0392  00A2               	movwf	SD_SendCommand@ByteToSend
  5516                           
  5517                           ;SD.c: 100:     SPI_Write(ByteToSend);
  5518  0393  0822               	movf	SD_SendCommand@ByteToSend,w
  5519  0394  3185  25F0  3183   	fcall	_SPI_Write
  5520                           
  5521                           ;SD.c: 101:     { Checksum = Checksum << 1; Checksum = Checksum ^ ByteToSend; Checksum =
      +                           CRCTable[Checksum]; };
  5522  0397  0020               	movlb	0	; select bank0
  5523  0398  3523               	lslf	SD_SendCommand@Checksum,w
  5524  0399  00A0               	movwf	??_SD_SendCommand
  5525  039A  0820               	movf	??_SD_SendCommand,w
  5526  039B  00A3               	movwf	SD_SendCommand@Checksum
  5527  039C  0823               	movf	SD_SendCommand@Checksum,w
  5528  039D  0622               	xorwf	SD_SendCommand@ByteToSend,w
  5529  039E  00A0               	movwf	??_SD_SendCommand
  5530  039F  0820               	movf	??_SD_SendCommand,w
  5531  03A0  00A3               	movwf	SD_SendCommand@Checksum
  5532  03A1  0823               	movf	SD_SendCommand@Checksum,w
  5533  03A2  3E70               	addlw	low (_CRCTable| (0+32768))
  5534  03A3  0084               	movwf	4
  5535  03A4  3080               	movlw	high (_CRCTable| (0+32768))
  5536  03A5  1803               	skipnc
  5537  03A6  3E01               	addlw	1
  5538  03A7  0085               	movwf	5
  5539  03A8  0800               	movf	0,w	;code access
  5540  03A9  00A0               	movwf	??_SD_SendCommand
  5541  03AA  0820               	movf	??_SD_SendCommand,w
  5542  03AB  00A3               	movwf	SD_SendCommand@Checksum
  5543                           
  5544                           ;SD.c: 104:     ByteToSend = (Checksum << 1) | 0x01;
  5545  03AC  1403               	setc
  5546  03AD  0D23               	rlf	SD_SendCommand@Checksum,w
  5547  03AE  00A0               	movwf	??_SD_SendCommand
  5548  03AF  0820               	movf	??_SD_SendCommand,w
  5549  03B0  00A2               	movwf	SD_SendCommand@ByteToSend
  5550                           
  5551                           ;SD.c: 105:     SPI_Write(ByteToSend);
  5552  03B1  0822               	movf	SD_SendCommand@ByteToSend,w
  5553  03B2  3185  25F0         	fcall	_SPI_Write
  5554  03B4  0008               	return
  5555  03B5                     __end_of_SD_SendCommand:	
  5556                           
  5557                           	psect	text12
  5558  05F0                     __ptext12:	
  5559 ;; *************** function _SPI_Write *****************
  5560 ;; Defined at:
  5561 ;;		line 38 in file "SPI.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;  Data_8bit       1    wreg     unsigned char 
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;  Data_8bit       1    3[COMMON] unsigned char 
  5566 ;; Return value:  Size  Location     Type
  5567 ;;                  1    wreg      void 
  5568 ;; Registers used:
  5569 ;;		wreg
  5570 ;; Tracked objects:
  5571 ;;		On entry : 0/0
  5572 ;;		On exit  : 0/0
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5578 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5579 ;;Total ram usage:        1 bytes
  5580 ;; Hardware stack levels used:    1
  5581 ;; Hardware stack levels required when called:    1
  5582 ;; This function calls:
  5583 ;;		Nothing
  5584 ;; This function is called by:
  5585 ;;		_SD_Init
  5586 ;;		_SD_SendCommand
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           
  5591                           ;psect for function _SPI_Write
  5592  05F0                     _SPI_Write:	
  5593                           
  5594                           ;incstack = 0
  5595                           ; Regs used in _SPI_Write: [wreg]
  5596                           ;SPI_Write@Data_8bit stored from wreg
  5597  05F0  00F3               	movwf	SPI_Write@Data_8bit
  5598                           
  5599                           ;SPI.c: 39:     SSP1BUF = Data_8bit;
  5600  05F1  0873               	movf	SPI_Write@Data_8bit,w
  5601  05F2  0024               	movlb	4	; select bank4
  5602  05F3  0091               	movwf	17	;volatile
  5603  05F4                     l112:	
  5604                           ;SPI.c: 40:     while(SSP1STATbits.BF == 0);
  5605                           
  5606  05F4  1814               	btfsc	20,0	;volatile
  5607  05F5  0008               	return
  5608  05F6  2DF4               	goto	l112
  5609  05F7                     __end_of_SPI_Write:	
  5610                           
  5611                           	psect	text13
  5612  05C4                     __ptext13:	
  5613 ;; *************** function _SD_Read8bitResponse *****************
  5614 ;; Defined at:
  5615 ;;		line 112 in file "SD.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;		None
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;  readMessage     1    4[COMMON] unsigned char 
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  1    wreg      void 
  5622 ;; Registers used:
  5623 ;;		wreg, status,2, status,0, pclath, cstack
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5631 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5633 ;;Total ram usage:        2 bytes
  5634 ;; Hardware stack levels used:    1
  5635 ;; Hardware stack levels required when called:    2
  5636 ;; This function calls:
  5637 ;;		_SPI_Read
  5638 ;; This function is called by:
  5639 ;;		_SD_Init
  5640 ;;		_SD_OpenStream
  5641 ;;		_SD_OpenBlock
  5642 ;;		_SD_CloseStream
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           
  5647                           ;psect for function _SD_Read8bitResponse
  5648  05C4                     _SD_Read8bitResponse:	
  5649  05C4                     l2200:	
  5650                           ;incstack = 0
  5651                           ; Regs used in _SD_Read8bitResponse: [wreg+status,2+status,0+pclath+cstack]
  5652                           
  5653  05C4  3185  25F7  3185   	fcall	_SPI_Read
  5654  05C7  00F3               	movwf	??_SD_Read8bitResponse
  5655  05C8  0873               	movf	??_SD_Read8bitResponse,w
  5656  05C9  00F4               	movwf	SD_Read8bitResponse@readMessage
  5657  05CA  0A74               	incf	SD_Read8bitResponse@readMessage,w
  5658  05CB  1903               	btfsc	3,2
  5659  05CC  2DC4               	goto	l2200
  5660                           
  5661                           ;SD.c: 121:     GLBL_Resp8 = readMessage;
  5662  05CD  0874               	movf	SD_Read8bitResponse@readMessage,w
  5663  05CE  00F3               	movwf	??_SD_Read8bitResponse
  5664  05CF  0873               	movf	??_SD_Read8bitResponse,w
  5665  05D0  0020               	movlb	0	; select bank0
  5666  05D1  00EF               	movwf	_GLBL_Resp8
  5667                           
  5668                           ;SD.c: 124:     SPI_Read();
  5669  05D2  3185  25F7         	fcall	_SPI_Read
  5670  05D4  0008               	return
  5671  05D5                     __end_of_SD_Read8bitResponse:	
  5672                           
  5673                           	psect	text14
  5674  04EF                     __ptext14:	
  5675 ;; *************** function _SD_Read40bitResponse *****************
  5676 ;; Defined at:
  5677 ;;		line 141 in file "SD.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;		None
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;  readMessage     1    4[COMMON] unsigned char 
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  1    wreg      void 
  5684 ;; Registers used:
  5685 ;;		wreg, status,2, status,0, pclath, cstack
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5692 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5693 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5694 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5695 ;;Total ram usage:        2 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; Hardware stack levels required when called:    2
  5698 ;; This function calls:
  5699 ;;		_SPI_Read
  5700 ;; This function is called by:
  5701 ;;		_SD_Init
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705                           
  5706                           ;psect for function _SD_Read40bitResponse
  5707  04EF                     _SD_Read40bitResponse:	
  5708  04EF                     l2212:	
  5709                           ;incstack = 0
  5710                           ; Regs used in _SD_Read40bitResponse: [wreg+status,2+status,0+pclath+cstack]
  5711                           
  5712  04EF  3185  25F7  3184   	fcall	_SPI_Read
  5713  04F2  00F3               	movwf	??_SD_Read40bitResponse
  5714  04F3  0873               	movf	??_SD_Read40bitResponse,w
  5715  04F4  00F4               	movwf	SD_Read40bitResponse@readMessage
  5716  04F5  0A74               	incf	SD_Read40bitResponse@readMessage,w
  5717  04F6  1903               	btfsc	3,2
  5718  04F7  2CEF               	goto	l2212
  5719                           
  5720                           ;SD.c: 150:     GLBL_Resp40[0] = readMessage;
  5721  04F8  0874               	movf	SD_Read40bitResponse@readMessage,w
  5722  04F9  00F3               	movwf	??_SD_Read40bitResponse
  5723  04FA  0873               	movf	??_SD_Read40bitResponse,w
  5724  04FB  0021               	movlb	1	; select bank1
  5725  04FC  00B2               	movwf	_GLBL_Resp40^(0+128)
  5726                           
  5727                           ;SD.c: 151:     GLBL_Resp40[1] = SPI_Read();
  5728  04FD  3185  25F7  3184   	fcall	_SPI_Read
  5729  0500  00F3               	movwf	??_SD_Read40bitResponse
  5730  0501  0873               	movf	??_SD_Read40bitResponse,w
  5731  0502  0021               	movlb	1	; select bank1
  5732  0503  00B3               	movwf	(_GLBL_Resp40^(0+128)+1)
  5733                           
  5734                           ;SD.c: 152:     GLBL_Resp40[2] = SPI_Read();
  5735  0504  3185  25F7  3184   	fcall	_SPI_Read
  5736  0507  00F3               	movwf	??_SD_Read40bitResponse
  5737  0508  0873               	movf	??_SD_Read40bitResponse,w
  5738  0509  0021               	movlb	1	; select bank1
  5739  050A  00B4               	movwf	(_GLBL_Resp40^(0+128)+2)
  5740                           
  5741                           ;SD.c: 153:     GLBL_Resp40[3] = SPI_Read();
  5742  050B  3185  25F7  3184   	fcall	_SPI_Read
  5743  050E  00F3               	movwf	??_SD_Read40bitResponse
  5744  050F  0873               	movf	??_SD_Read40bitResponse,w
  5745  0510  0021               	movlb	1	; select bank1
  5746  0511  00B5               	movwf	(_GLBL_Resp40^(0+128)+3)
  5747                           
  5748                           ;SD.c: 154:     GLBL_Resp40[4] = SPI_Read();
  5749  0512  3185  25F7  3184   	fcall	_SPI_Read
  5750  0515  00F3               	movwf	??_SD_Read40bitResponse
  5751  0516  0873               	movf	??_SD_Read40bitResponse,w
  5752  0517  0021               	movlb	1	; select bank1
  5753  0518  00B6               	movwf	(_GLBL_Resp40^(0+128)+4)
  5754                           
  5755                           ;SD.c: 157:     SPI_Read();
  5756  0519  3185  25F7         	fcall	_SPI_Read
  5757  051B  0008               	return
  5758  051C                     __end_of_SD_Read40bitResponse:	
  5759                           
  5760                           	psect	text15
  5761  05F7                     __ptext15:	
  5762 ;; *************** function _SPI_Read *****************
  5763 ;; Defined at:
  5764 ;;		line 46 in file "SPI.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;		None
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;		None
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  1    wreg      unsigned char 
  5771 ;; Registers used:
  5772 ;;		wreg
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5782 ;;Total ram usage:        0 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; Hardware stack levels required when called:    1
  5785 ;; This function calls:
  5786 ;;		Nothing
  5787 ;; This function is called by:
  5788 ;;		_SD_Read8bitResponse
  5789 ;;		_SD_Read40bitResponse
  5790 ;;		_SD_CloseBlock
  5791 ;;		_readBytes
  5792 ;;		_openFile
  5793 ;;		_main
  5794 ;;		_SD_CloseStream
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           
  5799                           ;psect for function _SPI_Read
  5800  05F7                     _SPI_Read:	
  5801                           
  5802                           ;SPI.c: 47:     SSP1BUF = 0xFF;
  5803                           
  5804                           ;incstack = 0
  5805                           ; Regs used in _SPI_Read: [wreg]
  5806  05F7  30FF               	movlw	255
  5807  05F8  0024               	movlb	4	; select bank4
  5808  05F9  0091               	movwf	17	;volatile
  5809  05FA                     l118:	
  5810                           ;SPI.c: 48:     while(SSP1STATbits.BF == 0);
  5811                           
  5812  05FA  1C14               	btfss	20,0	;volatile
  5813  05FB  2DFA               	goto	l118
  5814                           
  5815                           ;SPI.c: 49:     return SSP1BUF;
  5816  05FC  0811               	movf	17,w	;volatile
  5817  05FD  0008               	return
  5818  05FE                     __end_of_SPI_Read:	
  5819                           
  5820                           	psect	text16
  5821  05D5                     __ptext16:	
  5822 ;; *************** function _SD_Check8bitResponse *****************
  5823 ;; Defined at:
  5824 ;;		line 132 in file "SD.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  Byte            1    wreg     unsigned char 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;  Byte            1    3[COMMON] unsigned char 
  5829 ;;  match           1    4[COMMON] _Bool 
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1    wreg      _Bool 
  5832 ;; Registers used:
  5833 ;;		wreg, status,2
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5840 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5842 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5843 ;;Total ram usage:        2 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    1
  5846 ;; This function calls:
  5847 ;;		Nothing
  5848 ;; This function is called by:
  5849 ;;		_SD_Init
  5850 ;;		_SD_OpenStream
  5851 ;;		_SD_OpenBlock
  5852 ;;		_SD_CloseStream
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           
  5857                           ;psect for function _SD_Check8bitResponse
  5858  05D5                     _SD_Check8bitResponse:	
  5859                           
  5860                           ;incstack = 0
  5861                           ; Regs used in _SD_Check8bitResponse: [wreg+status,2]
  5862                           ;SD_Check8bitResponse@Byte stored from wreg
  5863  05D5  00F3               	movwf	SD_Check8bitResponse@Byte
  5864                           
  5865                           ;SD.c: 133:     _Bool match = 1;
  5866  05D6  01F4               	clrf	SD_Check8bitResponse@match
  5867  05D7  0AF4               	incf	SD_Check8bitResponse@match,f
  5868                           
  5869                           ;SD.c: 134:     if (Byte != GLBL_Resp8) match = 0;
  5870  05D8  0873               	movf	SD_Check8bitResponse@Byte,w
  5871  05D9  0020               	movlb	0	; select bank0
  5872  05DA  066F               	xorwf	_GLBL_Resp8,w
  5873  05DB  1D03               	btfss	3,2
  5874  05DC  01F4               	clrf	SD_Check8bitResponse@match
  5875                           
  5876                           ;SD.c: 135:     return match;
  5877  05DD  0874               	movf	SD_Check8bitResponse@match,w
  5878  05DE  0008               	return
  5879  05DF                     __end_of_SD_Check8bitResponse:	
  5880                           
  5881                           	psect	text17
  5882  051C                     __ptext17:	
  5883 ;; *************** function _SD_Check40bitResponse *****************
  5884 ;; Defined at:
  5885 ;;		line 166 in file "SD.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;  Byte4           1    wreg     unsigned char 
  5888 ;;  Byte3           1    3[COMMON] unsigned char 
  5889 ;;  Byte2           1    4[COMMON] unsigned char 
  5890 ;;  Byte1           1    5[COMMON] unsigned char 
  5891 ;;  Byte0           1    6[COMMON] unsigned char 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  Byte4           1    0[BANK0 ] unsigned char 
  5894 ;;  match           1    1[BANK0 ] _Bool 
  5895 ;; Return value:  Size  Location     Type
  5896 ;;                  1    wreg      _Bool 
  5897 ;; Registers used:
  5898 ;;		wreg, status,2
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5904 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5905 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5907 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5908 ;;Total ram usage:        6 bytes
  5909 ;; Hardware stack levels used:    1
  5910 ;; Hardware stack levels required when called:    1
  5911 ;; This function calls:
  5912 ;;		Nothing
  5913 ;; This function is called by:
  5914 ;;		_SD_Init
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           
  5919                           ;psect for function _SD_Check40bitResponse
  5920  051C                     _SD_Check40bitResponse:	
  5921                           
  5922                           ;incstack = 0
  5923                           ; Regs used in _SD_Check40bitResponse: [wreg+status,2]
  5924                           ;SD_Check40bitResponse@Byte4 stored from wreg
  5925  051C  0020               	movlb	0	; select bank0
  5926  051D  00A0               	movwf	SD_Check40bitResponse@Byte4
  5927                           
  5928                           ;SD.c: 167:     _Bool match = 1;
  5929  051E  01A1               	clrf	SD_Check40bitResponse@match
  5930  051F  0AA1               	incf	SD_Check40bitResponse@match,f
  5931                           
  5932                           ;SD.c: 168:     if (Byte4 != GLBL_Resp40[0]) match = 0;
  5933  0520  0021               	movlb	1	; select bank1
  5934  0521  0832               	movf	_GLBL_Resp40^(0+128),w
  5935  0522  0020               	movlb	0	; select bank0
  5936  0523  0620               	xorwf	SD_Check40bitResponse@Byte4,w
  5937  0524  1D03               	btfss	3,2
  5938  0525  01A1               	clrf	SD_Check40bitResponse@match
  5939                           
  5940                           ;SD.c: 169:     if (Byte3 != GLBL_Resp40[1]) match = 0;
  5941  0526  0021               	movlb	1	; select bank1
  5942  0527  0833               	movf	(_GLBL_Resp40^(0+128)+1),w
  5943  0528  0673               	xorwf	SD_Check40bitResponse@Byte3,w
  5944  0529  1903               	skipnz
  5945  052A  2D2D               	goto	l2240
  5946  052B  0020               	movlb	0	; select bank0
  5947  052C  01A1               	clrf	SD_Check40bitResponse@match
  5948  052D                     l2240:	
  5949                           
  5950                           ;SD.c: 170:     if (Byte2 != GLBL_Resp40[2]) match = 0;
  5951  052D  0021               	movlb	1	; select bank1
  5952  052E  0834               	movf	(_GLBL_Resp40^(0+128)+2),w
  5953  052F  0674               	xorwf	SD_Check40bitResponse@Byte2,w
  5954  0530  1903               	skipnz
  5955  0531  2D34               	goto	l2244
  5956  0532  0020               	movlb	0	; select bank0
  5957  0533  01A1               	clrf	SD_Check40bitResponse@match
  5958  0534                     l2244:	
  5959                           
  5960                           ;SD.c: 171:     if (Byte1 != GLBL_Resp40[3]) match = 0;
  5961  0534  0021               	movlb	1	; select bank1
  5962  0535  0835               	movf	(_GLBL_Resp40^(0+128)+3),w
  5963  0536  0675               	xorwf	SD_Check40bitResponse@Byte1,w
  5964  0537  1903               	skipnz
  5965  0538  2D3B               	goto	l2248
  5966  0539  0020               	movlb	0	; select bank0
  5967  053A  01A1               	clrf	SD_Check40bitResponse@match
  5968  053B                     l2248:	
  5969                           
  5970                           ;SD.c: 172:     if (Byte0 != GLBL_Resp40[4]) match = 0;
  5971  053B  0021               	movlb	1	; select bank1
  5972  053C  0836               	movf	(_GLBL_Resp40^(0+128)+4),w
  5973  053D  0676               	xorwf	SD_Check40bitResponse@Byte0,w
  5974  053E  1903               	skipnz
  5975  053F  2D42               	goto	l2252
  5976  0540  0020               	movlb	0	; select bank0
  5977  0541  01A1               	clrf	SD_Check40bitResponse@match
  5978  0542                     l2252:	
  5979                           
  5980                           ;SD.c: 173:     return match;
  5981  0542  0020               	movlb	0	; select bank0
  5982  0543  0821               	movf	SD_Check40bitResponse@match,w
  5983  0544  0008               	return
  5984  0545                     __end_of_SD_Check40bitResponse:	
  5985                           
  5986                           	psect	text18
  5987  05FE                     __ptext18:	
  5988 ;; *************** function _DAC_Init *****************
  5989 ;; Defined at:
  5990 ;;		line 30 in file "DAC.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;		None
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;		None
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  1    wreg      void 
  5997 ;; Registers used:
  5998 ;;		wreg
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6008 ;;Total ram usage:        0 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:    1
  6011 ;; This function calls:
  6012 ;;		Nothing
  6013 ;; This function is called by:
  6014 ;;		_init
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           
  6019                           ;psect for function _DAC_Init
  6020  05FE                     _DAC_Init:	
  6021                           
  6022                           ;DAC.c: 31:     TRISA = 0xFB;
  6023                           
  6024                           ;incstack = 0
  6025                           ; Regs used in _DAC_Init: [wreg]
  6026  05FE  30FB               	movlw	251
  6027  05FF  0021               	movlb	1	; select bank1
  6028  0600  008C               	movwf	12	;volatile
  6029                           
  6030                           ;DAC.c: 32:     DAC1CON0 = 0xE0;
  6031  0601  30E0               	movlw	224
  6032  0602  002B               	movlb	11	; select bank11
  6033  0603  008E               	movwf	14	;volatile
  6034  0604  0008               	return
  6035  0605                     __end_of_DAC_Init:	
  6036                           
  6037                           	psect	intentry
  6038  0004                     __pintentry:	
  6039 ;; *************** function _isr *****************
  6040 ;; Defined at:
  6041 ;;		line 122 in file "main.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;		None
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;  level           2    1[COMMON] short 
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  1    wreg      void 
  6048 ;; Registers used:
  6049 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6056 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6057 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6058 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6059 ;;Total ram usage:        3 bytes
  6060 ;; Hardware stack levels used:    1
  6061 ;; This function calls:
  6062 ;;		Nothing
  6063 ;; This function is called by:
  6064 ;;		Interrupt level 1
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068  0004                     _isr:	
  6069                           
  6070                           ;incstack = 0
  6071  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6072                           
  6073                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  6074  0005  3180               	pagesel	$
  6075                           
  6076                           ;main.c: 123:     PIR1bits.TMR2IF = 0;
  6077  0006  0020               	movlb	0	; select bank0
  6078  0007  1091               	bcf	17,1	;volatile
  6079                           
  6080                           ;main.c: 124:     PORTCbits.RC0 = 1;
  6081  0008  140E               	bsf	14,0	;volatile
  6082                           
  6083                           ;main.c: 126:     short level = buffer[buffer_read_index++].stereo16.left;
  6084  0009  0869               	movf	_buffer_read_index,w
  6085  000A  00F0               	movwf	??_isr
  6086  000B  3001               	movlw	1
  6087  000C                     u70_25:	
  6088  000C  35F0               	lslf	??_isr,f
  6089  000D  3EFF               	addlw	-1
  6090  000E  1D03               	skipz
  6091  000F  280C               	goto	u70_25
  6092  0010  3570               	lslf	??_isr,w
  6093  0011  3E20               	addlw	(low (_buffer| (0+256)))& (0+255)
  6094  0012  0086               	movwf	6
  6095  0013  3001               	movlw	1	; select bank2/3
  6096  0014  0087               	movwf	7
  6097  0015  3F40               	moviw [0]fsr1
  6098  0016  00F1               	movwf	isr@level
  6099  0017  3F41               	moviw [1]fsr1
  6100  0018  00F2               	movwf	isr@level+1
  6101  0019  3001               	movlw	1
  6102  001A  07E9               	addwf	_buffer_read_index,f
  6103  001B  3000               	movlw	0
  6104  001C  3DEA               	addwfc	_buffer_read_index+1,f
  6105                           
  6106                           ;main.c: 127:     DAC1REFH = (level & 0xff00) >> 8;
  6107  001D  0872               	movf	isr@level+1,w
  6108  001E  002B               	movlb	11	; select bank11
  6109  001F  0090               	movwf	16	;volatile
  6110                           
  6111                           ;main.c: 128:     DAC1REFL = (level & 0x00C0) << 8;
  6112  0020  018F               	clrf	15	;volatile
  6113                           
  6114                           ;main.c: 129:     DAC1LD = 1;
  6115  0021  140D               	bsf	13,0	;volatile
  6116                           
  6117                           ;main.c: 131:     if (buffer_read_index >= 16) buffer_read_index = 0;
  6118  0022  3000               	movlw	0
  6119  0023  0020               	movlb	0	; select bank0
  6120  0024  026A               	subwf	_buffer_read_index+1,w
  6121  0025  3010               	movlw	16
  6122  0026  1903               	skipnz
  6123  0027  0269               	subwf	_buffer_read_index,w
  6124  0028  1C03               	skipc
  6125  0029  282C               	goto	i1l1890
  6126  002A  01E9               	clrf	_buffer_read_index
  6127  002B  01EA               	clrf	_buffer_read_index+1
  6128  002C                     i1l1890:	
  6129                           
  6130                           ;main.c: 132:     PORTCbits.RC0 = 0;
  6131  002C  100E               	bcf	14,0	;volatile
  6132  002D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6133  002E  0009               	retfie
  6134  002F                     __end_of_isr:	
  6135  007E                     btemp	set	126	;btemp
  6136  007E                     int$flags	set	126
  6137  007E                     wtemp0	set	126


Data Sizes:
    Strings     20
    Constant    256
    Data        11
    BSS         90
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     69      80
    BANK1            80      0      23
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    readBytes@dest	PTR unsigned char  size(1) Largest target is 28
		 -> openFile@data(BANK0[8]), openFile@fmt(BANK0[28]), openFile@riff(BANK0[8]), 

    fourCCeq@b	PTR unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), STR_6(CODE[5]), STR_4(CODE[5]), STR_2(CODE[5]), 

    fourCCeq@a	PTR unsigned char  size(1) Largest target is 28
		 -> openFile@data(BANK0[8]), fmt.fmtHeader(BANK0[8]), openFile@fmt(BANK0[28]), openFile@riff(BANK0[8]), 


Critical Paths under _main in COMMON

    _SD_OpenStream->_SD_SendCommand
    _SD_Init->_SD_SendCommand
    _SD_SendCommand->_SPI_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_openFile
    _openFile->_SD_OpenStream
    _SD_OpenStream->_SD_SendCommand
    _init->_SD_Init
    _SD_Init->_SD_SendCommand

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   10294
                                             66 BANK0      3     3      0
                           _SPI_Read
                              _error
                               _init
                           _openFile
                         _timer_Init
 ---------------------------------------------------------------------------------
 (1) _timer_Init                                           4     0      4      98
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _openFile                                            50    46      4    5803
                                             16 BANK0     50    46      4
                      _SD_OpenStream
                           _SPI_Read
                              _error
                           _fourCCeq
                          _readBytes
 ---------------------------------------------------------------------------------
 (2) _readBytes                                            7     5      2     508
                                              3 COMMON     4     2      2
                                              0 BANK0      3     3      0
                      _SD_CloseBlock
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SD_CloseBlock                                        0     0      0       0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (2) _fourCCeq                                             8     6      2     696
                                              3 COMMON     4     2      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _error                                                2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SD_OpenStream                                       12     8      4    3974
                                              4 BANK0     12     8      4
               _SD_Check8bitResponse
                _SD_Read8bitResponse
                     _SD_SendCommand
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    4371
                           _DAC_Init
                            _SD_Init
                           _SPI_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SD_Init                                              1     1      0    4371
                                              4 BANK0      1     1      0
              _SD_Check40bitResponse
               _SD_Check8bitResponse
               _SD_Read40bitResponse
                _SD_Read8bitResponse
                     _SD_SendCommand
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SD_SendCommand                                       8     4      4    3603
                                              4 COMMON     4     0      4
                                              0 BANK0      4     4      0
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (4) _SPI_Write                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SD_Read8bitResponse                                  2     2      0      68
                                              3 COMMON     2     2      0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SD_Read40bitResponse                                 2     2      0      68
                                              3 COMMON     2     2      0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (3) _SPI_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SD_Check8bitResponse                                 2     2      0      46
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _SD_Check40bitResponse                                6     2      4     564
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DAC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0      23
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Read
   _error
   _init
     _DAC_Init
     _SD_Init
       _SD_Check40bitResponse
       _SD_Check8bitResponse
       _SD_Read40bitResponse
         _SPI_Read
       _SD_Read8bitResponse
         _SPI_Read
       _SD_SendCommand
         _SPI_Write
       _SPI_Write
     _SPI_Init
   _openFile
     _SD_OpenStream
       _SD_Check8bitResponse
       _SD_Read8bitResponse
         _SPI_Read
       _SD_SendCommand
         _SPI_Write
     _SPI_Read
     _error
     _fourCCeq
     _readBytes
       _SD_CloseBlock
         _SPI_Read
       _SPI_Read
   _timer_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BIGRAM             3F0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITCOMMON            E      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
COMMON               E      8       B       3       78.6%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
STACK                0      0       0       4        0.0%
BANK0               50     45      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK0            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      17       8       28.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
ABS                  0      0      B2      13        0.0%
BITBANK4            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK5            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK6            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK7            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK8            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK9            50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9               50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK10           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITBANK11           50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
DATA                 0      0      B2      30        0.0%
BITBANK12           30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12              30      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK13           50      0       0      33        0.0%
BANK13              50      0       0      34        0.0%
BITBANK14           50      0       0      35        0.0%
BANK14              50      0       0      36        0.0%
BITBANK15           50      0       0      37        0.0%
BANK15              50      0       0      38        0.0%
BITBANK16           50      0       0      39        0.0%
BANK16              50      0       0      40        0.0%
BITBANK17           50      0       0      41        0.0%
BANK17              50      0       0      42        0.0%
BITBANK18           50      0       0      43        0.0%
BANK18              50      0       0      44        0.0%
BITBANK19           50      0       0      45        0.0%
BANK19              50      0       0      46        0.0%
BITBANK20           50      0       0      47        0.0%
BANK20              50      0       0      48        0.0%
BITBANK21           50      0       0      49        0.0%
BANK21              50      0       0      50        0.0%
BITBANK22           50      0       0      51        0.0%
BANK22              50      0       0      52        0.0%
BITBANK23           50      0       0      53        0.0%
BANK23              50      0       0      54        0.0%
BITBANK24           50      0       0      55        0.0%
BANK24              50      0       0      56        0.0%
BITBANK25           20      0       0      57        0.0%
BANK25              20      0       0      58        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Apr 04 23:03:02 2019

                            l112 05F4                              l118 05FA                              l138 04A9  
                            l280 0269                              l259 05AF                              l278 01CB  
                            u955 04D5                              u965 04B8                              _isr 0004  
                            wreg 0009                   ?_SD_OpenStream 0024           ??_SD_Check8bitResponse 0073  
                ?_SD_SendCommand 0074             SD_OpenStream@address 0024                             l2200 05C4  
                           l2212 04EF                             l2240 052D                             l2314 0561  
                           l2252 0542                             l2244 0534                             l2308 0547  
                           l2340 04AE                             l2248 053B                             l2280 0419  
                           l2352 0285                             l2432 019B                             l2424 0178  
                           l2274 03F8                             l2338 04E9                             l2362 02A4  
                           l2268 03E5                             l2380 02DD                             l2372 02CA  
                           l2356 028D                             l2460 0203                             l2452 01D9  
                           l2390 0307                             l1750 045D                             l2376 02D3  
                           l2368 02BB                             l1744 0455                             l1736 044B  
                           l2472 0233                             l2480 024D                             l2482 025A  
                           l1756 0465                             l1764 0475                             l2670 04A4  
                           l1758 046D                             l2486 0263                             l2478 0248  
                           l2680 049F                             l2672 048B                             l2488 01A7  
                           l2674 0490                             l2666 0252                             l2676 0495  
                           l2668 047A                             l2678 049A                             ?_isr 0070  
                           STR_1 061B                             STR_2 061B                             STR_3 0616  
                           STR_4 0616                             STR_5 0170                             STR_6 0170  
                           STR_7 0620                             STR_8 0620                             u1105 01B9  
                           u1115 01D4                             u1125 01F0                             u1145 021C  
                           _T2PR 0494                             _main 0175                             _init 05AC  
                __end_of_SD_Init 0444                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                 __end_of_DAC_Init 0605  
                           start 002F    __size_of_SD_Read40bitResponse 002D                  ??_SD_CloseBlock 0073  
   __size_of_SD_Read8bitResponse 0011                 __end_of_CRCTable 0170                            ??_isr 0070  
                  __CFG_PLLEN$ON 0000                            ?_main 0070                            ?_init 0070  
                  __CFG_WDTE$OFF 0000                            _ANSB1 0C69                            _ANSC3 0C73  
                          _T2CON 0495                            u70_25 000C                            _TRISA 008C  
                          _error 05E8                            _sdata 0065                            _state 007A  
               __end_of_SPI_Init 05AC                 __end_of_SPI_Read 05FE                            status 0003  
                          wtemp0 007E               __size_of_SPI_Write 0007                  __initialization 0031  
                   __end_of_main 026C                     __end_of_init 05C4               _buffer_write_index 0078  
                         ??_main 0062                           ??_init 0078         SD_Check8bitResponse@Byte 0073  
                ??_SD_OpenStream 0028                           _DAC1LD 2C68                           ?_error 0070  
                      ??_SD_Init 0024                           _RC2PPS 0EA2                           _RC4PPS 0EA4  
                         i1l1890 002C                           _OSCCON 009B                           _TRISB0 0468  
                         _TRISB1 0469                           _TRISC0 0470                           _TRISC1 0471  
                         _TRISC2 0472                           _TRISC3 0473                           _TRISC4 0474  
                         _TRISC6 0476                           _TRISC7 0477                 __end_of_fourCCeq 056B  
                         _buffer 0120         SD_SendCommand@ByteToSend 0022                 __end_of_openFile 0316  
              __end_of_SPI_Write 05F7                           error@e 0074                     __pdataCOMMON 0078  
                      ?_DAC_Init 0070          __end_of__initialization 006C   __size_of_SD_Check40bitResponse 0029  
  __end_of_SD_Check40bitResponse 0545                   __pcstackCOMMON 0070                     __pidataBANK0 0628  
                   __pidataBANK1 0611                    __end_of_error 05F0                        ?_SPI_Init 0070  
                      ?_SPI_Read 0070                 ??_SD_SendCommand 0020                       ??_DAC_Init 0073  
            _SD_Read8bitResponse 05C4                          ??_error 0073                       __pbssBANK0 0065  
                     __pbssBANK1 00A0                       __pbssBANK2 0120               __size_of_readBytes 0045  
                     __pmaintext 0175             ?_SD_Read8bitResponse 0070                       _blockIndex 00AC  
                    openFile@fmt 0046                       __pintentry 0004                       ??_SPI_Init 0073  
                     ??_SPI_Read 0073     __end_of_SD_Read40bitResponse 051C                          _SSP1ADD 0212  
                        _SSP1BUF 0211                          _SD_Init 03B5    __size_of_SD_Check8bitResponse 000A  
                      ?_fourCCeq 0073                     readBytes@len 0073                        ?_openFile 0030  
          ??_SD_Read8bitResponse 0073            __end_of_SD_CloseBlock 05E8                          _address 00A0  
                        __ptext1 0444                          __ptext2 026C                          __ptext3 04AA  
                        __ptext4 05DF                          __ptext5 0545                          __ptext6 05E8  
                        __ptext7 056B                          __ptext8 05AC                          __ptext9 058F  
                 SD_OpenStream@a 002C                __end_of_readBytes 04EF                     __size_of_isr 002B  
                        clrloop0 060C             end_of_initialization 006C                       ??_fourCCeq 0020  
     SD_Check40bitResponse@Byte0 0076       SD_Check40bitResponse@Byte1 0075       SD_Check40bitResponse@Byte2 0074  
     SD_Check40bitResponse@Byte3 0073       SD_Check40bitResponse@Byte4 0020                          init_ram 0605  
                        initloop 0606       SD_Check40bitResponse@match 0021                       ??_openFile 0034  
                     _timer_Init 0444                        _PORTCbits 000E                        _SSPDATPPS 0E3B  
                      _SSPCLKPPS 0E3A                 __CFG_FOSC$INTOSC 0000            __end_of_SD_OpenStream 058F  
                      _SPI_Write 05F0                __size_of_DAC_Init 0007  SD_Read40bitResponse@readMessage 0074  
           _SD_Read40bitResponse 04EF                     _global_error 006C                    __pidataCOMMON 0625  
              __size_of_SPI_Init 001D                __size_of_SPI_Read 0007              start_initialization 0031  
             SPI_Write@Data_8bit 0073                      __end_of_isr 002F                       ?_SPI_Write 0070  
          ?_SD_Read40bitResponse 0070                    _samplePending 006B                       readBytes@i 0021  
          _SD_Check40bitResponse 051C                      __pdataBANK0 006D                      __pdataBANK1 00B2  
                    ?_timer_Init 0073                        ___latbits 0003                    __pcstackBANK0 0020  
                       ?_SD_Init 0070                __size_of_fourCCeq 0026                __size_of_openFile 00AA  
   __end_of_SD_Check8bitResponse 05DF                     openFile@data 003E                     openFile@riff 0035  
                       _DAC1CON0 058E                         _DAC1REFH 0590                         _DAC1REFL 058F  
                      _isPlaying 006D                      _bitsPerSamp 00AE                      _GLBL_Resp40 00B2  
                       _DAC_Init 05FE                      ??_SPI_Write 0073                        _readBytes 04AA  
                 __size_of_error 0008                         _T2CLKCON 0497                         _CRCTable 0070  
        __size_of_SD_SendCommand 009F              __size_of_timer_Init 0066           ??_SD_Read40bitResponse 0073  
    __end_of_SD_Read8bitResponse 05D5                        clear_ram0 060B                         _PIE1bits 0091  
         SD_SendCommand@CMD_6bit 0021                         _PIR1bits 0011           ?_SD_Check40bitResponse 0073  
                       _SSP1CON1 0215                         _SSP1STAT 0214                         _SPI_Init 058F  
                       _SPI_Read 05F7                       ?_readBytes 0073           __size_of_SD_CloseBlock 0009  
               __size_of_SD_Init 008F                        fourCCeq@a 0075                        fourCCeq@b 0073  
                      fourCCeq@i 0076                    readBytes@dest 0020           SD_SendCommand@Checksum 0023  
                    _readMessage 006E                         _channels 00B0                        openFile@a 0030  
                       __ptext10 03B5                         __ptext11 0316                         __ptext12 05F0  
                       __ptext13 05C4                         __ptext14 04EF                         __ptext15 05F7  
                       __ptext16 05D5                         __ptext17 051C                         __ptext18 05FE  
                   _SSP1CON1bits 0215                         _filesize 00A4             _SD_Check8bitResponse 05D5  
                       _fourCCeq 0545                       _GLBL_Resp8 006F                    __size_of_main 00F7  
                  __size_of_init 0018               SD_SendCommand@ARG0 0077               SD_SendCommand@ARG1 0076  
             SD_SendCommand@ARG2 0075               SD_SendCommand@ARG3 0074                         _sampRate 00A8  
                       _openFile 026C           __size_of_SD_OpenStream 0024                         int$flags 007E  
                  _SD_CloseBlock 05DF                     ??_timer_Init 0077                     _SSP1STATbits 0214  
                    _OSCSTATbits 009C                 openFile@response 003D   SD_Read8bitResponse@readMessage 0074  
                     _INTCONbits 000B                         isr@level 0071                      ??_readBytes 0075  
          ?_SD_Check8bitResponse 0070                         intlevel1 0000                   _SD_SendCommand 0316  
      SD_Check8bitResponse@match 0074               __end_of_timer_Init 04AA                   timer_Init@rate 0073  
                 ?_SD_CloseBlock 0070                _buffer_read_index 0069                    __pstringtext1 0070  
                  __pstringtext2 0616                    __pstringtext3 061B                    __pstringtext4 0620  
                  __pstringtext5 0000                    _SD_OpenStream 056B           __end_of_SD_SendCommand 03B5  
        ??_SD_Check40bitResponse 0077  
